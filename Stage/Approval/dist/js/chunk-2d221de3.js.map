{"version":3,"sources":["webpack:///./src/views/ApprovalGroup/AddGroup.vue?2d28","webpack:///src/views/ApprovalGroup/AddGroup.vue","webpack:///./src/views/ApprovalGroup/AddGroup.vue?666e","webpack:///./src/views/ApprovalGroup/AddGroup.vue"],"names":["data","isLoading","DataLoaded","ApprovalGroupId","UserList","TagsSelectedArray","FormSchema","layoutType","Data","astype","label","$t","name","value","placeholder","validationRules","config","options","mode","buttons","type","class","text","onClick","onCancel","created","GetNotficationUsers","$route","params","id","ManageItemsGroup","methods","onSubmit","formfields","vm","jsonobj","ApprovalGroupName","Description","Users","Array","prototype","map","call","item","join","StatusId","Status","poststring","JSON","stringify","DataService","AddGroup","then","response","ShowAlert","url","LoadUsersByCompanyId","json","forEach","index","push","USERNAME","USER_ID","LeadStatusList","GetById","groupData","parse","length","approval_group_name","status_id","USERS","split","listUsers","i","obj","find","x","undefined","description","$router"],"mappings":"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","file":"js/chunk-2d221de3.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',[_c('loader',{attrs:{\"is-visible\":_vm.isLoading}}),_c('div',[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12 padding-t_8\"},[_c('div',{staticClass:\"theme-primary partition-full\"},[_c('span',{staticClass:\"p-name text-white\"},[_vm._v(_vm._s(_vm.$t('AddApprovalGroup')))]),_c('span',{staticClass:\"float-right\"},[_c('a',{staticClass:\"p-action-btn text-white\",attrs:{\"href\":\"javascript:;\",\"title\":\"Page Tour\"},on:{\"click\":function($event){return _vm.setTourGuideSteps(0)}}},[_c('em',{staticClass:\"fa fa-road\",attrs:{\"aria-hidden\":\"true\"}}),_c('br'),_vm._v(_vm._s(_vm.$t('PageTour'))+\" \")])])])])])]),_c('div',{staticClass:\"border p-3\"},[_c('dynamic-form',{attrs:{\"lang\":\"en\",\"buttons\":_vm.buttons,\"schema\":_vm.FormSchema},on:{\"OnSubmit\":_vm.onSubmit}}),_c('small',{staticClass:\"text-danger\"},[_vm._v(\"Fields marked with an asterisk (*) are mandatory.\")])],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template lang=\"en\">\r\n    <section>\r\n        <loader :is-visible=\"isLoading\"></loader>\r\n        <div>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12 padding-t_8\">\r\n                    <div class=\"theme-primary partition-full\">\r\n                        <span class=\"p-name text-white\">{{$t('AddApprovalGroup')}}</span>\r\n                        <span class=\"float-right\">\r\n                            <a href=\"javascript:;\" class=\"p-action-btn text-white\" title=\"Page Tour\"\r\n                                @click=\"setTourGuideSteps(0)\">\r\n                                <em class=\"fa fa-road\" aria-hidden=\"true\"></em>\r\n                                <br />{{ $t('PageTour') }}\r\n                            </a>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"border p-3\">\r\n            <dynamic-form lang=\"en\" :buttons=\"buttons\" :schema=\"FormSchema\" v-on:OnSubmit=\"onSubmit\"></dynamic-form>\r\n            <small class=\"text-danger\">Fields marked with an asterisk (*) are mandatory.</small>\r\n        </div>\r\n    </section>\r\n    </template>\r\n    \r\n    <script>\r\n    import DataService from '../../service/DataService';\r\n    export default {\r\n    \r\n        data() {\r\n    \r\n            return {\r\n                isLoading: false,\r\n                DataLoaded: 0,\r\n                ApprovalGroupId: 0,\r\n                UserList: [],\r\n                TagsSelectedArray: [],\r\n                FormSchema: [{\r\n                    layoutType: \"triple\",\r\n                    Data: [{\r\n                        astype: \"TextField\",\r\n                        label: this.$t('ApprovalGroupName'),\r\n                        name: \"ApprovalGroupName\",\r\n                        value: \"\",\r\n                        placeholder: \"\",\r\n                        validationRules: {\r\n                            \"required\": true\r\n                        },\r\n                    },\r\n                    {\r\n                        astype: \"SelectField\",\r\n                        label: this.$t('Status'),\r\n                        name: \"Status\",\r\n                        value: 1001,\r\n                        placeholder: \"\",\r\n                        validationRules: {\r\n                            \"required\": true\r\n                        },\r\n                        config: {\r\n                            options: [{\r\n                                value: \"1001\",\r\n                                name: 'Active'\r\n                            }, {\r\n                                value: \"1002\",\r\n                                name: 'Inactive'\r\n                            }]\r\n                        },\r\n                    },\r\n                    {\r\n                        astype: \"MultiSelectField\",\r\n                        label: this.$t('Users'),\r\n                        name: \"Users\",\r\n                        value: \"\",\r\n                        mode: \"tag\",\r\n                        placeholder: \"\",\r\n                        validationRules: {\r\n                            \"required\": true\r\n                        },\r\n                        config: {\r\n                            options: []\r\n                        },\r\n                    },\r\n    \r\n                    ]\r\n                },\r\n                {\r\n                    layoutType: \"Single\",\r\n                    Data: [{\r\n                        astype: \"TextAreaField\",\r\n                        label: this.$t('Description'),\r\n                        name: \"Description\",\r\n                        value: \"\",\r\n                        placeholder: \"\",\r\n                    },]\r\n                },\r\n                ],\r\n                buttons: [{\r\n                    type: \"submit\",\r\n                    class: \"btn btn-success btnSave\",\r\n                    text: \"<i class='fa fa-save pr-2'></i>Save\",\r\n                },\r\n    \r\n                {\r\n                    type: \"button\",\r\n                    class: \"btn btn-danger\",\r\n                    text: \"<i class='fa fa-close pr-2'></i>Cancel\",\r\n                    onClick: this.onCancel\r\n                }\r\n                ],\r\n            }\r\n        },\r\n        created: async function () {\r\n            await this.GetNotficationUsers();\r\n            if (this.$route.params.id != null) {\r\n                this.ApprovalGroupId = this.$route.params.id;\r\n                await this.GetNotficationUsers();\r\n                await this.ManageItemsGroup();\r\n            }\r\n            this.DataLoaded = 1;\r\n        },\r\n        methods: {\r\n            onSubmit: function (formfields) {\r\n                var vm = this;\r\n                var jsonobj = {\r\n                    ApprovalGroupId: vm.ApprovalGroupId,\r\n                    ApprovalGroupName: formfields.ApprovalGroupName,\r\n                    Description: formfields.Description,\r\n                    Users: Array.prototype.map.call(formfields.Users, function (item) {\r\n                        return item.value;\r\n                    }).join(\",\"),\r\n                    StatusId: formfields.Status,\r\n                }\r\n                var poststring = JSON.stringify(jsonobj);\r\n                DataService.AddGroup(poststring).then(response => {\r\n                    if (response.data == '-1') {\r\n                        vm.ShowAlert(vm.$t('AlreadyMapped'), \"warning\", true, vm.$t(\"Alert\"));\r\n                        vm.onCancel();\r\n                    } else if (response.data == '-2') {\r\n                        vm.ShowAlert(vm.$t('AlreadyMapped'), \"warning\", true, vm.$t(\"Alert\"));\r\n                        vm.onCancel();\r\n                    }\r\n                    else if (response.data == '-3') {\r\n                        vm.ShowAlert(vm.$t(\"Something went Wrong\"), \"failure\", true, vm.$t('Alert'));\r\n                        vm.onCancel();\r\n                    }\r\n                    else {\r\n                        vm.ShowAlert(vm.$t(\"ApprovalGroupSuccessfullyAdded\"), \"Success\", true, vm.$t('Alert'));\r\n                        vm.onCancel();\r\n                    }\r\n                });\r\n            },\r\n            GetNotficationUsers: async function () {\r\n                var vm = this;\r\n                var url = `isIncludeLoginUserId=1&approvalGroupIds=&approvalChainIds=&moduleName=APPROVALRULE&DepartmentIds`;\r\n                await DataService.LoadUsersByCompanyId(url).then(response => {\r\n                    var json = response.data;\r\n                    if (json != null) {\r\n                        json.forEach(function (item, index) {\r\n                            (vm.FormSchema)[0].Data[2].config.options.push({\r\n                                name: `${item.USERNAME}`,\r\n                                value: `${item.USER_ID}`\r\n                            })\r\n                        })\r\n                        return vm.LeadStatusList;\r\n                    }\r\n                });\r\n            },\r\n            ManageItemsGroup: async function () {\r\n                var vm = this;\r\n                var url = `id=${this.$route.params.id}`\r\n                await DataService.GetById(url).then(response => {\r\n                    var groupData = JSON.parse(response.data)\r\n                    if (groupData.length > 0) {\r\n                        (this.FormSchema)[0].Data[0].value = groupData[0].approval_group_name;\r\n                        (this.FormSchema)[0].Data[1].value = groupData[0].status_id;\r\n                        vm.UserList = groupData[0].USERS.split(\",\");\r\n                        var listUsers = [];\r\n                        for (let i = 0; i < vm.UserList.length - 1; i++) {\r\n                            listUsers.push(vm.UserList[i]);\r\n                        }\r\n                        listUsers.forEach((item) => {\r\n                            var obj = (vm.FormSchema)[0].Data[2].config.options.find(x => x.value == item);\r\n                            if (obj != undefined) {\r\n                                vm.TagsSelectedArray.push({\r\n                                    label: obj.name,\r\n                                    value: obj.value\r\n                                })\r\n                            }\r\n                        });\r\n                        (this.FormSchema)[0].Data[2].value = vm.TagsSelectedArray;\r\n                        (this.FormSchema)[1].Data[0].value = groupData[0].description;\r\n                    }\r\n                })\r\n            },\r\n            onCancel: function () {\r\n                this.$router.push({\r\n                    name: 'Manage Approval Group'\r\n                });\r\n            },\r\n        }\r\n    }\r\n    </script>\r\n    ","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AddGroup.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AddGroup.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./AddGroup.vue?vue&type=template&id=7f618ae6&lang=en\"\nimport script from \"./AddGroup.vue?vue&type=script&lang=js\"\nexport * from \"./AddGroup.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}