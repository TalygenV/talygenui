{"version":3,"sources":["webpack:///./src/views/ApprovalRule/AddApprovalRule.vue?a517","webpack:///./src/components/Model/ApprovalGroupPopup.vue?a5bf","webpack:///src/components/Model/ApprovalGroupPopup.vue","webpack:///./src/components/Model/ApprovalGroupPopup.vue?c716","webpack:///./src/components/Model/ApprovalGroupPopup.vue","webpack:///src/views/ApprovalRule/AddApprovalRule.vue","webpack:///./src/views/ApprovalRule/AddApprovalRule.vue?ceac","webpack:///./src/views/ApprovalRule/AddApprovalRule.vue"],"names":["props","ApprovalchainId","type","String","ApprovalchainName","data","ChainName","leftSearchFields","TotalRecords","listheaderbuttons","GroupData","IsShowGroup","Headers","$t","settings","isInSlot","created","vm","id","FetchData","methods","vueObj","url","DataService","ApprovalGroupListByApprovalCHainId","then","response","length","noRecord","setTimeout","CheckBoxBootstrap","isLoading","ClosePopup","$parent","CloseGroupPopup","DeleteApprovalGroup","confirmR","param","APPROVALCHAINGROUPMAPID","ShowAlert","RankUpDown","GetId","GetName","Chainid","GetIndex","findIndex","x","GetNextId","result","SwapApproverOrder","arraydata","JSON","parse","Status","commonHeaderButtonClick","event","callbackfunction","DeleteRule","AddNewGroup","actionButtonClick","item","pagerMethod","value","PageSize","PageNumber","renderActions","row","components","ApprovalGroup","TreeSelectField","Usersdata","ApprovalChainList","FormSchema","layoutType","Data","astype","label","name","placeholder","disabled","visibility","config","options","validationRules","onChange","checkRuleName","max","OnDeploymentType","GetUserbyProject","mode","OnApprovalType","onKeyUp","GetAssetCost","buttons","class","text","onClick","onCancel","myObj","LocationData","StatusData","projectdata","StateData","TagData","UserList","TagsSelectedArray","DataLoaded","UserId","ApprovalID","ApprovalRuleId","ApprovaltypesId","ClientData","ClientSelectedArray","GetLocation","GetProjectList","GetApprovalChain","$route","params","ManageRule","onSubmit","formfields","Approvaltype","approvaltype","jsonobj","RuleName","AuditRule","RuleDescription","Description","ApprovalTypeId","Module","IsLimitedDuration","Limited_Duration","dStart","dEnd","ProjectId","project_name","Users","User","Tasks","Clients","Client","undefined","ClientApprovalType","LocationId","Location","ApprovalChainId","Approval","UseSequence","Sequence","StatusId","Status_value","Array","prototype","map","call","join","poststring","stringify","AddRule","$router","push","GetRuleById","RuleData","APPROVAL_TYPE_ID","APPROVAL_TYPE","LOCATION_ID","RULE_NAME","PROJECT_ID","GetUsers","USERS","split","listUsers","i","forEach","obj","find","USER_ID","USER_NAME","toString","USERNAME","IS_LIMITED_DURATION","APPROVAL_CHAIN_ID","GetClientbyProject","CLIENTS","ClienList","STATUS_ID","USE_SEQUENCE","RULE_DESCRIPTION","GetProjectListing","json","index","ProjectName","e","field","GetUsersByProjectId","LoadClientByProjectId","LoadUsersByCompanyId","GetApprovalChainsByCompanyId","ShowGroupPopup","targetValue","foundElement","element","APPROVAL_CHAIN_NAME","GetLocationByCompanyId","FindalLocationArray","CheckIfExist","filter","el","COMPANY_LOCATION_ID","PARENT_LOCATION_ID","locationId","rslt","getChildLocation","currentItem","ths","treeArray","LOCATION_NAME","retrunArray","childArray","finalChildArray","ChildfolderId","CheckIfExist1","children","Fields","ruleName","CheckDuplicateRule","required"],"mappings":"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","file":"js/chunk-2d0b9b6b.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',[_c('loader',{attrs:{\"is-visible\":_vm.isLoading}}),_c('div',{staticClass:\"border p-3\"},[_c('dynamic-form',{attrs:{\"lang\":\"en\",\"buttons\":_vm.buttons,\"schema\":_vm.FormSchema},on:{\"OnSubmit\":_vm.onSubmit},scopedSlots:_vm._u([{key:\"tgslot-Approval\",fn:function(ref){\nvar data = ref.data;\nreturn [_c('div',{staticClass:\"input-group\"},[_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(data.fieldInfo.value),expression:\"data.fieldInfo.value\"}],staticClass:\"form-control\",attrs:{\"maxlength\":5,\"step\":\"any\"},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(data.fieldInfo, \"value\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},[_c('option',{attrs:{\"selected\":\"\",\"value\":\"0\"}},[_vm._v(\"Select Approval Chain\")]),_vm._l((_vm.ApprovalChainList),function(item){return _c('option',{domProps:{\"value\":item.APPROVAL_CHAIN_ID}},[_vm._v(_vm._s(item.APPROVAL_CHAIN_NAME))])})],2),_c('span',{staticClass:\"input-group-append\"},[_c('a',{staticClass:\"input-group-text\",attrs:{\"id\":\"spnOutOF\"},on:{\"click\":function($event){return _vm.ShowGroupPopup(data.fieldInfo.value)}}},[_c('i',{staticClass:\"fa fa-eye\"})])])])]}}])}),_c('small',{staticClass:\"text-danger\"},[_vm._v(\"Fields marked with an asterisk (*) are mandatory.\")]),(_vm.IsShowGroup)?_c('ApprovalGroup',{attrs:{\"ApprovalchainId\":_vm.ApprovalchainId,\"ApprovalchainName\":_vm.ApprovalchainName}}):_vm._e()],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"my-popups\"},[_c('div',{staticClass:\"modal d-block\"},[_c('div',{staticClass:\"modal-dialog modal-dialog-centered\",staticStyle:{\"max-width\":\"900px !important\"}},[_c('div',{staticClass:\"modal-content\"},[_c('div',{staticClass:\"modal-header theme-primary partition-full\"},[_c('h4',{staticClass:\"modal-title\"},[_vm._v(_vm._s(_vm.$t('ApprovalChain'))+\": \"+_vm._s(this.ChainName)+\" \")]),_c('button',{staticClass:\"close\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.ClosePopup}},[_c('em',{staticClass:\"fa fa-times\",attrs:{\"aria-hidden\":\"true\"}})])]),_c('div',{staticClass:\"modal-body\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"form-group\"},[_c('div',{staticClass:\"listing OuterMainDiv\"},[_c('div',{staticClass:\"row\",staticStyle:{\"max-height\":\"500px\",\"overflow-y\":\"auto\"}},[_c('tg-list',{attrs:{\"IsShowAction\":false,\"listType\":['List'],\"ModuleName\":\"Approval\",\"SubModuleCode\":\"ApprovalRule\",\"IdentityColumn\":\"APPROVALCHAINGROUPMAPID\",\"ListData\":_vm.GroupData,\"HeaderData\":_vm.Headers,\"callbackfunction\":_vm.FetchData,\"TotalRecords\":_vm.TotalRecords,\"ListDataCallBackFunction\":_vm.FetchData,\"SortExp\":_vm.SortExp,\"SortBy\":_vm.SortBy,\"NorecordfoundText\":_vm.$t('NoRecordfound')},on:{\"PagerButtonClick\":_vm.pagerMethod},scopedSlots:_vm._u([{key:\"slotdata\",fn:function(ref){\nvar data = ref.data;\nreturn [(data.column.COLUMN_NAME == 'GROUPNAME')?[_vm._v(\" \"+_vm._s(data.row.GROUPNAME)+\" \")]:_vm._e(),(data.column.COLUMN_NAME == 'USERS')?[_vm._v(\" \"+_vm._s(data.row.USERS)+\" \")]:_vm._e(),(data.column.COLUMN_NAME == 'APPROVERORDER')?[_vm._v(\" \"+_vm._s(data.row.APPROVERORDER)+\" \")]:_vm._e(),(data.column.COLUMN_NAME == 'Action')?[_c('td',{staticClass:\"text-center single-action\"},[_c('div',{staticClass:\"cstm-drop-btn\"},[_c('span',[_c('a',{on:{\"click\":function($event){return _vm.DeleteApprovalGroup(data.row)}}},[_c('em',{staticClass:\"text-primary\",attrs:{\"aria-hidden\":\"true\"}},[_c('i',{staticClass:\"fa fa-trash text-danger action-icon\"})])])])])])]:_vm._e(),(data.column.COLUMN_NAME == 'RankUp' && _vm.GroupData.length > 1)?[(data.row.APPROVERORDER > 1)?[_c('span',[_c('a',{on:{\"click\":function($event){return _vm.RankUpDown(data.row.APPROVALCHAINGROUPMAPID, 'RankUp')}}},[_c('em',{staticClass:\"text-primary\",attrs:{\"aria-hidden\":\"true\"}},[_c('i',{staticClass:\"fa fa-arrow-up text-primary action-icon down\"})])])])]:_vm._e()]:_vm._e(),(data.column.COLUMN_NAME == 'RankDown' && _vm.GroupData.length > 1)?[(data.row.APPROVERORDER < _vm.GroupData.length)?[_c('span',[_c('a',{on:{\"click\":function($event){return _vm.RankUpDown(data.row.APPROVALCHAINGROUPMAPID, 'RankDown')}}},[_c('em',{staticClass:\"text-primary\",attrs:{\"aria-hidden\":\"true\"}},[_c('i',{staticClass:\"fa fa-arrow-down text-primary action-icon down\"})])])])]:_vm._e()]:_vm._e()]}}])})],1)])])])])])])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"my-popups\">\r\n        <div class=\"modal d-block\">\r\n            <div class=\"modal-dialog modal-dialog-centered\" style=\"max-width:900px !important\">\r\n                <div class=\"modal-content\">\r\n                    <div class=\"modal-header theme-primary partition-full\">\r\n                        <h4 class=\"modal-title\">{{ $t('ApprovalChain') }}: {{ this.ChainName }} </h4>\r\n\r\n                        <button type=\"button\" class=\"close\" v-on:click=\"ClosePopup\">\r\n                            <em class=\"fa fa-times\" aria-hidden=\"true\"></em>\r\n                        </button>\r\n                    </div>\r\n                    <div class=\"modal-body\">\r\n                        <div class=\"col-md-12\">\r\n                            <div class=\"form-group\">\r\n                                <div class=\"listing OuterMainDiv\">\r\n                                    <div class=\"row\" style=\"max-height:500px;overflow-y:auto;\">\r\n                                        <tg-list :IsShowAction=\"false\" :listType=\"['List']\" ModuleName=\"Approval\"\r\n                                            SubModuleCode=\"ApprovalRule\" IdentityColumn=\"APPROVALCHAINGROUPMAPID\"\r\n                                            :ListData=\"GroupData\" :HeaderData=\"Headers\" :callbackfunction=\"FetchData\"\r\n                                            :TotalRecords=\"TotalRecords\" :ListDataCallBackFunction=\"FetchData\"\r\n                                            :SortExp=\"SortExp\" :SortBy=\"SortBy\" :NorecordfoundText=\"$t('NoRecordfound')\"\r\n                                            v-on:PagerButtonClick=\"pagerMethod\">\r\n                                            <template v-slot:slotdata=\"{ data }\">\r\n\r\n                                                <template v-if=\"data.column.COLUMN_NAME == 'GROUPNAME'\">\r\n                                                    {{ data.row.GROUPNAME }}\r\n                                                </template>\r\n                                                <template v-if=\"data.column.COLUMN_NAME == 'USERS'\">\r\n                                                    {{ data.row.USERS }}\r\n                                                </template>\r\n                                                <template v-if=\"data.column.COLUMN_NAME == 'APPROVERORDER'\">\r\n                                                    {{ data.row.APPROVERORDER }}\r\n                                                </template>\r\n                                                <template v-if=\"data.column.COLUMN_NAME == 'Action'\">\r\n                                                    <td class=\"text-center single-action\">\r\n                                                        <div class=\"cstm-drop-btn\">\r\n                                                            <span><a v-on:click=\"DeleteApprovalGroup(data.row)\"><em\r\n                                                                        class=\"text-primary\" aria-hidden=\"true\"><i\r\n                                                                            class=\"fa fa-trash text-danger action-icon\"></i></em></a></span>\r\n                                                        </div>\r\n                                                    </td>\r\n                                                </template>\r\n                                                <template\r\n                                                    v-if=\"data.column.COLUMN_NAME == 'RankUp' && GroupData.length > 1\">\r\n                                                    <template v-if=\"data.row.APPROVERORDER > 1\">\r\n                                                        <span><a\r\n                                                                v-on:click=\"RankUpDown(data.row.APPROVALCHAINGROUPMAPID, 'RankUp')\"><em\r\n                                                                    class=\"text-primary\" aria-hidden=\"true\"> <i\r\n                                                                        class=\"fa fa-arrow-up text-primary action-icon down\"></i></em></a></span>\r\n                                                    </template>\r\n                                                </template>\r\n\r\n                                                <template\r\n                                                    v-if=\"data.column.COLUMN_NAME == 'RankDown' && GroupData.length > 1\">\r\n                                                    <template v-if=\"data.row.APPROVERORDER < GroupData.length\">\r\n                                                        <span><a\r\n                                                                v-on:click=\"RankUpDown(data.row.APPROVALCHAINGROUPMAPID, 'RankDown')\"><em\r\n                                                                    class=\"text-primary\" aria-hidden=\"true\"> <i\r\n                                                                        class=\"fa fa-arrow-down text-primary action-icon down\"></i></em></a></span>\r\n\r\n                                                    </template>\r\n                                                </template>\r\n                                                <!-- <template v-if=\"data.column.COLUMN_NAME == 'Action'\">\r\n                                                   <span>Action</span>\r\n                                                </template>                                                 -->\r\n                                            </template>\r\n                                        </tg-list>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport DataService from '../../service/DataService';\r\nexport default {\r\n    // props: {\r\n    //     ApprovalchainId: String\r\n\r\n    // },\r\n    props: {\r\n        ApprovalchainId: {\r\n            type: String\r\n        },\r\n        ApprovalchainName: {\r\n            type: String\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            ChainName: '',\r\n            leftSearchFields: [],\r\n            TotalRecords: 0,\r\n            listheaderbuttons: [],\r\n            GroupData: [],\r\n            IsShowGroup: false,\r\n            Headers: [\r\n                {\r\n                    \"COLUMN_NAME\": 'GROUPNAME',\r\n                    \"DATA_TYPE\": \"text\",\r\n                    \"SORTABLE\": false,\r\n                    \"VISIBLE\": true,\r\n                    \"DISPLAY_NAME\": this.$t('ApprovalGroupName'),\r\n                    \"DISPLAY_ORDER\": 1,\r\n                    settings: {\r\n                        isInSlot: true,\r\n                    }\r\n                },\r\n                {\r\n                    \"COLUMN_NAME\": 'USERS',\r\n                    \"DATA_TYPE\": \"text\",\r\n                    \"SORTABLE\": false,\r\n                    \"VISIBLE\": true,\r\n                    \"DISPLAY_NAME\": this.$t('Users'),\r\n                    \"DISPLAY_ORDER\": 2,\r\n                    settings: {\r\n                        isInSlot: true,\r\n                    }\r\n                },\r\n                {\r\n                    \"COLUMN_NAME\": 'RankUp',\r\n                    \"DATA_TYPE\": \"text\",\r\n                    \"SORTABLE\": false,\r\n                    \"VISIBLE\": true,\r\n                    \"DISPLAY_NAME\": this.$t('RankUp'),\r\n                    \"DISPLAY_ORDER\": 3,\r\n                    settings: {\r\n                        isInSlot: true,\r\n                    }\r\n                },\r\n                {\r\n                    \"COLUMN_NAME\": 'RankDown',\r\n                    \"DATA_TYPE\": \"text\",\r\n                    \"SORTABLE\": false,\r\n                    \"VISIBLE\": true,\r\n                    \"DISPLAY_NAME\": this.$t('RankDown'),\r\n                    \"DISPLAY_ORDER\": 4,\r\n                    settings: {\r\n                        isInSlot: true,\r\n                    }\r\n                },\r\n                {\r\n                    \"COLUMN_NAME\": 'APPROVERORDER',\r\n                    \"DATA_TYPE\": \"text\",\r\n                    \"SORTABLE\": false,\r\n                    \"VISIBLE\": true,\r\n                    \"DISPLAY_NAME\": 'Order',\r\n                    \"DISPLAY_ORDER\": 5,\r\n                    settings: {\r\n                        isInSlot: true,\r\n                    }\r\n                },\r\n                {\r\n                    \"COLUMN_NAME\": 'Action',\r\n                    \"DATA_TYPE\": \"text\",\r\n                    \"SORTABLE\": false,\r\n                    \"VISIBLE\": true,\r\n                    \"DISPLAY_NAME\": this.$t('Action'),\r\n                    \"DISPLAY_ORDER\": 6,\r\n                    settings: {\r\n                        isInSlot: true,\r\n                    }\r\n                }\r\n            ],\r\n\r\n\r\n        }\r\n\r\n    },\r\n    created: function () {\r\n        debugger\r\n        var vm = this;\r\n        vm.ChainName = vm.ApprovalchainName;\r\n        var id = vm.ApprovalchainId;\r\n        vm.FetchData();\r\n    },\r\n\r\n    methods: {\r\n        async FetchData() {\r\n\r\n            var vueObj = this;\r\n            var url = `approvalChainId=${vueObj.ApprovalchainId}`;\r\n            DataService.ApprovalGroupListByApprovalCHainId(url).then(response => {\r\n\r\n                if (response.data != null) {\r\n                    if (response.data.length > 0) {\r\n\r\n                        vueObj.GroupData = response.data;\r\n                        //vueObj.TotalRecords = response.data[0].TotalRecords\r\n                        //vueObj.TotalPages = Math.ceil(vueObj.TotalRecords / vueObj.PageSize);\r\n                        //vueObj.CurrentPage = vueObj.PageNumber;\r\n                        vueObj.noRecord = false;\r\n\r\n                    } else {\r\n                        vueObj.GroupData = [];\r\n                        vueObj.noRecord = true;\r\n                        vueObj.TotalRecords = 0;\r\n                    }\r\n                } else {\r\n                    vueObj.noRecord = true;\r\n                    vueObj.GroupData = [];\r\n                    vueObj.TotalRecords = 0\r\n                }\r\n                setTimeout(function () {\r\n                    vueObj.CheckBoxBootstrap()\r\n                }, 100);\r\n            });\r\n            vueObj.isLoading = false;\r\n        },\r\n        ClosePopup() {\r\n            var vm = this;\r\n            vm.$parent.CloseGroupPopup();\r\n\r\n        },\r\n        DeleteApprovalGroup(data) {\r\n            debugger\r\n            var vm = this;\r\n            vm.confirmR(vm.$t(\"ConfirmDelete\"), true, (vm.$t(\"Delete\") + \"  \"), function () {\r\n                vm.isLoading = true;\r\n                var param = `id=${data.APPROVALCHAINGROUPMAPID}`\r\n                DataService.DeleteApprovalGroup(param).then(response => {\r\n                    if (response.data == '0') {\r\n                        vm.ShowAlert(vm.$t('DeletedSuccessfully'), \"success\", true, vm.$t(\"Alert\"));\r\n                    } else if (response.data == '-1') {\r\n                        vm.ShowAlert(vm.$t('Unable to delete,approval chain requires at least one group'), \"warning\", true, vm.$t(\"Alert\"));\r\n                    }\r\n                    vm.isLoading = false;\r\n                    vm.FetchData();\r\n                });\r\n            });\r\n        },\r\n        RankUpDown(GetId, GetName) {\r\n        debugger\r\n            var vm = this;\r\n            vm.isLoading = true;\r\n            var Chainid = vm.ApprovalchainId\r\n            var GetIndex = vm.GroupData.findIndex(x => x.APPROVALCHAINGROUPMAPID === GetId);\r\n            if (GetName == 'RankUp') {\r\n                var GetNextId = vm.GroupData[GetIndex - 1].APPROVALCHAINGROUPMAPID;\r\n            } else {\r\n                var GetNextId = vm.GroupData[GetIndex + 1].APPROVALCHAINGROUPMAPID;\r\n            }\r\n            vm.confirmR(vm.$t('VerifysequenceofApprovalGroup'), true, false, function (result) {\r\n                var url = `approvalChainId=${Chainid}&approvalChainApprovalGroupMapId1=${GetId}&approvalChainApprovalGroupMapId2=${GetNextId}`\r\n                DataService.SwapApproverOrder(url).then(response => {\r\n                    debugger\r\n                    var arraydata = [];\r\n                    arraydata = JSON.parse(response.data);\r\n                    if (arraydata[0].Status == 0) {\r\n                        vm.ShowAlert(vm.$t('ApprovalChainSuccess'), \"success\", true, vm.$t(\"Alert\"));\r\n                        vm.FetchData();\r\n                    }\r\n                    vm.isLoading = false;\r\n                })\r\n            })\r\n            vm.isLoading = false;\r\n        },\r\n        commonHeaderButtonClick(event) {\r\n            switch (event.callbackfunction) {\r\n                case \"DeleteRule\":\r\n                    this.DeleteRule()\r\n                    break;\r\n                case \"AddNewGroup\":\r\n                    this.AddNewGroup()\r\n                    break;\r\n            }\r\n        },\r\n        actionButtonClick(callbackfunction, item) { },\r\n        pagerMethod: function (value) {\r\n            this.PageSize = value.PageSize;\r\n            this.PageNumber = value.PageNumber;\r\n            this.FetchData();\r\n        },\r\n        renderActions(row) { },\r\n\r\n    },\r\n    \r\n}\r\n\r\n\r\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ApprovalGroupPopup.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ApprovalGroupPopup.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./ApprovalGroupPopup.vue?vue&type=template&id=5b0b61a8\"\nimport script from \"./ApprovalGroupPopup.vue?vue&type=script&lang=js\"\nexport * from \"./ApprovalGroupPopup.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\r\n    <section>\r\n        <loader :is-visible=\"isLoading\"></loader>\r\n        <div class=\"border p-3\">\r\n            <dynamic-form lang=\"en\" :buttons=\"buttons\" :schema=\"FormSchema\" v-on:OnSubmit=\"onSubmit\">\r\n                <template v-slot:tgslot-Approval=\"{ data }\">\r\n                    <div class=\"input-group\">\r\n\r\n                        <select :maxlength=\"5\" step=\"any\" class=\"form-control\" v-model=\"data.fieldInfo.value\">\r\n                            <option selected value=\"0\">Select Approval Chain</option>\r\n                            <option v-for=\"item in ApprovalChainList\" :value=\"item.APPROVAL_CHAIN_ID\">{{\r\n                                item.APPROVAL_CHAIN_NAME }}</option>\r\n                        </select>\r\n                        <span class=\"input-group-append\">\r\n                            <a class=\"input-group-text\" id=\"spnOutOF\" v-on:click=\"ShowGroupPopup(data.fieldInfo.value)\"><i\r\n                                    class=\"fa fa-eye\"></i></a>\r\n                        </span>\r\n                    </div>\r\n                </template>\r\n            </dynamic-form>\r\n\r\n            <small class=\"text-danger\">Fields marked with an asterisk (*) are mandatory.</small>\r\n            <ApprovalGroup v-if=\"IsShowGroup\" :ApprovalchainId=\"ApprovalchainId\" :ApprovalchainName=\"ApprovalchainName\">\r\n            </ApprovalGroup>\r\n        </div>\r\n    </section>\r\n</template>\r\n\r\n<script>\r\nimport DataService from '../../service/DataService';\r\nimport { TreeSelectField } from 'tg-controls_cli/dist/myLib.common';\r\nimport ApprovalGroup from '../../components/Model/ApprovalGroupPopup.vue';\r\nexport default {\r\n    components: {\r\n        ApprovalGroup, TreeSelectField\r\n    },\r\n    data() {\r\n        return {\r\n            Usersdata: [],\r\n            ApprovalchainName: '',\r\n            ApprovalChainList: [],\r\n            FormSchema: [\r\n                {\r\n                    layoutType: \"four\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"TreeSelectField\",\r\n                            label: this.$t('Location'),\r\n                            name: \"Location\",\r\n                            value: null,\r\n                            placeholder: \"Select Location\",\r\n                            disabled: true,\r\n                            visibility: false,\r\n                            config: {\r\n                                options: [],\r\n                            },\r\n                            validationRules: { \"required\": true },\r\n                        },\r\n                        {\r\n                            astype: \"TextField\",\r\n                            label: this.$t('RuleName'),\r\n                            name: \"AuditRule\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            config: {\r\n                                onChange: this.checkRuleName,\r\n                            },\r\n                            validationRules: { \"required\": true, max: 250 },\r\n                        },\r\n                        {\r\n                            astype: \"SelectField\",\r\n                            label: this.$t('Module'),\r\n                            name: \"Module\",\r\n                            value: 2,\r\n                            placeholder: \"\",\r\n                            config: {\r\n                                options: [\r\n                                    { value: 2, name: \"Expense\" },\r\n                                    { value: 3, name: \"Leave\" },\r\n                                    { value: 4, name: \"Timesheet\" },\r\n                                    { value: 5, name: \"Attendance\" },\r\n                                    { value: 6, name: \"Product\" }],\r\n                                onChange: this.OnDeploymentType,\r\n\r\n                            },\r\n\r\n                            // validationRules: { \"required\": true },\r\n\r\n                        },\r\n                        {\r\n                            astype: \"SelectField\",\r\n                            label: this.$t('Project'),\r\n                            name: \"project_name\",\r\n                            value: '',\r\n                            placeholder: \"\",\r\n                            visibility: true,\r\n                            config: {\r\n                                options: [],\r\n                                onChange: this.GetUserbyProject,\r\n\r\n                            },\r\n                            validationRules: { \"required\": true },\r\n                        },\r\n\r\n                        {\r\n                            astype: \"MultiSelectField\",\r\n                            label: this.$t('Users'),\r\n                            name: \"User\",\r\n                            value: null,\r\n                            mode: \"tag\",\r\n                            placeholder: \"\",\r\n                            validationRules: { \"required\": true },\r\n                            config: {\r\n                                options: []\r\n\r\n                            },\r\n\r\n                        },\r\n\r\n                        {\r\n                            astype: \"toggleField\",\r\n                            label: this.$t('LimitedDuration'),\r\n                            name: \"Limited_Duration\",\r\n                            value: 0,\r\n                            placeholder: \"\",\r\n                            visibility: true,\r\n                            validationRules: {\r\n                                \"required\": false\r\n                            },\r\n                        },\r\n                        {\r\n                            astype: \"RadioField\",\r\n                            label: this.$t('ApprovalType'),\r\n                            name: \"Approvaltype\",\r\n                            value: 1,\r\n                            placeholder: \"\",\r\n                            config: {\r\n                                options: [{ value: 1, name: \"Approval Chain\" }, { value: 2, name: \"Client \" }, { value: 3, name: \"Both\" }],\r\n                                onChange: this.OnApprovalType,\r\n                                //CallBackFunction: null\r\n                            },\r\n\r\n                            validationRules: { \"required\": false },\r\n\r\n                        },\r\n                        {\r\n                            astype: \"SlotField\",\r\n                            label: this.$t('SelectApproval'),\r\n                            name: \"Approval\",\r\n                            value: \"0\",\r\n                            placeholder: \"\",\r\n                            validationRules: {\r\n                                \"required\": false,\r\n                                max: 5,\r\n                                \"min_value\": 1\r\n                            },\r\n                            visibility: true,\r\n                            config: {\r\n                                onKeyUp: this.GetAssetCost\r\n\r\n                            },\r\n\r\n                        },\r\n\r\n                        // {\r\n                        //     astype: \"SelectField\",\r\n                        //     label: this.$t('SelectApproval'),\r\n                        //     name: \"project_name\",\r\n                        //     value: \"\",\r\n                        //     placeholder: \"\",\r\n                        //     visibility:true,\r\n                        //     config: {\r\n                        //         options: [],\r\n\r\n                        //     },\r\n                        //     validationRules: { \"required\": true },\r\n                        // },\r\n                        {\r\n                            astype: \"MultiSelectField\",\r\n                            label: this.$t('SelectClient'),\r\n                            name: \"Client\",\r\n                            value: null,\r\n                            mode: \"Select Client\",\r\n                            visibility: false,\r\n                            placeholder: \"\",\r\n                            config: {\r\n                                options: [],\r\n\r\n                            },\r\n                            validationRules: { \"required\": true },\r\n                        },\r\n                        {\r\n                            astype: \"SelectField\",\r\n                            label: 'Status',\r\n                            name: \"Status_value\",\r\n                            value: 1001,\r\n                            config: {\r\n                                options: [{ value: 1001, name: \"Active\" }, { value: 1002, name: \"Inactive\" },],\r\n                            },\r\n                            validationRules: { \"required\": true },\r\n                        },\r\n                        {\r\n                            astype: \"toggleField\",\r\n                            label: this.$t('UseSequence'),\r\n                            name: \"Sequence\",\r\n                            value: 0,\r\n                            placeholder: \"\",\r\n                            validationRules: {\r\n                                \"required\": false\r\n                            },\r\n                        },\r\n                    ]\r\n                },\r\n\r\n\r\n                // {\r\n                //     layoutType: \"One\",\r\n                //     Data: [\r\n\r\n                //     ]\r\n                // },\r\n                {\r\n                    layoutType: \"One\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"TextAreaField\",\r\n                            label: this.$t('Description'),\r\n                            name: \"Description\",\r\n                            value: null,\r\n                            placeholder: \"\",\r\n                        },\r\n                    ]\r\n                }\r\n\r\n\r\n            ],\r\n            buttons: [\r\n                {\r\n                    type: \"submit\",\r\n                    class: \"btn btn-success\",\r\n                    text: \"<i class='fa fa-save pr-2'></i>Save\",\r\n                },\r\n                {\r\n                    type: \"button\",\r\n                    class: \"btn btn-danger\",\r\n                    text: \"<i class='fa fa-close pr-2'></i>Cancel\",\r\n                    onClick: this.onCancel\r\n                }\r\n\r\n            ],\r\n            myObj: [],\r\n            LocationData: [],\r\n            StatusData: [\r\n                {\r\n                    name: 'Active',\r\n                    value: 1001\r\n                },\r\n                {\r\n                    name: 'Inactive',\r\n                    value: 1002\r\n                },\r\n            ],\r\n            projectdata: [],\r\n            StateData: [],\r\n            TagData: [],\r\n            UserList: [],\r\n            TagsSelectedArray: [],\r\n            DataLoaded: 0,\r\n            UserId: '',\r\n            IsShowGroup: false,\r\n            ApprovalchainId: null,\r\n            ApprovalChainList: [],\r\n            ApprovalID: 0,\r\n            ApprovalRuleId: 0,\r\n            isLoading: false,\r\n            ApprovaltypesId: 0,\r\n            ClientData: [],\r\n            ClientSelectedArray: []\r\n        }\r\n    },\r\n    async created() {\r\n        await this.GetLocation();\r\n        await this.GetProjectList();\r\n        await this.GetApprovalChain();\r\n        if (this.$route.params.id != null) {\r\n            this.ApprovalRuleId = this.$route.params.id;\r\n            //this.GetUserbyProject();\r\n            await this.ManageRule();\r\n            await this.OnDeploymentType(this.ApprovalID);\r\n            if (this.ApprovaltypesId != null) {\r\n                await this.OnApprovalType(this.ApprovaltypesId);\r\n            }\r\n\r\n            //this.isLoading = false\r\n        }\r\n\r\n        //this.isLoading = false\r\n    },\r\n    methods: {\r\n        onSubmit: function (formfields) {\r\n            if (formfields.Approvaltype == 1) {\r\n                var approvaltype = \"ApprovalChain\"\r\n            }\r\n            else if (formfields.Approvaltype == 2) {\r\n                var approvaltype = \"Client\"\r\n            }\r\n            else {\r\n                var approvaltype = \"Both\"\r\n            }\r\n            var vm = this;\r\n\r\n            var jsonobj = {\r\n                ApprovalRuleId: vm.ApprovalRuleId != 0 ? vm.ApprovalRuleId : 0,\r\n                RuleName: formfields.AuditRule,\r\n                RuleDescription: formfields.Description,\r\n                ApprovalTypeId: formfields.Module,\r\n                IsLimitedDuration: formfields.Limited_Duration,\r\n                dStart: null,\r\n                dEnd: null,\r\n                //RuleBaseType: formfields.Description,\r\n                ProjectId: formfields.project_name == null ? null : formfields.project_name,\r\n                Users: formfields.User == null ? null : formfields.User,\r\n                Tasks: null,\r\n                Clients: formfields.Client == null ? null : formfields.Client.value == undefined ? null : formfields.Client.value,\r\n                ClientApprovalType: formfields.Approvaltype == null ? null : approvaltype,\r\n                LocationId: formfields.Location == null ? null : formfields.Location,\r\n                ApprovalChainId: formfields.Approval,\r\n                UseSequence: formfields.Sequence,\r\n                StatusId: formfields.Status_value,\r\n                Users: formfields.User == null ? null : Array.prototype.map.call(formfields.User, function (item) {\r\n                    return item.value;\r\n                }).join(\",\"),\r\n\r\n            }\r\n\r\n\r\n            var poststring = JSON.stringify(jsonobj);\r\n            DataService.AddRule(poststring).then(response => {\r\n                if (response.data == true) {\r\n                    this.$router.push({\r\n                        name: 'ApprovalRule'\r\n                    });\r\n                    vm.ShowAlert(\"Approval Rule SuccessFully added \", 'success', true, vm.$t('Alert'));\r\n                }\r\n\r\n            }\r\n            )\r\n\r\n        },\r\n        ManageRule: async function () {\r\n            var vm = this;\r\n            vm.isLoading = true;\r\n            var url = `id=${this.$route.params.id}`\r\n            await DataService.GetRuleById(url).then(async response => {\r\n                var RuleData = JSON.parse(response.data)\r\n                vm.ApprovalID = RuleData[0].APPROVAL_TYPE_ID;\r\n                vm.ApprovaltypesId = RuleData[0].APPROVAL_TYPE == \"ApprovalChain\" ? 1 : RuleData[0].APPROVAL_TYPE == \"Client\" ? 2 : RuleData[0].APPROVAL_TYPE == \"Both\" ? 3 : null;\r\n                vm.Approvaltype\r\n                if (RuleData.length > 0) {\r\n                    (this.FormSchema)[0].Data[0].value = RuleData[0].LOCATION_ID;\r\n                    (this.FormSchema)[0].Data[1].value = RuleData[0].RULE_NAME;\r\n                    (this.FormSchema)[0].Data[2].value = RuleData[0].APPROVAL_TYPE_ID;\r\n                    (this.FormSchema)[0].Data[3].value = RuleData[0].PROJECT_ID;\r\n                    if (RuleData[0].PROJECT_ID != 0) {\r\n                        await vm.GetUserbyProject(RuleData[0].PROJECT_ID);\r\n                    }\r\n                    else {\r\n                        await vm.GetUsers();\r\n                    }\r\n                    // (this.FormSchema)[0].Data[4].value = RuleData[0].USERS;\r\n                    vm.UserList = RuleData[0].USERS != null ? RuleData[0].USERS.split(\",\") : RuleData[0].USERS;\r\n                    if (vm.UserList != null) {\r\n                        var listUsers = [];\r\n                        for (let i = 0; i < vm.UserList.length - 1; i++) {\r\n                            listUsers.push(vm.UserList[i]);\r\n                        }\r\n\r\n                        listUsers.forEach((item) => {\r\n                            var obj = vm.projectdata.length > 0 ? vm.projectdata.find(x => x.USER_ID == item) : vm.Usersdata.find(x => x.USER_ID == item);\r\n                            if (obj != undefined) {\r\n                                if (obj.USER_NAME != undefined) {\r\n                                    vm.TagsSelectedArray.push({\r\n                                        label: obj.USER_NAME,\r\n                                        value: obj.USER_ID.toString()\r\n                                    })\r\n                                }\r\n                                else {\r\n                                    vm.TagsSelectedArray.push({\r\n                                        label: obj.USERNAME,\r\n                                        value: obj.USER_ID.toString()\r\n                                    })\r\n                                }\r\n\r\n                            }\r\n                        });\r\n                        (this.FormSchema)[0].Data[4].value = vm.TagsSelectedArray;\r\n                    }\r\n                    (this.FormSchema)[0].Data[5].value = RuleData[0].IS_LIMITED_DURATION;\r\n                    (this.FormSchema)[0].Data[6].value = RuleData[0].APPROVAL_TYPE == \"ApprovalChain\" ? 1 : RuleData[0].APPROVAL_TYPE == \"Client\" ? 2 : RuleData[0].APPROVAL_TYPE == \"Both\" ? 3 : null;\r\n                    (this.FormSchema)[0].Data[7].value = RuleData[0].APPROVAL_CHAIN_ID;\r\n                    await vm.GetClientbyProject(RuleData[0].PROJECT_ID);\r\n                    (this.FormSchema)[0].Data[8].value = RuleData[0].CLIENTS != null ? RuleData[0].CLIENTS : RuleData[0].CLIENTS;\r\n                    vm.ClienList = RuleData[0].CLIENTS != null ? RuleData[0].USERS.split(\",\") : RuleData[0].CLIENTS;\r\n                    if (vm.ClienList != null) {\r\n                        var ClienList = [];\r\n                        for (let i = 0; i < vm.ClientData.length; i++) {\r\n                            ClienList.push(vm.ClientData[i]);\r\n                        }\r\n                        ClienList.forEach((item) => {\r\n                            var obj = vm.ClientData.find(x => x.USER_ID == item.USER_ID)\r\n                            {\r\n                                vm.ClientSelectedArray.push({\r\n                                    label: obj.USERNAME,\r\n                                    value: obj.USER_ID\r\n                                })\r\n                            }\r\n                        });\r\n                        (this.FormSchema)[0].Data[8].value = vm.ClientSelectedArray;\r\n                    }\r\n                    (this.FormSchema)[0].Data[9].value = RuleData[0].STATUS_ID;\r\n                    (this.FormSchema)[0].Data[10].value = RuleData[0].USE_SEQUENCE;\r\n                    (this.FormSchema)[1].Data[0].value = RuleData[0].RULE_DESCRIPTION;\r\n                }\r\n                vm.isLoading = false;\r\n            })\r\n        },\r\n        GetProjectList: async function () {\r\n            // var usertype = GetUserInfo.value.UserType;${usertype}\r\n            var vm = this;\r\n            var url = `userType=CA&IsEncrptedId='no'`;\r\n            DataService.GetProjectListing(url).then(response => {\r\n\r\n                var json = response.data;\r\n                //  var array = JSON.parse(\"[\" + json + \"]\");\r\n                if (json != null) {\r\n                    json.forEach(function (item, index) {\r\n                        (vm.FormSchema)[0].Data[3].config.options.push({\r\n                            name: `${item.ProjectName}`,\r\n                            value: `${item.ProjectId}`\r\n                        })\r\n                    })\r\n                    // return vm.LeadStatusList;\r\n                }\r\n            });\r\n        },\r\n        GetUserbyProject: async function (e, field) {\r\n            var vm = this;\r\n            vm.FormSchema[0].Data[4].config.options = [];\r\n            if (field == undefined) {\r\n                var url = `ProjectId=${e}&ModuleName=APPROVALRULE`;\r\n            } else {\r\n                var url = `ProjectId=${field.value}&ModuleName=APPROVALRULE`;\r\n            }\r\n\r\n            await DataService.GetUsersByProjectId(url).then(response => {\r\n                vm.projectdata = response.data;\r\n                if (vm.projectdata != null) {\r\n                    vm.projectdata.forEach(function (item, index) {\r\n                        (vm.FormSchema)[0].Data[4].config.options.push({\r\n                            name: `${item.USER_NAME}`,\r\n                            value: `${item.USER_ID}`\r\n                        })\r\n                    })\r\n                }\r\n                if (field != undefined) {\r\n                    this.GetClientbyProject(e, field)\r\n                }\r\n\r\n            });\r\n\r\n        },\r\n\r\n        GetClientbyProject: async function (e, field) {\r\n            var vm = this;\r\n            // vm.FormSchema[0].Data[5].config.options=[];\r\n            var url = field != undefined ? `ProjectId=${field.value}` : `ProjectId=${e}`;\r\n            await DataService.LoadClientByProjectId(url).then(response => {\r\n                vm.ClientData = response.data;\r\n                if (vm.ClientData != null) {\r\n                    vm.ClientData.forEach(function (item, index) {\r\n                        (vm.FormSchema)[0].Data[8].config.options.push({\r\n                            name: `${item.USERNAME}`,\r\n                            value: `${item.USER_ID}`\r\n                        })\r\n                    })\r\n                    //return vm.LeadStatusList;\r\n                }\r\n            });\r\n        },\r\n        GetUsers: async function () {\r\n            var vm = this;\r\n            vm.FormSchema[0].Data[4].config.options = [];\r\n            var url = `isIncludeLoginUserId=1&approvalGroupIds=&approvalChainIds=&moduleName=APPROVALRULE&DepartmentIds`;\r\n            await DataService.LoadUsersByCompanyId(url).then(response => {\r\n                vm.Usersdata = response.data;\r\n                if (vm.Usersdata != null) {\r\n                    vm.Usersdata.forEach(function (item, index) {\r\n                        (vm.FormSchema)[0].Data[4].config.options.push({\r\n                            name: `${item.USERNAME}`,\r\n                            value: `${item.USER_ID}`\r\n                        })\r\n                    })\r\n                }\r\n            });\r\n        },\r\n\r\n        GetApprovalChain: async function () {\r\n            var vm = this;\r\n            DataService.GetApprovalChainsByCompanyId().then(response => {\r\n                vm.ApprovalChainList = response.data;\r\n            });\r\n        },\r\n        onCancel: function () {\r\n            this.$router.push({\r\n                name: 'ApprovalRule'\r\n            });\r\n        },\r\n\r\n        ShowGroupPopup(targetValue) {\r\n            const foundElement = this.ApprovalChainList.find(element => element.APPROVAL_CHAIN_ID === targetValue);\r\n            this.ApprovalchainId = foundElement.APPROVAL_CHAIN_ID\r\n            this.ApprovalchainName = foundElement.APPROVAL_CHAIN_NAME\r\n            this.IsShowGroup = true;\r\n        },\r\n        CloseGroupPopup() {\r\n            var vm = this;\r\n            vm.IsShowGroup = false;\r\n        },\r\n\r\n        async GetLocation() {\r\n            var vm = this;\r\n            var params = `reqForm=`\r\n            await DataService.GetLocationByCompanyId(params).then(response => {\r\n                vm.LocationData = response.data;\r\n\r\n                vm.FindalLocationArray = [];\r\n                vm.LocationData.forEach((value) => {\r\n                    var CheckIfExist = vm.FindalLocationArray.filter(function (el) {\r\n                        return el.COMPANY_LOCATION_ID == value.COMPANY_LOCATION_ID;\r\n                    });\r\n                    if (CheckIfExist.length == 0) {\r\n                        if (value.PARENT_LOCATION_ID == null) {\r\n                            let locationId = value.COMPANY_LOCATION_ID\r\n                            let rslt = vm.getChildLocation(locationId, value, response.data)\r\n                            vm.FindalLocationArray.push(rslt)\r\n                        }\r\n                    }\r\n                });\r\n                (vm.FormSchema)[0].Data[0].config.options = vm.FindalLocationArray;\r\n            })\r\n        },\r\n        getChildLocation: function (locationId, currentItem, data) {\r\n            let ths = this;\r\n            let treeArray = {};\r\n            treeArray = {\r\n                id: currentItem.COMPANY_LOCATION_ID,\r\n                label: currentItem.LOCATION_NAME\r\n            }\r\n            let retrunArray = treeArray;\r\n            var childArray = data.filter(function (el) {\r\n                return el.PARENT_LOCATION_ID == locationId;\r\n            });\r\n            let finalChildArray = [];\r\n            childArray.forEach((value) => {\r\n                let ChildfolderId = value.COMPANY_LOCATION_ID\r\n                var CheckIfExist1 = finalChildArray.filter(function (el) {\r\n                    return el.COMPANY_LOCATION_ID == value.COMPANY_LOCATION_ID;\r\n                });\r\n                if (CheckIfExist1.length == 0) {\r\n                    var CheckIfExist = data.filter(function (el) {\r\n                        return el.PARENT_LOCATION_ID == ChildfolderId;\r\n                    });\r\n                    if (CheckIfExist != null && CheckIfExist.length > 0) {\r\n                        let rslt = ths.getChildLocation(ChildfolderId, value, data);\r\n                        finalChildArray.push(rslt);\r\n                    } else {\r\n                        treeArray = {\r\n                            id: `${value.COMPANY_LOCATION_ID}`,\r\n                            label: `${value.LOCATION_NAME}`\r\n                        }\r\n                        finalChildArray.push(treeArray);\r\n                    }\r\n                }\r\n            });\r\n            retrunArray.children = finalChildArray;\r\n            return retrunArray;\r\n        },\r\n        async OnDeploymentType(event, field) {\r\n            var vm = this;\r\n            vm.isLoading = true;\r\n            //field.value = event.target.getAttribute('data-value');\r\n            if (field != undefined ? field.value == 2 : event == 2) {\r\n                vm.FormSchema[0].Data[4].visibility = true\r\n                vm.FormSchema[0].Data[3].visibility = true\r\n                vm.FormSchema[0].Data[6].visibility = true\r\n                vm.FormSchema[0].Data[0].visibility = false\r\n                vm.FormSchema[0].Data[5].visibility = true\r\n                if (this.$route.params.id == null) {\r\n                    vm.FormSchema[0].Data[4].config.options = []\r\n                }\r\n\r\n            }\r\n            if (field != undefined ? field.value == 3 : event == 3) {\r\n                vm.FormSchema[0].Data[4].visibility = true\r\n                vm.FormSchema[0].Data[0].visibility = false\r\n                vm.FormSchema[0].Data[5].visibility = true\r\n                vm.FormSchema[0].Data[8].value = '';\r\n                //vm.FormSchema[0].Data[6].config.options=[];\r\n                // vm.FormSchema[0].Data[3].config.options=[];\r\n                //vm.FormSchema[0].Data[3].value = 0;\r\n                vm.FormSchema[0].Data[3].visibility = false\r\n                //  vm.FormSchema[0].Data[4].value= '';\r\n                //  vm.FormSchema[0].Data[4].config.options=[];\r\n                vm.FormSchema[0].Data[0].value = '';\r\n                vm.FormSchema[0].Data[6].visibility = false\r\n                await vm.GetUsers();\r\n            }\r\n            if (field != undefined ? field.value == 4 : event == 4) {\r\n                vm.FormSchema[0].Data[4].visibility = true\r\n                vm.FormSchema[0].Data[3].visibility = true\r\n                vm.FormSchema[0].Data[6].visibility = true\r\n                vm.FormSchema[0].Data[0].visibility = false\r\n                vm.FormSchema[0].Data[5].visibility = true\r\n                if (this.$route.params.id == null) {\r\n                    vm.FormSchema[0].Data[4].config.options = []\r\n                }\r\n                //GetProjectList();\r\n            }\r\n            if (field != undefined ? field.value == 5 : event == 5) {\r\n                vm.FormSchema[0].Data[3].visibility = false\r\n                vm.FormSchema[0].Data[6].visibility = false\r\n                vm.FormSchema[0].Data[0].visibility = false\r\n                vm.FormSchema[0].Data[5].visibility = true\r\n                vm.FormSchema[0].Data[8].config.options = [];\r\n                // vm.FormSchema[0].Data[5]=[];\r\n                // vm.FormSchema[0].Data[6].config.options=[];\r\n                // vm.FormSchema[0].Data[3].config.options=[];\r\n                // vm.FormSchema[0].Data[0].config.options=[];\r\n                await vm.GetUsers();\r\n            }\r\n            if (field != undefined ? field.value == 6 : event == 6) {\r\n                vm.FormSchema[0].Data[3].visibility = false\r\n                vm.FormSchema[0].Data[4].visibility = false\r\n                vm.FormSchema[0].Data[6].visibility = true\r\n                vm.FormSchema[0].Data[5].visibility = false\r\n                vm.FormSchema[0].Data[0].visibility = true\r\n                vm.FormSchema[0].Data[8].config.options = [];\r\n                // vm.GetLocation();\r\n            }\r\n\r\n            // var data = vm.FormSchema[0].Data[2].config.options;\r\n            //  data.forEach(item => {\r\n            //     field = field != undefined ? field.value : event\r\n            //     if(item.value == field){\r\n            //         vm.FormSchema[0].Data[2].config.value(item.value);\r\n            //     }\r\n            // var checkvalue = data.find(item.value == field.value);\r\n            // if(checkvalue > -1 ){\r\n            //     vm.FormSchema[0].Data[2].config.value(item.value);\r\n            // }\r\n            //})\r\n            vm.isLoading = false;\r\n            vm.FormSchema[0].Data[8].config.options = [];\r\n        },\r\n        OnApprovalType(event, field) {\r\n            var vm = this;\r\n            vm.isLoading = true;\r\n            //     field.value = event.target.getAttribute('data-value');\r\n            if (field != undefined ? field.value == 1 : event == 1) {\r\n                vm.FormSchema[0].Data[7].visibility = true\r\n                vm.FormSchema[0].Data[8].visibility = false\r\n                vm.FormSchema[0].Data[5].config.options = [];\r\n                //vm.FormSchema[0].Data[5].config.options=[];\r\n            }\r\n            if (field != undefined ? field.value == 2 : event == 2) {\r\n                vm.FormSchema[0].Data[7].visibility = false\r\n                vm.FormSchema[0].Data[8].visibility = true\r\n\r\n            }\r\n            if (field != undefined ? field.value == 3 : event == 3) {\r\n                this.FormSchema[0].Data[7].visibility = true\r\n                this.FormSchema[0].Data[8].visibility = true\r\n\r\n            }\r\n            vm.isLoading = false;\r\n        },\r\n\r\n        checkRuleName(e, Fields) {\r\n            var vm = this;\r\n            var ruleName = Fields.value\r\n            var url = `RuleName=${ruleName}`\r\n            DataService.CheckDuplicateRule(url).then(response => {\r\n                if (response.data == true && vm.FormSchema[0].Data[1].value) {\r\n                    vm.FormSchema[0].Data[1].value = '';\r\n                    vm.ShowAlert(vm.$t('RuleExist'), \"warning\", true, vm.$t(\"Alert\"));\r\n                    vm.FormSchema[0].Data[1].validationRules.required = true;\r\n                }\r\n            });\r\n        }\r\n    },\r\n\r\n}\r\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AddApprovalRule.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AddApprovalRule.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./AddApprovalRule.vue?vue&type=template&id=7447d8e4\"\nimport script from \"./AddApprovalRule.vue?vue&type=script&lang=js\"\nexport * from \"./AddApprovalRule.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}