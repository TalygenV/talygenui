{"version":3,"sources":["webpack:///./src/views/ApprovalRule/AddApprovalRule.vue?535f","webpack:///./src/components/Model/ApprovalGroupPopup.vue?b16c","webpack:///src/components/Model/ApprovalGroupPopup.vue","webpack:///./src/components/Model/ApprovalGroupPopup.vue?c716","webpack:///./src/components/Model/ApprovalGroupPopup.vue","webpack:///src/views/ApprovalRule/AddApprovalRule.vue","webpack:///./src/views/ApprovalRule/AddApprovalRule.vue?ceac","webpack:///./src/views/ApprovalRule/AddApprovalRule.vue"],"names":["props","ApprovalchainId","type","String","ApprovalchainName","data","ChainName","leftSearchFields","TotalRecords","listheaderbuttons","GroupData","IsShowGroup","Headers","$t","settings","isInSlot","created","vm","id","FetchData","methods","vueObj","url","DataService","ApprovalGroupListByApprovalCHainId","then","response","length","noRecord","setTimeout","CheckBoxBootstrap","isLoading","ClosePopup","$parent","CloseGroupPopup","commonHeaderButtonClick","event","callbackfunction","DeleteRule","AddNewGroup","actionButtonClick","item","pagerMethod","value","PageSize","PageNumber","renderActions","row","components","ApprovalGroup","TreeSelectField","ApprovalChainList","FormSchema","layoutType","Data","astype","label","name","placeholder","disabled","visibility","config","options","validationRules","max","onChange","OnDeploymentType","GetUserbyProject","mode","OnApprovalType","onKeyUp","GetAssetCost","buttons","class","text","onClick","onCancel","myObj","LocationData","StatusData","StateData","TagData","DataLoaded","UserId","GetLocation","GetProjectList","GetApprovalChain","onSubmit","formfields","Location","jsonobj","ApprovalRuleId","RuleName","AuditRule","RuleDescription","Description","ApprovalTypeId","Approvaltype","IsLimitedDuration","Limited_Duration","dStart","dEnd","ProjectId","project_name","Users","User","Tasks","Clients","ClientApprovalType","LocationId","ApprovalChainId","Approval","UseSequence","Sequence","StatusId","Status_value","Array","prototype","map","call","join","poststring","JSON","stringify","AddRule","$router","push","ShowAlert","GetProjectListing","json","forEach","index","ProjectName","LeadStatusList","e","field","GetUsersByProjectId","USER_NAME","USER_ID","GetClientbyProject","LoadClientByProjectId","USERNAME","GetUsers","LoadUsersByCompanyId","GetApprovalChainsByCompanyId","ShowGroupPopup","targetValue","foundElement","find","element","APPROVAL_CHAIN_ID","APPROVAL_CHAIN_NAME","params","GetLocationByCompanyId","FindalLocationArray","CheckIfExist","filter","el","COMPANY_LOCATION_ID","PARENT_LOCATION_ID","locationId","rslt","getChildLocation","currentItem","ths","treeArray","LOCATION_NAME","retrunArray","childArray","finalChildArray","ChildfolderId","CheckIfExist1","children","target","getAttribute"],"mappings":"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","file":"js/chunk-2d0b9b6b.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',[_c('div',{staticClass:\"border p-3\"},[_c('dynamic-form',{attrs:{\"lang\":\"en\",\"buttons\":_vm.buttons,\"schema\":_vm.FormSchema},on:{\"OnSubmit\":_vm.onSubmit},scopedSlots:_vm._u([{key:\"tgslot-Approval\",fn:function(ref){\nvar data = ref.data;\nreturn [_c('div',{staticClass:\"input-group\"},[_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(data.fieldInfo.value),expression:\"data.fieldInfo.value\"}],staticClass:\"form-control\",attrs:{\"maxlength\":5,\"step\":\"any\"},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(data.fieldInfo, \"value\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},[_c('option',[_vm._v(\"Select Client\")]),_vm._l((_vm.ApprovalChainList),function(item){return _c('option',{domProps:{\"value\":item.APPROVAL_CHAIN_ID}},[_vm._v(_vm._s(item.APPROVAL_CHAIN_NAME))])})],2),_c('span',{staticClass:\"input-group-append\"},[_c('a',{staticClass:\"input-group-text\",attrs:{\"id\":\"spnOutOF\"},on:{\"click\":function($event){return _vm.ShowGroupPopup(data.fieldInfo.value)}}},[_c('i',{staticClass:\"fa fa-eye\"})])])])]}}])}),_c('small',{staticClass:\"text-danger\"},[_vm._v(\"Fields marked with an asterisk (*) are mandatory.\")]),(_vm.IsShowGroup)?_c('ApprovalGroup',{attrs:{\"ApprovalchainId\":_vm.ApprovalchainId,\"ApprovalchainName\":_vm.ApprovalchainName}}):_vm._e()],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"my-popups\"},[_c('div',{staticClass:\"modal d-block\"},[_c('div',{staticClass:\"modal-dialog modal-dialog-centered\",staticStyle:{\"max-width\":\"900px !important\"}},[_c('div',{staticClass:\"modal-content\"},[_c('div',{staticClass:\"modal-header theme-primary partition-full\"},[_c('h4',{staticClass:\"modal-title\"},[_vm._v(_vm._s(_vm.$t('ApprovalChain'))+\": \"+_vm._s(this.ChainName)+\" \")]),_c('button',{staticClass:\"close\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.ClosePopup}},[_c('em',{staticClass:\"fa fa-times\",attrs:{\"aria-hidden\":\"true\"}})])]),_c('div',{staticClass:\"modal-body\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"form-group\"},[_c('div',{staticClass:\"listing OuterMainDiv\"},[_c('div',{staticClass:\"row\",staticStyle:{\"max-height\":\"500px\",\"overflow-y\":\"auto\"}},[_c('tg-list',{attrs:{\"IsShowAction\":false,\"listType\":['List'],\"ModuleName\":\"Approval\",\"SubModuleCode\":\"ApprovalRule\",\"IdentityColumn\":\"APPROVALCHAINGROUPMAPID\",\"ListData\":_vm.GroupData,\"HeaderData\":_vm.Headers,\"callbackfunction\":_vm.FetchData,\"TotalRecords\":_vm.TotalRecords,\"ListDataCallBackFunction\":_vm.FetchData,\"SortExp\":_vm.SortExp,\"SortBy\":_vm.SortBy,\"NorecordfoundText\":_vm.$t('NoRecordfound')},on:{\"PagerButtonClick\":_vm.pagerMethod},scopedSlots:_vm._u([{key:\"slotdata\",fn:function(ref){\nvar data = ref.data;\nreturn [(data.column.COLUMN_NAME == 'GROUPNAME')?[_vm._v(\" \"+_vm._s(data.row.GROUPNAME)+\" \")]:_vm._e(),(data.column.COLUMN_NAME == 'USERS')?[_vm._v(\" \"+_vm._s(data.row.USERS)+\" \")]:_vm._e(),(data.column.COLUMN_NAME == 'APPROVERORDER')?[_vm._v(\" \"+_vm._s(data.row.APPROVERORDER)+\" \")]:_vm._e(),(data.column.COLUMN_NAME == 'Action')?[_c('span',[_vm._v(\"Action\")])]:_vm._e()]}}])})],1)])])])])])])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"my-popups\">\r\n        <div class=\"modal d-block\">\r\n            <div class=\"modal-dialog modal-dialog-centered\" style=\"max-width:900px !important\">\r\n                <div class=\"modal-content\">\r\n                    <div class=\"modal-header theme-primary partition-full\">\r\n                        <h4 class=\"modal-title\">{{ $t('ApprovalChain') }}: {{ this.ChainName }} </h4>\r\n\r\n                        <button type=\"button\" class=\"close\" v-on:click=\"ClosePopup\">\r\n                            <em class=\"fa fa-times\" aria-hidden=\"true\"></em>\r\n                        </button>\r\n                    </div>\r\n                    <div class=\"modal-body\">\r\n                        <div class=\"col-md-12\">\r\n                            <div class=\"form-group\">\r\n                                <div class=\"listing OuterMainDiv\">\r\n                                    <div class=\"row\" style=\"max-height:500px;overflow-y:auto;\">\r\n                                        <tg-list :IsShowAction=\"false\" :listType=\"['List']\" ModuleName=\"Approval\"\r\n                                            SubModuleCode=\"ApprovalRule\" IdentityColumn=\"APPROVALCHAINGROUPMAPID\"\r\n                                            :ListData=\"GroupData\" :HeaderData=\"Headers\" :callbackfunction=\"FetchData\"\r\n                                            :TotalRecords=\"TotalRecords\" :ListDataCallBackFunction=\"FetchData\"\r\n                                            :SortExp=\"SortExp\" :SortBy=\"SortBy\" :NorecordfoundText=\"$t('NoRecordfound')\"\r\n                                            v-on:PagerButtonClick=\"pagerMethod\">\r\n                                            <template v-slot:slotdata=\"{ data }\">\r\n                                                <template v-if=\"data.column.COLUMN_NAME == 'GROUPNAME'\">\r\n                                                    {{ data.row.GROUPNAME }}\r\n                                                </template>\r\n                                                <template v-if=\"data.column.COLUMN_NAME == 'USERS'\">\r\n                                                    {{ data.row.USERS }}\r\n                                                </template>\r\n                                                <template v-if=\"data.column.COLUMN_NAME == 'APPROVERORDER'\">\r\n                                                    {{ data.row.APPROVERORDER }}\r\n                                                </template>\r\n                                                <template v-if=\"data.column.COLUMN_NAME == 'Action'\">\r\n                                                   <span>Action</span>\r\n                                                </template>                                                \r\n                                            </template>\r\n                                        </tg-list>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport DataService from '../../service/DataService';\r\nexport default {\r\n    // props: {\r\n    //     ApprovalchainId: String\r\n        \r\n    // },\r\n    props:{\r\n        ApprovalchainId:{\r\n            type: String  \r\n        },\r\n        ApprovalchainName: {\r\n            type: String  \r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            ChainName:'',\r\n            leftSearchFields: [],\r\n            TotalRecords: 0,\r\n            listheaderbuttons: [],\r\n            GroupData: [],\r\n            IsShowGroup: false,\r\n            Headers: [\r\n                {\r\n                    \"COLUMN_NAME\": 'GROUPNAME',\r\n                    \"DATA_TYPE\": \"text\",\r\n                    \"SORTABLE\": false,\r\n                    \"VISIBLE\": true,\r\n                    \"DISPLAY_NAME\": this.$t('ApprovalGroupName'),\r\n                    \"DISPLAY_ORDER\": 1,\r\n                    settings: {\r\n                        isInSlot: true,\r\n                    }\r\n                },\r\n                {\r\n                    \"COLUMN_NAME\": 'USERS',\r\n                    \"DATA_TYPE\": \"text\",\r\n                    \"SORTABLE\": false,\r\n                    \"VISIBLE\": true,\r\n                    \"DISPLAY_NAME\": this.$t('Users'),\r\n                    \"DISPLAY_ORDER\": 2,\r\n                    settings: {\r\n                        isInSlot: true,\r\n                    }\r\n                },\r\n                {\r\n                    \"COLUMN_NAME\": 'RankUp',\r\n                    \"DATA_TYPE\": \"text\",\r\n                    \"SORTABLE\": false,\r\n                    \"VISIBLE\": true,\r\n                    \"DISPLAY_NAME\": this.$t('RankUp'),\r\n                    \"DISPLAY_ORDER\": 3,\r\n                    settings: {\r\n                        isInSlot: true,\r\n                    }\r\n                },\r\n                {\r\n                    \"COLUMN_NAME\": 'RankDown',\r\n                    \"DATA_TYPE\": \"text\",\r\n                    \"SORTABLE\": false,\r\n                    \"VISIBLE\": true,\r\n                    \"DISPLAY_NAME\": this.$t('RankDown'),\r\n                    \"DISPLAY_ORDER\": 4,\r\n                    settings: {\r\n                        isInSlot: true,\r\n                    }\r\n                },\r\n                {\r\n                    \"COLUMN_NAME\": 'APPROVERORDER',\r\n                    \"DATA_TYPE\": \"text\",\r\n                    \"SORTABLE\": false,\r\n                    \"VISIBLE\": true,\r\n                    \"DISPLAY_NAME\": 'Order',\r\n                    \"DISPLAY_ORDER\": 5,\r\n                    settings: {\r\n                        isInSlot: true,\r\n                    }\r\n                },\r\n                {\r\n                    \"COLUMN_NAME\": 'Action',\r\n                    \"DATA_TYPE\": \"text\",\r\n                    \"SORTABLE\": false,\r\n                    \"VISIBLE\": true,\r\n                    \"DISPLAY_NAME\": this.$t('Action'),\r\n                    \"DISPLAY_ORDER\": 6,\r\n                    settings: {\r\n                        isInSlot: true,\r\n                    }\r\n                }\r\n            ],\r\n\r\n\r\n        }\r\n\r\n    },\r\n    created: function () {\r\n        debugger\r\n        var vm = this;\r\n         vm.ChainName = vm.ApprovalchainName;\r\n         var id = vm.ApprovalchainId;\r\n        vm.FetchData();\r\n    },\r\n\r\n    methods: {\r\n        async FetchData() {\r\n\r\n            var vueObj = this;\r\n            var url = `approvalChainId=${vueObj.ApprovalchainId}`;\r\n            DataService.ApprovalGroupListByApprovalCHainId(url).then(response => {\r\n\r\n                if (response.data != null) {\r\n                    if (response.data.length > 0) {\r\n\r\n                        vueObj.GroupData = response.data;\r\n                        //vueObj.TotalRecords = response.data[0].TotalRecords\r\n                        //vueObj.TotalPages = Math.ceil(vueObj.TotalRecords / vueObj.PageSize);\r\n                        //vueObj.CurrentPage = vueObj.PageNumber;\r\n                        vueObj.noRecord = false;\r\n\r\n                    } else {\r\n                        vueObj.GroupData = [];\r\n                        vueObj.noRecord = true;\r\n                        vueObj.TotalRecords = 0;\r\n                    }\r\n                } else {\r\n                    vueObj.noRecord = true;\r\n                    vueObj.GroupData = [];\r\n                    vueObj.TotalRecords = 0\r\n                }\r\n                setTimeout(function () {\r\n                    vueObj.CheckBoxBootstrap()\r\n                }, 100);\r\n            });\r\n            vueObj.isLoading = false;\r\n        },\r\n        ClosePopup() {\r\n            var vm = this;\r\n            vm.$parent.CloseGroupPopup();\r\n\r\n        },\r\n        commonHeaderButtonClick(event) {\r\n            switch (event.callbackfunction) {\r\n                case \"DeleteRule\":\r\n                    this.DeleteRule()\r\n                    break;\r\n                case \"AddNewGroup\":\r\n                    this.AddNewGroup()\r\n                    break;\r\n            }\r\n        },\r\n        actionButtonClick(callbackfunction, item) { },\r\n        pagerMethod: function (value) {\r\n            this.PageSize = value.PageSize;\r\n            this.PageNumber = value.PageNumber;\r\n            this.FetchData();\r\n        },\r\n        renderActions(row) { },\r\n\r\n    },\r\n}\r\n\r\n\r\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ApprovalGroupPopup.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ApprovalGroupPopup.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./ApprovalGroupPopup.vue?vue&type=template&id=77a75809\"\nimport script from \"./ApprovalGroupPopup.vue?vue&type=script&lang=js\"\nexport * from \"./ApprovalGroupPopup.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\r\n    \r\n    <section>\r\n        <div class=\"border p-3\">\r\n            <dynamic-form lang=\"en\" :buttons=\"buttons\" :schema=\"FormSchema\" v-on:OnSubmit=\"onSubmit\">\r\n                <template v-slot:tgslot-Approval=\"{ data }\">\r\n                    <div class=\"input-group\">\r\n                        \r\n                        <select :maxlength=\"5\" step=\"any\" class=\"form-control\" v-model=\"data.fieldInfo.value\" >\r\n                            <option>Select Client</option>\r\n                            <option v-for=\"item in ApprovalChainList\" :value=\"item.APPROVAL_CHAIN_ID\">{{ item.APPROVAL_CHAIN_NAME }}</option>\r\n                        </select>\r\n                        <span class=\"input-group-append\">\r\n                            <a class=\"input-group-text\" id=\"spnOutOF\" v-on:click=\"ShowGroupPopup(data.fieldInfo.value)\"><i class=\"fa fa-eye\"></i></a>\r\n                        </span>\r\n                    </div>\r\n                </template>\r\n            </dynamic-form>\r\n\r\n            <small class=\"text-danger\">Fields marked with an asterisk (*) are mandatory.</small>\r\n            <ApprovalGroup v-if=\"IsShowGroup\"  :ApprovalchainId=\"ApprovalchainId\" :ApprovalchainName=\"ApprovalchainName\"></ApprovalGroup>\r\n        </div>\r\n    </section>\r\n</template>\r\n\r\n<script>\r\nimport DataService from '../../service/DataService';\r\nimport { TreeSelectField } from 'tg-controls_cli/dist/myLib.common';\r\nimport ApprovalGroup from '../../components/Model/ApprovalGroupPopup.vue';\r\nexport default {\r\n    components: {   \r\n        ApprovalGroup,TreeSelectField   \r\n    },\r\n    data() {\r\n        return {\r\n            ApprovalchainName:'',\r\n            ApprovalChainList : [],\r\n            FormSchema: [\r\n                {\r\n                    layoutType: \"four\",\r\n                    Data: [\r\n                    {\r\n                            astype: \"TreeSelectField\",\r\n                            label: this.$t('Location'),\r\n                            name: \"Location\",\r\n                            value: null,\r\n                            placeholder: \"Select Location\",\r\n                            disabled: true,\r\n                            visibility: false,\r\n                            config: {\r\n                                options: [],\r\n                            },\r\n                            validationRules: { \"required\": true },\r\n                        },\r\n                        {\r\n                            astype: \"TextField\",\r\n                            label: this.$t('AuditRuleName'),\r\n                            name: \"AuditRule\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            validationRules: { \"required\": true, max: 250 },\r\n                        },\r\n                        {\r\n                            astype: \"RadioField\",\r\n                            label: this.$t('SelectModule'),\r\n                            name: \"Module\",\r\n                            value: 1,\r\n                            placeholder: \"\",\r\n                            config: {\r\n                                options: [{ value: 1, name: \"Expense\" }, { value: 2, name: \"Leave\" }, { value: 3, name: \"Timesheet\" }, { value: 4, name: \"Attendance\" }, { value: 5, name: \"Product\" }],\r\n                                onChange: this.OnDeploymentType,\r\n\r\n                            },\r\n\r\n                           // validationRules: { \"required\": true },\r\n\r\n                        },\r\n                        {\r\n                            astype: \"SelectField\",\r\n                            label: this.$t('SelectProject'),\r\n                            name: \"project_name\",\r\n                            value: 0,\r\n                            placeholder: \"\",\r\n                            visibility: true,\r\n                            config: {\r\n                                options: [],\r\n                                onChange: this.GetUserbyProject,\r\n\r\n                            },\r\n                            validationRules: { \"required\": true },\r\n                        },\r\n                        {\r\n                            astype: \"MultiSelectField\",\r\n                            label: 'Users',\r\n                            name: \"User\",\r\n                            value: null,\r\n                            mode: \"tag\",\r\n                            placeholder: \"\",\r\n                            config: {\r\n                                options: [],\r\n\r\n                            },\r\n                            validationRules: { \"required\": true },\r\n                        },\r\n\r\n                        {\r\n                            astype: \"toggleField\",\r\n                            label: this.$t('Limited Duration'),\r\n                            name: \"Limited_Duration\",\r\n                            value: 0,\r\n                            placeholder: \"\",\r\n                            visibility: true,\r\n                            validationRules: {\r\n                                \"required\": false\r\n                            },\r\n                        },\r\n                        {\r\n                            astype: \"RadioField\",\r\n                            label: this.$t('ApprovalType'),\r\n                            name: \"Approvaltype\",\r\n                            value: 1,\r\n                            placeholder: \"\",\r\n                            config: {\r\n                                options: [{ value: 1, name: \"Approval Chain\" }, { value: 2, name: \"Client \" }, { value: 3, name: \"Both\" }],\r\n                                onChange: this.OnApprovalType,\r\n                                //CallBackFunction: null\r\n                            },\r\n\r\n                            validationRules: { \"required\": false },\r\n\r\n                        },\r\n                        {\r\n                            astype: \"SlotField\",\r\n                            label: this.$t('SelectApproval'),\r\n                            name: \"Approval\",\r\n                            value: \"0\",\r\n                            placeholder: \"\",\r\n                            validationRules: {\r\n                                \"required\": false,\r\n                                max: 5,\r\n                                \"min_value\": 1\r\n                            },\r\n                            visibility: true,\r\n                            config: {\r\n                                onKeyUp: this.GetAssetCost\r\n\r\n                            },\r\n\r\n                        },\r\n\r\n                        // {\r\n                        //     astype: \"SelectField\",\r\n                        //     label: this.$t('SelectApproval'),\r\n                        //     name: \"project_name\",\r\n                        //     value: \"\",\r\n                        //     placeholder: \"\",\r\n                        //     visibility:true,\r\n                        //     config: {\r\n                        //         options: [],\r\n\r\n                        //     },\r\n                        //     validationRules: { \"required\": true },\r\n                        // },\r\n                        {\r\n                            astype: \"MultiSelectField\",\r\n                            label: this.$t('Select Client'),\r\n                            name: \"Client\",\r\n                            value: null,\r\n                            mode: \"Select Client\",\r\n                            visibility: false,\r\n                            placeholder: \"\",\r\n                            config: {\r\n                                options: [],\r\n\r\n                            },\r\n                            validationRules: { \"required\": true },\r\n                        },\r\n                        {\r\n                            astype: \"SelectField\",\r\n                            label: 'Status',\r\n                            name: \"Status_value\",\r\n                            value: 1001,\r\n                            placeholder: \"\",\r\n                            config: {\r\n                                options: [{ value: 1001, name: \"Active\" }, { value: 1002, name: \"InActive\" },],\r\n                            },\r\n                            validationRules: { \"required\": true },\r\n                        },\r\n                        {\r\n                            astype: \"toggleField\",\r\n                            label: this.$t('Use Sequence'),\r\n                            name: \"Sequence\",\r\n                            value: 0,\r\n                            placeholder: \"\",\r\n                            validationRules: {\r\n                                \"required\": false\r\n                            },\r\n                        },\r\n                    ]\r\n                },\r\n\r\n\r\n                // {\r\n                //     layoutType: \"One\",\r\n                //     Data: [\r\n\r\n                //     ]\r\n                // },\r\n                {\r\n                    layoutType: \"One\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"TextAreaField\",\r\n                            label: this.$t('Description'),\r\n                            name: \"Description\",\r\n                            value: null,\r\n                            placeholder: \"\",\r\n                        },\r\n                    ]\r\n                }\r\n\r\n\r\n            ],\r\n            buttons: [\r\n                {\r\n                    type: \"submit\",\r\n                    class: \"btn btn-success\",\r\n                    text: \"<i class='fa fa-save pr-2'></i>Save\",\r\n                },\r\n                {\r\n                    type: \"button\",\r\n                    class: \"btn btn-danger\",\r\n                    text: \"<i class='fa fa-close pr-2'></i>Cancel\",\r\n                    onClick: this.onCancel\r\n                }\r\n\r\n            ],\r\n            myObj: [],\r\n            LocationData: [],\r\n            StatusData: [\r\n                {\r\n                    name: 'Active',\r\n                    value: 1001\r\n                },\r\n                {\r\n                    name: 'Inactive',\r\n                    value: 1002\r\n                },\r\n            ],\r\n            StateData: [],\r\n            TagData: [],\r\n            DataLoaded: 0,\r\n            UserId: '',\r\n            IsShowGroup: false,\r\n            ApprovalchainId:null,\r\n            ApprovalChainList:[]\r\n        }\r\n    },\r\n    created() {\r\n        this.GetLocation();\r\n        this.GetProjectList();\r\n        this.GetApprovalChain();\r\n    },\r\n    methods: {\r\n        onSubmit: function(formfields) { \r\n            debugger\r\n            var vm = this;\r\n            if(formfields.Location== null){\r\n                var jsonobj = {\r\n                ApprovalRuleId: 0,\r\n                RuleName: formfields.AuditRule,\r\n                RuleDescription: formfields.Description,\r\n                ApprovalTypeId: formfields.Approvaltype,\r\n                IsLimitedDuration: formfields.Limited_Duration,\r\n                dStart: null,\r\n                dEnd: null,\r\n              // RuleBaseType: formfields.Description,\r\n                ProjectId: formfields.project_name,\r\n                Users: formfields.User,\r\n                Tasks: null,\r\n                Clients: null,\r\n                ClientApprovalType: \"ApprovalChain\",\r\n                LocationId: formfields.Location,     \r\n                ApprovalChainId: formfields.Approval,\r\n                UseSequence: formfields.Sequence,\r\n                StatusId: formfields.Status_value,\r\n                Users: Array.prototype.map.call(formfields.User, function (item) {\r\n                    return item.value;\r\n                }).join(\",\"),\r\n              \r\n            }\r\n            }\r\n            else {\r\n                var jsonobj = {\r\n                ApprovalRuleId: 0,\r\n                RuleName: formfields.AuditRule,\r\n                RuleDescription: formfields.Description,\r\n                ApprovalTypeId: formfields.Approvaltype,\r\n                IsLimitedDuration: formfields.Limited_Duration,\r\n                dStart: null,\r\n                dEnd: null,\r\n              // RuleBaseType: formfields.Description,\r\n                ProjectId: formfields.project_name,\r\n                Users: formfields.User,\r\n                Tasks: null,\r\n                Clients: null,\r\n                ClientApprovalType: \"ApprovalChain\",\r\n                LocationId: formfields.Location,     \r\n                ApprovalChainId: formfields.Approval,\r\n                UseSequence: formfields.Sequence,\r\n                StatusId: formfields.Status_value,\r\n                // Users: Array.prototype.map.call(formfields.User, function (item) {\r\n                //     return item.value;\r\n                // }).join(\",\"),\r\n              \r\n            }\r\n            }\r\n           \r\n            var poststring = JSON.stringify(jsonobj);\r\n            DataService.AddRule(poststring).then(response => {\r\n                debugger\r\n                if(response.data==true){\r\n                    this.$router.push({\r\n                            name: 'ApprovalRule'\r\n                        });\r\n                        vm.ShowAlert(\"Approval Rule SuccessFully added \", 'success', true, vm.$t('Alert'));\r\n                }\r\n\r\n            }\r\n            )\r\n\r\n        },\r\n        GetProjectList: async function () {\r\n            debugger;\r\n           // var usertype = GetUserInfo.value.UserType;${usertype}\r\n            var vm = this;\r\n            var url = `userType=CA&IsEncrptedId='no'`;\r\n            DataService.GetProjectListing(url).then(response => {\r\n              \r\n                var json = response.data;\r\n              //  var array = JSON.parse(\"[\" + json + \"]\");\r\n                if (json != null) {\r\n                    json.forEach(function (item, index) {\r\n                        (vm.FormSchema)[0].Data[3].config.options.push({\r\n                            name: `${item.ProjectName}`,\r\n                            value: `${item.ProjectId}`\r\n                        })\r\n                    })\r\n                    return vm.LeadStatusList;\r\n                }\r\n            });\r\n        },\r\n        GetUserbyProject: async function (e,field) {\r\n            debugger\r\n            var vm = this;\r\n            vm.FormSchema[0].Data[4].config.options=[];\r\n            var url = `ProjectId=${field.value}&ModuleName=APPROVALRULE`;\r\n            DataService.GetUsersByProjectId(url).then(response => {\r\n                var json = response.data;\r\n                if (json != null) {\r\n                    json.forEach(function (item, index) {\r\n                        (vm.FormSchema)[0].Data[4].config.options.push({\r\n                            name: `${item.USER_NAME}`,\r\n                            value: `${item.USER_ID}`\r\n                        })\r\n                    })\r\n                }\r\n            });\r\n        },\r\n\r\n        GetClientbyProject: async function (e,field) {\r\n            debugger\r\n            var vm = this;\r\n            vm.FormSchema[0].Data[4].config.options=[];\r\n            var url = `ProjectId=${field.value}`;\r\n            DataService.LoadClientByProjectId(url).then(response => {\r\n                var json = response.data;\r\n                if (json != null) {\r\n                    json.forEach(function (item, index) {\r\n                        (vm.FormSchema)[0].Data[8].config.options.push({\r\n                            name: `${item.USERNAME}`,\r\n                            value: `${item.USER_ID}`\r\n                        })\r\n                    })\r\n                    return vm.LeadStatusList;\r\n                }\r\n            });\r\n        },\r\n        GetUsers: async function () {\r\n            debugger\r\n            var vm = this;\r\n            vm.FormSchema[0].Data[4].config.options=[];\r\n            var url=`isIncludeLoginUserId=1&approvalGroupIds=&approvalChainIds=&moduleName=APPROVALRULE&DepartmentIds`; \r\n        DataService.LoadUsersByCompanyId(url).then(response=>{        \r\n            var json = response.data;\r\n                if (json != null) {\r\n                    json.forEach(function (item, index) {\r\n                        (vm.FormSchema)[0].Data[4].config.options.push({\r\n                            name: `${item.USERNAME}`,\r\n                            value: `${item.USER_ID}`\r\n                        })\r\n                    })\r\n                    return vm.LeadStatusList;\r\n                }\r\n            });\r\n        },\r\n\r\n        GetApprovalChain: async function () {\r\n            debugger\r\n            var vm = this;\r\n            //var url = `isIncludeLoginUserId=1&approvalGroupIds=&approvalChainIds=&moduleName=APPROVALRULE&DepartmentIds`;\r\n            DataService.GetApprovalChainsByCompanyId().then(response => {\r\n                debugger\r\n                vm.ApprovalChainList = response.data;\r\n                // if (json != null) {\r\n                //     json.forEach(function (item, index) {\r\n                //         (vm.FormSchema)[0].Data[7].config.options.push({\r\n                //             name: `${item.APPROVAL_CHAIN_NAME}`,\r\n                //             value: `${item.APPROVAL_CHAIN_ID}`\r\n                //         })\r\n                //     })\r\n                 //   return vm.LeadStatusList;\r\n               // }\r\n            });\r\n        },\r\n        onCancel: function () {\r\n            this.$router.push({\r\n                name: 'ApprovalRule'\r\n            });\r\n        },\r\n\r\n        ShowGroupPopup(targetValue) {    \r\n            debugger; \r\n            const foundElement = this.ApprovalChainList.find(element => element.APPROVAL_CHAIN_ID === targetValue);\r\n            this.ApprovalchainId =  foundElement.APPROVAL_CHAIN_ID\r\n            this.ApprovalchainName = foundElement.APPROVAL_CHAIN_NAME\r\n            this.IsShowGroup = true;  \r\n            // DataService.CheckPrivilege(this.privilegeParams + 'AddRelationship').then((response)=>{                \r\n            //   if (response.data==true) {\r\n            //     this.IsShowGroup = true;\r\n            //   }else{\r\n            //     this.ShowAlert(this.$t('NotAuthorizedSection'), \"failure\",true, \"Alert\");\r\n            //   }\r\n            // });\r\n        },\r\n        CloseGroupPopup() {\r\n            debugger;\r\n            var vm = this;\r\n            vm.IsShowGroup = false;\r\n        },\r\n\r\nasync GetLocation() {\r\ndebugger\r\nvar vm = this;\r\nvm.isLoading = true;\r\nvar params = `reqForm=`\r\nawait DataService.GetLocationByCompanyId(params).then(response => {\r\n    vm.LocationData = response.data;\r\n\r\n    vm.FindalLocationArray = [];\r\n    vm.LocationData.forEach((value) => {\r\n        var CheckIfExist = vm.FindalLocationArray.filter(function (el) {\r\n            return el.COMPANY_LOCATION_ID == value.COMPANY_LOCATION_ID;\r\n        });\r\n        if (CheckIfExist.length == 0) {\r\n            if (value.PARENT_LOCATION_ID == null) {\r\n                let locationId = value.COMPANY_LOCATION_ID\r\n                let rslt = vm.getChildLocation(locationId, value, response.data)\r\n                vm.FindalLocationArray.push(rslt)\r\n            }\r\n        }\r\n    });\r\n    (vm.FormSchema)[0].Data[0].config.options = vm.FindalLocationArray;\r\n})\r\n},\r\n getChildLocation: function (locationId, currentItem, data) {\r\nlet ths = this;\r\nlet treeArray = {};\r\ntreeArray = {\r\n    id: currentItem.COMPANY_LOCATION_ID,\r\n    label: currentItem.LOCATION_NAME\r\n}\r\nlet retrunArray = treeArray;\r\nvar childArray = data.filter(function (el) {\r\n    return el.PARENT_LOCATION_ID == locationId;\r\n});\r\nlet finalChildArray = [];\r\nchildArray.forEach((value) => {\r\n    let ChildfolderId = value.COMPANY_LOCATION_ID\r\n    var CheckIfExist1 = finalChildArray.filter(function (el) {\r\n        return el.COMPANY_LOCATION_ID == value.COMPANY_LOCATION_ID;\r\n    });\r\n    if (CheckIfExist1.length == 0) {\r\n        var CheckIfExist = data.filter(function (el) {\r\n            return el.PARENT_LOCATION_ID == ChildfolderId;\r\n        });\r\n        if (CheckIfExist != null && CheckIfExist.length > 0) {\r\n            let rslt = ths.getChildLocation(ChildfolderId, value, data);\r\n            finalChildArray.push(rslt);\r\n        } else {\r\n            treeArray = {\r\n                id: `${value.COMPANY_LOCATION_ID}`,\r\n                label: `${value.LOCATION_NAME}`\r\n            }\r\n            finalChildArray.push(treeArray);\r\n        }\r\n    }\r\n});\r\nretrunArray.children = finalChildArray;\r\nreturn retrunArray;\r\n},\r\n        OnDeploymentType(event, field) {\r\n            debugger;\r\n            var vm = this;\r\n            field.value = event.target.getAttribute('data-value');\r\n            if (field.value == 1) {\r\n                vm.FormSchema[0].Data[4].visibility = true\r\n                vm.FormSchema[0].Data[3].visibility = true\r\n                vm.FormSchema[0].Data[6].visibility = true\r\n                vm.FormSchema[0].Data[0].visibility = false\r\n                vm.FormSchema[0].Data[5].visibility = true\r\n            }\r\n            if (field.value == 2) {\r\n                vm.FormSchema[0].Data[4].visibility = true\r\n                vm.FormSchema[0].Data[3].visibility = false\r\n                vm.FormSchema[0].Data[6].visibility = false\r\n                vm.FormSchema[0].Data[0].visibility = false\r\n                vm.FormSchema[0].Data[5].visibility = true\r\n                vm.FormSchema[0].Data[8].config.options=[];\r\n                vm.GetUsers();\r\n            }\r\n            if (field.value == 3) {\r\n                vm.FormSchema[0].Data[4].visibility = true\r\n                vm.FormSchema[0].Data[3].visibility = true\r\n                vm.FormSchema[0].Data[6].visibility = true\r\n                vm.FormSchema[0].Data[0].visibility = false\r\n                vm.FormSchema[0].Data[5].visibility = true\r\n                //GetProjectList();\r\n            }\r\n            if (field.value == 4) {\r\n                vm.FormSchema[0].Data[3].visibility = false\r\n                vm.FormSchema[0].Data[6].visibility = false\r\n                vm.FormSchema[0].Data[0].visibility = false\r\n                vm.FormSchema[0].Data[5].visibility = true\r\n                vm.GetUsers();\r\n            }\r\n            if (field.value == 5) {\r\n                vm.FormSchema[0].Data[3].visibility = false\r\n                vm.FormSchema[0].Data[4].visibility = false\r\n                vm.FormSchema[0].Data[6].visibility = true\r\n                vm.FormSchema[0].Data[5].visibility = false\r\n                vm.FormSchema[0].Data[0].visibility = true\r\n                vm.FormSchema[0].Data[8].config.options=[];\r\n               // vm.GetLocation();\r\n            }\r\n\r\n        },\r\n        OnApprovalType(event, field) {\r\n            debugger;\r\n            var vm = this;\r\n            field.value = event.target.getAttribute('data-value');\r\n            if (field.value == 1) {\r\n                vm.FormSchema[0].Data[7].visibility = true\r\n                vm.FormSchema[0].Data[8].visibility = false\r\n\r\n            }\r\n            if (field.value == 2) {\r\n                vm.FormSchema[0].Data[7].visibility = false\r\n                vm.FormSchema[0].Data[8].visibility = true\r\n\r\n            }\r\n            if (field.value == 3) {\r\n                this.FormSchema[0].Data[7].visibility = true\r\n                this.FormSchema[0].Data[8].visibility = true\r\n\r\n            }\r\n\r\n        }\r\n    }\r\n}\r\n\r\n\r\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AddApprovalRule.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AddApprovalRule.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./AddApprovalRule.vue?vue&type=template&id=00cbebcd\"\nimport script from \"./AddApprovalRule.vue?vue&type=script&lang=js\"\nexport * from \"./AddApprovalRule.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}