{"version":3,"sources":["webpack:///./src/views/WorkingDay/Add.vue","webpack:///src/views/WorkingDay/Add.vue","webpack:///./src/views/WorkingDay/Add.vue?e0f4","webpack:///./src/views/WorkingDay/Add.vue?ba3d"],"names":["render","_vm","this","_c","_self","attrs","buttons","FormSchema","on","onSubmit","staticClass","_v","_s","$t","staticRenderFns","data","isLoading","DataLoaded","ApprovalChainId","groupList","TagsSelectedArray","location","Userlist","layoutType","Data","astype","label","name","value","placeholder","validationRules","config","options","onChange","GetUsers","visibility","mode","type","class","text","onClick","onCancel","created","GetCompanyLocation","methods","DataService","then","response","map","item","push","LOCATION_NAME","COMPANY_LOCATION_ID","locationId","params","GetUserListByLocationId","userName","userId","formfields","vm","console","log","obj","CompanyLocationId","Location","WorkDate","IsWorking","Status","Comment","comment","Users","component"],"mappings":"uHAAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,UAAU,CAACA,EAAG,eAAe,CAACE,MAAM,CAAC,KAAO,KAAK,QAAUJ,EAAIK,QAAQ,OAASL,EAAIM,YAAYC,GAAG,CAAC,SAAWP,EAAIQ,YAAYN,EAAG,QAAQ,CAACO,YAAY,eAAe,CAACT,EAAIU,GAAGV,EAAIW,GAAGX,EAAIY,GAAG,wBAAwB,IAEtRC,EAAkB,G,wBCmBP,GAEfC,OAEA,OACAC,WAAA,EACAC,WAAA,EACAC,gBAAA,EACAC,UAAA,GACAC,kBAAA,GACAC,SAAA,GACAC,SAAA,GACAf,WAAA,EACAgB,WAAA,SACAC,KAAA,CACA,CACAC,OAAA,YACAC,MAAA,KAAAb,GAAA,QACAc,KAAA,gBACAC,MAAA,GACAC,YAAA,GACAC,gBAAA,eAGA,CACAL,OAAA,cACAC,MAAA,KAAAb,GAAA,YACAc,KAAA,WACAC,MAAA,KACAC,YAAA,GACAC,gBAAA,CACA,aAEAC,OAAA,CACAC,QAAA,GACAC,SAAA,KAAAC,WAGA,CACAT,OAAA,aACAC,MAAA,KAAAb,GAAA,UACAc,KAAA,SACAC,MAAA,EACAC,YAAA,GACAM,YAAA,EACAL,gBAAA,CACA,aAEAC,OAAA,CACAC,QAAA,EAAAJ,MAAA,EAAAD,KAAA,SAAAC,MAAA,EAAAD,KAAA,uBAIA,CACAF,OAAA,mBACAC,MAAA,KAAAb,GAAA,SACAc,KAAA,QACAC,MAAA,GACAQ,KAAA,MACAP,YAAA,GACAC,gBAAA,CACA,aAEAC,OAAA,CACAC,QAAA,KAGA,CACAP,OAAA,gBACAC,MAAA,KAAAb,GAAA,YACAc,KAAA,UACAC,MAAA,GACAC,YAAA,OAOAvB,QAAA,EACA+B,KAAA,SACAC,MAAA,kBACAC,KAAA,uCAGA,CACAF,KAAA,SACAC,MAAA,iBACAC,KAAA,yCACAC,QAAA,KAAAC,aAKAC,QAAA,iBACA,KAAAC,sBAGAC,QAAA,CACAD,mBAAA,uBACAE,OAAAF,qBAAAG,KAAAC,IACA,KAAA1B,SAAA0B,EAAAhC,KAEA,WAAAM,UACA,KAAAA,SAAA2B,IAAAC,IACA,KAAA1C,WAAA,GAAAiB,KAAA,GAAAO,OAAAC,QAAAkB,KAAA,CACAvB,KAAAsB,EAAAE,cACAvB,MAAAqB,EAAAG,2BAOAlB,SAAA,iBACA,IAAAmB,EAAA,KAAA9C,WAAA,GAAAiB,KAAA,GAAAI,MACA0B,EAAA,cAAAD,6BACAR,OAAAU,wBAAAD,GAAAR,KAAAC,IACA,KAAAzB,SAAAyB,EAAAhC,KACA,WAAAO,UACA,KAAAA,SAAA0B,IAAAC,IACA,KAAA1C,WAAA,GAAAiB,KAAA,GAAAO,OAAAC,QAAAkB,KAAA,CACAvB,KAAAsB,EAAAO,SACA5B,MAAAqB,EAAAQ,cAMAhD,SAAA,eAAAiD,GACA,IAAAC,EAAA,KACAC,QAAAC,IAAA,aAAAH,GACA,IAAAI,EAAA,CACAC,kBAAAL,EAAAM,SACAC,SAAAP,EAAAM,SACAE,UAAAR,EAAAS,OACAC,QAAAV,EAAAW,QACAC,MAAAX,EAAAW,OAEAV,QAAAC,IAAA,MAAAC,MChK2V,I,YCOvVS,EAAY,eACd,EACAvE,EACAc,GACA,EACA,KACA,KACA,MAIa,aAAAyD,E","file":"js/chunk-2d225de5.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('section',[_c('dynamic-form',{attrs:{\"lang\":\"en\",\"buttons\":_vm.buttons,\"schema\":_vm.FormSchema},on:{\"OnSubmit\":_vm.onSubmit}}),_c('small',{staticClass:\"text-danger\"},[_vm._v(_vm._s(_vm.$t('MandatoryString')))])],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template lang=\"en\">\r\n    <section>\r\n      \r\n        <!-- <div> -->\r\n            <!-- <div class=\"row\">\r\n                <div class=\"col-md-12 padding-t_8\">\r\n                    <div class=\"theme-primary partition-full\">\r\n                        <span class=\"p-name text-white\">{{$t('AddApprovalChain')}}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div> -->\r\n        <!-- <div class=\"border p-3\"> -->\r\n            <dynamic-form lang=\"en\" :buttons=\"buttons\" :schema=\"FormSchema\" v-on:OnSubmit=\"onSubmit\"></dynamic-form> \r\n            <small class=\"text-danger\">{{ $t('MandatoryString') }}</small>\r\n        <!-- </div> -->\r\n    </section>\r\n    </template>\r\n\r\n<script>\r\nimport DataService from '../../services/DataService';\r\nexport default {\r\n\r\n    data() {\r\n\r\n        return {\r\n            isLoading: false,\r\n            DataLoaded: 0,\r\n            ApprovalChainId: 0,\r\n            groupList: [],\r\n            TagsSelectedArray: [],\r\n            location: [],\r\n            Userlist: [],\r\n            FormSchema: [{\r\n                layoutType: \"double\",\r\n                Data: [\r\n                    {\r\n                        astype: \"DateField\",\r\n                        label: this.$t('Date'),\r\n                        name: \"ImplementDate\",\r\n                        value: \"\",\r\n                        placeholder: \"\",\r\n                        validationRules: { \"required\": true },\r\n                    },\r\n\r\n                    {\r\n                        astype: \"SelectField\",\r\n                        label: this.$t('Location'),\r\n                        name: \"Location\",\r\n                        value: 1001,\r\n                        placeholder: \"\",\r\n                        validationRules: {\r\n                            \"required\": true\r\n                        },\r\n                        config: {\r\n                            options: [],\r\n                            onChange: this.GetUsers\r\n                        },\r\n                    },\r\n                    {\r\n                        astype: \"RadioField\",\r\n                        label: this.$t('Status'),\r\n                        name: \"Status\",\r\n                        value: 0,\r\n                        placeholder: \"\",\r\n                        visibility: true,\r\n                        validationRules: {\r\n                            \"required\": false\r\n                        },\r\n                        config: {\r\n                            options: [{ value: 1, name: \"User\" }, { value: 0, name: \"Company Holidays\" }],\r\n\r\n                        }\r\n                    },\r\n                    {\r\n                        astype: \"MultiSelectField\",\r\n                        label: this.$t('Users'),\r\n                        name: \"Users\",\r\n                        value: \"\",\r\n                        mode: \"tag\",\r\n                        placeholder: \"\",\r\n                        validationRules: {\r\n                            \"required\": true\r\n                        },\r\n                        config: {\r\n                            options: []\r\n                        },\r\n                    },\r\n                    {\r\n                        astype: \"TextAreaField\",\r\n                        label: this.$t('Comments'),\r\n                        name: \"comment\",\r\n                        value: \"\",\r\n                        placeholder: \"\",\r\n                    },\r\n\r\n                ]\r\n            }\r\n\r\n            ],\r\n            buttons: [{\r\n                type: \"submit\",\r\n                class: \"btn btn-success\",\r\n                text: \"<i class='fa fa-save pr-2'></i>Save\",\r\n            },\r\n\r\n            {\r\n                type: \"button\",\r\n                class: \"btn btn-danger\",\r\n                text: \"<i class='fa fa-close pr-2'></i>Cancel\",\r\n                onClick: this.onCancel\r\n            }\r\n            ],\r\n        }\r\n    },\r\n    created: async function () {\r\n        this.GetCompanyLocation();\r\n\r\n    },\r\n    methods: {\r\n        GetCompanyLocation: async function () {\r\n            await DataService.GetCompanyLocation().then((response) => {\r\n                this.location = response.data\r\n\r\n                if (this.location != null) {\r\n                    this.location.map((item) => {\r\n                        this.FormSchema[0].Data[1].config.options.push({\r\n                            name: item.LOCATION_NAME,\r\n                            value: item.COMPANY_LOCATION_ID\r\n                        })\r\n                    })\r\n\r\n                }\r\n            })\r\n        },\r\n        GetUsers: async function () {\r\n            var locationId = this.FormSchema[0].Data[1].value\r\n            var params = `locationId=${locationId}&moduleName=WORKDAY`\r\n            await DataService.GetUserListByLocationId(params).then(response => {\r\n                this.Userlist = response.data\r\n                if (this.Userlist != null) {\r\n                    this.Userlist.map((item) => {\r\n                        this.FormSchema[0].Data[3].config.options.push({\r\n                            name: item.userName,\r\n                            value: item.userId\r\n                        })\r\n                    })\r\n                }\r\n            })\r\n        },\r\n        onSubmit: async  function (formfields) {\r\n            var vm = this;\r\n            console.log(\"formfields\",formfields);\r\n            var obj = {                                \r\n                CompanyLocationId: formfields.Location,                   \r\n                WorkDate: formfields.Location,\r\n                IsWorking: formfields.Status,\r\n                Comment: formfields.comment,                 \r\n                Users: vm.Users                  \r\n            }\r\n            console.log(\"obj\",obj)\r\n        },\r\n\r\n\r\n    }\r\n}\r\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Add.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Add.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./Add.vue?vue&type=template&id=07eda53a&lang=en\"\nimport script from \"./Add.vue?vue&type=script&lang=js\"\nexport * from \"./Add.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}