{"version":3,"sources":["webpack:///./src/views/ProductAssignment/Manage.vue","webpack:///src/views/ProductAssignment/Manage.vue","webpack:///./src/views/ProductAssignment/Manage.vue?948b","webpack:///./src/views/ProductAssignment/Manage.vue?3c2b"],"names":["render","_vm","this","_c","_self","staticClass","attrs","isLoading","_v","_s","$t","on","BackTolist","ref","DataLoaded","buttons","FormSchema","scopedSlots","_u","key","fn","data","popover","DateofAssignment","getMinDate","inputValue","togglePopover","_g","class","domProps","$event","inputEvents","model","value","callback","$$v","expression","DateofAssignmentTill","_e","GetParentDetails","GetDetails","AssestArrayData","SubmitData","onCancel","staticRenderFns","components","SearchAsset","UsersData","Users","Remarks","Groupname","Users1","Users2","visibility","UserId","SelfCheckout","RequestFrom","isUsedFor","selectedOption","checked","unchecked","txtAssignUserType","disabled","dataArray","pendingItem","layoutType","Data","astype","label","name","placeholder","config","options","onChange","GetCompanyUsers","validationRules","AssignUserType","format","minDate","Date","rows","created","GetDepartment","GetNotificationUser","GetCompanyClients","GetUserInfo","ID","$route","params","reqForm","items","DEPARTMENT_ID","setDate","getDate","methods","event","field","target","getAttribute","attributes","id","$router","push","url","DataService","then","response","forEach","item","department_name","department_id","GetNotficationUsers","NAME","USER_ID","vm","department_ids","USERNAME","length","user_id","DepartmentID","txtDepartment","UserID","GetNotificationUserID","FromDate","TillDate","pendingItems","sessionStorage","setItem","JSON","stringify","$refs","ProductAssignmentForm","fields","Departments","failed","required","validate","result","errors","formData","FormData","files","uniquenames","issueToName","i","AssetUniqueName","parseInt","mainObj","DepartmentId","AssignedFrom","AssignedTill","AssignedFromDateTime","$options","filters","formatDateTimeYYMMDD","AssignedTillDateTime","StartTime","EndTime","Comment","NotificationUsers","IsRequestFromRequisition","IssueToName","RFID","GroupRequistionAssestInfostring","itemNames","append","SaveGroupAssign","status","existIds","ShowAlert","query","component"],"mappings":"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","file":"js/chunk-2d21f0b8.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('section',{staticClass:\"main-content\"},[_c('loader',{attrs:{\"is-visible\":_vm.isLoading}}),_c('div',[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12 padding-t_8\"},[_c('div',{staticClass:\"theme-primary partition-full\"},[_c('span',{staticClass:\"p-name text-white\"},[_vm._v(_vm._s(_vm.$t('ASSET_ASSIGN_Desc')))]),_c('span',{staticClass:\"p-actions float-right\"},[_c('a',{staticClass:\"p-action-btn text-white\",attrs:{\"title\":\"BacktoList\"},on:{\"click\":_vm.BackTolist}},[_c('em',{staticClass:\"fa fa-angle-double-left pr-2\"}),_c('br'),_c('span',[_vm._v(_vm._s(_vm.$t('BacktoList')))])])])])])])]),_c('div',{staticClass:\"border p-3\"},[_c('div',{staticClass:\"col-md-12 p-0\",attrs:{\"id\":\"dynmicForm\"}},[_c('Form',{ref:\"ProductAssignmentForm\"},[(_vm.DataLoaded)?_c('dynamic-form',{attrs:{\"lang\":\"en\",\"buttons\":_vm.buttons,\"schema\":_vm.FormSchema},scopedSlots:_vm._u([{key:\"tgslot-DateofAssignment\",fn:function({ data }){return [_c('div',{staticClass:\"input-group\"},[_c('v-date-picker',{staticClass:\"timedate input-group\",attrs:{\"popover\":_vm.popover,\"name\":_vm.DateofAssignment,\"min-date\":_vm.getMinDate(),\"mode\":\"dateTime\",\"minute-increment\":5},scopedSlots:_vm._u([{key:\"default\",fn:function({ inputValue, togglePopover }){return [_c('input',_vm._g({class:{'form-control' : true},attrs:{\"placeholder\":\"M/D/YYYY h:mm A\"},domProps:{\"value\":inputValue},on:{\"click\":function($event){return togglePopover()}}},_vm.inputEvents)),_c('div',{staticClass:\"input-group-append\",on:{\"click\":function($event){return togglePopover()}}},[_c('span',{staticClass:\"input-group-text\"},[_c('em',{staticClass:\"fa fa-calendar\"})])])]}}],null,true),model:{value:(_vm.DateofAssignment),callback:function ($$v) {_vm.DateofAssignment=$$v},expression:\"DateofAssignment\"}})],1)]}},{key:\"tgslot-DateofAssignmentTill\",fn:function({ data }){return [_c('div',{staticClass:\"input-group\"},[_c('v-date-picker',{staticClass:\"timedate input-group\",attrs:{\"popover\":_vm.popover,\"name\":_vm.DateofAssignmentTill,\"min-date\":_vm.getMinDate(),\"mode\":\"dateTime\",\"minute-increment\":5},scopedSlots:_vm._u([{key:\"default\",fn:function({ inputValue, togglePopover }){return [_c('input',_vm._g({class:{'form-control' : true},attrs:{\"placeholder\":\"M/D/YYYY h:mm A\"},domProps:{\"value\":inputValue},on:{\"click\":function($event){return togglePopover()}}},_vm.inputEvents)),_c('div',{staticClass:\"input-group-append\",on:{\"click\":function($event){return togglePopover()}}},[_c('span',{staticClass:\"input-group-text\"},[_c('em',{staticClass:\"fa fa-calendar\"})])])]}}],null,true),model:{value:(_vm.DateofAssignmentTill),callback:function ($$v) {_vm.DateofAssignmentTill=$$v},expression:\"DateofAssignmentTill\"}})],1)]}}],null,false,3463087764)}):_vm._e(),(_vm.DataLoaded)?_c('SearchAsset',{attrs:{\"GetParentDetails\":_vm.GetParentDetails},on:{\"GetDetailsofParent\":_vm.GetDetails,\"AssestArrayData\":_vm.AssestArrayData}}):_vm._e(),_c('div',{staticClass:\"row flex-row-reverse py-3\"},[_c('div',{staticClass:\"col-lg-6 text-right\"},[_c('a',{staticClass:\"btn btn-success formbtn text-white mr-1\",attrs:{\"href\":\"javascript:void(0);\",\"title\":_vm.$t('Save')},on:{\"click\":_vm.SubmitData}},[_c('i',{staticClass:\"fa fa-save pr-2\"}),_c('span',[_vm._v(_vm._s(_vm.$t('Save')))])]),_c('a',{staticClass:\"btn btn-danger formbtn text-white\",attrs:{\"href\":\"javascript:;\",\"title\":_vm.$t('Cancel')},on:{\"click\":function($event){return _vm.onCancel()}}},[_c('i',{staticClass:\"fa fa-close pr-2\"}),_c('span',[_vm._v(_vm._s(_vm.$t('Cancel')))])])]),_c('div',{staticClass:\"col-lg-6\"},[_c('div',{staticClass:\"py-2\"},[_c('small',{staticClass:\"text-danger\"},[_vm._v(_vm._s(_vm.$t('MandatoryString')))])])])])],1)],1)])],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template lang=\"en\">\r\n    <section class=\"main-content\">\r\n        <loader :is-visible=\"isLoading\"></loader>\r\n        <div>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12 padding-t_8\">\r\n                    <div class=\"theme-primary partition-full\">\r\n                        <span class=\"p-name text-white\">{{$t('ASSET_ASSIGN_Desc')}}</span>\r\n                        <span class=\"p-actions float-right\">\r\n                            <a title=\"BacktoList\" class=\"p-action-btn text-white\" @click=\"BackTolist\"><em class=\"fa fa-angle-double-left pr-2\"></em><br>\r\n                                <span>{{$t('BacktoList')}}</span>\r\n                            </a>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"border p-3\">\r\n            <div class=\"col-md-12 p-0\" id=\"dynmicForm\">\r\n                <Form ref=\"ProductAssignmentForm\">\r\n                    <dynamic-form lang=\"en\" v-if=\"DataLoaded\" :buttons=\"buttons\" :schema=\"FormSchema\">\r\n                        <template v-slot:tgslot-DateofAssignment=\"{ data }\">\r\n                            <div class=\"input-group\">\r\n                                <v-date-picker :popover=\"popover\" v-bind:name=\"DateofAssignment\" :min-date=\"getMinDate()\" mode=\"dateTime\" :minute-increment=\"5\" class=\"timedate  input-group\" v-model=\"DateofAssignment\">\r\n                                    <template v-slot=\"{ inputValue, togglePopover }\">\r\n                                        <input placeholder=\"M/D/YYYY h:mm A\" @click=\"togglePopover()\" v-bind:class=\"{'form-control' : true}\" :value=\"inputValue\" v-on=\"inputEvents\" />\r\n                                        <div @click=\"togglePopover()\" class=\"input-group-append\"><span class=\"input-group-text\"><em class=\"fa fa-calendar\"></em></span></div>\r\n                                    </template>\r\n                                </v-date-picker>\r\n                            </div>\r\n                        </template>\r\n                        <template v-slot:tgslot-DateofAssignmentTill=\"{ data }\">\r\n                            <div class=\"input-group\">\r\n                                <v-date-picker :popover=\"popover\" v-bind:name=\"DateofAssignmentTill\" :min-date=\"getMinDate()\" mode=\"dateTime\" :minute-increment=\"5\" class=\"timedate  input-group\" v-model=\"DateofAssignmentTill\">\r\n                                    <template v-slot=\"{ inputValue, togglePopover }\">\r\n                                        <input placeholder=\"M/D/YYYY h:mm A\" @click=\"togglePopover()\" v-bind:class=\"{'form-control' : true}\" :value=\"inputValue\" v-on=\"inputEvents\" />\r\n                                        <div @click=\"togglePopover()\" class=\"input-group-append\"><span class=\"input-group-text\"><em class=\"fa fa-calendar\"></em></span></div>\r\n                                    </template>\r\n                                </v-date-picker>\r\n                            </div>\r\n                        </template>\r\n                    </dynamic-form>\r\n                    <SearchAsset v-if=\"DataLoaded\" :GetParentDetails=\"GetParentDetails\" @GetDetailsofParent=\"GetDetails\" @AssestArrayData=\"AssestArrayData\"></SearchAsset>\r\n                    <div class=\"row flex-row-reverse py-3\">\r\n                        <div class=\"col-lg-6 text-right\">\r\n                            <a href=\"javascript:void(0);\" v-on:click=\"SubmitData\" class=\"btn btn-success formbtn text-white mr-1\" :title=\"$t('Save')\"><i class=\"fa fa-save pr-2\"></i>\r\n                                <span>{{$t('Save')}}</span></a>\r\n                            <a href=\"javascript:;\" @click=\"onCancel()\" :title=\"$t('Cancel')\" class=\"btn btn-danger formbtn text-white\"><i class=\"fa fa-close pr-2\"></i><span>{{$t('Cancel')}}</span></a>\r\n                        </div>\r\n                        <div class=\"col-lg-6\">\r\n                            <div class=\"py-2\">\r\n                                <small class=\"text-danger\">{{$t('MandatoryString')}}</small>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    </section>\r\n</template>\r\n\r\n<script>\r\nimport DataService from '../../service/DataService';\r\nimport SearchAsset from '../../components/Modal/SearchAsset.vue'\r\n\r\nexport default {\r\n    components: {\r\n        SearchAsset\r\n    },\r\n    data() {\r\n        return {\r\n            DataLoaded: 0,\r\n            isLoading: false,\r\n            UsersData: [],\r\n            DateofAssignment: '',\r\n            Users: '',\r\n            Remarks: '',\r\n            DateofAssignmentTill: '',\r\n            Groupname: '',\r\n            Users1: '',\r\n            Users2: '',\r\n            popover: {\r\n                visibility: 'click'\r\n            },\r\n            UserId: null,\r\n            GetParentDetails: null,\r\n            SelfCheckout:null,\r\n            RequestFrom :'',\r\n            isUsedFor :'',\r\n            selectedOption:'',\r\n            checked:true,\r\n            unchecked:false,\r\n            txtAssignUserType:'User',\r\n            disabled:false,           \r\n            dataArray:[],\r\n            buttons:[],\r\n            pendingItem:'',\r\n            FormSchema: [\r\n                {\r\n                    layoutType: \"four\",\r\n                    Data: [{\r\n                            astype: \"SelectField\",\r\n                            label: this.$t('Departments'),\r\n                            name: \"Departments\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            disabled: false,\r\n                            config: {\r\n                                options: [],\r\n                                onChange: this.GetCompanyUsers\r\n                            },\r\n                            validationRules: {\r\n                                \"required\": false\r\n                            }\r\n                        },\r\n                        {\r\n                            astype: \"RadioField\",\r\n                            label: this.$t('AssignTo'),\r\n                            name: \"AssignTo\",\r\n                            value: \"User\",\r\n                            placeholder: \"\",\r\n                            config: {\r\n                                options: [{\r\n                                    value: \"User\",\r\n                                    name: \"User\"\r\n                                }, {\r\n                                    value: \"Client\",\r\n                                    name: \"Client\"\r\n                                }],\r\n                                onChange: this.AssignUserType\r\n                            },\r\n                            validationRules: {\r\n                                \"required\": true\r\n                            }\r\n                        },\r\n                        {\r\n                            astype: \"SelectField\",\r\n                            label: this.$t('SelectUser'),\r\n                            name: \"User\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            visibility: true,\r\n                            validationRules: {\r\n                                \"required\": true\r\n                            },\r\n                            config: {\r\n                                options: []\r\n                            }\r\n                        },\r\n                        {\r\n                            astype: \"SelectField\",\r\n                            label: this.$t('ExistingClient'),\r\n                            name: \"Client\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            visibility: false,\r\n                            validationRules: {\r\n                                \"required\": true\r\n                            },\r\n                            config: {\r\n                                options: []\r\n                            }\r\n                        },\r\n                        {\r\n                            astype: \"SelectField\",\r\n                            label: this.$t('NotificationUser'),\r\n                            name: \"NotificationUser\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            validationRules: {\r\n                                \"required\": false\r\n                            },\r\n                            config: {\r\n                                options: []\r\n                            },\r\n                        },\r\n                        {\r\n                            astype: \"slotField\",\r\n                            label: this.$t('DateofAssignmentt'),\r\n                            name: \"DateofAssignment\",\r\n                            value: '',\r\n                            placeholder: \"\",\r\n                            validationRules: \"required\",\r\n                            config: {\r\n                                format: \"MM/DD/YYYY HH:MM A\",\r\n                                minDate: (new Date())\r\n                            }\r\n                        },\r\n                        {\r\n                            astype: \"slotField\",\r\n                            label: this.$t('DateofAssignmentTilll'),\r\n                            name: \"DateofAssignmentTill\",\r\n                            value: '',\r\n                            placeholder: \"\",\r\n                            validationRules: \"required\",\r\n                            config: {\r\n                                format: \"MM/DD/YYYY HH:MM A\",\r\n                                minDate: (new Date())\r\n                            }\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    Data: [{\r\n                        astype: \"TextAreaField\",\r\n                        label: this.$t('Remarks'),\r\n                        name: \"Remarks\",\r\n                        value: \"\",\r\n                        placeholder: \"\",\r\n                        validationRules: \"\",\r\n                        config: {\r\n                            rows: 5\r\n                        }\r\n                    }]\r\n                }\r\n            ],\r\n        }\r\n    },\r\n    created: async function () {\r\n        await this.GetDepartment();\r\n        await this.GetNotificationUser();\r\n        await this.GetCompanyUsers(); \r\n        await this.GetCompanyClients();        \r\n        this.UserId=this.GetUserInfo.ID;       \r\n        if(this.$route.params.reqForm=='myitems'){           \r\n            (this.FormSchema)[0].Data[2].value=this.UserId;\r\n        }\r\n        else if(this.$route.params.reqForm=='pendingRequest'){           \r\n            (this.FormSchema)[0].Data[2].value=this.UserId;\r\n            this.pendingItem= this.$route.params.items;\r\n            if(this.pendingItem !=null && this.pendingItem !='undefined'){\r\n                (this.FormSchema)[0].Data[0].value=this.pendingItem.DEPARTMENT_ID;                \r\n            }            \r\n        }         \r\n        this.DataLoaded=1;      \r\n        this.DateofAssignmentTill = new Date();\r\n        this.DateofAssignmentTill = this.DateofAssignmentTill.setDate(this.DateofAssignmentTill.getDate() + 7);\r\n        //this.FormSchema[0].Data[6].value = this.DateofAssignmentTill.setDate(this.DateofAssignmentTill.getDate() + 7);\r\n        //this.FormSchema[0].Data[5].value = new Date();\r\n        this.DateofAssignment = new Date();\r\n    },\r\n    methods: {\r\n        AssignUserType: async function (event, field) {\r\n            field.value = event.target.getAttribute('data-value');\r\n            if (event.target.attributes.id.value == 'AssignTo_1') {\r\n                (this.FormSchema)[0].Data[2].visibility = false;\r\n                (this.FormSchema)[0].Data[3].visibility = true;\r\n                (this.FormSchema)[0].Data[0].disabled = true;\r\n                // vm.$refs.ProductAssignmentForm.fields.Departments.failed=false;\r\n                //(vm.FormSchema)[0].Data[0].validationRules.required=false;        \r\n            } else {\r\n                (this.FormSchema)[0].Data[2].visibility = true;\r\n                (this.FormSchema)[0].Data[3].visibility = false;\r\n                (this.FormSchema)[0].Data[0].disabled = false;\r\n                //vm.$refs.ProductAssignmentForm.fields.Departments.failed=true;\r\n                //(vm.FormSchema)[0].Data[0].validationRules.required=true;\r\n            }\r\n        },\r\n        BackTolist: function () {\r\n            this.$router.push({\r\n                name: 'ProductAssignment'\r\n            });\r\n        },\r\n        onCancel: function () {\r\n            this.$router.push({\r\n                name: 'ProductAssignment'\r\n            });\r\n        },\r\n        GetDepartment: async function () {\r\n            let url = `includeInactiveStatus=true&isTicketHandler=false`;\r\n            await DataService.GetDepartment(url).then(response => {\r\n                response.data.forEach((item) => {\r\n                    (this.FormSchema)[0].Data[0].config.options.push({\r\n                        name: `${item.department_name}`,\r\n                        value: `${item.department_id}`\r\n                    })\r\n                })\r\n            });\r\n        },\r\n        GetNotificationUser: async function () {\r\n            let url = `moduleName=ASSETASSIGNMENT&department_ids=`;\r\n            await DataService.GetNotficationUsers(url).then(response => {\r\n                response.data.data.forEach((item) => {\r\n                    (this.FormSchema)[0].Data[4].config.options.push({\r\n                        name: `${item.NAME}`,\r\n                        value: `${item.USER_ID}`\r\n                    })\r\n                })\r\n            });\r\n        },\r\n        GetCompanyUsers: async function () {\r\n            var vm = this;\r\n            vm.isLoading = true;\r\n            var department_ids = (vm.FormSchema)[0].Data[0].value;\r\n            let url = `moduleName=ASSETASSIGNMENT&department_ids=${department_ids}`;\r\n            await DataService.GetCompanyUsers(url).then(response => {\r\n                this.UsersData = response.data;\r\n                response.data.forEach((item) => {\r\n                    (this.FormSchema)[0].Data[2].config.options.push({\r\n                        name: `${item.USERNAME}`,\r\n                        value: `${item.USER_ID}`\r\n                    })\r\n                    vm.isLoading = false;\r\n                })\r\n                if (response.data.length <= 0) {\r\n                    (this.FormSchema)[0].Data[2].config.options = [];\r\n                    vm.isLoading = false;\r\n                }\r\n            });\r\n        },\r\n        GetCompanyClients: async function () {\r\n            let url = `moduleName=ASSETASSIGNMENT&department_ids=`;\r\n            await DataService.GetCompanyClients(url).then(response => {\r\n                response.data.forEach((item) => {\r\n                    (this.FormSchema)[0].Data[3].config.options.push({\r\n                        name: `${item.USERNAME}`,\r\n                        value: `${item.user_id}`\r\n                    })\r\n                })\r\n            });\r\n        },\r\n        GetDetails: function () {\r\n            var vm = this;\r\n            vm.GetParentDetails = {\r\n                DepartmentID: vm.txtDepartment,\r\n                UserID: vm.Users,\r\n                GetNotificationUserID: vm.Users1,\r\n                FromDate: vm.DateofAssignment,\r\n                TillDate: vm.DateofAssignmentTill,\r\n                SelfCheckout:null,\r\n                RequestFrom :'assetassignment',\r\n                isUsedFor :'search',\r\n                pendingItems:vm.pendingItem,                \r\n            }\r\n            sessionStorage.setItem(\"GetParentDetails\", JSON.stringify(vm.GetParentDetails));\r\n        },\r\n        AssestArrayData(AssestArrayData){                        \r\n            this.dataArray=AssestArrayData; \r\n        },\r\n        SubmitData:function(){\r\n           var vm=this;  \r\n            if((vm.FormSchema)[0].Data[1].value=='Client'){\r\n                vm.$refs.ProductAssignmentForm.fields.Departments.failed=false;\r\n                (vm.FormSchema)[0].Data[0].validationRules.required=false;\r\n            }else{\r\n                vm.$refs.ProductAssignmentForm.fields.Departments.failed=true;\r\n                (vm.FormSchema)[0].Data[0].validationRules.required=false;\r\n            }    \r\n            vm.$refs.ProductAssignmentForm.validate().then(result=>{\r\n                if(vm.$refs.ProductAssignmentForm.errors['Assign To'].length>0){\r\n                    result=true;\r\n                }\r\n                if (vm.FormSchema[0].Data[2].value == \"\") {\r\n                    result = false;\r\n                }\r\n                if (result) {\r\n                    var formData = new FormData();\r\n                    var files = [];\r\n                    let uniquenames = \"\";\r\n                    var issueToName = \"\";\r\n                    for (let i = 0; i < vm.dataArray.length; i++) {\r\n                        if (vm.dataArray.length == 1) {\r\n                            uniquenames = vm.dataArray[0].AssetUniqueName;\r\n                        } else {\r\n                            uniquenames = uniquenames + \",\" + vm.dataArray[i].AssetUniqueName;\r\n                        }\r\n                    }\r\n                    vm.UsersData.forEach(item => {\r\n                        if (item.USER_ID == parseInt((vm.FormSchema)[0].Data[2].value)) {\r\n                            issueToName = item.USERNAME;\r\n                        }\r\n                    })\r\n                    var mainObj = {\r\n                        UserId: (vm.FormSchema)[0].Data[1].value == 'Client' ? (vm.FormSchema)[0].Data[3].value : (vm.FormSchema)[0].Data[2].value,\r\n                        DepartmentId: (vm.FormSchema)[0].Data[0].value,\r\n                        AssignedFrom: null,\r\n                        AssignedTill: null,\r\n                        AssignedFromDateTime: vm.$options.filters.formatDateTimeYYMMDD(vm.DateofAssignment),\r\n                        AssignedTillDateTime: vm.$options.filters.formatDateTimeYYMMDD(vm.DateofAssignmentTill),\r\n                        StartTime: null,\r\n                        EndTime: null,\r\n                        Comment: (vm.FormSchema)[1].Data[0].value,\r\n                        NotificationUsers: (vm.FormSchema)[0].Data[4].value,\r\n                        RequestFrom: 'AssetAssign',\r\n                        IsRequestFromRequisition: false,\r\n                        IssueToName: issueToName,\r\n                        RFID: 0,\r\n                        GroupRequistionAssestInfostring: vm.dataArray,\r\n                        itemNames: uniquenames\r\n                    };\r\n                    if (files.length > 0) {\r\n                        formData.append(\"postString\", JSON.stringify(mainObj));\r\n                    } else {\r\n                        formData.append(\"postString\", JSON.stringify(mainObj));\r\n                    }\r\n                    if (vm.dataArray.length > 0) {\r\n                        DataService.SaveGroupAssign(formData).then(response => {\r\n                            if (response.data.status == 0) {\r\n                                if (response.data.existIds == '') {\r\n                                    vm.ShowAlert(vm.$t(\"Itemassignedsuccessfully\"), \"success\", vm.$t('Alert'));\r\n                                    if (vm.$route.query.reqForm == 'MyItems') {\r\n\r\n                                    } else if (vm.$route.query.reqForm == 'pendingRequest') {\r\n\r\n                                    } else {\r\n                                        vm.onCancel();\r\n                                    }\r\n                                }\r\n                            } else {\r\n                                vm.ShowAlert(vm.$t(\"ErrorWhileProcessingRequest\"), \"failure\", vm.$t('Alert'));\r\n                            }\r\n                        });\r\n                    } else {\r\n                        vm.ShowAlert(vm.$t(\"AddAtLeastOne\"), \"failure\", vm.$t('Alert'));\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n</script>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Manage.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Manage.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Manage.vue?vue&type=template&id=bd1170c6&lang=en&\"\nimport script from \"./Manage.vue?vue&type=script&lang=js&\"\nexport * from \"./Manage.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}