{"version":3,"sources":["webpack:///./src/views/ProductAssignment/Manage.vue","webpack:///src/views/ProductAssignment/Manage.vue","webpack:///./src/views/ProductAssignment/Manage.vue?948b","webpack:///./src/views/ProductAssignment/Manage.vue?3c2b"],"names":["render","_vm","this","_c","_self","staticClass","attrs","isLoading","_v","_s","$t","on","BackTolist","ref","DataLoaded","buttons","FormSchema","_e","GetParentDetails","GetDetails","AssestArrayData","SubmitData","$event","onCancel","staticRenderFns","components","SearchAsset","data","UsersData","DateofAssignment","Users","Remarks","DateofAssignmentTill","Groupname","Users1","Users2","popover","visibility","UserId","SelfCheckout","RequestFrom","isUsedFor","selectedOption","checked","unchecked","txtAssignUserType","disabled","dataArray","layoutType","Data","astype","label","name","value","placeholder","config","options","validationRules","onChange","AssignUserType","format","minDate","Date","rows","isVisible","type","class","text","created","GetDepartment","GetNotificationUser","GetCompanyUsers","GetCompanyClients","GetUserInfo","ID","setDate","getDate","methods","event","field","target","getAttribute","attributes","id","vm","$refs","ProductAssignmentForm","fields","Departments","failed","required","$router","push","url","DataService","then","response","forEach","item","department_name","department_id","GetNotficationUsers","NAME","USER_ID","USERNAME","user_id","DepartmentID","txtDepartment","UserID","GetNotificationUserID","FromDate","TillDate","sessionStorage","setItem","JSON","stringify","validate","result","errors","length","formData","FormData","files","uniquenames","issueToName","i","AssetUniqueName","parseInt","mainObj","DepartmentId","AssignedFrom","AssignedTill","AssignedFromDateTime","$options","filters","formatDateYear","AssignedTillDateTime","StartTime","EndTime","Comment","NotificationUsers","IsRequestFromRequisition","IssueToName","RFID","GroupRequistionAssestInfostring","itemNames","append","SaveGroupAssign","status","existIds","ShowAlert","$route","query","reqForm","component"],"mappings":"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","file":"js/chunk-2d21f0b8.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('section',{staticClass:\"main-content\"},[_c('loader',{attrs:{\"is-visible\":_vm.isLoading}}),_c('div',[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12 padding-t_8\"},[_c('div',{staticClass:\"theme-primary partition-full\"},[_c('span',{staticClass:\"p-name text-white\"},[_vm._v(_vm._s(_vm.$t('ASSET_ASSIGN_Desc')))]),_c('span',{staticClass:\"p-actions float-right\"},[_c('a',{staticClass:\"p-action-btn text-white\",attrs:{\"title\":\"BacktoList\"},on:{\"click\":_vm.BackTolist}},[_c('em',{staticClass:\"fa fa-angle-double-left pr-2\"}),_c('br'),_c('span',[_vm._v(_vm._s(_vm.$t('BacktoList')))])])])])])])]),_c('div',{staticClass:\"border p-3\"},[_c('div',{staticClass:\"col-md-12 p-0\",attrs:{\"id\":\"dynmicForm\"}},[_c('Form',{ref:\"ProductAssignmentForm\"},[(_vm.DataLoaded)?_c('dynamic-form',{attrs:{\"lang\":\"en\",\"buttons\":_vm.buttons,\"schema\":_vm.FormSchema}}):_vm._e(),(_vm.DataLoaded)?_c('SearchAsset',{attrs:{\"GetParentDetails\":_vm.GetParentDetails},on:{\"GetDetailsofParent\":_vm.GetDetails,\"AssestArrayData\":_vm.AssestArrayData}}):_vm._e(),_c('div',{staticClass:\"row flex-row-reverse py-3\"},[_c('div',{staticClass:\"col-lg-6 text-right\"},[_c('a',{staticClass:\"btn btn-success formbtn text-white mr-1\",attrs:{\"href\":\"javascript:void(0);\",\"title\":_vm.$t('Save')},on:{\"click\":_vm.SubmitData}},[_c('i',{staticClass:\"fa fa-save pr-2\"}),_c('span',[_vm._v(_vm._s(_vm.$t('Save')))])]),_c('a',{staticClass:\"btn btn-danger formbtn text-white\",attrs:{\"href\":\"javascript:;\",\"title\":_vm.$t('Cancel')},on:{\"click\":function($event){return _vm.onCancel()}}},[_c('i',{staticClass:\"fa fa-close pr-2\"}),_c('span',[_vm._v(_vm._s(_vm.$t('Cancel')))])])]),_c('div',{staticClass:\"col-lg-6\"},[_c('div',{staticClass:\"py-2\"},[_c('small',{staticClass:\"text-danger\"},[_vm._v(_vm._s(_vm.$t('MandatoryString')))])])])])],1)],1)])],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>    \r\n    <section class=\"main-content\">\r\n        <loader :is-visible=\"isLoading\"></loader>\r\n        <div>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12 padding-t_8\">\r\n                    <div class=\"theme-primary partition-full\">\r\n                        <span class=\"p-name text-white\">{{$t('ASSET_ASSIGN_Desc')}}</span> \r\n                        <span class=\"p-actions float-right\">\r\n                            <a  title=\"BacktoList\" class=\"p-action-btn text-white\" @click=\"BackTolist\"><em class=\"fa fa-angle-double-left pr-2\"></em><br>\r\n                                <span>{{$t('BacktoList')}}</span>\r\n                            </a>\r\n                        </span>                       \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"border p-3\">\r\n            <div class=\"col-md-12 p-0\" id=\"dynmicForm\">                    \r\n                <Form ref=\"ProductAssignmentForm\">\r\n                    <dynamic-form lang=\"en\" v-if=\"DataLoaded\" :buttons=\"buttons\"  :schema=\"FormSchema\"></dynamic-form> \r\n                    <SearchAsset v-if=\"DataLoaded\"  :GetParentDetails=\"GetParentDetails\" @GetDetailsofParent=\"GetDetails\" @AssestArrayData=\"AssestArrayData\"></SearchAsset>\r\n                    <div class=\"row flex-row-reverse py-3\">\r\n                        <div class=\"col-lg-6 text-right\">                            \r\n                            <a  href=\"javascript:void(0);\"  v-on:click=\"SubmitData\"\r\n                                class=\"btn btn-success formbtn text-white mr-1\" :title=\"$t('Save')\"><i class=\"fa fa-save pr-2\"></i>\r\n                                <span>{{$t('Save')}}</span></a>\r\n                            <a href=\"javascript:;\" @click=\"onCancel()\"  :title=\"$t('Cancel')\" class=\"btn btn-danger formbtn text-white\"><i class=\"fa fa-close pr-2\"></i><span>{{$t('Cancel')}}</span></a>\r\n                        </div>\r\n                        <div class=\"col-lg-6\">\r\n                            <div class=\"py-2\">\r\n                                <small class=\"text-danger\">{{$t('MandatoryString')}}</small>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Form> \r\n            </div> \r\n        </div>\r\n    </section>\r\n</template>\r\n<script>\r\nimport DataService from '../../service/DataService';\r\nimport SearchAsset from '../../components/Modal/SearchAsset.vue'\r\n\r\nexport default{\r\n     components:{SearchAsset},\r\n    data(){\r\n        return{  \r\n            DataLoaded:0,        \r\n            isLoading:false,               \r\n            UsersData:[],         \r\n            DateofAssignment:'',\r\n            Users:'',          \r\n            Remarks:'',\r\n            DateofAssignmentTill:'',\r\n            Groupname:'',\r\n            Users1:'',\r\n            Users2:'',      \r\n            popover: {\r\n                visibility: 'click'\r\n            },\r\n            UserId:null,\r\n            GetParentDetails: null,\r\n            SelfCheckout:null,\r\n            RequestFrom :'',\r\n            isUsedFor :'',\r\n            selectedOption:'',\r\n            checked:true,\r\n            unchecked:false,\r\n            txtAssignUserType:'User',\r\n            disabled:false,           \r\n            dataArray:[],\r\n            buttons:[],\r\n            FormSchema: [\r\n                {\r\n                    layoutType: \"four\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"SelectField\",\r\n                            label: this.$t('Departments'),\r\n                            name: \"Departments\",\r\n                            value: \"\",\r\n                            placeholder: \"\",                            \r\n                            disabled: false, \r\n                            config: {  \r\n                                options: []\r\n                            },\r\n                            validationRules: {\"required\": true}                            \r\n                        },\r\n                        {\r\n                          astype: \"RadioField\",\r\n                          label: this.$t('AssignTo'),\r\n                          name: \"AssignTo\",\r\n                          value: \"User\",\r\n                          placeholder: \"\",\r\n                          config:{\r\n                            options: [{value: \"User\", name: \"User\"},{value: \"Client\", name: \"Client\"}],                          \r\n                            onChange: this.AssignUserType                       \r\n                          },                        \r\n                          validationRules: {\"required\": true}                          \r\n                        },\r\n                        {\r\n                            astype: \"SelectField\",\r\n                            label: this.$t('SelectUser'),\r\n                            name: \"User\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            visibility: true,\r\n                            validationRules: { \"required\": true},\r\n                            config: {  \r\n                                options: []\r\n                            }\r\n                        },\r\n                        {\r\n                            astype: \"SelectField\",\r\n                            label: this.$t('ExistingClient'),\r\n                            name: \"Client\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            visibility: false,\r\n                            validationRules: { \"required\": true},\r\n                            config: {  \r\n                                options: []\r\n                            }\r\n                        },\r\n                        {\r\n                            astype: \"SelectField\",\r\n                            label: this.$t('NotificationUser'),\r\n                            name: \"NotificationUser\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            validationRules: { \"required\": false},\r\n                            config: {                               \r\n                                options: []\r\n                            },\r\n                        },\r\n                        {\r\n                          astype: \"DateField\",\r\n                          label: this.$t('DateofAssignmentt'),\r\n                          name: \"DateofAssignment\",\r\n                          value: '',\r\n                          placeholder: \"\",\r\n                          validationRules: \"required\",\r\n                          config:{\r\n                            format: \"MM/DD/YYYY HH:MM A\",\r\n                            minDate: (new Date())                           \r\n                          }\r\n                        },\r\n                        {\r\n                          astype: \"DateField\",\r\n                          label: this.$t('DateofAssignmentTilll'),\r\n                          name: \"DateofAssignmentTill\",\r\n                          value: '',\r\n                          placeholder: \"\",\r\n                          validationRules: \"required\",\r\n                          config:{\r\n                            format: \"MM/DD/YYYY HH:MM A\",\r\n                            minDate: (new Date())                           \r\n                          }\r\n                        }                   \r\n                    ]\r\n                },\r\n                {\r\n                    Data: [\r\n                        {\r\n                            astype: \"TextAreaField\",\r\n                            label: this.$t('Remarks'),\r\n                            name: \"Remarks\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            validationRules: \"\",\r\n                            config: {\r\n                                rows:5\r\n                            }\r\n                        }\r\n                    ]\r\n                }       \r\n            ],\r\n            buttons: [\r\n                {\r\n                    isVisible:false,\r\n                    type: \"submit\",\r\n                    class: \"btn btn-success\",\r\n                    text: \"<i class='fa fa-save pr-2'></i>Save\",\r\n                }\r\n            ],           \r\n        }\r\n    },\r\n    created: async function(){         \r\n        await this.GetDepartment();\r\n        await this.GetNotificationUser();\r\n        await this.GetCompanyUsers(); \r\n        await this.GetCompanyClients();\r\n        this.UserId=this.GetUserInfo.ID;\r\n        this.DataLoaded=1;    \r\n        debugger\r\n        this.DateofAssignmentTill = new Date();\r\n        this.FormSchema[0].Data[6].value = this.DateofAssignmentTill.setDate(this.DateofAssignmentTill.getDate() + 7);\r\n        this.FormSchema[0].Data[5].value = new Date();\r\n    },    \r\n    methods:{       \r\n        AssignUserType:async function(event,field){            \r\n            field.value=event.target.getAttribute('data-value');                                     \r\n            if(event.target.attributes.id.value =='AssignTo_1'){\r\n                (this.FormSchema)[0].Data[2].visibility=false;\r\n                (this.FormSchema)[0].Data[3].visibility=true;\r\n                (this.FormSchema)[0].Data[0].disabled=true; \r\n                vm.$refs.ProductAssignmentForm.fields.Departments.failed=false;\r\n               (vm.FormSchema)[0].Data[0].validationRules.required=false;        \r\n            }else{                   \r\n                (this.FormSchema)[0].Data[2].visibility=true;\r\n                (this.FormSchema)[0].Data[3].visibility=false; \r\n                (this.FormSchema)[0].Data[0].disabled=false; \r\n                vm.$refs.ProductAssignmentForm.fields.Departments.failed=true;\r\n                (vm.FormSchema)[0].Data[0].validationRules.required=true;\r\n            }\r\n        },\r\n        BackTolist:function(){\r\n            this.$router.push({name:'ProductAssignment'});\r\n        },\r\n        onCancel:function(){\r\n            this.$router.push({name:'ProductAssignment'});\r\n        },\r\n        GetDepartment:async function(){\r\n            let url=`includeInactiveStatus=true&isTicketHandler=false`;\r\n            await DataService.GetDepartment(url).then(response=>{\r\n                response.data.forEach((item) => {\r\n                    (this.FormSchema)[0].Data[0].config.options.push({\r\n                        name:`${item.department_name}`,\r\n                        value:`${item.department_id}` \r\n                    })\r\n                }) \r\n            });\r\n        },\r\n        GetNotificationUser:async function(){            \r\n            let url=`moduleName=ASSETASSIGNMENT&department_ids=`;\r\n            await DataService.GetNotficationUsers(url).then(response=>{  \r\n                response.data.data.forEach((item) => {\r\n                    (this.FormSchema)[0].Data[4].config.options.push({\r\n                        name:`${item.NAME}`,\r\n                        value:`${item.USER_ID}` \r\n                    })\r\n                })\r\n            });\r\n        },\r\n        GetCompanyUsers:async function(){\r\n            let url=`moduleName=ASSETASSIGNMENT`;\r\n            await DataService.GetCompanyUsers(url).then(response=>{\r\n                this.UsersData=response.data;\r\n                response.data.forEach((item) => {\r\n                    (this.FormSchema)[0].Data[2].config.options.push({\r\n                        name:`${item.USERNAME}`,\r\n                        value:`${item.USER_ID}` \r\n                    })\r\n                })\r\n            });\r\n        }, \r\n        GetCompanyClients:async function(){            \r\n            let url=`moduleName=ASSETASSIGNMENT&department_ids=`;\r\n            await DataService.GetCompanyClients(url).then(response=>{\r\n                response.data.forEach((item) => {\r\n                    (this.FormSchema)[0].Data[3].config.options.push({\r\n                        name:`${item.USERNAME}`,\r\n                        value:`${item.user_id}` \r\n                    })\r\n                })\r\n            });\r\n        },\r\n        GetDetails: function(){\r\n            var vm = this;            \r\n            vm.GetParentDetails = {\r\n                DepartmentID: vm.txtDepartment,\r\n                UserID: vm.Users,\r\n                GetNotificationUserID: vm.Users1,\r\n                FromDate: vm.DateofAssignment,\r\n                TillDate: vm.DateofAssignmentTill,\r\n                SelfCheckout:null,\r\n                RequestFrom :'assetassignment',\r\n                isUsedFor :'search',                \r\n            }\r\n            sessionStorage.setItem(\"GetParentDetails\",JSON.stringify(vm.GetParentDetails));\r\n        },        \r\n        AssestArrayData(AssestArrayData){                        \r\n            this.dataArray=AssestArrayData; \r\n        },\r\n        SubmitData:function(){ \r\n            var vm=this;  \r\n            if((vm.FormSchema)[0].Data[1].value=='Client'){\r\n                vm.$refs.ProductAssignmentForm.fields.Departments.failed=false;\r\n                (vm.FormSchema)[0].Data[0].validationRules.required=false;\r\n            }else{\r\n                vm.$refs.ProductAssignmentForm.fields.Departments.failed=true;\r\n                (vm.FormSchema)[0].Data[0].validationRules.required=true;\r\n            }    \r\n            vm.$refs.ProductAssignmentForm.validate().then(result=>{\r\n                if(vm.$refs.ProductAssignmentForm.errors['Assign To'].length>0){\r\n                    result=true;\r\n                } \r\n            if(result){      \r\n                var formData = new FormData();\r\n                var files = [];\r\n                let uniquenames = \"\";\r\n                var issueToName=\"\";\r\n                for (let i = 0; i < vm.dataArray.length; i++) {\r\n                    if (vm.dataArray.length == 1) {\r\n                        uniquenames = vm.dataArray[0].AssetUniqueName;\r\n                    }\r\n                    else { \r\n                         uniquenames = uniquenames + \",\" + vm.dataArray[i].AssetUniqueName;\r\n                        }\r\n                }  \r\n                vm.UsersData.forEach(item=>{                    \r\n                    if(item.USER_ID==parseInt((vm.FormSchema)[0].Data[2].value)){\r\n                        issueToName=item.USERNAME;\r\n                    }\r\n                }) \r\n                var mainObj = {\r\n                        UserId: (vm.FormSchema)[0].Data[1].value =='Client'?(vm.FormSchema)[0].Data[3].value : (vm.FormSchema)[0].Data[2].value,\r\n                        DepartmentId: (vm.FormSchema)[0].Data[0].value,\r\n                        AssignedFrom: null,\r\n                        AssignedTill: null,\r\n                        AssignedFromDateTime: vm.$options.filters.formatDateYear((vm.FormSchema)[0].Data[5].value),\r\n                        AssignedTillDateTime: vm.$options.filters.formatDateYear((vm.FormSchema)[0].Data[6].value),\r\n                        StartTime: null,\r\n                        EndTime: null,\r\n                        Comment: (vm.FormSchema)[1].Data[0].value,\r\n                        NotificationUsers: (vm.FormSchema)[0].Data[4].value,\r\n                        RequestFrom: 'AssetAssign',\r\n                        IsRequestFromRequisition: false,\r\n                        IssueToName: issueToName,\r\n                        RFID:0,\r\n                        GroupRequistionAssestInfostring:vm.dataArray,\r\n                        itemNames:uniquenames\r\n                };\r\n                debugger                                       \r\n                if(files.length>0){\r\n                    formData.append(\"postString\", JSON.stringify(mainObj));\r\n                }else{\r\n                    formData.append(\"postString\", JSON.stringify(mainObj));\r\n                }                \r\n                if(vm.dataArray.length>0){                  \r\n                    DataService.SaveGroupAssign(formData).then(response=>{ \r\n                    if(response.data.status==0){                        \r\n                        if(response.data.existIds==''){\r\n                            vm.ShowAlert(vm.$t(\"Item assigned successfully\"), \"success\", vm.$t('Alert'));\r\n                            if(vm.$route.query.reqForm=='MyItems'){\r\n                                \r\n                            }else if(vm.$route.query.reqForm=='pendingRequest'){\r\n\r\n                            }else{\r\n                                vm.onCancel();\r\n                            }\r\n                        }\r\n                    }else{\r\n                        vm.ShowAlert(vm.$t(\"ErrorWhileProcessingRequest\"), \"failure\", vm.$t('Alert'));\r\n                    }\r\n                });\r\n                }else{\r\n                    vm.ShowAlert(vm.$t(\"AddAtLeastOne\"), \"failure\", vm.$t('Alert'));\r\n                }                 \r\n            }\r\n           }) \r\n        }\r\n    }\r\n}\r\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Manage.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Manage.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Manage.vue?vue&type=template&id=55f6e936&\"\nimport script from \"./Manage.vue?vue&type=script&lang=js&\"\nexport * from \"./Manage.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}