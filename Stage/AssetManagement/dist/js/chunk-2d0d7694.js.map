{"version":3,"sources":["webpack:///./src/views/ItemGroupList/Manage.vue","webpack:///src/views/ItemGroupList/Manage.vue","webpack:///./src/views/ItemGroupList/Manage.vue?038a","webpack:///./src/views/ItemGroupList/Manage.vue?d654"],"names":["render","_vm","_c","_self","staticClass","attrs","isLoading","_v","_s","$t","DataLoaded","buttons","FormSchema","on","onSubmit","_e","staticRenderFns","data","Groupname","ReaderData","UsersData","Status","GroupDetail","Reader","Users","layoutType","Data","astype","label","name","value","placeholder","validationRules","config","options","rows","type","class","text","onClick","onCancel","created","GetDeviceList","$route","params","id","GetNotficationUsers","ManageItemsGroup","methods","DataService","then","response","forEach","item","push","url","NAME","DEPARTMENT_NAME","USER_ID","console","log","formfields","vm","jsonobj","GroupId","GroupName","LocationId","ReaderId","UserIds","GroupDetails","GroupDescription","StatusId","poststring","JSON","stringify","AddGroup","ShowAlert","$router","GetItemsGroupById","length","group_name","reader_id","user_ids","status_id","group_details"],"mappings":"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","file":"js/chunk-2d0d7694.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('section',{staticClass:\"main-content\"},[_c('loader',{attrs:{\"is-visible\":_vm.isLoading}}),_c('div',[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12 padding-t_8\"},[_c('div',{staticClass:\"theme-primary partition-full\"},[_c('span',{staticClass:\"p-name text-white\"},[_vm._v(_vm._s(_vm.$t('AddGroup')))])])])])]),_c('div',{staticClass:\"border p-3\"},[(_vm.DataLoaded)?_c('dynamic-form',{attrs:{\"lang\":\"en\",\"buttons\":_vm.buttons,\"schema\":_vm.FormSchema},on:{\"OnSubmit\":_vm.onSubmit}}):_vm._e(),_c('div',{staticClass:\"col-lg-6\"},[_c('small',{staticClass:\"text-danger\"},[_vm._v(_vm._s(_vm.$t('MandatoryString')))])])],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>    \r\n    <section class=\"main-content\">\r\n        <loader :is-visible=\"isLoading\"></loader>\r\n        <div>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12 padding-t_8\">\r\n                    <div class=\"theme-primary partition-full\">\r\n                        <span class=\"p-name text-white\">{{$t('AddGroup')}}</span>                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"border p-3\">           \r\n            <dynamic-form lang=\"en\" v-if=\"DataLoaded\" :buttons=\"buttons\" :schema=\"FormSchema\"\r\n                            v-on:OnSubmit=\"onSubmit\" >\r\n            </dynamic-form> \r\n            <div class=\"col-lg-6\">               \r\n                <small class=\"text-danger\">{{$t('MandatoryString')}}</small>               \r\n            </div>               \r\n        </div>\r\n    </section>\r\n</template>\r\n<script>\r\nimport DataService from '../../service/DataService';\r\nexport default{\r\n    data(){\r\n        return{\r\n            isLoading:false,\r\n            Groupname:'',\r\n            ReaderData:[],\r\n            UsersData:[],\r\n            Status:'',\r\n            GroupDetail:'',\r\n            Reader:'',\r\n            Users:'',\r\n            DataLoaded:0,\r\n            FormSchema: [\r\n                {\r\n                    layoutType: \"double\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"TextField\",\r\n                            label: this.$t('GroupName'),\r\n                            name: \"GroupName\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            validationRules: { \"required\": true},                            \r\n                        },\r\n                        {\r\n                            astype: \"SelectField\",\r\n                            label: this.$t('Reader'),\r\n                            name: \"Reader\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            validationRules: { \"required\": true},\r\n                            config: {\r\n                               // option_request_url:process.env.VUE_APP_API_URL+'/GetDeviceList',\r\n                                // token:this.GetUserInfo.Token,\r\n                                options: []\r\n                            },\r\n                        },\r\n                        {\r\n                            astype: \"SelectField\",\r\n                            label: this.$t('Users'),\r\n                            name: \"Users\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            validationRules: { \"required\": true},\r\n                            config: {                               \r\n                                options: []\r\n                            },\r\n                        },\r\n                        {\r\n                            astype: \"SelectField\",\r\n                            label: this.$t('Status'),\r\n                            name: \"Status\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            config: {\r\n                                options: [{value:\"1001\",name:'Active'},{value:\"1002\",name:'InActive'}]\r\n                            },\r\n                        }                        \r\n                    ]\r\n                },\r\n                {\r\n                    Data: [\r\n                        {\r\n                            astype: \"TextAreaField\",\r\n                            label: this.$t('GroupDetails'),\r\n                            name: \"GroupDescription\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            validationRules: \"\",\r\n                            config: {\r\n                                rows:5\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n            ],\r\n            buttons: [\r\n                {\r\n                    type: \"submit\",\r\n                    class: \"btn btn-success\",\r\n                    text: \"<i class='fa fa-save pr-2'></i>Save\",\r\n                },\r\n\r\n                {\r\n                    type: \"button\",\r\n                    class: \"btn btn-danger\",\r\n                    text: \"<i class='fa fa-close pr-2'></i>Cancel\",\r\n                    onClick: this.onCancel\r\n                }\r\n            ],\r\n        }  \r\n    },\r\n     created:async function(){  \r\n       await this.GetDeviceList();\r\n       if(this.$route.params.id !=null)\r\n       {\r\n           await this.GetNotficationUsers();\r\n           await this.ManageItemsGroup();\r\n       }\r\n        this.DataLoaded=1;\r\n    },\r\n    methods:{\r\n        GetDeviceList:async function(){   \r\n            debugger       \r\n            await  DataService.GetDeviceList().then(response=>{ \r\n                response.data.data.forEach((item) => {\r\n                    (this.FormSchema)[0].Data[1].config.options.push({\r\n                        name:`${item.name})`,\r\n                        value:`${item.value}` \r\n                    })\r\n                }) \r\n            });\r\n        },\r\n        GetNotficationUsers:async function(){            \r\n            var url=`moduleName=ASSETASSIGNMENT`;\r\n           await DataService.GetNotficationUsers(url).then(response=>{ \r\n                response.data.data.forEach((item) => {\r\n                    (this.FormSchema)[0].Data[2].config.options.push({\r\n                        name:`${item.NAME}(${item.DEPARTMENT_NAME})`,\r\n                        value:`${item.USER_ID}` \r\n                    })\r\n                }) \r\n                console.log((this.FormSchema)[0].Data[2].config.options);               \r\n            });\r\n        },\r\n        onSubmit:function(formfields){  \r\n            var vm=this;\r\n            var jsonobj={\r\n                GroupId:0, \r\n                GroupName:formfields.GroupName, \r\n                LocationId:0, \r\n                ReaderId:formfields.Reader, \r\n                UserIds:formfields.Users, \r\n                GroupDetails:formfields.GroupDescription,\r\n                StatusId:formfields.Status\r\n            }                    \r\n            var poststring=JSON.stringify(jsonobj);\r\n            DataService.AddGroup(poststring).then(response=>{                    \r\n            if(response.data=='insert'){\r\n                vm.ShowAlert(vm.$t('AddedSuccess',[vm.$t('Group_Item')]), \"success\", true,  vm.$t(\"Alert\")); \r\n                vm.onCancel();\r\n            }\r\n            else{\r\n                vm.ShowAlert(vm.$t(\"Something_Wrong\"), \"failure\", true, vm.$t('Alert'));\r\n            } \r\n        });  \r\n        },\r\n        onCancel:function(){\r\n            this.$router.push({name:'GroupListing'});\r\n        },\r\n        ManageItemsGroup:async function(){                      \r\n            var url=`id=${this.$route.params.id}`\r\n            await DataService.GetItemsGroupById(url).then(response=>{        \r\n                \r\n                    if(response.data.length>0){                    \r\n                    (this.FormSchema)[0].Data[0].value=response.data[0].group_name;\r\n                    (this.FormSchema)[0].Data[1].value=response.data[0].reader_id;\r\n                    (this.FormSchema)[0].Data[2].value=response.data[0].user_ids;                   \r\n                    (this.FormSchema)[0].Data[3].value=response.data[0].status_id;\r\n                    (this.FormSchema)[1].Data[0].value=response.data[0].group_details;\r\n                }                     \r\n                \r\n            })\r\n\r\n        }\r\n    }\r\n}\r\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Manage.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Manage.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Manage.vue?vue&type=template&id=00eb452d&\"\nimport script from \"./Manage.vue?vue&type=script&lang=js&\"\nexport * from \"./Manage.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}