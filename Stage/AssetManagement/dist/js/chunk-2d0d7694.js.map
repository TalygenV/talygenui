{"version":3,"sources":["webpack:///./src/views/ItemGroupList/Manage.vue","webpack:///src/views/ItemGroupList/Manage.vue","webpack:///./src/views/ItemGroupList/Manage.vue?038a","webpack:///./src/views/ItemGroupList/Manage.vue?d654"],"names":["render","_vm","this","_c","_self","staticClass","attrs","isLoading","_v","_s","$t","DataLoaded","buttons","FormSchema","on","onSubmit","_e","staticRenderFns","data","Groupname","ReaderData","UsersData","Status","GroupDetail","Reader","Users","layoutType","Data","astype","label","name","value","placeholder","validationRules","config","options","rows","type","class","text","onClick","onCancel","created","GetDeviceList","$route","params","id","GetNotficationUsers","ManageItemsGroup","methods","DataService","then","response","forEach","item","push","url","NAME","DEPARTMENT_NAME","USER_ID","console","log","formfields","vm","jsonobj","GroupId","GroupName","LocationId","ReaderId","UserIds","GroupDetails","GroupDescription","StatusId","poststring","JSON","stringify","AddGroup","ShowAlert","$router","GetItemsGroupById","length","group_name","reader_id","user_ids","status_id","group_details","component"],"mappings":"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","file":"js/chunk-2d0d7694.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('section',{staticClass:\"main-content\"},[_c('loader',{attrs:{\"is-visible\":_vm.isLoading}}),_c('div',[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12 padding-t_8\"},[_c('div',{staticClass:\"theme-primary partition-full\"},[_c('span',{staticClass:\"p-name text-white\"},[_vm._v(_vm._s(_vm.$t('AddGroup')))])])])])]),_c('div',{staticClass:\"border p-3\"},[(_vm.DataLoaded)?_c('dynamic-form',{attrs:{\"lang\":\"en\",\"buttons\":_vm.buttons,\"schema\":_vm.FormSchema},on:{\"OnSubmit\":_vm.onSubmit}}):_vm._e(),_c('div',{staticClass:\"col-lg-6\"},[_c('small',{staticClass:\"text-danger\"},[_vm._v(_vm._s(_vm.$t('MandatoryString')))])])],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>    \r\n    <section class=\"main-content\">\r\n        <loader :is-visible=\"isLoading\"></loader>\r\n        <div>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12 padding-t_8\">\r\n                    <div class=\"theme-primary partition-full\">\r\n                        <span class=\"p-name text-white\">{{$t('AddGroup')}}</span>                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"border p-3\">           \r\n            <dynamic-form lang=\"en\" v-if=\"DataLoaded\" :buttons=\"buttons\" :schema=\"FormSchema\"\r\n                            v-on:OnSubmit=\"onSubmit\" >\r\n            </dynamic-form> \r\n            <div class=\"col-lg-6\">               \r\n                <small class=\"text-danger\">{{$t('MandatoryString')}}</small>               \r\n            </div>               \r\n        </div>\r\n    </section>\r\n</template>\r\n<script>\r\nimport DataService from '../../service/DataService';\r\nexport default{\r\n    data(){\r\n        return{\r\n            isLoading:false,\r\n            Groupname:'',\r\n            ReaderData:[],\r\n            UsersData:[],\r\n            Status:'',\r\n            GroupDetail:'',\r\n            Reader:'',\r\n            Users:'',\r\n            DataLoaded:0,\r\n            FormSchema: [\r\n                {\r\n                    layoutType: \"double\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"TextField\",\r\n                            label: this.$t('GroupName'),\r\n                            name: \"GroupName\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            validationRules: { \"required\": true},                            \r\n                        },\r\n                        {\r\n                            astype: \"SelectField\",\r\n                            label: this.$t('Reader'),\r\n                            name: \"Reader\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            validationRules: { \"required\": true},\r\n                            config: {\r\n                               // option_request_url:process.env.VUE_APP_API_URL+'/GetDeviceList',\r\n                                // token:this.GetUserInfo.Token,\r\n                                options: []\r\n                            },\r\n                        },\r\n                        {\r\n                            astype: \"SelectField\",\r\n                            label: this.$t('Users'),\r\n                            name: \"Users\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            validationRules: { \"required\": true},\r\n                            config: {                               \r\n                                options: []\r\n                            },\r\n                        },\r\n                        {\r\n                            astype: \"SelectField\",\r\n                            label: this.$t('Status'),\r\n                            name: \"Status\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            config: {\r\n                                options: [{value:\"1001\",name:'Active'},{value:\"1002\",name:'InActive'}]\r\n                            },\r\n                        }                        \r\n                    ]\r\n                },\r\n                {\r\n                    Data: [\r\n                        {\r\n                            astype: \"TextAreaField\",\r\n                            label: this.$t('GroupDetails'),\r\n                            name: \"GroupDescription\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            validationRules: \"\",\r\n                            config: {\r\n                                rows:5\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n            ],\r\n            buttons: [\r\n                {\r\n                    type: \"submit\",\r\n                    class: \"btn btn-success\",\r\n                    text: \"<i class='fa fa-save pr-2'></i>Save\",\r\n                },\r\n\r\n                {\r\n                    type: \"button\",\r\n                    class: \"btn btn-danger\",\r\n                    text: \"<i class='fa fa-close pr-2'></i>Cancel\",\r\n                    onClick: this.onCancel\r\n                }\r\n            ],\r\n        }  \r\n    },\r\n     created:async function(){  \r\n       await this.GetDeviceList();\r\n       if(this.$route.params.id !=null)\r\n       {\r\n           await this.GetNotficationUsers();\r\n           await this.ManageItemsGroup();\r\n       }\r\n        this.DataLoaded=1;\r\n    },\r\n    methods:{\r\n        GetDeviceList:async function(){   \r\n            debugger       \r\n            await  DataService.GetDeviceList().then(response=>{ \r\n                response.data.data.forEach((item) => {\r\n                    (this.FormSchema)[0].Data[1].config.options.push({\r\n                        name:`${item.name})`,\r\n                        value:`${item.value}` \r\n                    })\r\n                }) \r\n            });\r\n        },\r\n        GetNotficationUsers:async function(){            \r\n            var url=`moduleName=ASSETASSIGNMENT`;\r\n           await DataService.GetNotficationUsers(url).then(response=>{ \r\n                response.data.data.forEach((item) => {\r\n                    (this.FormSchema)[0].Data[2].config.options.push({\r\n                        name:`${item.NAME}(${item.DEPARTMENT_NAME})`,\r\n                        value:`${item.USER_ID}` \r\n                    })\r\n                }) \r\n                console.log((this.FormSchema)[0].Data[2].config.options);               \r\n            });\r\n        },\r\n        onSubmit:function(formfields){  \r\n            var vm=this;\r\n            var jsonobj={\r\n                GroupId:0, \r\n                GroupName:formfields.GroupName, \r\n                LocationId:0, \r\n                ReaderId:formfields.Reader, \r\n                UserIds:formfields.Users, \r\n                GroupDetails:formfields.GroupDescription,\r\n                StatusId:formfields.Status\r\n            }                    \r\n            var poststring=JSON.stringify(jsonobj);\r\n            DataService.AddGroup(poststring).then(response=>{                    \r\n            if(response.data=='insert'){\r\n                vm.ShowAlert(vm.$t('AddedSuccess',[vm.$t('Group_Item')]), \"success\", true,  vm.$t(\"Alert\")); \r\n                vm.onCancel();\r\n            }\r\n            else{\r\n                vm.ShowAlert(vm.$t(\"Something_Wrong\"), \"failure\", true, vm.$t('Alert'));\r\n            } \r\n        });  \r\n        },\r\n        onCancel:function(){\r\n            this.$router.push({name:'GroupListing'});\r\n        },\r\n        ManageItemsGroup:async function(){                      \r\n            var url=`id=${this.$route.params.id}`\r\n            await DataService.GetItemsGroupById(url).then(response=>{        \r\n                \r\n                    if(response.data.length>0){                    \r\n                    (this.FormSchema)[0].Data[0].value=response.data[0].group_name;\r\n                    (this.FormSchema)[0].Data[1].value=response.data[0].reader_id;\r\n                    (this.FormSchema)[0].Data[2].value=response.data[0].user_ids;                   \r\n                    (this.FormSchema)[0].Data[3].value=response.data[0].status_id;\r\n                    (this.FormSchema)[1].Data[0].value=response.data[0].group_details;\r\n                }                     \r\n                \r\n            })\r\n\r\n        }\r\n    }\r\n}\r\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Manage.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Manage.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Manage.vue?vue&type=template&id=00eb452d&\"\nimport script from \"./Manage.vue?vue&type=script&lang=js&\"\nexport * from \"./Manage.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}