{"version":3,"sources":["webpack:///./src/views/Reporting/Add_Report/ReportPreview.vue?f92e","webpack:///./src/views/Reporting/Add_Report/ReportPreview.vue?4471","webpack:///./src/views/Reporting/Add_Report/Datareport.vue?efa5","webpack:///./src/views/Reporting/Add_Report/Datareport.vue","webpack:///./src/views/Reporting/Add_Report/ReportPreview.vue","webpack:///./src/components/Common/Modal/modalGraphOptions.vue","webpack:///src/components/Common/Modal/modalGraphOptions.vue","webpack:///./src/components/Common/Modal/modalGraphOptions.vue?56c9","webpack:///./src/components/Common/Modal/modalGraphOptions.vue?b0e7","webpack:///src/views/Reporting/Add_Report/ReportPreview.vue","webpack:///./src/views/Reporting/Add_Report/ReportPreview.vue?68c7","webpack:///./src/views/Reporting/Add_Report/ReportPreview.vue?f7d0","webpack:///./src/components/Common/Modal/modalCalculatedFieldUI.vue","webpack:///src/components/Common/Modal/modalCalculatedFieldUI.vue","webpack:///./src/components/Common/Modal/modalCalculatedFieldUI.vue?4a2d","webpack:///./src/components/Common/Modal/modalCalculatedFieldUI.vue?db08","webpack:///src/views/Reporting/Add_Report/Datareport.vue","webpack:///./src/views/Reporting/Add_Report/Datareport.vue?0d46","webpack:///./src/views/Reporting/Add_Report/Datareport.vue?fb43","webpack:///./src/views/Reporting/Add_Report/ReportPreview.vue?65d5","webpack:///./src/views/Reporting/Add_Report/Datareport.vue?488c","webpack:///./src/views/Reporting/Add_Report/Datareport.vue?2ba1"],"names":["___CSS_LOADER_API_IMPORT___","exports","push","module","i","render","_vm","this","_c","_self","staticClass","class","maindiv","attrs","isLoading","editclass","_v","_s","ReportName","$t","on","$event","editreport","staticStyle","collapsedclick","saveclass","directives","name","rawName","value","savereportname","expression","domProps","target","composing","savereport","MainSearchmodel","ListFiltering","_m","_l","submodulecodename","index","key","GetLocalizedValue","SubModule","modulelisting","length","showModuleListForFilter","modulelistingforfilter","showModuleListForField","searchColumnfilter","checkMove","drag","onDragEnd","GetDraggedItem","model","modulelistingmodel","callback","$$v","element","elementIndex","undefined","FieldIcons","dttype","icon","FieldName","DisplayName","Addfields","_e","elemIndex","AddFilter","SearchNoRecord","showdiv","expandclick","fieldpan","ref","FieldTabClicked","Groupsearchmodel","disableGrouping","GroupSearching","itemclass","filtergroup","item","selectfiltervalue","MainFieldname","Grouplist","DeleteGroupFields","CalculatedUIEnabled","openActionIcon","showRowLevelFunction","OpenCalculatedUI","closeActionIcon","ColumnSearchmodel","filterColumngroup","indx","selectfilterColumnvalue","Columnlist","ColumnListDisplayOrder","Calculated_Field","ExpresssionFieldName","DeleteColumnFields","openSetting","modeldisplayname","preventDefault","PreventDecimal","ColumnFieldDataCode","modeldateformat","$$selectedVal","Array","prototype","filter","call","options","o","selected","map","val","_value","multiple","GetDateFromDB","dateformat","dateIndex","dateFormat","modeldecimalplaces","modeluseseparator","isArray","_i","$$a","$$el","$$c","checked","$$i","concat","slice","modelusecurrency","SaveSelectedData","CloseSetting","FilterTabClicked","category","filterRulechange","templates","template","tempIndex","Filterlist","itmIndex","indexOf","filtertype","itemIndex","dragover","eleIndex","OperatorDisplayName","valueTypeText","valueTypeNumber","valueTypeNumber2","$options","filters","formatDate","valueTypeFirstdate","valueTypeSeconddate","ValueDisplayFirstTime","ValueDisplaySecondTime","Displaymultiplevalue","DropDownValue","DeleteFilterFields","IsMandatoryforFilter","openrulespop","GetOperator","itmInx","selectedOPValue","OPERATOR_ID","_q","checkvalue","OPERATOR_DISPLAY_NAME","OPERATOR_EXPRESSION","MP","OPERATION_DATA_TYPE","$set","texttypevalue1","ValueDisplaytext","texttypevalue2","ValueDisplaytext2","numbertypevalue1","ValueDisplaynumber","PreventValues","numbertypevalue2","ValueDisplaynumber2","parseFloat","datetypevalue1","ValueDisplaydate","datetypevalue2","ValueDisplaydate2","Date","parse","timetypevalue","ValueDisplayTime","timetypevalue2","ValueDisplayTime2","DDLForFilter","modelFilterDDLValue","DDLitem","TruncateStr","multiselectvalue","FormSchema","applySetting","CustomFieldId","ClosePopFilter","showReportPreview","previewdata","customreportparameters","saveJsonReport","PdfJsonReport","editjsondata","graphData","sortingData","GraphJson","LevelOfGrouping","showcalculatedUI","ExpFieldDataArray","editexpressionvalue","ExpDataArray","AlreadyExistExpression","VerifiedExpressionColumnValue","staticRenderFns","PreviewReport","ResetData","ExportToPDF","ExportToExcel","OpenSortingPopup","OpenGraph","isSortPopup","sortColummnarray","input","sortcolummnId","x","columnOrders","AddSortingForm","isValueExistInSort","RemoveSortingForm","close","showGraphOptions","OpenGraphOptions","showChart","ResetGraphData","FilterCustomFieldName","XAxisField","YAxisField","aggregateFunctionResult","aggregateFunctionType","chartType","chartOptions","chartSeries","previewgroupdata","showdata","previewcolumn","column","noRecord","data","sitem","sindex","gitem","gindex","totalRecord","showcoldata","SaveAllReport","CancelAll","GraphData","CloseGraphOptions","onSubmit","scopedSlots","_u","fn","chartTypes","id","selectedChartTypeID","chart_Type","error","Data","ViewReportGraph","PreviewChart","selectedChartType","chartseries","resultMsg","ApplyGraph","components","VueApexCharts","props","type","Object","reportTitle","selectedChartXAxis","selectedChartYAxis","colourList","chartOptionXAxisData","chartSeriesData","GroupingGraphData","BindGraph","isChartData","isGraphLoadedAlready","graphParams","layoutType","astype","label","placeholder","config","showAddIcon","validationRules","disabled","onChange","onChangeDropdown","onChangeXYAxisDropdown","visibility","GetRadioValue","created","vm","GetChartTypes","GetColumnList","chartTypeID","AggregateFuncField","CheckFieldType","watch","methods","$","modal","removeClass","remove","$refs","refGraphForm","validateForm","reset","$parent","GraphServices","then","response","forEach","dataset","ResetGraph","GraphDataValue","AggregateFunction","findvaluefromcolumnlistxaxis","find","parseInt","findvaluefromcolumnlistyaxis","PreviewJson","MetaData","IsGrouping","SetGroupingGraphData","toLowerCase","SetGraphValues","FilterColumnlist","CustomFieldName","CalculatingAggregateFuncResult","DrawGraph","ShowAlert","ListingData","setGraphArray","XaxisField","yAxisField","keys","mainindex","pushitem","GData","validate","valid","isHorizontal","chart","toolbar","export","svg","filename","png","csv","headerCategory","tooltip","enabled","formatter","xaxis","categories","title","text","labels","yaxis","toLocaleString","plotOptions","bar","borderRadius","horizontal","dataLabels","colors","str","len","convertstring","substring","functionType","tempval","sum","toFixed","aggregatecount","total","count","Math","min","apply","Number","max","ColumnFieldType","CheckFieldTypeX","entries","XFieldName","YFieldName","items","BindXYFields","replaceXCurrencySymbol","replace","GenrateRandomColorCode","randomColor","floor","random","toString","GenrateRandomColorList","color","IsExist","formfields","component","pdfMake","vfs","pdfFonts","modalGraphOptions","String","SortingData","Boolean","showmulitGrouping","DynamicFillValue","GroupValue","isGraph","YAxisfield","watchvalue","allReocrdsList","ExcelData","SavedGraphData","allReocrdsData","TableBody","TableHeader","pdfContent","ExcelJsonData","isPreviewForPdfExcel","EditSortingData","RenderList","mounted","_vm$$refs$modalGraph","modalGraph","newval","oldval","SORTTYPE","RefreshReport","splice","assign","_vm$$refs$modalGraph2","ResetPreview","graphArray","Info","GROUP","GRAPH","jsonData","JSON","stringify","ReportPreviewService","SaveAllDynamicReport","Value","$router","catch","err","console","log","setTimeout","SetBootstraptoolTip","chartoptions","CheckColumnExistInGraph","GetAllRecordsForPDF","excelvalue","temp","ReportID","Modulename","Submodulecode","submoduleid","PageSize","PageNumber","FIELDS","FILTERS","SORTING","EXPRESSION","jsondata","graphURI","GetGraphImageURI","allRecordslisting","pdfDetails","pageType","pageOrientation","GraphWidth","BindPDFDataForGroup","BindPDFData","image","imgURI","width","alignment","pageSize","content","style","table","headerRows","body","styles","SetPDFStyle","defaultStyle","createPdf","download","TableHeader2","ColumnList","currentData","heading","pdfdata","columnList","groupingindex","tableData","headerelement","headerindex","pdfgroupdata","ite","groupColumn","rowSpan","pdfwithoutgroupdata","tempitem","subheader","fontSize","bold","margin","_vm$$refs$chart","URI","dataURI","uri","params","GetExcelReport","blob","Blob","link","document","createElement","href","window","URL","createObjectURL","current","date","getDate","getMonth","getFullYear","fileName","split","join","click","buttons","SubmitExpression","FunctionsName","FuncType","Functionskey","Keys","AddFunctionsfields","modelconditionexpression","Functionkey","ShowDescriptionForFunction","AddConditionExpression","InputValueExpression","deleteuserinput","GetCursorPoint","UserInputSelection","AddSpace","Addplussign","Addsubtractsign","Addmultiplysign","Adddividesign","Addopenbracketsign","Addclosebracketsign","verifiedvaluedata","closed","VerifyExpression","ResetExpression","JsonColumns","typeL","ResponseColumnData","ResponseFunctionData","FieldsValue","FunctionValue","AddBracketValue","SubtractBracketValue","MultplyBracketValue","DivideBracketValue","OpenBracketExpValue","CloseBracketExpValue","FieldData","fieldatavalue","reqFrom","verifiedvalue","modelfieldname","substringvalue","verifyErrorMsg","InputValueArray","InputValueExpressionByID","FunctionValueArray","selecteduserinput","selecteduserinputbyid","ExpressionIDvalue","updateexpresion","fieldadded","FieldTableNameValue","GetCommaSeparatedValue","countbyfield","conditionexpression","checkbycondition","onClick","CancelExpressionUI","ExpresssionDataValue","GetFunctionList","backdrop","keyboard","addClass","$emit","ExpressionDataService","GetListFields","AVAILABLE_FIELDS","CustomFields","res","Functions","event","cursorpos","getdata","SetValueOnCursorPosition","checkindex","findIndex","FieldValueData","MatchIndex","SameName","convertarr","firstindex","secondindex","includes","substringarr","IsSystemGenerated","TableName","updatingvalue","updatevaluebyid","DescriptionForFunction","closest","openbracketexpsign","openbracket","closebracketexpsign","closebracket","addbracketexpsign","Addsign","subtractbracketexpsign","subtractsign","multiplybracketexpsign","multiplysign","dividebracketexpsign","dividesign","spaceaddingexp","addedspace","addedspacefordb","replaceAll","elem","convertarrid","substringarrid","convertstr","code","keyCode","cursorposition","assignindex","getindexofexp","getfieldindex","f","userinput","selectionStart","fieldsdata","dataitem","ExpressionID","ExpressionName","ExpressionDisplay","Expression","ColumnIndex","encodeURIComponent","jsonvalue","VerifyExpressionFromDB","Result","InavalidExpression","checkeditfieldexist","FieldValue","VerifiedExpression","ExpressionFieldArray","IsEdit","IsExpExist","alert","e","cursorpos1","getElementById","focus","returndata","filterinput","searchcol","searchfilter","indexitem","searchitem","displayMainColname","filteritem","draggable","ReportPreview","CalculatedUI","submodulecode","modulename","expandcollapsediv","fielddata","viewId","tempreportid","Showsettingsview","showdiv1","dateformate","customField","dragcount","ReportPreviewListing","submodulename","test1","PAGESIZE","selectvalue","selecteddatatype","savedOperatorName","FilterCount","displayvalue2","selectedvalue","RequestFilterJosn","CurrentOperatorSelected","operator_id","mode","dropdwonvalues","searchable","createOption","SelectedoperatorMappedDatatype","commaSepratedSelectedValues","valueKey","valuekey2","FirstOperand","FirstOperandValue1","SecondOperand","SecondOperandValue1","Datatype","operator","CheckExpressionFeild","ExpressionArray","ExpressionFieldsArray","setvalue","ChartGroupingArray","GroupingArray","FilterActiveForMandatory","IsMandatoryforFilterAfterReset","ArrayforFilterpopup","selctRuleForFilter","IsForPreview","IsDDLValueInFilter","GetSubModuleList","sortingresetvalue","$route","storeParameters","GetStoredParameters","GetList","GetReportDetailsByReportId","computed","displayname","searchColumn","GetSubModuleName","displaycolname","SearchItem","localStorage","setItem","getItem","Getddldata","DataReportService","GetFilterDDLselectvalue","ddlitem","GetReportDetailsbyId","checkfields","JSON_To_Create_ReportListing","BindFeilds","BindFilters","BindGROUP","EXPRESSIONFIELDSARRAY","ReportListing","CheckIsMandartoryForFilter","mitem","indexFound","bindpouupvaluefordatetime","operator_display_name","bindfilterdata","GetDDLValueinEdit","GetDDLTempVal","PickListOption","GetDDLValueinEditArr","OperatorExpression","GetDDLValueinEditMulti","Value1","DDLEditItem","_GetDDLValueinEdit","moduleIndex","moduleItem","field","returnObject","ModuleIndex","ActualDataType","FilterTypeAndorOr","Value2","CheckforIncludeDataMatchesForFilter","GetFilterSelectDDL","temparr","checkexpfieldvalue","_vm$$refs$Calculated","Calculated","DateFormat","DecimalPlace","IsUseSeprator","IsCurrencySymbol","GetDateFromDetail","css","CheckFeildOrFilter","isFieldsActive","active","sort","a","b","NewReportInserted","SetScrolbar","Fields","Fieldsitem","CheckFields","DataTypeCode","moment","subtract","format","Editdyanmicreport","Folder_Id","Module_Id","Sub_Module_Id","Version","AddDynamicreport","Status","sortingArray","CheckSameNameExist","MatchIfSameNameExist","CheckValidSorting","CheckForValidSorting","arritem","XCustomFieldId","YCustomFieldId","AggregateFunctionType","checkdata","isFieldActive","ColumnDisplayOrder","getlastarrayvalue","Display_Order","hasOwnProperty","checkAlredyExist","object","removed","IsGraphColumn","reportdata","tagIndex","tagIndex1","calctagIndex","sortindex","_vm$$refs$reportdata","_vm$$refs$reportdata2","isFilterActive","Filters","picklist_options","getCountValue","result","FilterType","tagIndex2","GetOperatordata","each","html","mindex","inneritem","validindex","GetDateDetails","resetoldvalueinfilteroperator","IsBinding","operatorname","operatorid","FillFiltervalue","checksameoperator","GetDataOperator","DATA","BindOperatorValues","checkIfExists","isBinding","popupvaluebind","Index","GetFilterddlvalue","FilterJosnRquest","Commaseprated","operatoerExpressionResult","ConvertOperatorToExpression","filtervalueexist","multiddl","fillmultiselect","dditem","ifexist","j","fillvalues","isBetweenTrue","multiitem","_GetDDLValue","_vm$dropdwonvalues","Multiddlvalue","ddlvalues","isddlvalueexist","GetDDLValue","valueTypeText2","valArray","commsplitedVal","CommaSepratedStringValues","_vm$$refs$Calculated2","checkFieldVlaueExist","ExpressionDisplayOrder","colelem","DateFormatId","verifyelem","vobject","REPORTID","FunctionKeys","Arrayitem","fieldexp","fobject","checkExpExist","indexvalue","CheckItem","tempdata","checkExpvalue","dataele","toUpperCase","getindex","related","dragged","draggedContext","relatedContext","list","Colitem","Colindex","GetAddedFieldFromDrag","AddedField","GetAddedFieldFromModuleListing","ModuleListField","Fitem","RFitem","sortitem","ekey","__esModule","default","locals","add"],"mappings":"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","file":"js/chunk-79a933df.js","sourcesContent":["export * from \"-!../../../../node_modules/vue-style-loader/index.js??ref--7-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ReportPreview.vue?vue&type=style&index=0&id=3938c124&prod&scoped=true&lang=css&\"","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".mCSB_inside>.mCSB_container[data-v-4f97e8c1]{margin-right:30px}.width80[data-v-4f97e8c1]{width:80px}.width120[data-v-4f97e8c1]{width:110px}.invalid-feedback[data-v-4f97e8c1]{white-space:normal;font-size:110%}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('section',{staticClass:\"page-action\"},[_c('div',{staticClass:\"left-menu-tab datareport\"},[_c('div',{class:_vm.maindiv},[_c('loader',{attrs:{\"isVisible\":_vm.isLoading}}),_c('div',{staticClass:\"accordion md-accordion left-filter\",attrs:{\"id\":\"accordionEx\",\"role\":\"tablist\",\"aria-multiselectable\":\"true\"}},[_c('div',{class:_vm.editclass},[_c('div',{staticClass:\"card-header filter-head p-0\",attrs:{\"role\":\"tab\",\"id\":\"headingOne1\"}},[_c('h5',{staticClass:\"mb-0 px-2\"},[_vm._v(_vm._s(_vm.ReportName)+\" \"),_c('span',{staticClass:\"expand_all_filters\"},[_c('span',{attrs:{\"id\":\"SearchData\"}},[_c('a',{staticClass:\"collapsed\",attrs:{\"title\":_vm.$t('EditReportName'),\"data-toggle-tooltip\":\"tooltip\"},on:{\"click\":function($event){return _vm.editreport()}}},[_c('em',{staticClass:\"fa fa-pencil\",staticStyle:{\"font-size\":\"20px\"},attrs:{\"aria-hidden\":\"true\"}})])]),_c('span',[_c('a',{staticClass:\"collapsed\",attrs:{\"title\":\"Collapse\",\"data-toggle-tooltip\":\"tooltip\"},on:{\"click\":function($event){return _vm.collapsedclick()}}},[_c('em',{staticClass:\"fa fa-angle-double-left mt-1\",attrs:{\"aria-hidden\":\"true\"}})])])])])])]),_c('div',{class:_vm.saveclass},[_c('div',{staticClass:\"card-header filter-head p-0\",attrs:{\"role\":\"tab\",\"id\":\"headingOne1\"}},[_c('h5',{staticClass:\"mb-0 pl-2 mt-1\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.savereportname),expression:\"savereportname\"}],staticClass:\"form-control p-1\",staticStyle:{\"width\":\"83%\"},attrs:{\"type\":\"text\"},domProps:{\"value\":(_vm.savereportname)},on:{\"input\":function($event){if($event.target.composing)return;_vm.savereportname=$event.target.value}}}),_c('span',{staticClass:\"expand_all_filters\"},[_c('span',{attrs:{\"id\":\"SearchData\"}},[_c('a',{staticClass:\"collapsed\",attrs:{\"title\":_vm.$t('Save'),\"data-toggle-tooltip\":\"tooltip\"},on:{\"click\":function($event){return _vm.savereport()}}},[_c('em',{staticClass:\"fa fa-floppy-o mt-1\",attrs:{\"aria-hidden\":\"true\"}})])])])])])]),_c('div',{staticClass:\"card-panel\"},[_c('div',{staticClass:\"mb-0 d-lg-block p-2 border\"},[_c('div',{staticClass:\"input-group customsearchbox\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.MainSearchmodel),expression:\"MainSearchmodel\"}],staticClass:\"form-control searchcustomfilter border-right-0\",attrs:{\"type\":\"text\",\"maxlength\":\"50\",\"id\":\"searchinput\",\"placeholder\":\"Search by Name\",\"autocomplete\":\"off\"},domProps:{\"value\":(_vm.MainSearchmodel)},on:{\"keydown\":_vm.ListFiltering,\"keyup\":_vm.ListFiltering,\"input\":function($event){if($event.target.composing)return;_vm.MainSearchmodel=$event.target.value}}}),_vm._m(0)])]),_vm._l((_vm.submodulecodename),function(name,index){return _c('div',{key:index,staticClass:\"card\",staticStyle:{\"border-bottom\":\"1px solid #929292\"}},[_c('div',{staticClass:\"card-header pl-0\",attrs:{\"role\":\"tab\",\"id\":'headingOnee' + index}},[_c('h5',{staticClass:\"mb-0\"},[_c('a',{class:index == 0 ? '' : 'collapsed',attrs:{\"data-toggle\":\"collapse\",\"data-parent\":\"#accordionEx\",\"href\":\"javascript:;\",\"aria-expanded\":index == 0 ? true : false,\"data-target\":'#collapseOne' + index,\"aria-controls\":'collapseOne' + index}},[_c('em',{staticClass:\"fa fa fa-file-text-o\",attrs:{\"aria-hidden\":\"true\"}}),_c('span',{staticClass:\"font-weight-bold\"},[_vm._v(\" \"+_vm._s(_vm.GetLocalizedValue(name.SubModule)))]),_c('em',{staticClass:\"fa fa-angle-down rotate-icon\",attrs:{\"aria-hidden\":\"true\"}})]),_vm._m(1,true)])]),_c('div',{class:_vm.modulelisting.length == 0 ? 'd-none' : _vm.modulelisting[index].length == 0 && !_vm.showModuleListForFilter ||\n                        _vm.modulelistingforfilter[index].length == 0 && _vm.showModuleListForFilter ? 'text-center text-danger d-flex align-items-center justify-content-center norecs pt-2' : 'd-none'},[_vm._v(\" \"+_vm._s(_vm.$t(\"NoFieldAvailable\")))]),_c('div',{class:index == 0 ? 'collapse multi-collapse show':'collapse multi-collapse',attrs:{\"id\":'collapseOne' + index,\"role\":\"tabpanel\",\"aria-labelledby\":'headingOnee' + index,\"data-parent\":\"#accordionEx\"}},[_c('PerfectScrollbar',[_c('div',{staticClass:\"card-body p-0 customScrollForLeftBar llt\",staticStyle:{\"max-height\":\"300px\"}},[_c('div',{staticClass:\"form-group\"},[_c('ul',{staticClass:\"nav nav-pills flex-column left-tab responivecustomtab lefttabiconfix\"},[(_vm.showModuleListForField)?_c('draggable',{staticClass:\"draggable-list\",attrs:{\"list\":_vm.searchColumnfilter.length == 0 ? _vm.modulelisting[index] : _vm.searchColumnfilter[index],\"group\":\"my-groupForFields\",\"move\":_vm.checkMove,\"item-key\":\"CustomFieldId\"},on:{\"start\":function($event){_vm.drag = true},\"end\":_vm.onDragEnd,\"change\":function($event){return _vm.GetDraggedItem($event, index, name.SubModule)}},model:{value:(_vm.modulelistingmodel),callback:function ($$v) {_vm.modulelistingmodel=$$v},expression:\"modulelistingmodel\"}},_vm._l(((_vm.searchColumnfilter.length == 0 ? _vm.modulelisting[index] : _vm.searchColumnfilter[index])),function(element,elementIndex){return _c('li',{key:elementIndex,staticClass:\"nav-item parent-element\",attrs:{\"id\":\"StopDragfield\"}},[_c('span',{staticClass:\"nav-link left-menu px-3\"},[_c('em',{class:element.FieldIcons != undefined ? element.FieldIcons + ' ' + 'float-left' : \n                                                        element.dttype[0].icon != null ? element.dttype[0].icon + ' ' + 'float-left' : 'float-left',attrs:{\"aria-hidden\":\"true\"}}),_c('span',{staticClass:\"text-truncate float-left\",staticStyle:{\"width\":\"55%\"},attrs:{\"data-toggle-tooltip\":_vm.GetLocalizedValue(element.FieldName,\n                                                                element.DisplayName),\"title\":_vm.GetLocalizedValue(element.FieldName, element.DisplayName)}},[_vm._v(\" \"+_vm._s(_vm.GetLocalizedValue(element.FieldName, element.DisplayName))+\" \")]),_c('a',{attrs:{\"href\":\"javascript:;\"}},[_c('em',{staticClass:\"fa fa-plus float-right mt-1 text-success pr-0\",attrs:{\"aria-hidden\":\"true\"},on:{\"click\":function($event){return _vm.Addfields(element, $event, index, name.SubModule)}}})])])])}),0):_vm._e(),(_vm.showModuleListForFilter)?_c('draggable',{staticClass:\"draggable-list\",attrs:{\"list\":_vm.searchColumnfilter.length == 0 ? _vm.modulelistingforfilter[index] : _vm.searchColumnfilter[index],\"group\":\"my-groupForFilter\",\"move\":_vm.checkMove,\"item-key\":\"CustomFieldId\"},on:{\"start\":function($event){_vm.drag = true},\"end\":_vm.onDragEnd,\"change\":function($event){return _vm.GetDraggedItem($event, index)}},model:{value:(_vm.modulelistingmodel),callback:function ($$v) {_vm.modulelistingmodel=$$v},expression:\"modulelistingmodel\"}},_vm._l((_vm.searchColumnfilter.length == 0 ? _vm.modulelistingforfilter[index] : _vm.searchColumnfilter[index]),function(element,elemIndex){return _c('li',{key:elemIndex,staticClass:\"nav-item parent-element\",attrs:{\"id\":\"StopDragfield\"}},[_c('span',{staticClass:\"nav-link left-menu px-3\"},[_c('em',{class:element.FieldIcons != undefined ? element.FieldIcons + ' ' + 'float-left' : \n                                                            element.dttype[0].icon != null ? element.dttype[0].icon + ' ' + 'float-left' : 'float-left',attrs:{\"aria-hidden\":\"true\"}}),_c('span',{staticClass:\"text-truncate float-left\",staticStyle:{\"width\":\"55%\"},attrs:{\"data-toggle-tooltip\":element.FieldName,\"title\":_vm.GetLocalizedValue(element.FieldName, element.DisplayName)}},[_vm._v(\" \"+_vm._s(_vm.GetLocalizedValue(element.FieldName, element.DisplayName))+\" \")]),_c('a',{attrs:{\"href\":\"javascript:;\"}},[_c('em',{staticClass:\"fa fa-sliders float-right mt-1 text-primary pr-0\",attrs:{\"aria-hidden\":\"true\"},on:{\"click\":function($event){return _vm.AddFilter(element, index)}}})])])])}),0):_vm._e()],1)])])])],1)])}),(_vm.SearchNoRecord)?_c('div',{staticClass:\"text-center text-danger d-flex align-items-center justify-content-center norecs pt-2\"},[_vm._v(\" \"+_vm._s(_vm.$t(\"NoRecordfound\")))]):_vm._e()],2)])],1),_c('div',{class:_vm.showdiv,staticStyle:{\"float\":\"left\",\"width\":\"50px\"},on:{\"click\":function($event){return _vm.expandclick()}}},[_vm._m(2)]),_c('div',{class:_vm.fieldpan},[_c('div',{staticClass:\"tab-style w-100\"},[_c('div',{staticClass:\"tab_container\",attrs:{\"role\":\"tabpanel\"}},[_c('div',{staticClass:\"tab-content\"},[_c('b-tabs',{attrs:{\"pills\":\"\"}},[_c('b-tab',{ref:\"FIELDS\",staticClass:\"fields\",attrs:{\"title\":\"FIELDS\",\"active\":_vm.showModuleListForField},on:{\"click\":_vm.FieldTabClicked}},[_c('div',{staticClass:\"col-12 p-0 float-left\"},[_c('h6',{staticClass:\"mb-1\"},[_vm._v(_vm._s(_vm.$t('Groups')))]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.Groupsearchmodel),expression:\"Groupsearchmodel\"}],class:_vm.disableGrouping == true ? 'form-control' : 'form-control disabled',attrs:{\"placeholder\":\"Add Group\"},domProps:{\"value\":(_vm.Groupsearchmodel)},on:{\"keypress\":_vm.GroupSearching,\"input\":function($event){if($event.target.composing)return;_vm.Groupsearchmodel=$event.target.value}}}),(_vm.Groupsearchmodel != '')?_c('div',{staticClass:\"autosuggestion\",class:_vm.itemclass},[_vm._l((_vm.filtergroup),function(item,i){return _c('div',{key:i},[_c('div',[_c('div',{on:{\"click\":function($event){return _vm.selectfiltervalue(item)}}},[_vm._v(\" \"+_vm._s(_vm.GetLocalizedValue(item.FieldName, item.DisplayName))+\" : \"+_vm._s(item.MainFieldname)+\" \")])])])}),(_vm.filtergroup.length == 0)?_c('div',{staticClass:\"text-center text-danger d-flex align-items-center justify-content-center norecs pt-2\"},[_vm._v(\" \"+_vm._s(_vm.$t(\"NoRecordfound\"))+\" \")]):_vm._e()],2):_vm._e(),_c('br'),_c('draggable',{staticClass:\"draggable-list\",attrs:{\"list\":_vm.Grouplist,\"group\":\"my-groupGrouplist\",\"item-key\":\"CustomFieldId\"},on:{\"start\":function($event){_vm.drag = true},\"end\":function($event){_vm.drag = false}},model:{value:(_vm.Grouplist),callback:function ($$v) {_vm.Grouplist=$$v},expression:\"Grouplist\"}},_vm._l((_vm.Grouplist),function(element,index){return _c('div',{key:index,staticClass:\"list-item\"},[_c('span',{staticClass:\"text-truncate float-left\",staticStyle:{\"width\":\"200px\"},attrs:{\"data-toggle-tooltip\":element.FieldName,\"title\":element.FieldName}},[_vm._v(\" \"+_vm._s(_vm.GetLocalizedValue(element.FieldName, element.DisplayName))+\" \")]),_c('a',[_c('em',{staticClass:\"fa fa-trash-o text-danger\",attrs:{\"aria-hidden\":\"true\"},on:{\"click\":function($event){return _vm.DeleteGroupFields(element, $event, index)}}})])])}),0)],1),_c('hr'),_c('div',{staticClass:\"col-12 p-0 float-left\"},[_c('h6',{staticClass:\"mb-1\"},[_vm._v(_vm._s(_vm.$t('COLUMNS')))]),_c('div',{staticClass:\"verticle-action\",staticStyle:{\"top\":\"-3px\"}},[_c('em',{class:_vm.CalculatedUIEnabled == true ? 'fa fa-ellipsis-v action_icon' : 'fa fa-ellipsis-v action_icon disabled',attrs:{\"id\":\"btnpopup\",\"aria-hidden\":\"true\"},on:{\"click\":function($event){return _vm.openActionIcon($event)}}}),(_vm.showRowLevelFunction)?_c('span',{staticClass:\"action-list-box\",staticStyle:{\"width\":\"240px\",\"display\":\"block\"}},[_c('span',{staticClass:\"list-actions fsm-list\",staticStyle:{\"padding-left\":\"0\"},attrs:{\"id\":\"action-list\"}},[_c('a',{staticClass:\"update actions-onclick\",on:{\"click\":_vm.OpenCalculatedUI}},[_c('span',{staticClass:\"text\"},[_vm._v(_vm._s(_vm.$t('CalcultedUIName')))])]),_c('em',{staticClass:\"fa fa-times close close-action\",attrs:{\"aria-hidden\":\"true\"},on:{\"click\":function($event){return _vm.closeActionIcon($event)}}})])]):_vm._e()]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.ColumnSearchmodel),expression:\"ColumnSearchmodel\"}],staticClass:\"form-control\",attrs:{\"placeholder\":\"Add Column\"},domProps:{\"value\":(_vm.ColumnSearchmodel)},on:{\"keypress\":_vm.GroupSearching,\"input\":function($event){if($event.target.composing)return;_vm.ColumnSearchmodel=$event.target.value}}}),(_vm.ColumnSearchmodel != '')?_c('div',{staticClass:\"autosuggestion\",class:_vm.itemclass,staticStyle:{\"z-index\":\"9999\"}},[_vm._l((_vm.filterColumngroup),function(item,indx){return _c('div',{key:indx},[_c('div',[_c('div',{on:{\"click\":function($event){return _vm.selectfilterColumnvalue(item)}}},[_vm._v(\" \"+_vm._s(_vm.GetLocalizedValue(item.FieldName, item.DisplayName))+\" : \"+_vm._s(item.MainFieldname)+\" \")])])])}),(_vm.filterColumngroup.length == 0)?_c('div',{staticClass:\"text-center text-danger d-flex align-items-center justify-content-center norecs pt-2\"},[_vm._v(\" \"+_vm._s(_vm.$t(\"NoRecordfound\"))+\" \")]):_vm._e()],2):_vm._e(),_c('div',{staticClass:\"dashed_bod_drag text-center mt-2\"},[_c('h6',{staticClass:\"p-2 m-0\"},[_vm._v(\"Drag Fields Here \")]),_c('draggable',{staticClass:\"draggable-list\",attrs:{\"list\":_vm.Columnlist,\"group\":\"my-groupForFields\",\"id\":\"TargetDivID\",\"move\":_vm.checkMove,\"item-key\":\"CustomFieldId\"},on:{\"start\":function($event){_vm.drag = true},\"end\":_vm.ColumnListDisplayOrder},model:{value:(_vm.Columnlist),callback:function ($$v) {_vm.Columnlist=$$v},expression:\"Columnlist\"}},_vm._l((_vm.Columnlist),function(element,indx){return _c('div',{key:indx,staticClass:\"list-item parent-element\",attrs:{\"id\":\"TargetDivID\"}},[(element.Calculated_Field == true)?_c('span',{staticStyle:{\"font-size\":\"22px\",\"float\":\"left\",\"margin-right\":\"10px\"}},[_vm._v(\"f\"),_c('sub',{staticStyle:{\"font-size\":\"12px\"}},[_vm._v(\"x\")])]):_vm._e(),_c('span',{staticClass:\"text-truncate float-left\",staticStyle:{\"width\":\"200px\"},attrs:{\"data-toggle-tooltip\":element.FieldName,\"title\":_vm.GetLocalizedValue(element.FieldName, element.DisplayName)}},[_vm._v(\" \"+_vm._s(_vm.GetLocalizedValue(element.FieldName, element.DisplayName))+\" \"+_vm._s(element.ExpresssionFieldName)+\" \")]),_c('a',{attrs:{\"aria-hidden\":\"true\"},on:{\"click\":function($event){return _vm.DeleteColumnFields(element, $event)}}},[_c('em',{staticClass:\"fa fa-trash-o text-danger\"})]),_c('div',{staticClass:\"parentdiv datarepfix\"},[_c('a',{attrs:{\"aria-hidden\":\"true\"},on:{\"click\":function($event){return _vm.openSetting(element, $event)}}},[_c('em',{staticClass:\"fa fa-cog action_icon_cv\"})]),_c('div',[_c('div',{staticClass:\"verticle-action rt25\"},[_c('span',{staticClass:\"action-list-box small setting-div-box\"},[_c('span',{staticClass:\"list-actions text-left p-0 datarep ml-3\",staticStyle:{\"width\":\"480px\"},attrs:{\"id\":\"action-list\"}},[_c('div',{staticClass:\"float-left col-12 p-0\"},[_c('div',{staticClass:\"container-fluid p-0 mb-3\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"theme-primary partition-full\"},[_c('span',{staticClass:\"p-name text-white mt-2\"},[_vm._v(\" \"+_vm._s(_vm.$t('Setting'))+\" \")])])])])]),_c('div',{staticClass:\"col-12 float-left\"},[_c('div',{staticClass:\"col-12 p-0 float-left\"},[_c('div',{staticClass:\"form-group\"},[_c('label',[_vm._v(_vm._s(_vm.$t('DisplayName')))]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.modeldisplayname),expression:\"modeldisplayname\"}],staticClass:\"form-control\",attrs:{\"maxlength\":\"20\"},domProps:{\"value\":(_vm.modeldisplayname)},on:{\"paste\":function($event){$event.preventDefault();},\"keydown\":function($event){return _vm.PreventDecimal($event)},\"input\":function($event){if($event.target.composing)return;_vm.modeldisplayname=$event.target.value}}})])]),_c('div',{staticClass:\"col-12 p-0 float-left\"},[_c('div',{class:element.ColumnFieldDataCode == 'date' ? '' : 'form-group d-none'},[_c('label',[_vm._v(_vm._s(_vm.$t('DateFormat'))+\":\")]),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.modeldateformat),expression:\"modeldateformat\"}],staticClass:\"form-control textnormal\",on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.modeldateformat=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},[_c('option',{attrs:{\"value\":\"\",\"disabled\":\"\"}},[_vm._v(\" Select \")]),_vm._l((_vm.GetDateFromDB),function(dateformat,dateIndex){return _c('option',{key:dateIndex},[_vm._v(\" \"+_vm._s(_vm.GetLocalizedValue(dateformat.dateFormat))+\" \")])})],2)])]),_c('div',{staticClass:\"col-12 p-0 float-left\"},[_c('div',{class:element.ColumnFieldDataCode == 'decimal' ? '' : 'form-group d-none'},[_c('label',[_vm._v(_vm._s(_vm.$t('DecimalPlaces')))]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.modeldecimalplaces),expression:\"modeldecimalplaces\"}],staticClass:\"form-control\",attrs:{\"type\":\"number\"},domProps:{\"value\":(_vm.modeldecimalplaces)},on:{\"input\":function($event){if($event.target.composing)return;_vm.modeldecimalplaces=$event.target.value}}})])]),_c('div',{staticClass:\"col-12 p-0 float-left\",staticStyle:{\"margin-top\":\"10px\"}},[_c('div',{class:element.ColumnFieldDataCode == 'decimal' ? '' : 'form-group d-none'},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.modeluseseparator),expression:\"modeluseseparator\"}],attrs:{\"type\":\"checkbox\",\"id\":\"useseparator\"},domProps:{\"checked\":Array.isArray(_vm.modeluseseparator)?_vm._i(_vm.modeluseseparator,null)>-1:(_vm.modeluseseparator)},on:{\"change\":function($event){var $$a=_vm.modeluseseparator,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.modeluseseparator=$$a.concat([$$v]))}else{$$i>-1&&(_vm.modeluseseparator=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.modeluseseparator=$$c}}}}),_vm._v(\"  \"),_c('label',{attrs:{\"for\":\"User\"}},[_vm._v(_vm._s(_vm.$t('UseSeparator')))]),_c('br'),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.modelusecurrency),expression:\"modelusecurrency\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.modelusecurrency)?_vm._i(_vm.modelusecurrency,null)>-1:(_vm.modelusecurrency)},on:{\"change\":function($event){var $$a=_vm.modelusecurrency,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.modelusecurrency=$$a.concat([$$v]))}else{$$i>-1&&(_vm.modelusecurrency=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.modelusecurrency=$$c}}}}),_c('label',{staticStyle:{\"padding\":\"6px\"},attrs:{\"for\":\"Role\"}},[_vm._v(_vm._s(_vm.$t('UseCurrency')))])])]),_c('div',{staticClass:\"col-12 p-0 float-left mb-3\"},[_c('div',{staticClass:\"row flex-row-reverse\"},[_c('div',{staticClass:\"col-lg-6 text-right\"},[_c('a',{staticClass:\"btn btn-success ancsaveuserticket text-white\",attrs:{\"id\":\"btnSaveTicket\",\"title\":\"\",\"data-toggle-tooltip\":\"tooltip\",\"data-original-title\":\"Click here to submit ticket\"},on:{\"click\":function($event){return _vm.SaveSelectedData(element, $event)}}},[_c('span',{staticClass:\"fa fa-floppy-o\"}),_vm._v(\" \"+_vm._s(_vm.$t('Save'))+\" \")])])])])])]),_c('em',{staticClass:\"fa fa-times close close-action_cv\",attrs:{\"aria-hidden\":\"true\"},on:{\"click\":function($event){return _vm.CloseSetting($event)}}}),_c('div',{staticClass:\"va_rt25\"},[_c('em',{staticClass:\"icon-solid arrow-solid-left text-dark\",staticStyle:{\"font-size\":\"20pt\"}})])])])])])]),_c('div',{staticClass:\"float-left text-left w-100 font-12\"},[_vm._v(_vm._s(element.MainFieldname))])])}),0)],1)])]),_c('b-tab',{ref:\"Filters\",attrs:{\"title\":\"Filters\",\"active\":_vm.showModuleListForFilter},on:{\"click\":_vm.FilterTabClicked}},[_c('div',{staticClass:\"col-12 p-0 float-left\"},[_c('h6',[_vm._v(\"include data if it matches\")]),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.category),expression:\"category\"}],staticClass:\"form-control\",attrs:{\"name\":\"template\"},on:{\"change\":[function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.category=$event.target.multiple ? $$selectedVal : $$selectedVal[0]},_vm.filterRulechange]}},_vm._l((_vm.templates),function(template,tempIndex){return _c('option',{key:tempIndex,domProps:{\"selected\":template == _vm.category ? 'selected' : '',\"value\":template}},[_vm._v(\" \"+_vm._s(template)+\" \")])}),0),_c('h6',{staticClass:\"mt-3\"},[_vm._v(\"Filter rules\")]),_c('div',{staticClass:\"form-control\"},[_vm._l((_vm.Filterlist),function(item,itmIndex){return (_vm.category == 'Match All Value')?_c('span',{key:itmIndex,attrs:{\"ml-1\":\"\"}},[_vm._v(\" \"+_vm._s((_vm.Filterlist.indexOf(item) + 1))+\" \"),(_vm.Filterlist.length > (_vm.Filterlist.indexOf(item) + 1))?_c('span',{staticStyle:{\"margin-right\":\"3px\"}},[_vm._v(\" \"+_vm._s(_vm.filtertype))]):_vm._e()]):_vm._e()}),_vm._l((_vm.Filterlist),function(item,itemIndex){return (_vm.category != 'Match All Value')?_c('span',{key:itemIndex},[_vm._v(\" \"+_vm._s((_vm.Filterlist.indexOf(item) + 1))+\" \"),(_vm.Filterlist.length > (_vm.Filterlist.indexOf(item) + 1))?_c('span',{staticStyle:{\"margin-right\":\"3px\"}},[_vm._v(_vm._s(_vm.filtertype))]):_vm._e()]):_vm._e()})],2),_c('draggable',{staticClass:\"draggable-list\",attrs:{\"list\":_vm.Filterlist,\"group\":\"my-groupForFilter\",\"move\":_vm.checkMove,\"item-key\":\"CustomFieldId\",\"id\":\"TargetDivID\"},on:{\"start\":function($event){_vm.drag = true},\"end\":_vm.ColumnListDisplayOrder,\"dragenter\":function($event){return _vm.dragover($event)},\"dragleave\":function($event){return _vm.dragover($event)},\"drop\":function($event){return _vm.dragover($event)}},model:{value:(_vm.Filterlist),callback:function ($$v) {_vm.Filterlist=$$v},expression:\"Filterlist\"}},_vm._l((_vm.Filterlist),function(element,eleIndex){return _c('div',{key:eleIndex,staticClass:\"list-item row filter-div\",attrs:{\"id\":\"TargetDivID\"},on:{\"dragover\":function($event){return _vm.dragover($event)}}},[_c('div',{staticClass:\"counter_num px-1 py-2 filter-count-div\"},[_vm._v(\" \"+_vm._s((_vm.Filterlist.indexOf(element) + 1))+\" \")]),_c('div',{staticStyle:{\"width\":\"77%\"}},[_c('div',{staticClass:\"px-1 py-0 width120 text-truncate float-left font-14\"},[(element.Calculated_Field == true)?_c('span',{staticStyle:{\"font-size\":\"22px\",\"float\":\"left\",\"margin-right\":\"10px\"}},[_vm._v(\"f\"),_c('sub',{staticStyle:{\"font-size\":\"12px\"}},[_vm._v(\"x\")])]):_vm._e(),_c('span',{staticClass:\"text-truncate float-left\",staticStyle:{\"width\":\"110px\"},attrs:{\"data-toggle-tooltip\":element.FieldName,\"title\":_vm.GetLocalizedValue(element.FieldName, element.DisplayName)}},[_vm._v(\" \"+_vm._s(_vm.GetLocalizedValue(element.FieldName, element.DisplayName))+_vm._s(element.ExpresssionFieldName)+\" \")])]),_c('div',{staticClass:\"px-1 py-0 text-primary width80 text-truncate float-left font-14\"},[_vm._v(\" \"+_vm._s(element.OperatorDisplayName)+\" \")]),_c('div',{staticClass:\"px-1 py-0 hh text-truncate float-left font-12 w-100\"},[_vm._v(\" \"+_vm._s(element.valueTypeText)+\" \"+_vm._s(element.valueTypeNumber)+\" \"+_vm._s(element.valueTypeNumber2)+\" \"+_vm._s(_vm.$options.filters.formatDate(element.valueTypeFirstdate))+\" \"+_vm._s(_vm.$options.filters.formatDate(element.valueTypeSeconddate))+\" \"+_vm._s(element.ValueDisplayFirstTime)+\" \"+_vm._s(element.ValueDisplaySecondTime)+\" \"+_vm._s(element.Displaymultiplevalue)+\" \"+_vm._s(element.DropDownValue)+\" \")])]),_c('div',{staticClass:\"parentdiv datarepfix filters\"},[_c('a',{attrs:{\"aria-hidden\":\"true\"},on:{\"click\":function($event){return _vm.DeleteFilterFields(element, $event)}}},[_c('em',{class:!element.IsMandatoryforFilter ? 'fa fa-trash-o text-danger' : 'fa fa-trash-o text-danger d-none'})]),_c('a',{attrs:{\"aria-hidden\":\"true\"},on:{\"click\":function($event){return _vm.openrulespop(element, $event)}}},[_c('em',{staticClass:\"fa fa-cog action_icon_cv\"})]),_c('div',[_c('div',{staticClass:\"verticle-action rt25 rt502\"},[_c('span',{staticClass:\"action-list-box small filter-list-box\"},[_c('span',{staticClass:\"list-actions text-left p-0 datarep ml-3\",staticStyle:{\"width\":\"480px\"},attrs:{\"id\":\"action-list\"}},[_c('div',{staticClass:\"float-left col-12 p-0\"},[_c('div',{staticClass:\"container-fluid p-0 mb-3\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"theme-primary partition-full\"},[_c('span',{staticClass:\"p-name text-white mt-2\"},[_vm._v(\" \"+_vm._s(_vm.$t('Setting'))+\" \")])])])])]),_c('div',{staticClass:\"col-12 float-left\"},[_c('div',{staticClass:\"col-12 p-0 float-left\"},[_vm._l((_vm.GetOperator),function(item,itmInx){return _c('div',{key:itmInx,staticClass:\"form-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(element.selectedOPValue),expression:\"element.selectedOPValue\"}],staticClass:\"radio\",attrs:{\"type\":\"radio\",\"name\":'radiobtn' + (_vm.Filterlist.indexOf(element) + 1)},domProps:{\"value\":item.OPERATOR_ID,\"checked\":_vm._q(element.selectedOPValue,item.OPERATOR_ID)},on:{\"click\":function($event){return _vm.checkvalue(item.OPERATOR_DISPLAY_NAME, element, item.OPERATOR_EXPRESSION, item.OPERATOR_ID, item.MP[0].OPERATION_DATA_TYPE)},\"change\":function($event){return _vm.$set(element, \"selectedOPValue\", item.OPERATOR_ID)}}}),_c('label',{staticClass:\"ml-2\"},[_vm._v(\" \"+_vm._s(item.OPERATOR_DISPLAY_NAME)+\" \")]),_c('br')])}),(_vm.texttypevalue1)?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.ValueDisplaytext),expression:\"ValueDisplaytext\"}],staticClass:\"form-control\",attrs:{\"type\":\"text\",\"id\":\"inpttxt\"},domProps:{\"value\":(_vm.ValueDisplaytext)},on:{\"input\":function($event){if($event.target.composing)return;_vm.ValueDisplaytext=$event.target.value}}}):_vm._e(),(_vm.texttypevalue2)?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.ValueDisplaytext2),expression:\"ValueDisplaytext2\"}],staticClass:\"form-control\",attrs:{\"type\":\"text\",\"id\":\"inpttxt2\"},domProps:{\"value\":(_vm.ValueDisplaytext2)},on:{\"input\":function($event){if($event.target.composing)return;_vm.ValueDisplaytext2=$event.target.value}}}):_vm._e(),(_vm.numbertypevalue1)?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.ValueDisplaynumber),expression:\"ValueDisplaynumber\"}],class:{'form-control':true,'is-invalid':_vm.ValueDisplaynumber.length > 15},attrs:{\"type\":\"number\",\"id\":\"inpttxtbtw\",\"onKeyPress\":\"if(this.value.length==16) return false;\"},domProps:{\"value\":(_vm.ValueDisplaynumber)},on:{\"keydown\":function($event){return _vm.PreventValues($event)},\"input\":function($event){if($event.target.composing)return;_vm.ValueDisplaynumber=$event.target.value}}}):_vm._e(),_c('br'),(_vm.numbertypevalue2)?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.ValueDisplaynumber2),expression:\"ValueDisplaynumber2\"}],class:{ 'form-control': true, 'is-invalid': ((parseFloat(_vm.ValueDisplaynumber2) < parseFloat(_vm.ValueDisplaynumber) || \n                                                                                    parseFloat(_vm.ValueDisplaynumber2) == parseFloat(_vm.ValueDisplaynumber) || _vm.ValueDisplaynumber2.length > 15) && (_vm.ValueDisplaynumber2 != '' || _vm.ValueDisplaynumber2 == '0')) },attrs:{\"type\":\"number\",\"id\":\"inpttxtbtw\",\"onKeyPress\":\"if(this.value.length==16) return false;\"},domProps:{\"value\":(_vm.ValueDisplaynumber2)},on:{\"keydown\":function($event){return _vm.PreventValues($event)},\"input\":function($event){if($event.target.composing)return;_vm.ValueDisplaynumber2=$event.target.value}}}):_vm._e(),(((parseFloat(_vm.ValueDisplaynumber2) < parseFloat(_vm.ValueDisplaynumber) || \n                                                                                    parseFloat(_vm.ValueDisplaynumber2) == parseFloat(_vm.ValueDisplaynumber)) && (_vm.ValueDisplaynumber2 != '' || _vm.ValueDisplaynumber2 == '0')))?_c('span',{staticClass:\"invalid-feedback\"},[_vm._v(\"Second value should be greater than first value.\")]):_vm._e(),_c('span',{class:_vm.ValueDisplaynumber.length > 15 || _vm.ValueDisplaynumber2.length > 15 ? 'invalid-feedback':'d-none'},[_vm._v(\"Can not add more than 15 digits\")]),(_vm.datetypevalue1)?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.ValueDisplaydate),expression:\"ValueDisplaydate\"}],staticClass:\"form-control\",attrs:{\"type\":\"date\",\"id\":\"inpttxtdate1\",\"max\":\"9999-12-31\"},domProps:{\"value\":(_vm.ValueDisplaydate)},on:{\"input\":function($event){if($event.target.composing)return;_vm.ValueDisplaydate=$event.target.value}}}):_vm._e(),(_vm.datetypevalue2)?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.ValueDisplaydate2),expression:\"ValueDisplaydate2\"}],class:{ 'form-control': true, 'disabled': _vm.ValueDisplaydate == '','is-invalid': ((Date.parse(_vm.ValueDisplaydate2) < Date.parse(_vm.ValueDisplaydate) \n                                                                                    || Date.parse(_vm.ValueDisplaydate2) == Date.parse(_vm.ValueDisplaydate)) && _vm.ValueDisplaydate2 != '') },attrs:{\"type\":\"date\",\"id\":\"inpttxtdate2\",\"min\":_vm.ValueDisplaydate,\"max\":\"9999-12-31\"},domProps:{\"value\":(_vm.ValueDisplaydate2)},on:{\"input\":function($event){if($event.target.composing)return;_vm.ValueDisplaydate2=$event.target.value}}}):_vm._e(),(((Date.parse(_vm.ValueDisplaydate2) < Date.parse(_vm.ValueDisplaydate) \n                                                                                    || Date.parse(_vm.ValueDisplaydate2) == Date.parse(_vm.ValueDisplaydate)) && _vm.ValueDisplaydate2 != ''))?_c('span',{staticClass:\"invalid-feedback\"},[_vm._v(\"Second value should be greater than first value.\")]):_vm._e(),(_vm.timetypevalue)?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.ValueDisplayTime),expression:\"ValueDisplayTime\"}],staticClass:\"form-control\",attrs:{\"type\":\"time\",\"id\":\"inpttxttime1\"},domProps:{\"value\":(_vm.ValueDisplayTime)},on:{\"input\":function($event){if($event.target.composing)return;_vm.ValueDisplayTime=$event.target.value}}}):_vm._e(),(_vm.timetypevalue2)?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.ValueDisplayTime2),expression:\"ValueDisplayTime2\"}],class:{ 'form-control': true, 'disabled': _vm.ValueDisplayTime == '' },attrs:{\"type\":\"time\",\"id\":\"inpttxttime2\",\"min\":_vm.ValueDisplayTime},domProps:{\"value\":(_vm.ValueDisplayTime2)},on:{\"input\":function($event){if($event.target.composing)return;_vm.ValueDisplayTime2=$event.target.value}}}):_vm._e(),(_vm.DDLForFilter)?_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.modelFilterDDLValue),expression:\"modelFilterDDLValue\"}],staticClass:\"form-control\",on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.modelFilterDDLValue=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},[_c('option',{attrs:{\"disabled\":\"\"}},[_vm._v(\"Select \")]),_vm._l((_vm.options),function(DDLitem){return _c('option',{key:DDLitem.value,attrs:{\"title\":DDLitem.name},domProps:{\"value\":DDLitem.value}},[_vm._v(\" \"+_vm._s(_vm.TruncateStr(DDLitem.name, 50)))])})],2):_vm._e(),(_vm.multiselectvalue)?_c('div',[_c('dynamic-form',{attrs:{\"lang\":\"en\",\"buttons\":false,\"schema\":_vm.FormSchema}})],1):_vm._e()],2),_c('div',{staticClass:\"col-12 p-0 float-left mb-3 mt-3\"},[_c('div',{staticClass:\"row flex-row-reverse\"},[_c('div',{staticClass:\"col-lg-6 text-right\"},[_c('a',{class:{ 'btn btn-primary ancsaveuserticket text-white': true, 'disabled': (parseFloat(_vm.ValueDisplaynumber2) < parseFloat(_vm.ValueDisplaynumber) \n                                                                                            || parseFloat(_vm.ValueDisplaynumber2) == parseFloat(_vm.ValueDisplaynumber) || _vm.ValueDisplaynumber.length > 15 || _vm.ValueDisplaynumber2.length > 15 && _vm.numbertypevalue2)\n                                                                                            || (Date.parse(_vm.ValueDisplaydate2) < Date.parse(_vm.ValueDisplaydate) || Date.parse(_vm.ValueDisplaydate2) == Date.parse(_vm.ValueDisplaydate) && _vm.datetypevalue2) },attrs:{\"id\":\"btnSaveTicket\",\"title\":\"\",\"data-toggle-tooltip\":\"tooltip\",\"data-original-title\":\"Click here to submit ticket\"},on:{\"click\":function($event){return _vm.applySetting(element.CustomFieldId)}}},[_c('em',{class:{ 'fa fa-save text-white': true, 'disabled': (parseFloat(_vm.ValueDisplaynumber2) < parseFloat(_vm.ValueDisplaynumber) \n                                                                                                || parseFloat(_vm.ValueDisplaynumber2) == parseFloat(_vm.ValueDisplaynumber) || _vm.ValueDisplaynumber.length > 15 || _vm.ValueDisplaynumber2.length > 15 && _vm.numbertypevalue2) \n                                                                                                || (Date.parse(_vm.ValueDisplaydate2) < Date.parse(_vm.ValueDisplaydate) || Date.parse(_vm.ValueDisplaydate2) == Date.parse(_vm.ValueDisplaydate) && _vm.datetypevalue2)}}),_vm._v(\"Apply\")])])])])])]),_c('em',{staticClass:\"fa fa-times close close-action_cv\",attrs:{\"aria-hidden\":\"true\"},on:{\"click\":function($event){return _vm.ClosePopFilter()}}}),_c('div',{staticClass:\"va_rt25\"},[_c('em',{staticClass:\"icon-solid arrow-solid-left text-dark\",staticStyle:{\"font-size\":\"20pt\"}})])])])])])])])}),0)],1),_c('hr')])],1),_vm._m(3)],1)])])])]),(_vm.showReportPreview)?_c('ReportPreview',{ref:\"reportdata\",attrs:{\"previewdata\":_vm.previewdata,\"customreportparameters\":_vm.customreportparameters,\"Columnlist\":_vm.Columnlist,\"Grouplist\":_vm.Grouplist,\"saveJsonReport\":_vm.saveJsonReport,\"PdfJsonReport\":_vm.PdfJsonReport,\"editjsondata\":_vm.editjsondata,\"ReportName\":_vm.ReportName,\"GraphData\":_vm.graphData,\"SortingData\":_vm.sortingData,\"GraphJson\":_vm.GraphJson,\"LevelOfGrouping\":_vm.LevelOfGrouping}}):_vm._e(),(_vm.showcalculatedUI)?_c('CalculatedUI',{ref:\"Calculated\",attrs:{\"customreportparameters\":_vm.customreportparameters,\"Columnlist\":_vm.Columnlist,\"ExpFieldDataArray\":_vm.ExpFieldDataArray,\"editexpressionvalue\":_vm.editexpressionvalue,\"ExpDataArray\":_vm.ExpDataArray,\"AlreadyExistExpression\":_vm.AlreadyExistExpression},on:{\"close\":function($event){_vm.showcalculatedUI = false},\"VerifiedExpressionData\":_vm.VerifiedExpressionColumnValue}}):_vm._e()],1)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"input-group-append\"},[_c('span',{staticClass:\"input-group-text bg-transparent bg-white border-left-0\"})])\n},function (){var _vm=this,_c=_vm._self._c;return _c('a',{staticClass:\"tab-Search-btn\"},[_c('em',{staticClass:\"fa fa-search\",attrs:{\"aria-hidden\":\"true\"}})])\n},function (){var _vm=this,_c=_vm._self._c;return _c('span',{staticClass:\"expand_all_filters\",staticStyle:{\"position\":\"absolute\",\"left\":\"0\"}},[_c('span',[_c('a',{staticClass:\"collapsed\",attrs:{\"title\":\"Expand\",\"data-toggle-tooltip\":\"tooltip\"}},[_c('em',{staticClass:\"fa fa-angle-double-right mt-1\",attrs:{\"aria-hidden\":\"true\"}})])])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"tab-pane\",attrs:{\"role\":\"tabpanel\",\"id\":\"tab-em-groups\"}},[_c('div',{staticClass:\"col-sm-12 col-md-12 col-lg-12 col-xl-12 p-0\"},[_c('div',{staticClass:\"listing\"},[_c('div',{staticClass:\"table-responsive\"})])])])\n}]\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('div',{staticClass:\"right-content datareport hr_jobpost\"},[_c('div',{staticClass:\"col-md-12 p-0 mb-2\"},[_c('div',{staticClass:\"theme-primary partition p-actions-expand\"},[_c('loader',{attrs:{\"isVisible\":_vm.isLoading}}),_c('span',{staticClass:\"p-name text-white\"},[_vm._v(_vm._s(_vm.$t('ReportPreview')))]),_c('span',{staticClass:\"p-actions float-right mydbsize\"},[_c('a',{staticClass:\"p-action-btn text-white dash\",attrs:{\"data-original-title\":\"REPORT PREVIEW\"},on:{\"click\":_vm.PreviewReport}},[_c('em',{staticClass:\"fa fa-play\"}),_c('br'),_vm._v(_vm._s(_vm.$t('ReportPreview'))+\" \")]),_c('a',{staticClass:\"p-action-btn text-white dash\",attrs:{\"data-original-title\":\"RESET\"},on:{\"click\":_vm.ResetData}},[_c('em',{staticClass:\"fa fa-repeat\"}),_c('br'),_vm._v(_vm._s(_vm.$t('Reset'))+\" \")]),_c('a',{staticClass:\"p-action-btn text-white dash\",attrs:{\"data-original-title\":\"PDF\"},on:{\"click\":_vm.ExportToPDF}},[_c('em',{staticClass:\"fa fa-file-pdf-o\"}),_c('br'),_vm._v(_vm._s(_vm.$t('ExportToPdf'))+\" \")]),_c('a',{staticClass:\"p-action-btn text-white dash\",attrs:{\"data-original-title\":\"Excel\"},on:{\"click\":_vm.ExportToExcel}},[_c('em',{staticClass:\"fa fa-file-excel-o\"}),_c('br'),_vm._v(_vm._s(_vm.$t('ExportToExcel'))+\" \")]),_c('a',{staticClass:\"p-action-btn text-white dash\",attrs:{\"data-original-title\":\"SORT\"},on:{\"click\":_vm.OpenSortingPopup}},[_c('em',{staticClass:\"fa fa-sort-amount-asc\"}),_c('br'),_vm._v(_vm._s(_vm.$t('SORT'))+\" \")]),_c('a',{staticClass:\"p-action-btn text-white dash\",attrs:{\"data-original-title\":\"GRAPH\"},on:{\"click\":_vm.OpenGraph}},[_c('em',{staticClass:\"fa fa-pie-chart\"}),_c('br'),_vm._v(_vm._s(_vm.$t('Graph'))+\" \")])]),_vm._m(0)],1),_c('div',{staticClass:\"parentdiv datarepfix2\"},[_c('div',{staticClass:\"verticle-action lft75 rt30 llt\"},[_c('span',{staticClass:\"action-list-box small\",staticStyle:{\"width\":\"400px\"}},[(_vm.isSortPopup)?_c('span',{staticClass:\"text-left p-0 datarep mt-3 w-90 float-left bg_outerdark borderbababa position-relative\",attrs:{\"id\":\"action-list1\"}},[_c('div',{staticClass:\"float-left col-12\"},[_c('div',{staticClass:\"container-fluid p-0 mb-3\"}),_vm._l((_vm.sortColummnarray),function(input,index){return _c('div',{key:`phoneInput-${index}`,staticClass:\"row px-3 pb-0\"},[_c('div',{staticClass:\"col-lg-5 pl-0 pr-3\"},[_c('div',{staticClass:\"form-group\"},[_c('label',[_vm._v(_vm._s(_vm.$t('SortBy')))]),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(input.sortcolummnId),expression:\"input.sortcolummnId\"}],staticClass:\"form-control\",on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(input, \"sortcolummnId\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},_vm._l((_vm.Columnlist.filter(x => x.Calculated_Field == false)),function(item){return _c('option',{key:item.CustomFieldId,attrs:{\"disabled\":(_vm.sortColummnarray.filter(x => x.sortcolummnId == item.CustomFieldId)).length > 0},domProps:{\"value\":item.CustomFieldId}},[_vm._v(\" \"+_vm._s(item.DisplayName ? _vm.GetLocalizedValue(item.DisplayName) : _vm.GetLocalizedValue(item.FieldName))+\" \")])}),0)])]),_c('div',{staticClass:\"col-lg-5 pl-0 pr-3\"},[_c('div',{staticClass:\"form-group\"},[_c('label',[_vm._v(_vm._s(_vm.$t('OrderBy')))]),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(input.columnOrders),expression:\"input.columnOrders\"}],staticClass:\"form-control\",on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(input, \"columnOrders\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},[_c('option',[_vm._v(_vm._s(_vm.$t('ASC')))]),_c('option',[_vm._v(_vm._s(_vm.$t('DESC')))])])])]),_c('div',{staticClass:\"col-lg-2\"},[_c('div',{staticClass:\"form-group\"},[_c('a',{on:{\"click\":function($event){return _vm.AddSortingForm(input)}}},[_c('em',{staticClass:\"fa fa-plus-circle font-24 text-success mt-3\"})]),_c('a',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.sortColummnarray[0].sortcolummnId != '' || _vm.isValueExistInSort),expression:\"sortColummnarray[0].sortcolummnId != '' || isValueExistInSort\"}],on:{\"click\":function($event){return _vm.RemoveSortingForm(input)}}},[_c('em',{staticClass:\"fa fa-times-circle font-24 text-danger mt-3 ml-1\"})])])])])})],2),_vm._m(1),_c('button',{staticClass:\"close closebtnsmall\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.close()}}},[_c('em',{staticClass:\"fa fa-times\",attrs:{\"aria-hidden\":\"true\"}})])]):_vm._e()])])])]),_c('div',{staticClass:\"col-md-12 p-0 mb-2\"},[_c('div',{staticClass:\"tab-pane mb-0\"},[_c('div',{staticClass:\"tab-content fsmtabcontrolMobileView\",attrs:{\"id\":\"myTabContent\"}},[_vm._m(2),(_vm.showGraphOptions)?_c('div',{staticClass:\"card mb-3 probx\"},[_c('div',{staticClass:\"card-header\"},[_c('h2',[_vm._v(_vm._s(_vm.$t('Graph')))]),_c('a',{staticClass:\"btn btn-primary\",on:{\"click\":_vm.OpenGraphOptions}},[_vm._v(_vm._s(_vm.$t('GraphOptions'))+\" \"),_c('em',{staticClass:\"fa fa-cogs\"})])]),(_vm.showChart)?_c('div',{staticClass:\"card-body\",staticStyle:{\"min-height\":\"245px\"},attrs:{\"id\":\"Reportpdf\"}},[_c('div',{staticClass:\"float-right\"},[_c('a',{staticClass:\"text-center text-danger\",on:{\"click\":function($event){return _vm.ResetGraphData()}}},[_c('span',{staticClass:\"fa fa-trash-o text-danger\",staticStyle:{\"font-size\":\"25px\"}})])]),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12 col-lg-12 text-center p-0\"},[_c('div',{staticClass:\"border bg-light float-left text-left p-0 graphinfo_base_lft\"},[_c('ul',{staticClass:\"graphinfo\"},[_c('li',[_c('label',[_vm._v(\"X-axis:\")]),_vm._v(\" \"+_vm._s(_vm.GetLocalizedValue(_vm.FilterCustomFieldName(_vm.XAxisField))))]),_c('li',[_c('label',[_vm._v(\"Y-axis:\")]),_vm._v(\" \"+_vm._s(_vm.GetLocalizedValue(_vm.FilterCustomFieldName(_vm.YAxisField))))]),_c('li',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.aggregateFunctionResult != 0),expression:\"aggregateFunctionResult != 0\"}]},[_c('label',[_vm._v(\"# \"+_vm._s(_vm.aggregateFunctionType)+\":\")]),_vm._v(\" \"+_vm._s(_vm.aggregateFunctionResult)+\" \")])])]),(_vm.chartType == 'line' || _vm.chartType == 'bar')?_c('div',{staticClass:\"p-0 m-0 float-left graphinfo_base_rgt\"},[_c('VueApexCharts',{ref:\"chart\",attrs:{\"type\":_vm.chartType,\"height\":\"auto\",\"options\":_vm.chartOptions,\"series\":_vm.chartSeries}})],1):_vm._e(),(_vm.chartType == 'pie' || _vm.chartType == 'donut')?_c('div',{staticClass:\"p-0 m-0 float-left graphinfo_base_rgt\"},[_c('VueApexCharts',{ref:\"chart\",attrs:{\"type\":_vm.chartType,\"height\":\"auto\",\"options\":_vm.chartOptions,\"series\":_vm.chartSeries}})],1):_vm._e()])])]):_vm._e()]):_vm._e(),_c('div',{staticClass:\"tab-pane p-0 pb-2 border-0 active\",attrs:{\"role\":\"tabpanel\",\"id\":\"tab-detail-content\",\"aria-labelledby\":\"tab-detail-content\"}},[_c('div',{staticClass:\"listing mt-3\"},[_c('div',{staticClass:\"table-responsive table-fix-header\"},[_c('table',{staticClass:\"table table-bordered mt-0\",staticStyle:{\"width\":\"100%\"},attrs:{\"id\":\"Reportpdf\",\"aria-label\":\"Report Preview Listing\"}},[_c('thead',{staticClass:\"thead-bg\"},[_c('tr',[_vm._l((_vm.previewgroupdata),function(item,index){return (_vm.showdata)?_c('th',{key:index,attrs:{\"scope\":\"col\"}},[_vm._v(\" \"+_vm._s(_vm.GetLocalizedValue((item.DisplayName != null && item.DisplayName != '') ? item.DisplayName : item.FieldName)))]):_vm._e()}),_vm._l((_vm.previewcolumn),function(column,index){return _c('th',{key:index,attrs:{\"scope\":\"col\"}},[_vm._v(\" \"+_vm._s(_vm.GetLocalizedValue((column.DisplayName != null && column.DisplayName != '') ? column.DisplayName : column.FieldName))+_vm._s(column.ExpresssionFieldName)+\" \")])})],2)]),(_vm.noRecord)?_c('tbody',[_c('tr',{staticStyle:{\"cursor\":\"initial\"}},[_c('td',{attrs:{\"colspan\":\"4\"}},[_c('div',{staticClass:\"text-center text-danger d-flex align-items-center justify-content-center norecs\"},[_vm._v(\" \"+_vm._s(_vm.$t(\"NoRecordfound\")))])])])]):_vm._e(),_vm._l((_vm.previewdata),function(item,index){return _c('tbody',[_vm._l((_vm.previewdata[index].data),function(sitem,sindex){return (_vm.showdata)?_c('tr',[(sindex == 0)?_vm._l((_vm.previewgroupdata),function(gitem,gindex){return _c('td',{class:{ 'onlyrtbod': true, '': item.totalRecord == null },attrs:{\"rowspan\":item.totalRecord}},[_vm._v(\" \"+_vm._s((item[gitem.DisplayName] != null && item[gitem.DisplayName] != '') ? item[gitem.DisplayName] : item[gitem.FieldName])+\" \"),_vm._v(\" (\"+_vm._s((item[gitem.DisplayName] != null && item[gitem.DisplayName] != '' || gitem.FieldName != null && gitem.FieldName != '') ? item.totalRecord : '-')+\") \")])}):_vm._e(),_vm._l((_vm.previewcolumn),function(column,i){return _c('td',{key:i},[_c('span',{domProps:{\"innerHTML\":_vm._s((sitem[column.DisplayName] == true && sitem[column.DisplayName] != 1 || sitem[column.DisplayName] == false && sitem[column.DisplayName] != 0) ?\n                                                    (sitem[column.DisplayName] == true ? 'YES' : 'NO') : (sitem[column.FieldName]\n                                                    == true ? 'YES' : 'NO') ||\n                                                    (sitem[column.DisplayName] != null && sitem[column.DisplayName] != '') ?\n                                                    (sitem[column.DisplayName] || sitem[column.DisplayName] == 0 ? sitem[column.DisplayName] : '') :\n                                                    (sitem[column.FieldName] || sitem[column.DisplayName] == 0 ? sitem[column.FieldName] : ''))}})])})],2):_vm._e()}),(_vm.showcoldata)?_c('tr',_vm._l((_vm.previewcolumn),function(column,i){return _c('td',{key:i},[_c('span',{domProps:{\"innerHTML\":_vm._s((item[column.DisplayName] == true && item[column.DisplayName] != 1 || item[column.DisplayName] == false && item[column.DisplayName] != 0) ?\n                                                    (item[column.DisplayName] == true ? 'YES' : 'NO') : (item[column.FieldName]\n                                                    == true ? 'YES' : 'NO') ||\n                                                    (item[column.DisplayName] != null && item[column.DisplayName] != '') ?\n                                                    (item[column.DisplayName] || item[column.DisplayName] == 0 ? item[column.DisplayName] : '') :\n                                                    (item[column.FieldName] || item[column.DisplayName] == 0 ? item[column.FieldName] : ''))}}),_vm._v(\" \"+_vm._s(item[column.ExpresssionFieldName])+\" \")])}),0):_vm._e()],2)})],2)])])]),_c('div',{staticClass:\"float-right\"},[_c('a',{staticClass:\"btn btn-success my-2 my-sm-0 mr-2\",on:{\"click\":function($event){return _vm.SaveAllReport()}}},[_vm._v(\"  \"),_c('span',{staticClass:\"fa fa-floppy-o\"}),_vm._v(\" \"+_vm._s(_vm.$t('Save'))+\" \")]),_c('a',{staticClass:\"btn btn-danger\",on:{\"click\":function($event){return _vm.CancelAll()}}},[_vm._v(\"  \"),_c('span',{staticClass:\"fa fa-times\"}),_vm._v(\" \"+_vm._s(_vm.$t('Cancel'))+\" \")])])])])])]),_c('modalGraphOptions',{ref:\"modalGraph\",attrs:{\"Columnlist\":_vm.Columnlist,\"showGraphOptions\":_vm.showGraphOptions,\"customreportparameters\":_vm.customreportparameters,\"GraphData\":_vm.GraphData,\"sortColummnarray\":_vm.sortColummnarray,\"GraphJson\":_vm.GraphJson}})],1)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('span',{staticClass:\"collapse-head-btns\"},[_c('a',{staticClass:\"collapse-btns\",attrs:{\"href\":\"javascript:;\"}},[_c('em',{staticClass:\"fa fa-angle-up text-white\"})])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"va_lft25 top4\"},[_c('em',{staticClass:\"icon-solid arrow-solid-left text-secondary\",staticStyle:{\"font-size\":\"20pt\"}})])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"expand-list\"},[_c('a',{staticClass:\"expand-list-btn justify-content-center align-items-center\",attrs:{\"href\":\"javascript:;\"}},[_c('em',{staticClass:\"icon-solid arrow-solid-left text-white\",staticStyle:{\"font-size\":\"9pt\"}})])])\n}]\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"modal my-popups right fade\",attrs:{\"id\":\"CustomGraphOptions\",\"role\":\"dialog\",\"data-backdrop\":\"static\",\"data-keyboard\":\"false\"}},[_c('div',{staticClass:\"modal-dialog mw-1100\",attrs:{\"role\":\"document\"}},[_c('div',{staticClass:\"modal-content\"},[_c('div',{staticClass:\"modal-header mheader-user\"},[_c('button',{staticClass:\"close\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.CloseGraphOptions()}}},[_c('em',{staticClass:\"fa fa-times\",attrs:{\"aria-hidden\":\"true\"}})]),_c('h4',{staticClass:\"modal-title\",attrs:{\"id\":\"myModalLabel\"}},[_vm._v(_vm._s(_vm.$t(\"GraphSetting\")))]),_c('span',{staticClass:\"user-guide\"},[_c('a',{staticClass:\"ancuserguide\",attrs:{\"data-toggle\":\"collapse\",\"href\":\"javascript:;\",\"role\":\"button\",\"aria-expanded\":\"false\",\"aria-controls\":\"collapseExample\"}},[_vm._v(_vm._s(_vm.$t(\"GuideForUser\")))]),_c('div',{staticClass:\"divancuserguide collapse overflow-auto\",attrs:{\"id\":\"collapseReplyUG\"}},[_c('div',{staticClass:\"custom-scrollbar-js\",attrs:{\"id\":\"scrollbarreplyuserguideMangeView\"}},[_c('div',{staticClass:\"con\",domProps:{\"innerHTML\":_vm._s(_vm.$t('User_Guide_Graph_Option'))}})])])])]),_c('div',{staticClass:\"modal-body p-3\"},[_c('loader',{attrs:{\"is-visible\":_vm.isLoading}}),_c('div',{staticClass:\"container-fluid tab-content\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-6\"},[_c('dynamic-form',{ref:\"refGraphForm\",attrs:{\"lang\":\"en\",\"buttons\":false,\"schema\":_vm.FormSchema},on:{\"OnSubmit\":_vm.onSubmit},scopedSlots:_vm._u([{key:\"tgslot-chartlist\",fn:function({ data }){return [_c('div',{staticClass:\"user_type_choice coloredicons row\"},_vm._l((_vm.chartTypes),function(item,index){return _c('div',{key:index,staticClass:\"btn-group btn-group-toggle mb-2\",attrs:{\"data-toggle\":\"buttons\"}},[_c('label',{class:{ 'btn btn_cstm': true, 'active': (item.id == _vm.selectedChartTypeID) },attrs:{\"for\":'cls_usertype' + index}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.selectedChartTypeID),expression:\"selectedChartTypeID\"}],attrs:{\"type\":\"radio\",\"name\":\"cls_usertype\",\"id\":'cls_usertype' + index},domProps:{\"value\":item.id,\"checked\":_vm._q(_vm.selectedChartTypeID,item.id)},on:{\"change\":function($event){_vm.selectedChartTypeID=item.id}}}),_c('span',{staticClass:\"d-block pb-2\"},[_c('em',{class:[item.chart_Type == 'Pie' ? 'fa fa-pie-chart bg-transparent' : '',\n                                                    item.chart_Type == 'Bar' ? 'fa fa-bar-chart bg-transparent' : '',\n                                                    item.chart_Type == 'Line' ? 'fa fa-line-chart bg-transparent' : '',\n                                                    item.chart_Type == 'Horizontal_Bar' ? 'fa fa-bars bg-transparent' : '',\n                                                    item.chart_Type == 'Donut' ? 'fa fa-circle-o-notch bg-transparent' : ''],attrs:{\"aria-hidden\":\"true\"}})])])])}),0),(data.error != '')?_c('span',{staticClass:\"invalid-feedback d-block\"},[_vm._v(_vm._s(data.error))]):_vm._e()]}}])})],1),_c('div',{staticClass:\"col-md-6\"},[_c('div',{staticClass:\"p-3 bg-light border\"},[_c('div',{staticClass:\"heading-border\"},[_c('h5',{staticClass:\"h5\"},[_c('span',[_vm._v(_vm._s(_vm.$t('Preview')))])])]),_c('span',{staticClass:\"text-center my-3 w-100 float-left\"},[_vm._v(_vm._s(_vm.FormSchema[0].Data[0].value)+\" - \"),_c('button',{staticClass:\"btn btn-info mt-2\",attrs:{\"href\":\"javascript:;\"},on:{\"click\":_vm.ViewReportGraph}},[_vm._v(\" \"+_vm._s(_vm.$t('ViewReport'))+\" \")])]),(_vm.PreviewChart)?_c('div',{staticClass:\"col-sm-12 col-lg-12 px-0 py-4 float-left bg-white\"},[_c('VueApexCharts',{attrs:{\"type\":_vm.selectedChartType,\"options\":_vm.chartOptions,\"series\":_vm.chartseries}}),(_vm.aggregateFunctionResult != 0)?_c('div',{class:_vm.selectedChartType == 'pie' || _vm.selectedChartType == 'donut' ? 'text-left pl-4 ml-4' : 'text-center'},[_c('a',{attrs:{\"href\":\"javascript:;\"}},[_vm._v(_vm._s(_vm.resultMsg)+\" : \"+_vm._s(_vm.aggregateFunctionResult))])]):_vm._e()],1):_vm._e()])])]),_c('div',{staticClass:\"col-12 p-0 mt-3 float-left\"},[_c('div',{staticClass:\"row flex-row-reverse\"},[_c('div',{staticClass:\"col-lg-6 text-right\"},[_c('button',{staticClass:\"btn btn-success ancsaveuserticket\",on:{\"click\":_vm.ApplyGraph}},[_c('em',{staticClass:\"fa fa-share pr-2\"}),_vm._v(_vm._s(_vm.$t('Apply')))])])])])])],1)])])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div id=\"CustomGraphOptions\" role=\"dialog\" class=\"modal my-popups right fade\" data-backdrop=\"static\"\r\n        data-keyboard=\"false\" v-cloak>\r\n        <div role=\"document\" class=\"modal-dialog mw-1100\">\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header mheader-user\">\r\n                    <button type=\"button\" class=\"close\" v-on:click=\"CloseGraphOptions()\">\r\n                        <em aria-hidden=\"true\" class=\"fa fa-times\"></em>\r\n                    </button>\r\n                    <h4 id=\"myModalLabel\" class=\"modal-title\">{{ $t(\"GraphSetting\") }}</h4>\r\n                    <span class=\"user-guide\">\r\n                        <a class=\"ancuserguide\" data-toggle=\"collapse\" href=\"javascript:;\" role=\"button\"\r\n                            aria-expanded=\"false\" aria-controls=\"collapseExample\">{{ $t(\"GuideForUser\") }}</a>\r\n                        <div id=\"collapseReplyUG\" class=\"divancuserguide collapse overflow-auto\">\r\n                            <div id=\"scrollbarreplyuserguideMangeView\" class=\"custom-scrollbar-js\">\r\n                                <div class=\"con\" v-html=\"$t('User_Guide_Graph_Option')\"></div>\r\n                            </div>\r\n                        </div>\r\n                    </span>\r\n                </div>\r\n                <div class=\"modal-body p-3\">\r\n                    <loader :is-visible=\"isLoading\"></loader>\r\n                    <div class=\"container-fluid tab-content\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6\">\r\n                                <dynamic-form lang=\"en\" ref=\"refGraphForm\" :buttons=\"false\" :schema=\"FormSchema\"\r\n                                    v-on:OnSubmit=\"onSubmit\">\r\n                                    <template v-slot:tgslot-chartlist=\"{ data }\">\r\n                                        <div class=\"user_type_choice coloredicons row\">\r\n                                            <div class=\"btn-group btn-group-toggle mb-2\" data-toggle=\"buttons\"\r\n                                                v-for=\"(item, index) in chartTypes\" :key=\"index\">\r\n                                                <label\r\n                                                    v-bind:class=\"{ 'btn btn_cstm': true, 'active': (item.id == selectedChartTypeID) }\"\r\n                                                    v-bind:for=\"'cls_usertype' + index\">\r\n                                                    <input type=\"radio\" v-bind:value=\"item.id\" name=\"cls_usertype\"\r\n                                                        v-bind:id=\"'cls_usertype' + index\" v-model=\"selectedChartTypeID\" />\r\n                                                    <span class=\"d-block pb-2\">\r\n                                                        <em :class=\"[item.chart_Type == 'Pie' ? 'fa fa-pie-chart bg-transparent' : '',\r\n                                                        item.chart_Type == 'Bar' ? 'fa fa-bar-chart bg-transparent' : '',\r\n                                                        item.chart_Type == 'Line' ? 'fa fa-line-chart bg-transparent' : '',\r\n                                                        item.chart_Type == 'Horizontal_Bar' ? 'fa fa-bars bg-transparent' : '',\r\n                                                        item.chart_Type == 'Donut' ? 'fa fa-circle-o-notch bg-transparent' : '']\"\r\n                                                            aria-hidden=\"true\"></em>\r\n                                                    </span>\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n                                        <span class=\"invalid-feedback d-block\" v-if=\"data.error != ''\">{{ data.error }}</span>\r\n                                    </template>\r\n                                </dynamic-form>\r\n                            </div>\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"p-3 bg-light border\">\r\n                                    <div class=\"heading-border\">\r\n                                        <h5 class=\"h5\"><span>{{ $t('Preview') }}</span></h5>\r\n                                    </div>\r\n                                    <span class=\"text-center my-3 w-100 float-left\">{{ FormSchema[0].Data[0].value }} -\r\n                                        <button href=\"javascript:;\" class=\"btn btn-info mt-2\" v-on:click=\"ViewReportGraph\">\r\n                                            {{ $t('ViewReport') }}\r\n                                        </button>\r\n                                    </span>\r\n                                    <div v-if=\"PreviewChart\" class=\"col-sm-12 col-lg-12 px-0 py-4 float-left bg-white\">\r\n                                        <VueApexCharts :type=\"selectedChartType\" :options=\"chartOptions\"\r\n                                            :series=\"chartseries\">\r\n                                        </VueApexCharts>\r\n                                        <div :class=\"selectedChartType == 'pie' || selectedChartType == 'donut' ? 'text-left pl-4 ml-4' : 'text-center'\"\r\n                                            v-if=\"aggregateFunctionResult != 0\">\r\n                                            <a href=\"javascript:;\">{{ resultMsg }} : {{ aggregateFunctionResult }}</a>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <!-- <div class=\"col-lg-12\">\r\n                                        <div class=\"form-group\">\r\n                                            <label>{{ $t('ViewAs') }}:</label>\r\n                                            <div v-if=\"isTypeInteger\" class=\"input-group\">\r\n                                                <input name=\"sum\" v-model=\"aggregateFunctionType\" value=\"Sum\" type=\"radio\"\r\n                                                    class=\"mr-2\" />{{ $t('Sum') }}\r\n                                                <input name=\"sum\" v-model=\"aggregateFunctionType\" value=\"Avg\" type=\"radio\"\r\n                                                    class=\"mr-2 ml-3\" />{{ $t('Average') }}\r\n                                                <input name=\"sum\" v-model=\"aggregateFunctionType\" value=\"Min\" type=\"radio\"\r\n                                                    class=\"mr-2 ml-3\" />{{ $t('Min') }}\r\n                                                <input name=\"sum\" v-model=\"aggregateFunctionType\" value=\"Max\" type=\"radio\"\r\n                                                    class=\"mr-2 ml-3\" />{{ $t('Max') }}\r\n                                                <input name=\"sum\" v-model=\"aggregateFunctionType\" value=\"Count\" type=\"radio\"\r\n                                                    class=\"mr-2 ml-3\" />{{ $t('Count') }}\r\n                                            </div>\r\n                                            <div class=\"input-group\" v-if=\"!isTypeInteger\">\r\n                                                <input name=\"sum\" v-model=\"aggregateFunctionType\" value=\"Count\" checked\r\n                                                    type=\"radio\" class=\"mr-2 ml-3\" />{{ $t('Count') }}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                        </div> -->\r\n                            <!-- <div class=\"col-sm-12 col-lg-6 p-3 bg-light border\">\r\n                                <div class=\"heading-border\">\r\n                                    <h5 class=\"h5\"><span>{{ $t('Preview') }}</span></h5>\r\n                                </div>\r\n                                <span class=\"text-center my-3 w-100 float-left\">{{ reportTitle }} -\r\n                                    <button href=\"#\" class=\"btn btn-info\" @click=\"ViewReportGraph\">\r\n                                        {{ $t('ViewReport') }}\r\n                                    </button>\r\n                                </span>\r\n                                <div v-if=\"PreviewChart\" class=\"col-sm-12 col-lg-12 px-0 py-4 float-left bg-white\">\r\n                                    <VueApexCharts :type=\"selectedChartType\" :options=\"chartOptions\" :series=\"chartseries\">\r\n                                    </VueApexCharts>\r\n                                    <div :class=\"selectedChartType == 'pie' || selectedChartType == 'donut' ? 'text-left pl-4 ml-4' : 'text-center'\"\r\n                                        v-if=\"aggregateFunctionResult != 0\">\r\n                                        <a href=\"#\">{{ resultMsg }} : {{ aggregateFunctionResult }}</a>\r\n                                    </div>\r\n                                </div>\r\n                            </div> -->\r\n\r\n                        </div>\r\n\r\n\r\n                        <!-- <Form v-slot=\"{ values, meta }\" ref=\"form\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-12 col-lg-6 float-left leftsideicon pl-0 py-3 border\">\r\n                                    <div class=\"col-lg-12\">\r\n                                        <div class=\"form-group\">\r\n                                            <label>{{ $t('ReportTitle') }} :</label>\r\n                                            <input v-model=\"reportTitle\" placeholder=\"Report Title\" class=\"form-control\"\r\n                                                type=\"text\" maxlength=\"50\" disabled />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-lg-12\">\r\n                                        <div class=\"form-group\">\r\n                                            <Field name=\"ChartTypes\" :rules=\"{ 'required': true }\" label=\"Chart Type\"\r\n                                                v-slot=\"{ field, errorMessage, meta }\">\r\n                                                <label>{{ $t('ChartTypes') }}<span class=\"text-danger\">*</span></label>\r\n                                                <div class=\"user_type_choice coloredicons row\"\r\n                                                    v-bind:class=\"{ '': true, 'is-invalid': meta.touched && !meta.valid && !selectedChartTypeID }\">\r\n                                                    <div class=\"btn-group btn-group-toggle mb-2\" data-toggle=\"buttons\"\r\n                                                        v-for=\"(item, index) in chartTypes\" :key=\"index\">\r\n                                                        <label\r\n                                                            v-bind:class=\"{ 'btn btn_cstm': true, 'active': (item.id == selectedChartTypeID) }\"\r\n                                                            v-bind:for=\"'cls_usertype' + index\">\r\n                                                            <input v-bind=\"field\" type=\"radio\" v-bind:value=\"item.id\"\r\n                                                                name=\"cls_usertype\" v-bind:id=\"'cls_usertype' + index\"\r\n                                                                v-model=\"selectedChartTypeID\" />\r\n                                                            <span class=\"d-block pb-2\">\r\n                                                                <em :class=\"[item.chart_Type == 'Pie' ? 'fa fa-pie-chart bg-transparent' : '',\r\n                                                                item.chart_Type == 'Bar' ? 'fa fa-bar-chart bg-transparent' : '',\r\n                                                                item.chart_Type == 'Line' ? 'fa fa-line-chart bg-transparent' : '',\r\n                                                                item.chart_Type == 'Horizontal_Bar' ? 'fa fa-bars bg-transparent' : '',\r\n                                                                item.chart_Type == 'Donut' ? 'fa fa-circle-o-notch bg-transparent' : '']\"\r\n                                                                    aria-hidden=\"true\"></em>\r\n                                                            </span>\r\n                                                        </label>\r\n\r\n                                                    </div>\r\n                                                </div>\r\n                                                <span name=\"ChartTypes\" v-if=\"meta.touched && !meta.valid\"\r\n                                                    class=\"invalid-feedback\">\r\n                                                    {{ errorMessage }}\r\n                                                </span>\r\n                                            </Field>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-lg-12\">\r\n                                        <div class=\"form-group\">\r\n                                            <Field name=\"selectedChartXAxis\" :rules=\"{ 'required': true }\"\r\n                                                v-model=\"selectedChartXAxis\" label=\"X Axis\"\r\n                                                v-slot=\"{ field, errorMessage, meta }\">\r\n                                                <label>{{ $t('XAXIS') }}<span class=\"text-danger\">*</span></label>\r\n                                                <div class=\"input-group\">\r\n                                                    <select v-bind=\"field\" @change=\"CheckFieldTypeX(selectedChartXAxis)\"\r\n                                                        v-bind:class=\"{ 'form-control': true, 'is-invalid': meta.touched && !meta.valid && !selectedChartXAxis }\">\r\n                                                        <option value=\"\" disabled>Select</option>\r\n                                                        <option v-for=\"item in Columnlist\"\r\n                                                            :value=\"item.CustomFieldId != '' ? item.CustomFieldId : item.FieldName\"\r\n                                                            :key=\"item.CustomFieldId\">\r\n                                                            {{ GetLocalizedValue((item.DisplayName != null &&\r\n                                                                item.DisplayName != '') ?\r\n                                                                item.DisplayName : item.FieldName) }}\r\n                                                        </option>\r\n                                                    </select>\r\n                                                    <span name=\"selectedChartXAxis\" v-if=\"meta.touched && !meta.valid\"\r\n                                                        class=\"invalid-feedback\">{{\r\n                                                            errorMessage\r\n                                                        }}</span>\r\n                                                </div>\r\n                                            </Field>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-lg-12\">\r\n                                        <div class=\"form-group\">\r\n                                            <label>{{ $t('YAXIS') }}<span class=\"text-danger\">*</span></label>\r\n                                            <div class=\"input-group\">\r\n                                                <Field name=\"selectedChartYAxis\" :rules=\"{ 'required': true }\"\r\n                                                    v-model=\"selectedChartYAxis\" label=\"Y Axis\"\r\n                                                    v-slot=\"{ field, errorMessage, meta }\">\r\n                                                    <select v-bind=\"field\" @change=\"CheckFieldType(selectedChartYAxis)\"\r\n                                                        :class=\"{ 'form-control': true, 'is-invalid': meta.touched && !meta.valid && !selectedChartYAxis }\">\r\n                                                        <option value=\"\" disabled>Select</option>\r\n                                                        <option\r\n                                                            v-for=\"item in Columnlist.filter(x => x.CustomFieldId != selectedChartXAxis)\"\r\n                                                            :value=\"item.CustomFieldId != '' ? item.CustomFieldId : item.FieldName\"\r\n                                                            :key=\"item.CustomFieldId\">\r\n                                                            {{ GetLocalizedValue((item.DisplayName != null &&\r\n                                                                item.DisplayName != '') ?\r\n                                                                item.DisplayName : item.FieldName) }}\r\n                                                        </option>\r\n                                                    </select>\r\n                                                    <span name=\"selectedChartYAxis\" v-if=\"meta.touched && !meta.valid\"\r\n                                                        class=\"invalid-feedback\">\r\n                                                        {{ errorMessage }}\r\n                                                    </span>\r\n                                                </Field>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-lg-12\">\r\n                                        <div class=\"form-group\">\r\n                                            <label>{{ $t('ViewAs') }}:</label>\r\n                                            <div v-if=\"isTypeInteger\" class=\"input-group\">\r\n                                                <input name=\"sum\" v-model=\"aggregateFunctionType\" value=\"Sum\" type=\"radio\"\r\n                                                    class=\"mr-2\" />{{ $t('Sum') }}\r\n                                                <input name=\"sum\" v-model=\"aggregateFunctionType\" value=\"Avg\" type=\"radio\"\r\n                                                    class=\"mr-2 ml-3\" />{{ $t('Average') }}\r\n                                                <input name=\"sum\" v-model=\"aggregateFunctionType\" value=\"Min\" type=\"radio\"\r\n                                                    class=\"mr-2 ml-3\" />{{ $t('Min') }}\r\n                                                <input name=\"sum\" v-model=\"aggregateFunctionType\" value=\"Max\" type=\"radio\"\r\n                                                    class=\"mr-2 ml-3\" />{{ $t('Max') }}\r\n                                                <input name=\"sum\" v-model=\"aggregateFunctionType\" value=\"Count\" type=\"radio\"\r\n                                                    class=\"mr-2 ml-3\" />{{ $t('Count') }}\r\n                                            </div>\r\n                                            <div class=\"input-group\" v-if=\"!isTypeInteger\">\r\n                                                <input name=\"sum\" v-model=\"aggregateFunctionType\" value=\"Count\" checked\r\n                                                    type=\"radio\" class=\"mr-2 ml-3\" />{{ $t('Count') }}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div class=\"col-sm-12 col-lg-6 p-3 bg-light border\">\r\n                                    <div class=\"heading-border\">\r\n                                        <h5 class=\"h5\"><span>{{ $t('Preview') }}</span></h5>\r\n                                    </div>\r\n                                    <span class=\"text-center my-3 w-100 float-left\">{{ reportTitle }} -\r\n                                        <button href=\"#\" class=\"btn btn-info\" @click=\"ViewReportGraph\">\r\n                                            {{ $t('ViewReport') }}\r\n                                        </button>\r\n                                    </span>\r\n                                    <div v-if=\"PreviewChart\" class=\"col-sm-12 col-lg-12 px-0 py-4 float-left bg-white\">\r\n                                        <VueApexCharts :type=\"selectedChartType\" :options=\"chartOptions\"\r\n                                            :series=\"chartseries\">\r\n                                        </VueApexCharts>\r\n                                        <div :class=\"selectedChartType == 'pie' || selectedChartType == 'donut' ? 'text-left pl-4 ml-4' : 'text-center'\"\r\n                                            v-if=\"aggregateFunctionResult != 0\">\r\n                                            <a href=\"#\">{{ resultMsg }} : {{ aggregateFunctionResult }}</a>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"col-12 p-0 mt-3 float-left\">\r\n                                <div class=\"row flex-row-reverse\">\r\n                                    <div class=\"col-lg-6 text-right\">\r\n                                        <button class=\"btn btn-success ancsaveuserticket\" @click=\"ApplyGraph\">\r\n                                            <em class=\"fa fa-share pr-2\"></em>{{ $t('Apply') }}</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Form> -->\r\n                        <div class=\"col-12 p-0 mt-3 float-left\">\r\n                            <div class=\"row flex-row-reverse\">\r\n                                <div class=\"col-lg-6 text-right\">\r\n                                    <button class=\"btn btn-success ancsaveuserticket\" @click=\"ApplyGraph\">\r\n                                        <em class=\"fa fa-share pr-2\"></em>{{ $t('Apply') }}</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport GraphServices from \"@/services/DataService\";\r\nimport VueApexCharts from \"vue-apexcharts\";\r\nexport default {\r\n    components: {\r\n        VueApexCharts\r\n    },\r\n    props: {\r\n        Columnlist: {\r\n            type: Array\r\n        },\r\n        customreportparameters: {\r\n            type: Object\r\n        },\r\n        GraphData: {\r\n            type: Array\r\n        },\r\n        GraphJson: {\r\n            type: Object\r\n        },\r\n        sortColummnarray: {\r\n            type: Array\r\n        },\r\n    },\r\n    data() {\r\n        return {\r\n            isLoading: false,\r\n            reportTitle: '',\r\n            chartTypes: null,\r\n            // isTypeInteger: false,\r\n            // Selected Chart Properties\r\n            selectedChartTypeID: null,\r\n            selectedChartXAxis: \"\",\r\n            selectedChartYAxis: \"\",\r\n            PreviewChart: false,\r\n            aggregateFunctionType: \"Count\",\r\n            aggregateFunctionResult: 0,\r\n            //Chart Properties\r\n            chartseries: [],\r\n            chartOptions: {},\r\n            colourList: ['#8892d0', '#da9c49', '#94c5a3', '#e67d21', '#787878', '#c59e71', '#38b8df', '#f55e1a', '#207a92', '#13599c'],\r\n            // Properties for Binding the Chart Valus\r\n            chartOptionXAxisData: [],\r\n            chartSeriesData: [],\r\n            selectedChartType: \"\",\r\n            resultMsg: \"\",\r\n            GroupingGraphData: [],\r\n            BindGraph: false,\r\n            isChartData: false,\r\n            isGraphLoadedAlready: false,\r\n            graphParams: {},\r\n            FormSchema: [\r\n                {\r\n                    layoutType: \"single\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"TextField\",\r\n                            label: this.$t('ReportTitle'),\r\n                            name: \"ReportTitle\",\r\n                            value: \"\",\r\n                            placeholder: \"Enter ReportTitle\",\r\n                            config: {\r\n                                options: [],\r\n                                showAddIcon: false,\r\n                            },\r\n                            validationRules: \"\",\r\n                            disabled: true,\r\n                        },\r\n                        {\r\n                            astype: \"SlotField\",\r\n                            label: this.$t('ChartTypes'),\r\n                            name: \"chartlist\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            config: {\r\n                                options: [],\r\n                                showAddIcon: false,\r\n                                onChange: this.onChangeDropdown\r\n                            },\r\n                            validationRules: \"required\",\r\n                        },\r\n                        {\r\n                            astype: \"SelectField\",\r\n                            label: this.$t('XAXIS'),\r\n                            name: \"XAXIS\",\r\n                            value: \"\",\r\n                            placeholder: \"Please Select X Axis\",\r\n                            config: {\r\n                                options: [],\r\n                                showAddIcon: false,\r\n                                onChange: this.onChangeXYAxisDropdown\r\n                            },\r\n                            validationRules: \"required\",\r\n                        },\r\n                        {\r\n                            astype: \"SelectField\",\r\n                            label: this.$t('YAXIS'),\r\n                            name: \"YAXIS\",\r\n                            value: '',\r\n                            placeholder: \"\",\r\n                            //visibility:true,\r\n                            config: {\r\n                                options: [],\r\n                                showAddIcon: false,\r\n                                onChange: this.onChangeXYAxisDropdown\r\n                            },\r\n                            validationRules: \"required\",\r\n                        },\r\n                        {\r\n                            astype: \"RadioField\",\r\n                            label: this.$t('ViewAs'),\r\n                            name: \"ViewAs\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            visibility: false,\r\n                            config: {\r\n                                options: [{\r\n                                    value: \"Sum\",\r\n                                    name: \"Sum\"\r\n                                },\r\n                                {\r\n                                    value: \"Avg\",\r\n                                    name: \"Average\"\r\n                                },\r\n                                {\r\n                                    value: \"Min\",\r\n                                    name: \"Min\"\r\n                                }, {\r\n                                    value: \"Max\",\r\n                                    name: \"Max\"\r\n                                }, {\r\n                                    value: \"Count\",\r\n                                    name: \"Count\"\r\n                                }],\r\n                                showAddIcon: false,\r\n                                onChange: this.GetRadioValue\r\n                            },\r\n                            validationRules: \"\",\r\n                        },\r\n                        {\r\n                            astype: \"RadioField\",\r\n                            label: this.$t('ViewAs'),\r\n                            name: \"ViewAs\",\r\n                            value: \"Count\",\r\n                            placeholder: \"\",\r\n                            visibility: true,\r\n                            config: {\r\n                                options: [{\r\n                                    value: \"Count\",\r\n                                    name: \"Count\"\r\n                                }],\r\n                                showAddIcon: false\r\n                            },\r\n                            validationRules: \"\",\r\n                        },\r\n                    ]\r\n                },\r\n            ],\r\n            // buttons: [\r\n            //     {\r\n            //         type: \"submit\",\r\n            //         class: \"btn btn-success save\",\r\n            //         text: \"<i class='fa fa-save pr-2'></i>Apply\"\r\n            //     }\r\n            // ]\r\n        }\r\n    },\r\n    created: async function () {\r\n        var vm = this;\r\n        await vm.GetChartTypes();\r\n        vm.GetColumnList();\r\n        vm.FormSchema[0].Data[0].value = vm.customreportparameters.ReportName;\r\n        if (vm.GraphData != null && vm.GraphData != undefined && vm.GraphData != '' && vm.GraphData.length > 0) {\r\n            vm.selectedChartTypeID = vm.GraphData[0].chartTypeID;\r\n            vm.aggregateFunctionType = vm.GraphData[0].AggregateFuncField;\r\n            vm.selectedChartXAxis = vm.GraphData[0].XAxisField;\r\n            vm.FormSchema[0].Data[2].value = vm.GraphData[0].XAxisField;\r\n            vm.selectedChartYAxis = vm.GraphData[0].YAxisField;\r\n            vm.FormSchema[0].Data[3].value = vm.GraphData[0].YAxisField;\r\n            await vm.CheckFieldType(vm.selectedChartYAxis);\r\n            await vm.ViewReportGraph();\r\n            await vm.ApplyGraph();\r\n        }\r\n    },\r\n    watch:{\r\n        Columnlist(){\r\n            var vm = this;\r\n            vm.GetColumnList();\r\n        }\r\n    },\r\n    methods: {\r\n        //Close Graph Options Model\r\n        CloseGraphOptions: function () {\r\n            var vm = this;\r\n            $(\"#CustomGraphOptions\").modal(\"hide\");\r\n            $(\"body\").removeClass(\"modal-open\");\r\n            $(\".modal-backdrop\").remove();\r\n            vm.$refs.refGraphForm.validateForm.reset();\r\n            if(vm.graphParams.selectedChartTypeID != null && vm.graphParams.selectedChartType != '' && vm.graphParams.selectedChartXAxis != '' && vm.graphParams.selectedChartYAxis != ''){\r\n            vm.$parent.showChart = true;}\r\n            // vm.ApplyGraph();\r\n        },\r\n\r\n        // Get all Chart types\r\n        async GetChartTypes() {\r\n            var vm = this;\r\n            await GraphServices.GetChartTypes().then((response) => {\r\n                vm.chartTypes = response.data;\r\n            })\r\n        },\r\n\r\n        // Fill Values in Dropdowns\r\n        GetColumnList() {\r\n            var vm = this;\r\n            vm.FormSchema[0].Data[2].config.options = [];\r\n            vm.FormSchema[0].Data[3].config.options = [];\r\n            vm.Columnlist.forEach(item => {\r\n                vm.FormSchema[0].Data[2].config.options.push({\r\n                    value: item.CustomFieldId,\r\n                    name: item.DisplayName != '' ? vm.$t(item.DisplayName) : vm.$(item.FieldName)\r\n                })\r\n                vm.FormSchema[0].Data[3].config.options.push({\r\n                    value: item.CustomFieldId,\r\n                    name: item.DisplayName != '' ? vm.$t(item.DisplayName) : vm.$(item.FieldName)\r\n                })\r\n            })\r\n        },\r\n\r\n        // On change X and Y Axis\r\n        onChangeXYAxisDropdown(x, data) {\r\n            var vm = this;\r\n            if (data.name == \"XAXIS\") {\r\n                vm.selectedChartXAxis = data.value;\r\n                vm.FormSchema[0].Data[3].config.options = [];\r\n                vm.Columnlist.forEach(item => {\r\n                    if (item.CustomFieldId != vm.selectedChartXAxis) {\r\n                        vm.FormSchema[0].Data[3].config.options.push({\r\n                            value: item.CustomFieldId,\r\n                            name: item.DisplayName != '' ? vm.$t(item.DisplayName) : vm.$(item.FieldName)\r\n                        })\r\n                    }\r\n                    if(vm.selectedChartXAxis === vm.selectedChartYAxis){\r\n                        vm.selectedChartYAxis = '';\r\n                        vm.FormSchema[0].Data[3].value = '';\r\n                    }\r\n                })\r\n            }\r\n            else {\r\n                vm.selectedChartYAxis = data.value;\r\n                vm.CheckFieldType(vm.selectedChartYAxis)\r\n            }\r\n        },\r\n\r\n        // Get Radio Selected Value \r\n        GetRadioValue(x, data) {\r\n            var vm = this;\r\n            vm.aggregateFunctionType = x.target.dataset.value;\r\n        },\r\n        // Reset Graph properties when click on reset button \r\n        ResetGraph() {\r\n            var vm = this;\r\n            vm.selectedChartXAxis = \"\";\r\n            vm.selectedChartYAxis = \"\";\r\n            // vm.$refs.form.setFieldTouched('selectedChartXAxis', false)\r\n            // vm.$refs.form.setFieldTouched('selectedChartYAxis', false)\r\n            vm.chartseries = [];\r\n            vm.chartOptions = {};\r\n            vm.selectedChartTypeID = null;\r\n            vm.selectedChartType = \"\";\r\n            vm.aggregateFunctionResult = 0;\r\n            vm.aggregateFunctionType = \"Count\";\r\n            vm.resultMsg = \"\";\r\n            vm.graphParams = {};\r\n            vm.FormSchema[0].Data[2].value = '';\r\n            vm.FormSchema[0].Data[3].value = '';\r\n            vm.FormSchema[0].Data[4].value = 'Count';\r\n            vm.FormSchema[0].Data[5].value = 'Count';\r\n            vm.FormSchema[0].Data[4].visibility = false;\r\n            vm.FormSchema[0].Data[5].visibility = true;\r\n            vm.$refs.refGraphForm.validateForm.reset();\r\n            vm.PreviewChart = false;\r\n        },\r\n\r\n        // View Graph when click on View Report\r\n        async ViewReportGraph() {\r\n            var vm = this;\r\n            vm.resultMsg = vm.aggregateFunctionType;\r\n            vm.PreviewChart = false;\r\n            vm.BindGraph = true;\r\n            var GraphDataValue = null;\r\n                if (vm.aggregateFunctionType == null || vm.aggregateFunctionType == '' && vm.GraphData != null && vm.isChartData == false) {\r\n                    if (vm.GraphData.length > 0) {\r\n                        vm.resultMsg = vm.GraphData[0].AggregateFunction\r\n                        vm.aggregateFunctionType = vm.resultMsg\r\n                        vm.selectedChartYAxis = vm.GraphData[0].YAxisField;\r\n                        vm.selectedChartXAxis = vm.GraphData[0].XAxisField;\r\n                        vm.FormSchema[0].Data[4].value = vm.GraphData[0].AggregateFunction;\r\n                    }\r\n                }\r\n                if (vm.selectedChartTypeID != null && vm.selectedChartXAxis != '' && vm.selectedChartYAxis != '') {\r\n                    if (vm.aggregateFunctionType == \"\") {\r\n                        vm.aggregateFunctionType = vm.FormSchema[0].Data[4].value;\r\n                        vm.resultMsg = vm.aggregateFunctionType;\r\n                    }\r\n                    var findvaluefromcolumnlistxaxis = vm.Columnlist.find(x => x.FieldName === vm.selectedChartXAxis || x.CustomFieldId === parseInt(vm.selectedChartXAxis));\r\n                    var findvaluefromcolumnlistyaxis = vm.Columnlist.find(x => x.FieldName === vm.selectedChartYAxis || x.CustomFieldId === parseInt(vm.selectedChartYAxis));\r\n                    GraphDataValue = {\r\n                        \"XAxisField\": findvaluefromcolumnlistxaxis.CustomFieldId != '' ? findvaluefromcolumnlistxaxis.CustomFieldId : findvaluefromcolumnlistxaxis.FieldName,\r\n                        \"YAxisField\": findvaluefromcolumnlistyaxis.CustomFieldId != '' ? findvaluefromcolumnlistyaxis.CustomFieldId : findvaluefromcolumnlistyaxis.FieldName,\r\n                        \"AggregateFunctionType\": vm.aggregateFunctionType\r\n                    }\r\n                    await vm.$parent.$parent.PreviewJson(vm.sortColummnarray, vm.BindGraph, GraphDataValue);\r\n                    if (vm.GraphJson.MetaData[0].IsGrouping) {\r\n                        vm.SetGroupingGraphData();\r\n                    }\r\n                    vm.selectedChartType = vm.chartTypes.find(x => x.id == vm.selectedChartTypeID).chart_Type.toLowerCase();\r\n                    vm.SetGraphValues(vm.GroupingGraphData, vm.FilterColumnlist(vm.selectedChartXAxis).CustomFieldName, vm.FilterColumnlist(vm.selectedChartYAxis).CustomFieldName);\r\n                    vm.CalculatingAggregateFuncResult(vm.aggregateFunctionType);\r\n                    vm.DrawGraph();\r\n                    vm.PreviewChart = true;\r\n                    vm.isChartData = true\r\n                    vm.isGraphLoadedAlready = true;\r\n                }\r\n                else if(vm.selectedChartTypeID == null && vm.selectedChartXAxis=='' && vm.selectedChartYAxis==''){\r\n                    vm.ShowAlert(vm.$t(\"FieldsNameRequired\", [vm.$t(\"ChartTypes\") + ', ' + vm.$t(\"XAXIS\") + ' and '+  vm.$t(\"YAXIS\")]), 'failure', true, vm.$t('Alert'));\r\n                    vm.isLoading = false;\r\n                }\r\n                else if(vm.selectedChartTypeID == null){\r\n                    vm.ShowAlert(vm.$t(\"FieldNameRequired\", [vm.$t(\"ChartTypes\")]), 'failure', true, vm.$t('Alert'));\r\n                    vm.isLoading = false;\r\n                }\r\n                else if(vm.selectedChartXAxis==''){\r\n                    vm.ShowAlert(vm.$t(\"FieldNameRequired\", [vm.$t(\"XAXIS\")]), 'failure', true, vm.$t('Alert'));\r\n                    vm.isLoading = false;\r\n                }\r\n                else if(vm.selectedChartYAxis==''){\r\n                    vm.ShowAlert(vm.$t(\"FieldNameRequired\", [vm.$t(\"YAXIS\")]), 'failure', true, vm.$t('Alert'));\r\n                    vm.isLoading = false;\r\n                }\r\n        },\r\n\r\n        SetGroupingGraphData() {\r\n            var vm = this;\r\n            let ListingData = vm.GraphJson.ListingData;\r\n            let setGraphArray = [];\r\n            let XaxisField = vm.FilterColumnlist(vm.selectedChartXAxis).CustomFieldName;\r\n            let yAxisField = vm.FilterColumnlist(vm.selectedChartYAxis).CustomFieldName;\r\n            if (Object.keys(ListingData[0])[0] == vm.FilterColumnlist(vm.selectedChartXAxis).CustomFieldName && Object.keys(ListingData[0])[0] == vm.FilterColumnlist(vm.selectedChartYAxis).CustomFieldName && vm.GraphData.length > 0\r\n                || XaxisField == undefined && yAxisField == undefined) {\r\n                XaxisField = Object.keys(ListingData[0])[0];\r\n                yAxisField = Object.keys(ListingData[0].data[0])[0];\r\n                vm.aggregateFunctionType = vm.GraphData[0].AggregateFunction;\r\n            }\r\n            ListingData.forEach((item, mainindex) => {\r\n                if (item[XaxisField] != undefined || XaxisField != undefined) {\r\n                    if (vm.aggregateFunctionType == \"Count\" || vm.aggregateFunctionType == \"Sum\" || vm.aggregateFunctionType == \"Avg\"\r\n                        || vm.aggregateFunctionType == \"Min\" || vm.aggregateFunctionType == \"Max\") {\r\n                        var pushitem = item[XaxisField] != undefined ? item[XaxisField] : item.data[0][XaxisField] + ` (${item.totalRecord})`;\r\n                        for (var i = 0; i <= parseInt(item.totalRecord); i++) {\r\n                            if (i == 0) {\r\n                                setGraphArray.push({\r\n                                    [XaxisField]: pushitem,\r\n                                    [yAxisField]: item.GData != null && item.GData != 0 && item.GData > item.totalRecord ? item.GData : item.totalRecord\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n            vm.GroupingGraphData = setGraphArray\r\n        },\r\n        // Apply  Graph Values when click on Apply adn bind the final values of graph and pass to Reportpreview \r\n        async ApplyGraph() {\r\n            var vm = this;\r\n            this.$refs.refGraphForm.validateForm.validate().then(async function (valid) {\r\n                if (valid) {\r\n                    if (!vm.isGraphLoadedAlready) {\r\n                        await vm.ViewReportGraph();\r\n                    }\r\n                    vm.graphParams = {\r\n                        \"selectedChartType\": vm.selectedChartType,\r\n                        \"selectedChartTypeID\": vm.selectedChartTypeID,\r\n                        \"chartseries\": vm.chartseries,\r\n                        \"chartoptions\": vm.chartOptions,\r\n                        \"aggregateFunctionType\": vm.aggregateFunctionType,\r\n                        \"aggregateFunctionResult\": vm.aggregateFunctionResult,\r\n                        \"selectedChartXAxis\": vm.selectedChartXAxis,\r\n                        \"selectedChartYAxis\": vm.selectedChartYAxis\r\n                    }\r\n                    if (vm.graphParams.selectedChartTypeID != null && vm.graphParams.selectedChartType != '' && vm.graphParams.selectedChartXAxis != '' && vm.graphParams.selectedChartYAxis != '') {\r\n                        vm.$parent.DrawGraph(vm.graphParams, vm.BindGraph)\r\n                        vm.isGraphLoadedAlready = false\r\n                        vm.CloseGraphOptions();\r\n                    }\r\n                }\r\n            });\r\n        },\r\n\r\n        // Draw Graph\r\n        DrawGraph: function () {\r\n            var vm = this;\r\n            var isHorizontal = false;\r\n            if (vm.selectedChartType == \"bar\" || vm.selectedChartType == \"line\" || vm.selectedChartType == 'horizontal_bar') {\r\n                if (vm.selectedChartType == 'horizontal_bar') {\r\n                    vm.selectedChartType = \"bar\";\r\n                    isHorizontal = true;\r\n                }\r\n                vm.chartseries = [{\r\n                    name: vm.$t(vm.FilterColumnlist(vm.selectedChartYAxis).CustomFieldName),\r\n                    data: vm.chartSeriesData\r\n                }]\r\n                vm.chartOptions = {\r\n                    chart: {\r\n                        toolbar: {\r\n                            export: {\r\n                                svg: {\r\n                                    filename: vm.FormSchema[0].Data[0].value,\r\n                                },\r\n                                png: {\r\n                                    filename: vm.FormSchema[0].Data[0].value,\r\n                                },\r\n                                csv: {\r\n                                    headerCategory: vm.$t(vm.FilterColumnlist(vm.selectedChartXAxis).CustomFieldName),\r\n                                    filename: vm.FormSchema[0].Data[0].value,\r\n                                }\r\n                            }\r\n                        },\r\n                    },\r\n                    tooltip:{\r\n                        enabled:true,\r\n                        x:{\r\n                            formatter:(val) => val\r\n                        }\r\n                    },\r\n                    xaxis: {\r\n                        categories: vm.chartOptionXAxisData,\r\n                        title: {\r\n                            text: isHorizontal ? vm.$t(vm.FilterColumnlist(vm.selectedChartYAxis).CustomFieldName) : vm.$t(vm.FilterColumnlist(vm.selectedChartXAxis).CustomFieldName),\r\n                        },\r\n                        labels: {\r\n                            formatter: function (val) {\r\n                                return isHorizontal ? val : val != undefined ? vm.TruncateStr(val,6) : val;\r\n                            }\r\n                        },\r\n                    },\r\n                    yaxis: {\r\n                        title: {\r\n                            text: isHorizontal ? vm.$t(vm.FilterColumnlist(vm.selectedChartXAxis).CustomFieldName) : vm.$t(vm.FilterColumnlist(vm.selectedChartYAxis).CustomFieldName),\r\n                        },\r\n                        labels: {\r\n                            formatter: function (val) {\r\n                                return val.toLocaleString(\"en-US\");\r\n                            }\r\n                        }\r\n                    },\r\n                    plotOptions: isHorizontal ? { bar: { borderRadius: 4, horizontal: true, } } : {},\r\n                    dataLabels: {\r\n                        enabled: true,\r\n                    },\r\n\r\n                }\r\n            }\r\n            if (vm.selectedChartType == \"pie\" || vm.selectedChartType == \"donut\") {\r\n                vm.chartseries = vm.chartSeriesData;\r\n                vm.chartOptions = {\r\n                    labels: vm.chartOptionXAxisData,\r\n                    colors: vm.colourList,\r\n                }\r\n            }\r\n        },\r\n        TruncateStr: function (str, len) {\r\n            var convertstring = '' + str;\r\n            if (convertstring != null)\r\n                if (convertstring.length <= len) return str;\r\n                else return convertstring.substring(0, len) + \"...\";\r\n        },\r\n\r\n        // Calculating  Aggregate Function Result\r\n        CalculatingAggregateFuncResult: function (functionType) {\r\n            var vm = this;\r\n            var tempval = 0;\r\n            if (functionType == \"Sum\") {\r\n                var sum = 0;\r\n                vm.chartSeriesData.forEach(item => {\r\n                    sum += parseInt(item);\r\n                });\r\n                vm.aggregateFunctionResult = sum.toFixed(2);\r\n                vm.aggregateFunctionResult = parseFloat(vm.aggregateFunctionResult).toLocaleString('en-US');\r\n            }\r\n            if (functionType == \"Count\") {\r\n                var aggregatecount = 0;\r\n                aggregatecount = vm.chartSeriesData.length;\r\n                vm.aggregateFunctionResult = aggregatecount;\r\n            }\r\n            if (functionType == \"Avg\") {\r\n                var total = 0;\r\n                var count = 0;\r\n\r\n                vm.chartSeriesData.forEach(function (item, index) {\r\n                    total += item;\r\n                    count++;\r\n                });\r\n                tempval = total / count;\r\n                vm.aggregateFunctionResult = tempval.toFixed(2);\r\n                vm.aggregateFunctionResult = parseFloat(vm.aggregateFunctionResult).toLocaleString('en-US');\r\n            }\r\n            if (functionType == \"Min\") {\r\n                tempval = Math.min.apply(Math, vm.chartSeriesData.filter(Number));\r\n                vm.aggregateFunctionResult = tempval.toFixed(2);\r\n                vm.aggregateFunctionResult = parseFloat(vm.aggregateFunctionResult).toLocaleString('en-US');\r\n            }\r\n            if (functionType == \"Max\") {\r\n                tempval = Math.max(...vm.chartSeriesData)\r\n                vm.aggregateFunctionResult = tempval.toFixed(2);\r\n                vm.aggregateFunctionResult = parseFloat(vm.aggregateFunctionResult).toLocaleString('en-US');\r\n            }\r\n        },\r\n\r\n        // Check field type for View AS checkbox \r\n        CheckFieldType: function (CustomFieldId) {\r\n            var vm = this;\r\n            if (vm.selectedChartYAxis == vm.selectedChartXAxis) {\r\n                vm.selectedChartYAxis = '';\r\n                vm.ShowAlert(\"X and Y axis values are not same\", \"warning\")\r\n                return false;\r\n            }\r\n            vm.aggregateFunctionResult = 0;\r\n            let ColumnFieldType = vm.FilterColumnlist(CustomFieldId).ColumnFieldType;\r\n            if (ColumnFieldType == \"decimal\" || ColumnFieldType == \"int\") {\r\n                vm.FormSchema[0].Data[4].visibility = true;\r\n                vm.FormSchema[0].Data[5].visibility = false;\r\n                vm.FormSchema[0].Data[4].value = 'Count'\r\n                vm.aggregateFunctionType = ''\r\n            }\r\n            else {\r\n                vm.FormSchema[0].Data[4].visibility = false;\r\n                vm.FormSchema[0].Data[5].visibility = true;\r\n                vm.FormSchema[0].Data[5].value = 'Count'\r\n                vm.aggregateFunctionType = 'Count'\r\n            }\r\n        },\r\n        CheckFieldTypeX: function (CustomFieldId) {\r\n            var vm = this;\r\n            //vm.aggregateFunctionType = ''\r\n            if (vm.selectedChartYAxis == vm.selectedChartXAxis) {\r\n                vm.selectedChartXAxis = '';\r\n                vm.ShowAlert(\"X and Y axis values are not same\", \"warning\")\r\n                return false;\r\n            }\r\n        },\r\n        // Filter column List baesd on CustomFieldId\r\n        FilterColumnlist(CustomFieldId) {\r\n            var vm = this;\r\n            let CustomFieldName, ColumnFieldType;\r\n            for (let [index] of vm.Columnlist.entries()) {\r\n                if (vm.Columnlist[index].CustomFieldId == CustomFieldId || vm.Columnlist[index].FieldName == CustomFieldId) {\r\n                    if (vm.Columnlist[index].DisplayName != null && vm.Columnlist[index].DisplayName != '') {\r\n                        CustomFieldName = vm.Columnlist[index].DisplayName;\r\n                    }\r\n                    else {\r\n                        CustomFieldName = vm.Columnlist[index].FieldName;\r\n                    }\r\n                    ColumnFieldType = vm.Columnlist[index].ColumnFieldDataCode;\r\n                }\r\n            }\r\n            return { 'CustomFieldName': CustomFieldName, 'ColumnFieldType': ColumnFieldType }\r\n        },\r\n\r\n        // Set the Chart Xaxis and Yaxis\r\n        SetGraphValues(data, XFieldName, YFieldName) {\r\n            var vm = this;\r\n            vm.chartOptionXAxisData = [];\r\n            vm.chartSeriesData = [];\r\n            data.forEach(items => {\r\n                if (XFieldName in items) {\r\n                    if (items[XFieldName] != null && items[XFieldName] != undefined) {\r\n                        vm.chartOptionXAxisData.push(items[XFieldName])\r\n                        //set graph Values if XField  is Not Null  \r\n                        vm.BindXYFields(items, XFieldName, YFieldName);\r\n                    }\r\n                    else {\r\n                        //set graph Values if XField  is  Null\r\n                        if (items[YFieldName] != null && items[YFieldName] != undefined) {\r\n                            if (typeof XFieldName == \"string\") {\r\n                                vm.chartOptionXAxisData = [...vm.chartOptionXAxisData, \"-\"]\r\n                            }\r\n                            else {\r\n                                vm.chartOptionXAxisData = [...vm.chartOptionXAxisData, 0]\r\n                            }\r\n                            vm.BindXYFields(items, XFieldName, YFieldName);\r\n                        }\r\n\r\n                    }\r\n                }\r\n                else {\r\n                    vm.chartOptionXAxisData.push(\" \")\r\n                    vm.BindXYFields(items, XFieldName, YFieldName);\r\n                }\r\n            });\r\n        },\r\n        //set graph Values if XField  is Not Null  \r\n        BindXYFields: function (items, XFieldName, YFieldName) {\r\n            var vm = this;\r\n            if (YFieldName in items) {\r\n                if (items[YFieldName] != null && items[YFieldName] != undefined) {\r\n                    if (typeof items[YFieldName] == \"string\") {\r\n                        var replaceXCurrencySymbol = items[YFieldName].replace(/[$€£]/g, '')\r\n                        vm.chartSeriesData.push(parseInt(replaceXCurrencySymbol))\r\n                    }\r\n                    else {\r\n                        vm.chartSeriesData.push(items[YFieldName])\r\n                    }\r\n                }\r\n                else {\r\n                    vm.chartSeriesData = [...vm.chartSeriesData, 0]\r\n                }\r\n            }\r\n        },\r\n\r\n        //Genrate Random Color Code\r\n        GenrateRandomColorCode() {\r\n            const randomColor = Math.floor(Math.random() * 16777215).toString(16);\r\n            return \"#\" + randomColor;\r\n        },\r\n\r\n        // Genrate List of random colors\r\n        GenrateRandomColorList() {\r\n            var vm = this;\r\n            while (vm.colourList.length < vm.chartSeriesData.length) {\r\n                let color;\r\n                color = vm.GenrateRandomColorCode();\r\n                let IsExist = vm.colourList.find(x => x == color)\r\n                if (!IsExist) { vm.colourList.push(color); }\r\n            }\r\n        },\r\n        onSubmit: async function (formfields, val) {\r\n            var vm = this;\r\n            await vm.ApplyGraph();\r\n            // vm.SaveDynamicreport(ReportID)            \r\n        },\r\n    }\r\n}\r\n\r\n</script>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./modalGraphOptions.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./modalGraphOptions.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./modalGraphOptions.vue?vue&type=template&id=f49fc31c&\"\nimport script from \"./modalGraphOptions.vue?vue&type=script&lang=js&\"\nexport * from \"./modalGraphOptions.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\r\n    <div>\r\n        <div class=\"right-content datareport hr_jobpost\">\r\n            <div class=\"col-md-12 p-0 mb-2\"> \r\n                <div class=\"theme-primary partition p-actions-expand\">\r\n                    <loader :isVisible=\"isLoading\"></loader>\r\n                    <span class=\"p-name text-white\">{{ $t('ReportPreview') }}</span>\r\n                    <span class=\"p-actions float-right mydbsize\">\r\n                        <a class=\"p-action-btn text-white dash\" data-original-title=\"REPORT PREVIEW\" v-on:click=\"PreviewReport\">\r\n                            <em class=\"fa fa-play\"></em><br>{{ $t('ReportPreview') }}\r\n                        </a>\r\n                        <a class=\"p-action-btn text-white dash\" data-original-title=\"RESET\" v-on:click=\"ResetData\">\r\n                            <em class=\"fa fa-repeat\"></em><br>{{ $t('Reset') }}\r\n                        </a>\r\n                        <a class=\"p-action-btn text-white dash\" data-original-title=\"PDF\" v-on:click=\"ExportToPDF\">\r\n                            <em class=\"fa fa-file-pdf-o\"></em><br>{{ $t('ExportToPdf') }}\r\n                        </a>\r\n                        <a class=\"p-action-btn text-white dash\" data-original-title=\"Excel\" v-on:click=\"ExportToExcel\">\r\n                            <em class=\"fa fa-file-excel-o\"></em><br>{{ $t('ExportToExcel') }}\r\n                        </a>\r\n                        <a v-on:click=\"OpenSortingPopup\" class=\"p-action-btn text-white dash\" data-original-title=\"SORT\">\r\n                            <em class=\"fa fa-sort-amount-asc\"></em><br>{{ $t('SORT') }}\r\n                        </a>\r\n                        <a v-on:click=\"OpenGraph\" class=\"p-action-btn text-white dash\" data-original-title=\"GRAPH\">\r\n                            <em class=\"fa fa-pie-chart\"></em><br>{{ $t('Graph') }}\r\n                        </a>\r\n                    </span>\r\n                    <span class=\"collapse-head-btns\">\r\n                        <a href=\"javascript:;\" class=\"collapse-btns\">\r\n                            <em class=\"fa fa-angle-up text-white\"></em>\r\n                        </a>\r\n                    </span>\r\n                </div>\r\n                <div class=\"parentdiv datarepfix2\">\r\n                    <div class=\"verticle-action lft75 rt30 llt\">\r\n                        <span class=\"action-list-box small\" style=\"width:400px\">\r\n                            <span id=\"action-list1\" class=\"text-left p-0 datarep mt-3 w-90 float-left bg_outerdark borderbababa position-relative\" v-if=\"isSortPopup\">\r\n                                <div class=\"float-left col-12\">\r\n                                    <div class=\"container-fluid p-0 mb-3\">\r\n                                    </div>\r\n                                    <div class=\"row px-3 pb-0\" v-for=\"(input, index) in sortColummnarray\" :key=\"`phoneInput-${index}`\">\r\n                                        <div class=\"col-lg-5 pl-0 pr-3\">\r\n                                            <div class=\"form-group\">\r\n                                                <label>{{ $t('SortBy') }}</label>\r\n                                                <select v-model=\"input.sortcolummnId\" class=\"form-control\">\r\n                                                    <option v-for=\"item in Columnlist.filter(x => x.Calculated_Field == false)\"\r\n                                                        :value=\"item.CustomFieldId\" :key=\"item.CustomFieldId\" :disabled=\"(sortColummnarray.filter(x => x.sortcolummnId == item.CustomFieldId)).length > 0\">\r\n                                                        {{ item.DisplayName ? GetLocalizedValue(item.DisplayName) :\r\n                                                            GetLocalizedValue(item.FieldName) }}\r\n                                                    </option>\r\n                                                </select>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-lg-5 pl-0 pr-3\">\r\n                                            <div class=\"form-group\">\r\n                                                <label>{{ $t('OrderBy') }}</label>\r\n                                                <select v-model=\"input.columnOrders\" class=\"form-control\">\r\n                                                    <option>{{ $t('ASC') }}</option>\r\n                                                    <option>{{ $t('DESC') }}</option>\r\n                                                </select>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-lg-2\">\r\n                                            <div class=\"form-group\">\r\n                                                <a v-on:click=\"AddSortingForm(input)\"><em\r\n                                                        class=\"fa fa-plus-circle font-24 text-success mt-3\"></em></a>\r\n                                                <a v-show=\"sortColummnarray[0].sortcolummnId != '' || isValueExistInSort\"\r\n                                                    v-on:click=\"RemoveSortingForm(input)\"><em\r\n                                                        class=\"fa fa-times-circle font-24 text-danger mt-3 ml-1\"></em></a>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"va_lft25 top4\"><em class=\"icon-solid arrow-solid-left text-secondary\"\r\n                                        style=\"font-size: 20pt;\"></em>\r\n                                </div>\r\n                                <button type=\"button\" class=\"close closebtnsmall\" v-on:click=\"close()\">\r\n                                        <em aria-hidden=\"true\" class=\"fa fa-times\"></em>\r\n                                </button>\r\n                            </span>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"col-md-12 p-0 mb-2\">\r\n                <div class=\"tab-pane mb-0\">\r\n                    <div class=\"tab-content fsmtabcontrolMobileView\" id=\"myTabContent\">\r\n                        <div class=\"expand-list\">\r\n                            <a href=\"javascript:;\" class=\"expand-list-btn justify-content-center align-items-center\">\r\n                                <em class=\"icon-solid arrow-solid-left text-white\" style=\"font-size:9pt\"></em>\r\n                            </a>\r\n                        </div>\r\n                        <div v-if=\"showGraphOptions\" class=\"card mb-3 probx\">\r\n                            <div class=\"card-header\">\r\n                                <h2>{{ $t('Graph') }}</h2>\r\n                                <a class=\"btn btn-primary\" v-on:click=\"OpenGraphOptions\">{{ $t('GraphOptions') }} <em\r\n                                        class=\"fa fa-cogs\"></em></a>\r\n                            </div>\r\n                            <div v-if=\"showChart\" class=\"card-body\" id=\"Reportpdf\" style=\"min-height: 245px;\">\r\n                                <div class=\"float-right\"><a class=\"text-center text-danger\" v-on:click=\"ResetGraphData()\">\r\n                                        <span class=\"fa fa-trash-o text-danger\" style=\"font-size:25px;\"></span>\r\n                                    </a></div>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-12 col-lg-12 text-center p-0\">\r\n                                        <div class=\"border bg-light float-left text-left p-0  graphinfo_base_lft\">\r\n                                            <ul class=\"graphinfo\">\r\n                                                <li><label>X-axis:</label>\r\n                                                    {{ GetLocalizedValue(FilterCustomFieldName(XAxisField)) }}</li>\r\n                                                <li><label>Y-axis:</label>\r\n                                                    {{ GetLocalizedValue(FilterCustomFieldName(YAxisField)) }}</li>\r\n                                                <li v-show=\"aggregateFunctionResult != 0\">\r\n                                                    <label># {{ aggregateFunctionType }}:</label>\r\n                                                    {{ aggregateFunctionResult }}\r\n                                                </li>\r\n                                            </ul>\r\n                                        </div>\r\n                                        <div class=\"p-0 m-0 float-left graphinfo_base_rgt\"\r\n                                            v-if=\"chartType == 'line' || chartType == 'bar'\">\r\n                                            <VueApexCharts ref=\"chart\" :type=\"chartType\" height=\"auto\" :options=\"chartOptions\"\r\n                                                :series=\"chartSeries\">\r\n                                            </VueApexCharts>\r\n                                        </div>\r\n                                        <div class=\"p-0 m-0 float-left graphinfo_base_rgt\"\r\n                                            v-if=\"chartType == 'pie' || chartType == 'donut'\">\r\n                                            <VueApexCharts ref=\"chart\" :type=\"chartType\" height=\"auto\" :options=\"chartOptions\"\r\n                                                :series=\"chartSeries\">\r\n                                            </VueApexCharts>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"tab-pane p-0 pb-2 border-0 active\" role=\"tabpanel\" id=\"tab-detail-content\"\r\n                            aria-labelledby=\"tab-detail-content\">\r\n                            <div class=\"listing mt-3\">\r\n                                <div class=\"table-responsive table-fix-header\">\r\n                                    <table class=\"table table-bordered mt-0\" style=\"width:100%\" id=\"Reportpdf\"\r\n                                        aria-label=\"Report Preview Listing\">\r\n                                        <thead class=\"thead-bg\">\r\n                                            <tr>\r\n                                                <th scope=\"col\" v-for=\"(item, index) in previewgroupdata\" :key=\"index\"\r\n                                                    v-if=\"showdata\">\r\n                                                    {{ GetLocalizedValue((item.DisplayName != null && item.DisplayName != '') ?\r\n                                                        item.DisplayName : item.FieldName) }}</th>\r\n                                                <th scope=\"col\" v-for=\"(column, index) in previewcolumn\" :key=\"index\">\r\n                                                    {{ GetLocalizedValue((column.DisplayName != null && column.DisplayName !=\r\n                                                        '') ?\r\n                                                        column.DisplayName : column.FieldName) }}{{ column.ExpresssionFieldName }}\r\n                                                </th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody v-if=\"noRecord\">\r\n                                            <tr style=\"cursor:initial;\">\r\n                                                <td colspan=\"4\">\r\n                                                    <div\r\n                                                        class=\"text-center text-danger d-flex align-items-center justify-content-center norecs\">\r\n                                                        {{ $t(\"NoRecordfound\") }}</div>\r\n                                                </td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                        <tbody v-for=\"(item, index) in previewdata\">\r\n                                            <tr v-for=\"(sitem, sindex) in previewdata[index].data\" v-if=\"showdata\">\r\n                                                <template v-if=\"sindex == 0\">\r\n                                                    <td v-for=\"(gitem, gindex) in previewgroupdata\"\r\n                                                        :class=\"{ 'onlyrtbod': true, '': item.totalRecord == null }\"\r\n                                                        :rowspan=\"item.totalRecord\">\r\n                                                        {{ (item[gitem.DisplayName] != null && item[gitem.DisplayName] != '') ?\r\n                                                            item[gitem.DisplayName] : item[gitem.FieldName] }}\r\n                                                        <!-- {{ (LevelOfGrouping == 2) ?\r\n                                                            (item.data[sindex][gitem.DisplayName] ?\r\n                                                                item.data[sindex][gitem.DisplayName] : '') :\r\n                                                            (item.data[sindex][gitem.FieldName] ?\r\n                                                                item.data[sindex][gitem.FieldName] : '-') }}  -->\r\n                                                        <!-- {{ (LevelOfGrouping == 3) ?\r\n                                                            (item.data[sindex].data[sindex][gitem.DisplayName] ?\r\n                                                                item.data[sindex].data[sindex][gitem.DisplayName] : '') :\r\n                                                            (item.data[sindex].data[sindex][gitem.FieldName] ?\r\n                                                                item.data[sindex].data[sindex][gitem.FieldName] : '-') }} -->\r\n                                                        ({{ (item[gitem.DisplayName] != null && item[gitem.DisplayName] != '' ||\r\n                                                            gitem.FieldName != null && gitem.FieldName != '') ? item.totalRecord\r\n                                                            : '-' }})\r\n                                                    </td>\r\n                                                </template>\r\n                                                <!-- v-if=\"LevelOfGrouping < 2\" -->\r\n                                                <td v-for=\"(column,i) in previewcolumn\" :key=\"i\">\r\n                                                    <span v-html=\"(sitem[column.DisplayName] == true && sitem[column.DisplayName] != 1 || sitem[column.DisplayName] == false && sitem[column.DisplayName] != 0) ?\r\n                                                        (sitem[column.DisplayName] == true ? 'YES' : 'NO') : (sitem[column.FieldName]\r\n                                                        == true ? 'YES' : 'NO') ||\r\n                                                        (sitem[column.DisplayName] != null && sitem[column.DisplayName] != '') ?\r\n                                                        (sitem[column.DisplayName] || sitem[column.DisplayName] == 0 ? sitem[column.DisplayName] : '') :\r\n                                                        (sitem[column.FieldName] || sitem[column.DisplayName] == 0 ? sitem[column.FieldName] : '')\">\r\n                                                    </span>\r\n                                                </td>\r\n                                                <!-- <td v-for=\"column in previewcolumn\" v-if=\"LevelOfGrouping == 2\">\r\n                                                    {{ (sitem.data[0][column.DisplayName] != null &&\r\n                                                        sitem.data[0][column.DisplayName] != '') ?\r\n                                                        (sitem.data[0][column.DisplayName] ? sitem.data[0][column.DisplayName] :\r\n                                                            '-') :\r\n                                                        (sitem.data[0][column.FieldName] ? sitem.data[0][column.FieldName] : '-') }}\r\n                                                </td> -->\r\n                                                <!-- <td v-for=\"column in previewcolumn\" v-if=\"LevelOfGrouping == 3\">\r\n                                                    {{ (sitem.data[0].data[0][column.DisplayName] != null &&\r\n                                                        sitem.data[0].data[0][column.DisplayName] != '') ?\r\n                                                        (sitem.data[0].data[0][column.DisplayName] ?\r\n                                                            sitem.data[0].data[0][column.DisplayName] : '-') :\r\n                                                        (sitem.data[0].data[0][column.FieldName] ?\r\n                                                            sitem.data[0].data[0][column.FieldName] : '-') }}\r\n                                                </td> -->\r\n                                            </tr>\r\n                                            <tr v-if=\"showcoldata\">\r\n                                                <td v-for=\"(column,i) in previewcolumn\" :key=\"i\"> \r\n                                                    <span v-html=\"(item[column.DisplayName] == true && item[column.DisplayName] != 1 || item[column.DisplayName] == false && item[column.DisplayName] != 0) ?\r\n                                                        (item[column.DisplayName] == true ? 'YES' : 'NO') : (item[column.FieldName]\r\n                                                        == true ? 'YES' : 'NO') ||\r\n                                                        (item[column.DisplayName] != null && item[column.DisplayName] != '') ?\r\n                                                        (item[column.DisplayName] || item[column.DisplayName] == 0 ? item[column.DisplayName] : '') :\r\n                                                        (item[column.FieldName] || item[column.DisplayName] == 0 ? item[column.FieldName] : '')\">\r\n                                                    </span>\r\n                                                        {{ item[column.ExpresssionFieldName] }}\r\n                                                </td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"float-right\">\r\n                            <a class=\"btn btn-success my-2 my-sm-0 mr-2\" v-on:click=\"SaveAllReport()\">&emsp13;\r\n                                <span class=\"fa fa-floppy-o\"></span> {{ $t('Save') }}\r\n                            </a>\r\n                            <a class=\"btn btn-danger\" v-on:click=\"CancelAll()\">&emsp13;\r\n                                <span class=\"fa fa-times\"></span> {{ $t('Cancel') }}\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <modalGraphOptions :Columnlist=\"Columnlist\" :showGraphOptions=\"showGraphOptions\" :customreportparameters=\"customreportparameters\" :GraphData=\"GraphData\"\r\n            :sortColummnarray=\"sortColummnarray\" :GraphJson=\"GraphJson\" ref=\"modalGraph\">\r\n        </modalGraphOptions>\r\n    </div>\r\n</template>\r\n<script>\r\nimport ReportPreviewService from \"@/services/DataService\";\r\nimport modalGraphOptions from \"../../../components/Common/Modal/modalGraphOptions.vue\";\r\nimport VueApexCharts from \"vue-apexcharts\";\r\nimport * as pdfFonts from \"pdfmake/build/vfs_fonts.js\"; // <-- vfs_fonts has to be imported before pdfmake\r\nimport pdfMake from 'pdfmake';\r\npdfMake.vfs = pdfFonts.pdfMake.vfs;\r\n\r\nexport default {\r\n    components: {\r\n        VueApexCharts,\r\n        modalGraphOptions,\r\n        pdfMake\r\n\r\n    },\r\n    props: {\r\n        previewdata: {\r\n            type: Array,\r\n        },\r\n        Columnlist: {\r\n            type: Array\r\n        },\r\n        customreportparameters: {\r\n            type: Object\r\n        },\r\n        Grouplist: {\r\n            type: Array\r\n        },\r\n        saveJsonReport: {\r\n            type: Object\r\n        },\r\n        ReportName: {\r\n            type: String\r\n        },\r\n        GraphData: {\r\n            type: Array\r\n        },\r\n        SortingData: {\r\n            type: Array\r\n        },\r\n        GraphJson: {\r\n            type: Array\r\n        },\r\n        editjsondata: {\r\n            type: Boolean\r\n        },\r\n        LevelOfGrouping: {\r\n            type: Number\r\n        },\r\n        PdfJsonReport: {\r\n            type: Object\r\n     }\r\n    },\r\n    data() {\r\n        return {\r\n            isLoading: false,\r\n            previewcolumn: [],\r\n            previewgroupdata: [],\r\n            noRecord: true,\r\n            showdata: false,\r\n            showcoldata: true,\r\n            showGraphOptions: false,\r\n            showChart: false,\r\n            showmulitGrouping: false,\r\n            //Sorting PopUp\r\n            isSortPopup: false,\r\n            sortColummnarray: [{ sortcolummnId: \"\", columnOrders: \"\" }],\r\n            DynamicFillValue: [],\r\n            GroupValue: [],\r\n            isValueExistInSort: false,\r\n            isGraph:false,\r\n\r\n            //Bind Chart \r\n            chartTypeID: null,\r\n            chartType: \"\",\r\n            chartSeries: [],\r\n            chartOptions: {},\r\n            aggregateFunctionType: null,\r\n            aggregateFunctionResult: null,\r\n            XAxisField: null,\r\n            YAxisfield: null,\r\n            watchvalue: false,\r\n            allReocrdsList: null,\r\n            ExcelData: null,\r\n            BindGraph: false,\r\n            SavedGraphData:{},\r\n\r\n            //Export to PDF\r\n            allReocrdsData: null,\r\n            TableBody: [],\r\n            TableHeader: [],\r\n            pdfContent: null,\r\n            ExcelJsonData: null,\r\n            count: 0,\r\n            isPreviewForPdfExcel: 1,\r\n           \r\n        }\r\n    },\r\n    created() {\r\n        var vm = this;\r\n        if (vm.GraphData != null && vm.GraphData != undefined && vm.GraphData != '' && vm.GraphData.length > 0) {\r\n            vm.showGraphOptions = true;\r\n        }\r\n        vm.EditSortingData();\r\n        if (vm.previewdata != null && vm.previewdata != undefined && vm.previewdata.length > 0) {\r\n            vm.RenderList();\r\n        } if (vm.editjsondata) { vm.PreviewReport(); }\r\n    },\r\n    mounted() {\r\n        var vm = this;\r\n        if (vm.GraphData != null && vm.GraphData != undefined && vm.GraphData != '' && vm.GraphData.length > 0) {\r\n            vm.showGraphOptions = true;\r\n            if (vm.aggregateFunctionType == '') {\r\n                vm.aggregateFunctionType = vm.GraphData[0].AggregateFunction\r\n            }\r\n            if (vm.previewdata != null && vm.previewdata != undefined && vm.previewdata.length > 0) {\r\n                vm.$refs.modalGraph?.ViewReportGraph();\r\n            }\r\n        }\r\n    },\r\n    watch: {\r\n        watchvalue(newval, oldval) {\r\n            var vm = this;\r\n            if (newval != oldval) {\r\n                vm.RenderList();\r\n                vm.watchvalue = false;\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        EditSortingData: function () {\r\n            var vm = this;\r\n            if (vm.SortingData != null && vm.SortingData != undefined && vm.SortingData != '' && vm.SortingData.length > 0) {\r\n                vm.sortColummnarray = [];\r\n                vm.SortingData.forEach((item, index) => {\r\n                    vm.sortColummnarray.push({\r\n                        \"sortcolummnId\": item.CustomFieldId,\r\n                        \"columnOrders\": item.SORTTYPE\r\n                    })\r\n                })\r\n            }\r\n            else {\r\n                vm.sortColummnarray = [{ sortcolummnId: \"\", columnOrders: \"\" }]\r\n            }\r\n        },\r\n        RefreshReport: function () {\r\n            var vm = this;\r\n            vm.showdata = false;\r\n            vm.PreviewReport();\r\n        },\r\n        RenderList: function () {\r\n            var vm = this;\r\n            if (vm.previewdata != null && vm.previewdata != undefined && vm.previewdata.length > 0) {\r\n                vm.previewcolumn = []\r\n                vm.Columnlist.forEach(x => {\r\n                    vm.previewcolumn.push({ ...x });\r\n                })\r\n                vm.Grouplist.forEach(item => {\r\n                    vm.previewcolumn.forEach((gitem, index) => {\r\n                        if (item.DisplayName === gitem.DisplayName || item.FieldName === gitem.FieldName) {\r\n                            vm.previewcolumn.splice(index, 1);\r\n                        }\r\n                    })\r\n                })\r\n                if (vm.previewcolumn != null && vm.previewcolumn != undefined && vm.previewcolumn.length > 0) {\r\n                    if (vm.Grouplist.length > 0) {\r\n                        vm.previewgroupdata = Object.assign([], vm.Grouplist);\r\n                        vm.showdata = true;\r\n                        // if (vm.LevelOfGrouping > 2) {\r\n                        //     vm.showmulitGrouping = true;\r\n                        // }\r\n                        vm.showcoldata = false;\r\n                    }\r\n                    else {\r\n                        vm.showcoldata = true;\r\n                        vm.previewgroupdata = [];\r\n                    }\r\n                    vm.noRecord = false;\r\n                }\r\n            }\r\n            else {\r\n                vm.previewcolumn = [];\r\n                vm.previewgroupdata = [];\r\n                vm.noRecord = true;\r\n            }\r\n        },\r\n        PreviewReport: async function () {\r\n            var vm = this;\r\n            vm.isSortPopup = false;\r\n            vm.BindGraph = false;\r\n            if(vm.SavedGraphData.selectedChartTypeID != null && vm.SavedGraphData.selectedChartTypeID != undefined){\r\n               await vm.$refs.modalGraph.ApplyGraph();\r\n            }\r\n            await vm.$parent.PreviewJson(vm.sortColummnarray, vm.BindGraph);\r\n            vm.watchvalue = true\r\n        },\r\n        ResetData: function () {\r\n            var vm = this;\r\n            vm.showdata = false;\r\n            vm.isSortPopup = false;\r\n            vm.sortColummnarray = [{ sortcolummnId: \"\", columnOrders: \"\" }]\r\n            vm.previewcolumn = [];\r\n            vm.showGraphOptions = false;\r\n            vm.showChart = false;\r\n            vm.chartType = null;\r\n            vm.chartTypeID = null;\r\n            vm.aggregateFunctionType = null;\r\n            vm.aggregateFunctionResult = null;\r\n            vm.XAxisField = null;\r\n            vm.YAxisField = null;\r\n            vm.chartSeries = [];\r\n            vm.chartOptions = {};\r\n            vm.$refs.modalGraph?.ResetGraph();\r\n            vm.$parent.ResetPreview(vm.customreportparameters);\r\n            vm.noRecord = true;\r\n        },\r\n        ResetGraphData: function () {\r\n            var vm = this;\r\n            vm.showGraphOptions = false;\r\n            vm.$refs.modalGraph.ResetGraph();\r\n            // vm.$refs.modalGraph.ApplyGraph();\r\n            vm.chartType = \"\"\r\n            vm.chartTypeID = null\r\n            vm.aggregateFunctionType = null\r\n            vm.aggregateFunctionResult = null\r\n            vm.XAxisField = null\r\n            vm.YAxisField = null\r\n            vm.chartSeries = []\r\n            vm.chartOptions = {}\r\n            vm.showChart = false;\r\n            vm.BindGraph = false;\r\n        },\r\n        SaveAllReport: async function () {\r\n            var vm = this;\r\n            if (vm.editjsondata) {\r\n                await vm.$parent.PreviewJson(vm.sortColummnarray);\r\n            }\r\n            var graphArray = {\r\n                \"chartTypeID\": vm.chartTypeID,\r\n                \"XAxisField\": vm.XAxisField,\r\n                \"YAxisField\": vm.YAxisField,\r\n                \"AggregateFunction\": vm.aggregateFunctionType,\r\n                \"AggregateFuncField\": vm.aggregateFunctionResult\r\n            }\r\n            if (graphArray.chartTypeID != null) {\r\n                if (vm.Grouplist.length <= 1) {\r\n                    vm.Grouplist.forEach(item => {\r\n                        vm.saveJsonReport.Info.GROUP.push(item);\r\n                    })\r\n                }\r\n                vm.saveJsonReport.Info.GRAPH.push(graphArray);\r\n            }\r\n            var jsonData = JSON.stringify(vm.saveJsonReport);\r\n            if (jsonData != '[]' && jsonData != undefined && vm.previewdata.length > 0) {\r\n                ReportPreviewService.SaveAllDynamicReport(jsonData).then((response) => {\r\n                    if (response.data[0].Value == 1) {\r\n                        vm.ShowAlert(vm.$t(\"AddedSuccess\", [vm.$t(\"Report\")]), 'success', true, vm.$t('Alert'));\r\n                        this.$router.push({ name: 'CustomReports' });\r\n                    }\r\n                    else if (response.data[0].Value == 2) {\r\n                        vm.ShowAlert(vm.$t(\"UpdatedSuccess\", [vm.$t(\"Report\")]), 'success', true, vm.$t('Alert'));\r\n                        this.$router.push({ name: 'CustomReports' });\r\n                    }\r\n                }).catch((err) => {\r\n                    console.log(err);\r\n                })\r\n            } else {\r\n                vm.ShowAlert(vm.$t(\"No_Record_Found\"), 'failure', true, vm.$t('Alert'));\r\n                vm.isLoading = false;\r\n            }\r\n        },\r\n        OpenSortingPopup: function () {\r\n            var vm = this;\r\n            if (!vm.isSortPopup) {\r\n                vm.isSortPopup = true;\r\n            }\r\n            else {\r\n                vm.isSortPopup = false;\r\n            }\r\n        },\r\n        AddSortingForm: function (value) {\r\n            var vm = this\r\n            // Add Sorting popup dynamically.\r\n            if (vm.sortColummnarray[0].columnOrders != '' && vm.sortColummnarray[0].sortcolummnId != '' && vm.sortColummnarray.length < vm.Columnlist.length) {\r\n                vm.sortColummnarray.push({ sortcolummnId: \"\", columnOrders: \"\" });\r\n            } else {\r\n                vm.ShowAlert(vm.sortColummnarray[0].columnOrders != '' && vm.sortColummnarray[0].sortcolummnId != '' ? vm.$t(\"SortLimitExceed\") : vm.$t(\"AddFieldsFirst\"), 'failure', true, vm.$t('Alert'));\r\n            }\r\n        },\r\n        RemoveSortingForm: function (index) {\r\n            var vm = this;\r\n            if (vm.sortColummnarray.length == 1) {\r\n                vm.sortColummnarray = [{ sortcolummnId: \"\", columnOrders: \"\" }]\r\n            }\r\n            else {\r\n                vm.sortColummnarray.splice(vm.sortColummnarray.indexOf(index), 1);\r\n                vm.isValueExistInSort = true;\r\n            }\r\n            if(vm.sortColummnarray.length == 1){\r\n                vm.isValueExistInSort = false}\r\n        },\r\n        OpenGraph: function () {\r\n            var vm = this;\r\n            vm.isSortPopup = false;\r\n            if (!vm.showGraphOptions) {\r\n                vm.showGraphOptions = true;\r\n            }\r\n            else {\r\n                vm.showGraphOptions = false;\r\n            }\r\n        },\r\n        OpenGraphOptions: function () {\r\n            var vm = this;\r\n            vm.showChart = false;\r\n            vm.isGraph = true;\r\n            $(\"#CustomGraphOptions\").modal('show');\r\n            setTimeout(function () {\r\n                $(\"#CustomGraphOptions\").modal('show');\r\n                setTimeout(function () {\r\n                    vm.SetBootstraptoolTip();\r\n                }, 200);\r\n            }, 1000);\r\n        },\r\n        DrawGraph: function (graphParams, BindGraph) {\r\n            var vm = this;\r\n            if (graphParams.selectedChartTypeID != null && graphParams.selectedChartTypeID != undefined) {\r\n                vm.SavedGraphData = graphParams;\r\n                vm.chartType = graphParams.selectedChartType;\r\n                vm.chartTypeID = graphParams.selectedChartTypeID;\r\n                vm.aggregateFunctionType = graphParams.aggregateFunctionType;\r\n                vm.aggregateFunctionResult = graphParams.aggregateFunctionResult;\r\n                vm.XAxisField = graphParams.selectedChartXAxis;\r\n                vm.YAxisField = graphParams.selectedChartYAxis;\r\n                vm.chartSeries = graphParams.chartseries;\r\n                vm.chartOptions = graphParams.chartoptions;\r\n                vm.showChart = true;\r\n                vm.BindGraph = BindGraph;\r\n            }\r\n            else {\r\n                vm.showChart = false;\r\n            }\r\n\r\n        },\r\n        FilterCustomFieldName(CustomFieldId) {\r\n            var vm = this;\r\n            let CustomFieldName;\r\n            for (let [index] of vm.Columnlist.entries()) {\r\n                if (vm.Columnlist[index].CustomFieldId == CustomFieldId || vm.Columnlist[index].FieldName == CustomFieldId) {\r\n                    if (vm.Columnlist[index].DisplayName != null && vm.Columnlist[index].DisplayName != '') {\r\n                        CustomFieldName = vm.Columnlist[index].DisplayName;\r\n                    }\r\n                    else {\r\n                        CustomFieldName = vm.Columnlist[index].FieldName;\r\n                    }\r\n                }\r\n            }\r\n            return CustomFieldName;\r\n        },\r\n        CancelAll: function () {\r\n            this.$router.push({ name: 'CustomReports' });\r\n        },\r\n        CheckColumnExistInGraph: function (CustomFieldId) {\r\n            var vm = this;\r\n            var expression = true;\r\n            if (vm.XAxisField != CustomFieldId && vm.YAxisField != CustomFieldId) {\r\n                return !expression;\r\n            }\r\n            return expression;\r\n\r\n        },\r\n        GetAllRecordsForPDF: async function (excelvalue) {\r\n            var vm = this;\r\n            vm.count = 0;\r\n            if (vm.previewdata.length > 0) {\r\n                var temp = {\r\n                    \"Info\": {\r\n                        \"REPORTID\": vm.customreportparameters.ReportID,\r\n                        \"REPORTNAME\": vm.ReportName,\r\n                        \"MODULENAME\": vm.customreportparameters.Modulename,\r\n                        \"SUBMODULECODE\": vm.customreportparameters.Submodulecode,\r\n                        \"SUBMODULEID\": vm.customreportparameters.submoduleid,\r\n                        \"PAGESIZE\": vm.PageSize,\r\n                        \"PAGENUMBER\": parseInt(vm.PageNumber),\r\n                        \"IS_PAGED\": 1,\r\n                        \"IsForPreview\": vm.isPreviewForPdfExcel,\r\n                        \"FIELDS\": vm.saveJsonReport.Info.FIELDS.length > 0 ? vm.saveJsonReport.Info.FIELDS : vm.PdfJsonReport.Info.FIELDS,\r\n                        \"FILTERS\": vm.saveJsonReport.Info.FILTERS.length > 0 ? vm.saveJsonReport.Info.FILTERS : vm.PdfJsonReport.Info.FILTERS,\r\n                        \"GROUP\": vm.saveJsonReport.Info.GROUP.length > 0 ? vm.saveJsonReport.Info.GROUP : vm.PdfJsonReport.Info.GROUP,\r\n                        \"SORTING\": vm.saveJsonReport.Info.SORTING.length > 0 ? vm.saveJsonReport.Info.SORTING : vm.PdfJsonReport.Info.SORTING,\r\n                        \"EXPRESSION\": vm.saveJsonReport.Info.EXPRESSION.length > 0 ? vm.saveJsonReport.Info.EXPRESSION : vm.PdfJsonReport.Info.EXPRESSION\r\n\r\n                    }\r\n                }\r\n                var jsondata = JSON.stringify(temp);\r\n                vm.ExcelJsonData = jsondata;\r\n                if (excelvalue == undefined) {\r\n                    await ReportPreviewService.PreviewReport(jsondata).then(async (response) => {\r\n                        if (response.data != null && response.data != undefined) {\r\n                            vm.allReocrdsData = JSON.parse(response.data[0].Value);\r\n                            vm.count = vm.count + 1;\r\n                        }\r\n                    }).catch((err) => {\r\n                        console.log(err);\r\n                    })\r\n                }\r\n            }\r\n        },\r\n        //Export TO PDF functionality \r\n        ExportToPDF: async function () {\r\n            var vm = this;\r\n            vm.isLoading = true;\r\n            await vm.GetAllRecordsForPDF();\r\n            if (vm.count != 0) {\r\n                var graphURI = await vm.GetGraphImageURI();\r\n                var GraphData = {};\r\n                var allRecordslisting = vm.allReocrdsData.ListingData;\r\n                let MetaData = vm.allReocrdsData.MetaData[0];\r\n                let ReportName = vm.ReportName.replace('.','-');\r\n                let pageType = 'A2';\r\n                let pdfDetails;\r\n                let pageOrientation = '';\r\n                let GraphWidth = 300;\r\n\r\n                // Create PDF with  Grouping \r\n                if (MetaData.IsGrouping) {\r\n                    await vm.BindPDFDataForGroup(allRecordslisting);\r\n                }\r\n                // Create PDF without  Grouping \r\n                else {\r\n                    await vm.BindPDFData(allRecordslisting);\r\n                }\r\n\r\n                //Set Page Type \r\n                if (vm.TableHeader.length > 5) {\r\n                    pageType = \"A1\";\r\n                    GraphWidth = 500\r\n                }\r\n                //Set Page  pageOrientation\r\n\r\n                if (vm.TableHeader.length > 10) {\r\n                    pageOrientation = 'landscape';\r\n                }\r\n                //Add graph Data\r\n                if (graphURI != null && graphURI != undefined) {\r\n                    GraphData = {\r\n                        image: graphURI.imgURI,\r\n                        width: 500,\r\n                        alignment: 'center'\r\n                    }\r\n                }\r\n\r\n                pdfDetails = {\r\n                    pageSize: pageType,\r\n                    pageOrientation: pageOrientation,\r\n                    content: [\r\n                        GraphData,\r\n                        // { text: `Report Name = ${ReportName}`, style: 'subheader' },\r\n                        {\r\n                            style: 'table',\r\n                            table: {\r\n                                headerRows: 1,\r\n                                body: vm.TableBody\r\n                            }\r\n                        },\r\n                    ],\r\n                    styles: vm.SetPDFStyle(),\r\n                    defaultStyle: {\r\n                        alignment: 'justify'\r\n                    }\r\n                }\r\n                pdfMake.createPdf(pdfDetails).download(ReportName);\r\n                vm.isLoading = false;\r\n            } else {\r\n                vm.ShowAlert(vm.$t(\"No_Record_Found\"), 'failure', true, vm.$t('Alert'));\r\n                vm.isLoading = false;\r\n            }\r\n        },\r\n\r\n        BindPDFData: function (allRecordslisting) {\r\n            var vm = this;\r\n            vm.TableBody = [];\r\n            vm.TableHeader = [];\r\n            var TableHeader2=[];\r\n            //Add  Column for Table header\r\n            var ColumnList = Object.keys(allRecordslisting[0])\r\n            ColumnList.forEach((item) => {\r\n                if (item != 'ROWNUMBER') {\r\n                    vm.TableHeader.push({ text: vm.$t(item), style: 'tableHeader', alignment: 'center' })\r\n                    TableHeader2.push({ text: item, style: 'tableHeader', alignment: 'center' })\r\n                }\r\n            })\r\n\r\n            vm.TableBody.push(vm.TableHeader);\r\n\r\n            allRecordslisting.forEach((item) => {\r\n                let currentData = [];\r\n                TableHeader2.forEach((heading) => {\r\n                    let pdfdata = null;\r\n                    if(typeof item[heading.text] == 'string'){\r\n                        pdfdata = item[heading.text].replace( /(<([^>]+)>)/ig, '');\r\n                    }else{pdfdata = item[heading.text]}\r\n                    currentData.push(pdfdata);\r\n                })\r\n                vm.TableBody.push(currentData);\r\n            })\r\n        },\r\n\r\n        BindPDFDataForGroup: function (allRecordslisting) {\r\n            var vm = this;\r\n            vm.TableBody = [];\r\n            vm.TableHeader = [];\r\n             var TableHeader2=[];\r\n            //Add Grouping Column for Table header\r\n            vm.TableHeader.push({ text: vm.$t(Object.keys(allRecordslisting[0])[0]), style: 'tableHeader', alignment: 'center' })\r\n            TableHeader2.push({ text: Object.keys(allRecordslisting[0])[0], style: 'tableHeader', alignment: 'center' })\r\n            // Add all Column in Table Header \r\n            var columnList = Object.keys(allRecordslisting[0].data[0])\r\n            columnList.forEach((item) => {\r\n                vm.TableHeader.push({ text: vm.$t(item), style: 'tableHeader', alignment: 'center' })\r\n                TableHeader2.push({ text: item, style: 'tableHeader', alignment: 'center' })\r\n            })\r\n\r\n            //Add First header array into Table Body\r\n            vm.TableBody.push(vm.TableHeader);\r\n\r\n            //Create Array for PDF\r\n            allRecordslisting.forEach((item) => {\r\n                item.data.forEach((heading, groupingindex) => {\r\n                    let tableData = [];\r\n                    TableHeader2.forEach((headerelement, headerindex) => {\r\n                        if (groupingindex == 0 && headerindex == 0) {\r\n                            let pdfgroupdata = null;\r\n                            if(typeof item[headerelement.text] == 'string'){\r\n                                pdfgroupdata = item[headerelement.text].replace( /(<([^>]+)>)/ig, '');\r\n                            }else{pdfgroupdata = ite[headerelement.text]}\r\n                            var groupColumn = `${pdfgroupdata} (${item.totalRecord})`\r\n                            tableData.push({ rowSpan: parseInt(item.totalRecord), text: groupColumn })\r\n                        }\r\n                        else if (groupingindex == 1 && headerindex == 0) {\r\n                            tableData.push(\"\")\r\n                        }\r\n                        else {\r\n                            if (heading[headerelement.text] != undefined && heading[headerelement.text] != \"\") {\r\n                                let pdfwithoutgroupdata = null;\r\n                                if(typeof heading[headerelement.text] == 'string'){\r\n                                    pdfwithoutgroupdata = heading[headerelement.text].replace( /(<([^>]+)>)/ig, '');\r\n                                }else{pdfwithoutgroupdata = heading[headerelement.text]}\r\n                                tableData.push(pdfwithoutgroupdata);\r\n                            }\r\n                            else {\r\n                                var tempitem = heading[headerelement.text] = \"-\";\r\n                                tableData.push(tempitem);\r\n                            }\r\n                        }\r\n                    })\r\n                    vm.TableBody.push(tableData)\r\n                })\r\n            })\r\n        },\r\n        SetPDFStyle: function () {\r\n            return {\r\n                subheader: {\r\n                    fontSize: 16,\r\n                    bold: true,\r\n                    margin: [0, 0, 0, 10]\r\n                },\r\n                table: {\r\n                    margin: [0, 5, 0, 15]\r\n                }\r\n            };\r\n        },\r\n        GetGraphImageURI: async function () {\r\n            var vm = this;\r\n            var URI;\r\n            await vm.$refs.chart?.chart.dataURI().then(uri => {\r\n                URI = uri;\r\n            });\r\n            return URI;\r\n        },\r\n        ExportToExcel: async function () {\r\n            var vm = this;\r\n            vm.isLoading = true;\r\n            // var jsonData = JSON.stringify(vm.saveJsonReport.Info.GROUP.length > 0 ? vm.saveJsonReport : vm.PdfJsonReport);\r\n            await vm.GetAllRecordsForPDF('Excel');\r\n            if (vm.ExcelJsonData != null && vm.ExcelJsonData != undefined) {\r\n                var jsonData = vm.ExcelJsonData;\r\n                var params = `reportId=${vm.customreportparameters.ReportID}&pagetype=preview&IsPaged=1`;\r\n                ReportPreviewService.GetExcelReport(params, jsonData).then((response) => {\r\n                    var blob = new Blob([response.data], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;' });\r\n                    var link = document.createElement('a');\r\n                    link.href = window.URL.createObjectURL(blob);\r\n                    const current = new Date();\r\n                    const date = `${current.getDate()}_${current.getMonth()+1}_${current.getFullYear()}`;\r\n                    var fileName = `ReportData-${vm.ReportName.replace('.', '-')}-${date}`;\r\n                    fileName = fileName.split(\" \").join(\"\");\r\n                    link.download = fileName;\r\n                    link.click();\r\n                    vm.isLoading = false\r\n                }).catch((err) => { console.log(err); vm.isLoading = false; })\r\n            } else {\r\n                vm.ShowAlert(vm.$t(\"No_Record_Found\"), 'failure', true, vm.$t('Alert'));\r\n                vm.isLoading = false;\r\n            }\r\n        },\r\n        close() {\r\n            var vm = this;\r\n            vm.isSortPopup = false;\r\n        }\r\n        \r\n        \r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/* .arrow-solid-left::before {\r\n    right: 4px;\r\n    ;\r\n} */\r\n/* \r\n@media (max-width:1440px) {\r\n    .verticle-action.lft75 {\r\n        top: 80px !important;\r\n    }\r\n}\r\n\r\n@media (max-width:1250px) {\r\n    .verticle-action.lft75 {\r\n        right: 50px !important;\r\n    }\r\n\r\n}\r\n\r\n@media (max-width:1180px) {\r\n    .verticle-action.lft75 {\r\n        top: 130px !important;\r\n        right: 70px !important;\r\n    }\r\n\r\n    .arrow-solid-left::before {\r\n        right: 2px;\r\n        top: 350px;\r\n    }\r\n}\r\n\r\n@media (max-width: 1080px) {\r\n    .verticle-action.lft75 {\r\n        right: 0 !important;\r\n    }\r\n\r\n    .arrow-solid-left::before {\r\n        right: 4px;\r\n        top: 170px;\r\n    }\r\n}\r\n\r\n@media (max-width: 992px) {\r\n    .arrow-solid-left::before {\r\n        right: 4px;\r\n        top: 140px;\r\n    }\r\n}\r\n\r\n@media (max-width: 930px) {\r\n    .verticle-action.lft75 {\r\n        top: 180px !important;\r\n    }\r\n\r\n    .arrow-solid-left::before {\r\n        top: 175px !important;\r\n    }\r\n}\r\n\r\n@media (max-width: 830px) {\r\n    .verticle-action.lft75 {\r\n        top: 295px !important;\r\n        right: 0 !important;\r\n    }\r\n\r\n    .arrow-solid-left::before {\r\n        top: 50px !important;\r\n    }\r\n} */\r\n</style>\r\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ReportPreview.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ReportPreview.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ReportPreview.vue?vue&type=template&id=3938c124&scoped=true&\"\nimport script from \"./ReportPreview.vue?vue&type=script&lang=js&\"\nexport * from \"./ReportPreview.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ReportPreview.vue?vue&type=style&index=0&id=3938c124&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"3938c124\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"modal my-popups centre fade\",attrs:{\"id\":\"showcalculatedfield\",\"role\":\"dialog\"}},[_c('div',{staticClass:\"modal-dialog\",attrs:{\"role\":\"document\"}},[_c('div',{staticClass:\"modal-content\"},[_c('div',{staticClass:\"modal-header mheader-user\"},[_c('button',{staticClass:\"close\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.close()}}},[_c('em',{staticClass:\"fa fa-times\",attrs:{\"aria-hidden\":\"true\"}})]),_c('h4',{staticClass:\"modal-title\",attrs:{\"id\":\"myModalLabel\"}},[_vm._v(_vm._s(_vm.$t('customField')))])]),_c('div',{staticClass:\"modal-body\"},[_c('loader',{attrs:{\"is-visible\":_vm.isLoading}}),_c('dynamic-form',{attrs:{\"lang\":\"en\",\"buttons\":_vm.buttons,\"schema\":_vm.FormSchema},on:{\"OnSubmit\":function($event){return _vm.SubmitExpression()}},scopedSlots:_vm._u([{key:\"tgslot-CalculatedUIList\",fn:function({ data }){return [_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-12 p-0 float-left\"},[_c('div',{staticClass:\"col-lg-4 mb-0 float-left px-3\"},[_c('div',{staticClass:\"heading-border mb-4\"},[_c('h5',{staticClass:\"h5\"},[_c('span',{staticClass:\"spngropuname\"},[_vm._v(\" \"+_vm._s(_vm.$t('Functions'))+\" \"),_c('div',{staticClass:\"w3-container w3-border w3-large\"})])])]),_c('div',{staticClass:\"accordion md-accordion left-filter\",attrs:{\"id\":\"accordionEx1\"}},[_c('div',{staticClass:\"card-panel\",staticStyle:{\"border-top\":\"1px solid #c7c7c7\"}},_vm._l((_vm.FunctionsName),function(name,index){return _c('div',{key:index,staticClass:\"card\"},[_c('div',{staticClass:\"card-header\",attrs:{\"role\":\"tab\",\"id\":'MainFunction' + index}},[_c('h5',{staticClass:\"mb-0\"},[_c('a',{class:index == 0 ? '' : 'collapsed',attrs:{\"data-toggle\":\"collapse\",\"data-parent\":\"#accordionEx1\",\"href\":'#FucntionCollapse' + index,\"aria-expanded\":index == 0 ? true : false,\"aria-controls\":'FucntionCollapse' + index}},[_c('em',{staticClass:\"fa fa fa-file-text-o\",attrs:{\"aria-hidden\":\"true\"}}),_c('span',{staticClass:\"font-weight-bold\"},[_vm._v(\" \"+_vm._s(name.FuncType))]),_c('em',{staticClass:\"fa fa-angle-down rotate-icon\",attrs:{\"aria-hidden\":\"true\"}})])])]),_c('div',{class:index == 0 ? 'collapse multi-collapse show' : 'collapse multi-collapse',attrs:{\"id\":'FucntionCollapse' + index,\"role\":\"tabpanel\",\"aria-labelledby\":'MainFunction' + index,\"data-parent\":\"#accordionEx1\"}},[_c('div',{staticClass:\"card-body p-0 customScrollForLeftBar llt\",staticStyle:{\"max-height\":\"300px\"}},[_c('div',{staticClass:\"form-group\"},[_c('ul',{staticClass:\"nav nav-pills flex-column left-tab responivecustomtab lefttabiconfix\",staticStyle:{\"max-height\":\"214px\",\"overflow\":\"auto\",\"display\":\"block\"}},[_vm._l((_vm.Functionskey[index]),function(element){return [_c('li',{staticClass:\"nav-item parent-element\"},[_c('span',{staticClass:\"nav-link left-menu px-4\"},[_c('em',{staticClass:\"fa fa-bullhorn float-left\",attrs:{\"aria-hidden\":\"true\"}}),_c('span',{staticClass:\"text-truncate float-left\",staticStyle:{\"width\":\"55%\"},attrs:{\"data-toggle-tooltip\":element.Keys,\"title\":element.Keys}},[_vm._v(\" \"+_vm._s(element.Keys)+\" \")]),_c('a',{attrs:{\"href\":\"javascript:;\"}},[_c('em',{staticClass:\"fa fa-plus float-right mt-1 text-success pr-0\",attrs:{\"aria-hidden\":\"true\"},on:{\"click\":function($event){return _vm.AddFunctionsfields(element, $event, index)}}})])])])]})],2)])])])])}),0)])]),_c('div',{staticClass:\"col-lg-4 mb-0 float-left px-3\"},[_c('div',{staticClass:\"heading-border\"},[_c('h5',{staticClass:\"h5\"},[_c('span',{staticClass:\"spngropuname\"},[_vm._v(\" \"+_vm._s(_vm.$t('Expression'))+\" \"),_c('a',{staticClass:\"editgroupname d-none\",attrs:{\"title\":\"@Resources.Edit\",\"href\":\"javascript:;\"}},[_c('em',{staticClass:\"fa fa-pencil pl-2 text-success\"})])])])]),_c('div',{staticClass:\"border p-3 mt-4 float-left\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-11 mb-2\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.modelconditionexpression),expression:\"modelconditionexpression\"}],class:_vm.Functionkey == 'Date diff' || _vm.Functionkey == 'Date add' || _vm.Functionkey == 'Date name' || _vm.Functionkey == 'Date part' || _vm.Functionkey == 'If'\n                                                        ? 'form-control' : 'form-control d-none',attrs:{\"type\":\"text\",\"placeholder\":\"Enter Your Conditions\"},domProps:{\"value\":(_vm.modelconditionexpression)},on:{\"input\":function($event){if($event.target.composing)return;_vm.modelconditionexpression=$event.target.value}}}),_c('small',{class:_vm.Functionkey == 'Date diff' || _vm.Functionkey == 'Date add' || _vm.Functionkey == 'Date name' || _vm.Functionkey == 'Date part' || _vm.Functionkey == 'If' ? 'text-danger' : 'd-none'},[_vm._v(_vm._s(_vm.ShowDescriptionForFunction))])]),_c('div',{staticClass:\"col-md-1 p-0 my-1\"},[_c('a',{class:_vm.Functionkey == 'Date diff' || _vm.Functionkey == 'Date add' || _vm.Functionkey == 'Date name' || _vm.Functionkey == 'Date part' || _vm.Functionkey == 'If'\n                                                        ? 'fa fa-play text-success' : 'fa fa-play text-success d-none',on:{\"click\":_vm.AddConditionExpression}})])]),_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.InputValueExpression),expression:\"InputValueExpression\"}],staticClass:\"border background-white float-left w-100 p-3\",staticStyle:{\"min-height\":\"250px\"},attrs:{\"id\":\"txtarea\"},domProps:{\"value\":(_vm.InputValueExpression)},on:{\"keydown\":function($event){return _vm.deleteuserinput($event)},\"mouseup\":function($event){return _vm.GetCursorPoint($event)},\"select\":function($event){return _vm.UserInputSelection($event)},\"input\":function($event){if($event.target.composing)return;_vm.InputValueExpression=$event.target.value}}}),_c('div',{staticClass:\"expressionbx mb-4 bg-grey text-right float-left w-100 py-2 border\"},[_c('a',{staticClass:\"fa fa-keyboard-o\",on:{\"click\":function($event){return _vm.AddSpace($event)}}}),_c('a',{attrs:{\"href\":\"javascript:;\"},on:{\"click\":function($event){return _vm.Addplussign($event)}}},[_vm._v(\"+\")]),_c('a',{attrs:{\"href\":\"javascript:;\"},on:{\"click\":function($event){return _vm.Addsubtractsign($event)}}},[_vm._v(\"-\")]),_c('a',{attrs:{\"href\":\"javascript:;\"},on:{\"click\":function($event){return _vm.Addmultiplysign($event)}}},[_vm._v(\"*\")]),_c('a',{attrs:{\"href\":\"javascript:;\"},on:{\"click\":function($event){return _vm.Adddividesign($event)}}},[_vm._v(\"/\")]),_c('a',{attrs:{\"href\":\"javascript:;\"},on:{\"click\":function($event){return _vm.Addopenbracketsign($event)}}},[_vm._v(\"(\")]),_c('a',{attrs:{\"href\":\"javascript:;\"},on:{\"click\":function($event){return _vm.Addclosebracketsign($event)}}},[_vm._v(\")\")])]),_c('div',{staticClass:\"col-12 p-0 float-left\"},[_c('div',{staticClass:\"row flex-row-reverse\"},[_c('div',{staticClass:\"col-12 p-0 float-left\",attrs:{\"id\":\"verifiedid\"}},[(_vm.verifiedvaluedata == 0)?_c('div',{staticClass:\"alert alert-danger alert-dismissible fade show\",attrs:{\"role\":\"alert\"}},[_vm._v(\" \"+_vm._s(_vm.$t(\"InvalidExp\"))),_c('button',{staticClass:\"close\",attrs:{\"type\":\"button\",\"data-dismiss\":\"alert\",\"aria-label\":\"Close\"},on:{\"click\":_vm.closed}},[_c('span',{attrs:{\"aria-hidden\":\"true\"}},[_vm._v(\"×\")])])]):_vm._e(),(_vm.verifiedvaluedata == 1)?_c('div',{staticClass:\"alert alert-success alert-dismissible fade show\",attrs:{\"role\":\"alert\"}},[_vm._v(\" \"+_vm._s(_vm.$t(\"ExpressionVerify\"))),_c('button',{staticClass:\"close\",attrs:{\"type\":\"button\",\"data-dismiss\":\"alert\",\"aria-label\":\"Close\"},on:{\"click\":_vm.closed}},[_c('span',{attrs:{\"aria-hidden\":\"true\"}},[_vm._v(\"×\")])])]):_vm._e()]),_c('div',{staticClass:\"col-lg-12 text-right\"},[_c('a',{staticClass:\"btn btn-success ancsaveuserticket mr-2\",attrs:{\"href\":\"javascript:;\"},on:{\"click\":_vm.VerifyExpression}},[_c('em',{staticClass:\"fa fa-check pr-2\"}),_vm._v(\"Verify\")]),_c('a',{staticClass:\"btn btn-danger ancsaveuserticket\",attrs:{\"href\":\"javascript:;\"},on:{\"click\":_vm.ResetExpression}},[_c('em',{staticClass:\"fa fa-refresh pr-2\"}),_vm._v(\"Reset\")])])])])])]),_c('div',{staticClass:\"col-lg-4 mb-0 float-left px-3\"},[_c('div',{staticClass:\"heading-border mb-4\"},[_c('h5',{staticClass:\"h5\"},[_c('span',{staticClass:\"spngropuname\"},[_vm._v(\" \"+_vm._s(_vm.$t('Columns'))+\" \"),_c('div',{staticClass:\"w3-container w3-border w3-large\"})])])]),_c('div',{staticClass:\"mb-0 d-lg-block p-2 border\"},[_c('div',{staticClass:\"input-group customsearchbox\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.MainSearchmodel),expression:\"MainSearchmodel\"}],staticClass:\"form-control searchcustomfilter border-right-0\",attrs:{\"type\":\"text\",\"maxlength\":\"50\",\"id\":\"searchinput\",\"placeholder\":\"Search by Name\",\"autocomplete\":\"off\"},domProps:{\"value\":(_vm.MainSearchmodel)},on:{\"keydown\":_vm.ListFiltering,\"keyup\":_vm.ListFiltering,\"input\":function($event){if($event.target.composing)return;_vm.MainSearchmodel=$event.target.value}}}),_c('div',{staticClass:\"input-group-append\"},[_c('span',{staticClass:\"input-group-text bg-transparent bg-white border-left-0\"})])])]),_c('div',{staticClass:\"accordion md-accordion left-filter\",attrs:{\"id\":\"accordionEx2\"}},[_c('div',{staticClass:\"card-panel\",staticStyle:{\"border-top\":\"1px solid #c7c7c7\"}},_vm._l((_vm.JsonColumns),function(name,index){return _c('div',{key:index,staticClass:\"card\"},[_c('div',{staticClass:\"card-header\",attrs:{\"role\":\"tab\",\"id\":'MainColumn' + index}},[_c('h5',{staticClass:\"mb-0\"},[_c('a',{class:index == 0 ? '' : 'collapsed',attrs:{\"data-toggle\":\"collapse\",\"data-parent\":\"#accordionEx2\",\"href\":'#ColumnCollapse' + index,\"aria-expanded\":index == 0 ? true : false,\"aria-controls\":'ColumnCollapse' + index}},[_c('em',{staticClass:\"fa fa fa-file-text-o\",attrs:{\"aria-hidden\":\"true\"}}),_c('span',{staticClass:\"font-weight-bold\"},[_vm._v(\" \"+_vm._s(_vm.GetLocalizedValue(name.SubModule)))]),_c('em',{staticClass:\"fa fa-angle-down rotate-icon\",attrs:{\"aria-hidden\":\"true\"}})])])]),_c('div',{class:index == 0 ? 'collapse multi-collapse column-collapse show' : 'collapse multi-collapse column-collapse',attrs:{\"id\":'ColumnCollapse' + index,\"role\":\"tabpanel\",\"aria-labelledby\":'MainColumn' + index,\"data-parent\":\"#accordionEx2\"}},[_c('div',{staticClass:\"card-body p-0 customScrollForLeftBar llt\",staticStyle:{\"max-height\":\"300px\"}},[_c('div',{staticClass:\"form-group\"},[_c('ul',{staticClass:\"nav nav-pills flex-column left-tab responivecustomtab lefttabiconfix\",staticStyle:{\"max-height\":\"305px\",\"overflow\":\"auto\",\"display\":\"block\"}},[_vm._l((_vm.searchColumnfilter.length == 0 ? _vm.modulelisting[index] : _vm.searchColumnfilter[index]),function(element){return [_c('li',{staticClass:\"nav-item parent-element\"},[_c('span',{staticClass:\"nav-link left-menu px-4\"},[_c('em',{class:element.dttype[0].icon + ' ' + 'float-left',attrs:{\"aria-hidden\":\"true\"}}),_c('span',{staticClass:\"text-truncate float-left\",staticStyle:{\"width\":\"55%\"},attrs:{\"data-toggle-tooltip\":element.FieldName,\"title\":element.FieldName}},[_vm._v(\" \"+_vm._s(_vm.GetLocalizedValue((element.DisplayName != null && element.DisplayName != \"\") ? element.DisplayName : element.FieldName))+\" \")]),_c('a',{attrs:{\"href\":\"javascript:;\"}},[_c('em',{staticClass:\"fa fa-plus float-right mt-1 text-success pr-0\",attrs:{\"aria-hidden\":\"true\"},on:{\"click\":function($event){return _vm.Addfields(element, $event, index)}}})])])])]})],2)])])])])}),0)]),(_vm.SearchNoRecord)?_c('div',{staticClass:\"text-center text-danger d-flex align-items-center justify-content-center norecs pt-2\"},[_vm._v(\" \"+_vm._s(_vm.$t(\"NoRecordfound\")))]):_vm._e()])])])]}}])})],1)])])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<script>\r\nimport ExpressionDataService from \"@/services/DataService\";\r\nexport default {\r\n    props: {\r\n        customreportparameters: {\r\n            type: Object\r\n        },\r\n        ExpDataArray: {\r\n            type: Array\r\n        },\r\n        editexpressionvalue: {\r\n            type: Boolean\r\n        },\r\n        ExpFieldDataArray: {\r\n            type: Array\r\n        },\r\n        Columnlist: {\r\n            type: Array\r\n        },\r\n        AlreadyExistExpression: {\r\n            typeL: Object\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            JsonColumns: [],\r\n            modulelisting: [],\r\n            FunctionsName: [],\r\n            Functionskey: [],\r\n            ResponseColumnData: [],\r\n            ResponseFunctionData: [],\r\n            watchvalue: false,\r\n            FieldsValue: '',\r\n            FunctionValue: '',\r\n            AddBracketValue: '',\r\n            SubtractBracketValue: '',\r\n            MultplyBracketValue: '',\r\n            DivideBracketValue: '',\r\n            OpenBracketExpValue: '',\r\n            CloseBracketExpValue: '',\r\n            InputValueExpression: '',\r\n            FieldData: [],\r\n            fieldatavalue: [],\r\n            reqFrom: 'Reporting',\r\n            isLoading: false,\r\n            verifiedvalue: false,\r\n            modelfieldname: '',\r\n            substringvalue: '',\r\n            verifiedvaluedata: null,\r\n            verifyErrorMsg: '',\r\n            InputValueArray: [],\r\n            InputValueExpressionByID: '',\r\n            FunctionValueArray: 'No_Value',\r\n            selecteduserinput: null,\r\n            selecteduserinputbyid: null,\r\n            ExpressionIDvalue: '',\r\n            updateexpresion: true,\r\n            fieldadded: false,\r\n            FieldTableNameValue: '',\r\n            GetCommaSeparatedValue: '',\r\n            countbyfield: 0,\r\n            modelconditionexpression: '',\r\n            conditionexpression: false,\r\n            Functionkey: null,\r\n            ShowDescriptionForFunction: null,\r\n            checkbycondition: 0,\r\n            searchColumnfilter: [],\r\n            MainSearchmodel: '',\r\n            SearchNoRecord: false,\r\n            FormSchema: [\r\n                {\r\n                    layoutType: \"single\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"TextField\",\r\n                            label: this.$t('fieldName'),\r\n                            name: \"fieldName\",\r\n                            value: \"\",\r\n                            placeholder: \"Enter Field Name\",\r\n                            config: {\r\n                                options: [],\r\n                                showAddIcon: false,\r\n                            },\r\n                            // validationRules: \"required\",\r\n                            validationRules: { \"required\": true, max: 100 },\r\n\r\n                        },\r\n                        {\r\n                            astype: \"SlotField\",\r\n                            label: '',\r\n                            name: \"CalculatedUIList\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            config: {\r\n                                options: [],\r\n                                showAddIcon: false,\r\n                                onChange: this.onChangeDropdown\r\n                            },\r\n                            validationRules: \"\",\r\n                        },\r\n                    ]\r\n                }\r\n            ],\r\n            buttons: [\r\n                {\r\n                    type: \"submit\",\r\n                    class: \"btn btn-success mr-2 my-sm-0 disabled\",\r\n                    text: \"<i class='fa fa-save pr-2'></i>Submit\",\r\n                },\r\n                {\r\n                    type: \"button\",\r\n                    class: \"btn btn-primary delete-btn mr-2 my-sm-0\",\r\n                    text: \"<i class='fa fa-times pr-2'></i>Cancel\",\r\n                    onClick: this.CancelExpressionUI\r\n                }\r\n            ]\r\n        }\r\n    },\r\n    created() {\r\n        var vm = this;\r\n        vm.GetColumnList(vm.customreportparameters);\r\n        if (vm.editexpressionvalue == true && vm.ExpDataArray.length > 0) {\r\n            vm.ExpresssionDataValue(vm.ExpDataArray, vm.ExpFieldDataArray);\r\n        }\r\n        vm.GetFunctionList();\r\n    },\r\n    mounted: function () {\r\n        $('#showcalculatedfield').modal({\r\n            backdrop: 'static',\r\n            keyboard: false\r\n        })\r\n    },\r\n    watch: {\r\n        watchvalue(newval) {\r\n            var vm = this;\r\n            if (newval) {\r\n                vm.GetColumnList(vm.customreportparameters);\r\n                vm.GetFunctionList();\r\n                vm.watchvalue = false;\r\n                $(\"#Submitbtn\").addClass('disabled');\r\n                if (vm.editexpressionvalue == true && vm.ExpDataArray.length > 0 && vm.updateexpresion == true) {\r\n                    vm.ExpresssionDataValue(vm.ExpDataArray, vm.ExpFieldDataArray);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        close() {\r\n            $(\"#showcalculatedfield\").modal(\"hide\"); $(\"body\").removeClass(\"modal-open\");\r\n            $(\".modal-backdrop\").remove();\r\n            this.$emit('close');\r\n            // this.modelfieldname = '';\r\n            this.FormSchema[0].Data[0].value = '';\r\n            // this.FormSchema[0].Data[0].validationRules = '';\r\n            this.ExpressionIDvalue = '';\r\n            this.ResetExpression();\r\n            //this.$refs.form.setFieldTouched('modelfieldname', false);\r\n        },\r\n        GetColumnList(customreportparameters) {\r\n            var vm = this;\r\n            if (customreportparameters.Modulename != undefined && customreportparameters.Submodulecode != undefined && customreportparameters.ReportName != null) {\r\n                var params = `moduleName=${customreportparameters.Modulename}&subModuleCode=${customreportparameters.Submodulecode}&viewId&reqFrom=${vm.reqFrom}`;\r\n                ExpressionDataService.GetListFields(params).then(response => {\r\n                    vm.JsonColumns = response.data.AVAILABLE_FIELDS[0];\r\n                    vm.JsonColumns.forEach((item) => {\r\n                        vm.modulelisting.push(item.CustomFields);\r\n                    })\r\n                }).catch(err => {\r\n                    console.log(err);\r\n                })\r\n            }\r\n        },\r\n        GetFunctionList() {\r\n            var vm = this;\r\n            ExpressionDataService.GetFunctionList().then(res => {\r\n                vm.FunctionsName = res.data.AVAILABLE_FIELDS[0];\r\n                vm.FunctionsName.forEach((name) => {\r\n                    vm.Functionskey.push(name.Functions);\r\n                })\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n        },\r\n        Addfields(element, event, index) {\r\n            var vm = this;\r\n            if (vm.modelconditionexpression == '') { vm.FieldData.push({ CustomFieldId: element.CustomFieldId, FieldName: element.FieldName }); }\r\n\r\n            if (vm.substringvalue == '') {\r\n                var cursorpos = vm.GetCursorPoint();\r\n                var getdata = vm.SetValueOnCursorPosition(cursorpos);\r\n                if (getdata.length > 1) {\r\n                    var checkindex = vm.InputValueArray.findIndex(x => x.FieldValueData === getdata[0].FieldValueData);\r\n                    if (checkindex > -1) {\r\n                        vm.fieldatavalue.splice(checkindex, 0, {\r\n                            FieldValueData: vm.$t((element.DisplayName != null && element.DisplayName != \"\") ? element.DisplayName : element.FieldName),\r\n                            MatchIndex: vm.$t((element.DisplayName != null && element.DisplayName != \"\") ? element.DisplayName : element.FieldName).length, SameName: 'Field_Added' + cursorpos\r\n                        })\r\n                        vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('')\r\n                        vm.fieldadded = true;\r\n                    }\r\n                } else {\r\n                    vm.fieldatavalue.push({\r\n                        FieldValueData: vm.$t((element.DisplayName != null && element.DisplayName != \"\") ? element.DisplayName : element.FieldName),\r\n                        MatchIndex: vm.$t((element.DisplayName != null && element.DisplayName != \"\") ? element.DisplayName : element.FieldName).length, SameName: 'Field_Added' + cursorpos\r\n                    });\r\n                    vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                    vm.fieldadded = false;\r\n                }\r\n                $(\"#Submitbtn\").addClass('disabled');\r\n            }\r\n            else {\r\n                if (typeof vm.fieldatavalue == 'object') {\r\n                    var convertarr = String(vm.fieldatavalue.map(x => x.FieldValueData));\r\n                    vm.fieldatavalue = convertarr\r\n                }\r\n                if (vm.GetCommaSeparatedValue == \"CommaSeparatedValue\" && vm.countbyfield == 0 && !vm.conditionexpression) {\r\n                    var firstindex = vm.fieldatavalue.indexOf(\",\") + 1;\r\n                    var secondindex = vm.fieldatavalue.indexOf(\")\")\r\n                }\r\n                else if (vm.GetCommaSeparatedValue == \"CommaSeparatedValue\" && vm.countbyfield > 0 && !vm.conditionexpression) {\r\n                    var firstindex = vm.fieldatavalue.indexOf(vm.fieldatavalue.split(\",\")[vm.countbyfield]);\r\n                    var secondindex = vm.fieldatavalue.indexOf(\")\")\r\n                }\r\n                else {\r\n                    var firstindex = vm.fieldatavalue.indexOf(\"(\") + 1;\r\n                    var secondindex = vm.fieldatavalue.indexOf(\")\")\r\n                }\r\n                vm.substringvalue = vm.fieldatavalue.substring(firstindex, secondindex);\r\n                vm.FunctionValueArray = vm.substringvalue;\r\n                if (vm.substringvalue.includes(',')) {\r\n                    var substringarr = vm.substringvalue.split(',')\r\n                    vm.substringvalue = substringarr;\r\n                    if (!vm.conditionexpression && vm.checkbycondition == 0) {\r\n                        vm.FieldsValue = vm.fieldatavalue.replace(vm.substringvalue[0],\r\n                            vm.$t((element.DisplayName != null && element.DisplayName != \"\") ? element.DisplayName : element.FieldName))\r\n                    }\r\n                    else {\r\n                        vm.FieldsValue = vm.fieldatavalue.replace(vm.substringvalue[0], element)\r\n                    }\r\n                    // vm.fieldatavalue = vm.FieldsValue;\r\n                    vm.fieldatavalue = [];\r\n                    vm.fieldatavalue.push({\r\n                        FieldValueData: vm.FieldsValue,\r\n                        MatchIndex: vm.FieldsValue.length, SameName: 'Field_Added' + vm.FieldsValue.length\r\n                    });\r\n                    $(\"#Submitbtn\").addClass('disabled');\r\n                } else {\r\n                    if (!vm.conditionexpression && vm.checkbycondition == 0) {\r\n                        vm.FieldsValue = vm.fieldatavalue.replace(vm.substringvalue,\r\n                            vm.$t((element.DisplayName != null && element.DisplayName != \"\") ? element.DisplayName : element.FieldName))\r\n                    }\r\n                    else {\r\n                        vm.FieldsValue = vm.fieldatavalue.replace(vm.substringvalue, element);\r\n                    }\r\n                    // vm.fieldatavalue = vm.FieldsValue;\r\n                    vm.fieldatavalue = [];\r\n                    vm.fieldatavalue.push({\r\n                        FieldValueData: vm.FieldsValue,\r\n                        MatchIndex: vm.FieldsValue.length, SameName: 'Field_Added' + vm.FieldsValue.length\r\n                    });\r\n                    $(\"#Submitbtn\").addClass('disabled');\r\n\r\n                }\r\n            }\r\n            if (!vm.conditionexpression && vm.checkbycondition == 0) {\r\n                if (element.IsSystemGenerated) {\r\n                    vm.FieldTableNameValue = element.TableName + '.' + element.FieldName;\r\n                }\r\n                else {\r\n                    vm.FieldTableNameValue = element.FieldName;\r\n                }\r\n                // $(event.target).closest(\".parent-element\").remove();\r\n            } else { vm.FieldTableNameValue = element; }\r\n            vm.updatingvalue();\r\n            vm.updatevaluebyid(element, checkindex, getdata, cursorpos);\r\n        },\r\n        AddFunctionsfields(element, event, index) {\r\n            var vm = this;\r\n            if (vm.InputValueExpression == null || vm.InputValueExpression == undefined || vm.InputValueExpression == \"\") {\r\n                if (typeof vm.fieldatavalue == 'string') {\r\n                    var substringarr = vm.fieldatavalue.split(',')\r\n                    vm.fieldatavalue = substringarr;\r\n                }\r\n                vm.fieldatavalue.push({ FieldValueData: element.Value, MatchIndex: element.Value.length, SameName: 'Function_Added' });\r\n                vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                vm.InputValueArray.push({ FieldValueData: element.Value, MatchIndex: element.Value.length, SameName: 'Function_Added' });\r\n                vm.Functionkey = element.Keys;\r\n                vm.DescriptionForFunction();\r\n                if (element.Keys == \"Case\") {\r\n                    vm.substringvalue = ''\r\n                } else { vm.substringvalue = \"Function_Added\"; }\r\n                $(event.target).closest(\".parent-element\").remove();\r\n                vm.updatingvalue();\r\n                vm.updatevaluebyid();\r\n            }\r\n            else {\r\n                vm.ShowAlert(\"You Cannot Select More Than One Function.\", \"Failure\");\r\n            }\r\n\r\n        },\r\n        Addopenbracketsign() {\r\n            var vm = this;\r\n            if (typeof vm.fieldatavalue == 'string') {\r\n                var substringarr = vm.fieldatavalue.split(',')\r\n                vm.fieldatavalue = substringarr;\r\n            }\r\n            var openbracketexpsign = '('\r\n            var openbracket = openbracketexpsign.split('');\r\n            var cursorpos = vm.GetCursorPoint();\r\n            var getdata = vm.SetValueOnCursorPosition(cursorpos);\r\n            if (getdata.length > 1) {\r\n                var checkindex = vm.InputValueArray.findIndex(x => x.FieldValueData === getdata[0].FieldValueData);\r\n                if (checkindex > -1) {\r\n                    vm.fieldatavalue.splice(checkindex, 0, {\r\n                        FieldValueData: openbracket, MatchIndex: openbracket.length, SameName: 'Open_BracketAdded' + cursorpos\r\n                    })\r\n                    vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                    vm.InputValueArray.splice(checkindex, 0, {\r\n                        FieldValueData: openbracket, MatchIndex: openbracket.length, SameName: 'Open_BracketAdded' + cursorpos\r\n                    })\r\n                }\r\n            } else {\r\n                vm.fieldatavalue.push({ FieldValueData: openbracket, MatchIndex: openbracket.length, SameName: 'Open_BracketAdded' + cursorpos })\r\n                vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                vm.InputValueArray.push({ FieldValueData: openbracket, MatchIndex: openbracket.length, SameName: 'Open_BracketAdded' + cursorpos })\r\n            }\r\n            vm.substringvalue = '';\r\n            vm.FunctionValueArray = 'No_Value';\r\n            vm.updatingvalue();\r\n            vm.updatevaluebyid();\r\n        },\r\n        Addclosebracketsign() {\r\n            var vm = this;\r\n            if (typeof vm.fieldatavalue == 'string') {\r\n                var substringarr = vm.fieldatavalue.split(',')\r\n                vm.fieldatavalue = substringarr;\r\n            }\r\n            var closebracketexpsign = ')'\r\n            var closebracket = closebracketexpsign.split('');\r\n            var cursorpos = vm.GetCursorPoint();\r\n            var getdata = vm.SetValueOnCursorPosition(cursorpos);\r\n            if (getdata.length > 1) {\r\n                var checkindex = vm.InputValueArray.findIndex(x => x.FieldValueData === getdata[0].FieldValueData);\r\n                if (checkindex > -1) {\r\n                    vm.fieldatavalue.splice(checkindex, 0, {\r\n                        FieldValueData: closebracket, MatchIndex: closebracket.length, SameName: 'Close_BracketAdded' + cursorpos\r\n                    })\r\n                    vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                    vm.InputValueArray.splice(checkindex, 0, {\r\n                        FieldValueData: closebracket, MatchIndex: closebracket.length, SameName: 'Close_BracketAdded' + cursorpos\r\n                    })\r\n                }\r\n            } else {\r\n                vm.fieldatavalue.push({ FieldValueData: closebracket, MatchIndex: closebracket.length, SameName: 'Close_BracketAdded' + cursorpos })\r\n                vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                vm.InputValueArray.push({ FieldValueData: closebracket, MatchIndex: closebracket.length, SameName: 'Close_BracketAdded' + cursorpos })\r\n            }\r\n            vm.updatingvalue();\r\n            vm.updatevaluebyid();\r\n        },\r\n        Addplussign() {\r\n            var vm = this;\r\n            if (typeof vm.fieldatavalue == 'string') {\r\n                var substringarr = vm.fieldatavalue.split(',')\r\n                vm.fieldatavalue = substringarr;\r\n            }\r\n            var addbracketexpsign = '+';\r\n            var Addsign = addbracketexpsign.split('');\r\n            var cursorpos = vm.GetCursorPoint();\r\n            var getdata = vm.SetValueOnCursorPosition(cursorpos);\r\n            if (getdata.length > 1) {\r\n                var checkindex = vm.InputValueArray.findIndex(x => x.FieldValueData === getdata[0].FieldValueData);\r\n                if (checkindex > -1) {\r\n                    vm.fieldatavalue.splice(checkindex, 0, {\r\n                        FieldValueData: Addsign, MatchIndex: Addsign.length, SameName: 'AddedPlus' + cursorpos\r\n                    })\r\n                    vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                    vm.InputValueArray.splice(checkindex, 0, {\r\n                        FieldValueData: Addsign, MatchIndex: Addsign.length, SameName: 'AddedPlus' + cursorpos\r\n                    })\r\n                }\r\n            } else {\r\n                vm.fieldatavalue.push({ FieldValueData: Addsign, MatchIndex: Addsign.length, SameName: 'AddedPlus' + cursorpos })\r\n                vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                vm.InputValueArray.push({ FieldValueData: Addsign, MatchIndex: Addsign.length, SameName: 'AddedPlus' + cursorpos })\r\n            }\r\n            vm.FunctionValueArray = 'No_Value';\r\n            vm.updatingvalue();\r\n            vm.updatevaluebyid();\r\n        },\r\n        Addsubtractsign() {\r\n            var vm = this;\r\n            if (typeof vm.fieldatavalue == 'string') {\r\n                var substringarr = vm.fieldatavalue.split(',')\r\n                vm.fieldatavalue = substringarr;\r\n            }\r\n            var subtractbracketexpsign = '-';\r\n            var subtractsign = subtractbracketexpsign.split('');\r\n            var cursorpos = vm.GetCursorPoint();\r\n            var getdata = vm.SetValueOnCursorPosition(cursorpos);\r\n            if (getdata.length > 1) {\r\n                var checkindex = vm.InputValueArray.findIndex(x => x.FieldValueData === getdata[0].FieldValueData);\r\n                if (checkindex > -1) {\r\n                    vm.fieldatavalue.splice(checkindex, 0, {\r\n                        FieldValueData: subtractsign, MatchIndex: subtractsign.length, SameName: 'AddedSubtract' + cursorpos\r\n                    })\r\n                    vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                    vm.InputValueArray.splice(checkindex, 0, {\r\n                        FieldValueData: subtractsign, MatchIndex: subtractsign.length, SameName: 'AddedSubtract' + cursorpos\r\n                    })\r\n                }\r\n            } else {\r\n                vm.fieldatavalue.push({ FieldValueData: subtractsign, MatchIndex: subtractsign.length, SameName: 'AddedSubtract' + cursorpos })\r\n                vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                vm.InputValueArray.push({ FieldValueData: subtractsign, MatchIndex: subtractsign.length, SameName: 'AddedSubtract' + cursorpos })\r\n            }\r\n            vm.FunctionValueArray = 'No_Value';\r\n            vm.updatingvalue();\r\n            vm.updatevaluebyid();\r\n        },\r\n        Addmultiplysign() {\r\n            var vm = this;\r\n            if (typeof vm.fieldatavalue == 'string') {\r\n                var substringarr = vm.fieldatavalue.split(',')\r\n                vm.fieldatavalue = substringarr;\r\n            }\r\n            var multiplybracketexpsign = '*';\r\n            var multiplysign = multiplybracketexpsign.split('');\r\n            var cursorpos = vm.GetCursorPoint();\r\n            var getdata = vm.SetValueOnCursorPosition(cursorpos);\r\n            if (getdata.length > 1) {\r\n                var checkindex = vm.InputValueArray.findIndex(x => x.FieldValueData === getdata[0].FieldValueData);\r\n                if (checkindex > -1) {\r\n                    vm.fieldatavalue.splice(checkindex, 0, {\r\n                        FieldValueData: multiplysign, MatchIndex: multiplysign.length, SameName: 'AddedMultiply' + cursorpos\r\n                    })\r\n                    vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                    vm.InputValueArray.splice(checkindex, 0, {\r\n                        FieldValueData: multiplysign, MatchIndex: multiplysign.length, SameName: 'AddedMultiply' + cursorpos\r\n                    })\r\n                }\r\n            } else {\r\n                vm.fieldatavalue.push({ FieldValueData: multiplysign, MatchIndex: multiplysign.length, SameName: 'AddedMultiply' + cursorpos })\r\n                vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                vm.InputValueArray.push({ FieldValueData: multiplysign, MatchIndex: multiplysign.length, SameName: 'AddedMultiply' + cursorpos })\r\n            }\r\n            vm.FunctionValueArray = 'No_Value';\r\n            vm.updatingvalue();\r\n            vm.updatevaluebyid();\r\n        },\r\n        Adddividesign() {\r\n            var vm = this;\r\n            if (typeof vm.fieldatavalue == 'string') {\r\n                var substringarr = vm.fieldatavalue.split(',')\r\n                vm.fieldatavalue = substringarr;\r\n            }\r\n            var dividebracketexpsign = '/';\r\n            var dividesign = dividebracketexpsign.split('');\r\n            var cursorpos = vm.GetCursorPoint();\r\n            var getdata = vm.SetValueOnCursorPosition(cursorpos);\r\n            if (getdata.length > 1) {\r\n                var checkindex = vm.InputValueArray.findIndex(x => x.FieldValueData === getdata[0].FieldValueData);\r\n                if (checkindex > -1) {\r\n                    vm.fieldatavalue.splice(checkindex, 0, {\r\n                        FieldValueData: dividesign, MatchIndex: dividesign.length, SameName: 'AddedDivide' + cursorpos\r\n                    })\r\n                    vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                    vm.InputValueArray.splice(checkindex, 0, {\r\n                        FieldValueData: dividesign, MatchIndex: dividesign.length, SameName: 'AddedDivide' + cursorpos\r\n                    })\r\n                }\r\n            } else {\r\n                vm.fieldatavalue.push({ FieldValueData: dividesign, MatchIndex: dividesign.length, SameName: 'AddedDivide' + cursorpos })\r\n                vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                vm.InputValueArray.push({ FieldValueData: dividesign, MatchIndex: dividesign.length, SameName: 'AddedDivide' + cursorpos })\r\n            }\r\n            vm.FunctionValueArray = 'No_Value';\r\n            vm.updatingvalue();\r\n            vm.updatevaluebyid();\r\n        },\r\n        AddSpace() {\r\n            var vm = this;\r\n            if (typeof vm.fieldatavalue == 'string') {\r\n                var substringarr = vm.fieldatavalue.split(',')\r\n                vm.fieldatavalue = substringarr;\r\n            }\r\n            var spaceaddingexp = ' ';\r\n            var addedspace = spaceaddingexp.split('');\r\n            var addedspacefordb = spaceaddingexp.replaceAll(' ', \"+' '+\");\r\n            var cursorpos = vm.GetCursorPoint();\r\n            var getdata = vm.SetValueOnCursorPosition(cursorpos);\r\n            if (getdata.length > 0) {\r\n                var checkindex = vm.InputValueArray.findIndex(x => x.FieldValueData === getdata[0].FieldValueData);\r\n                if (checkindex > -1) {\r\n                    vm.fieldatavalue.splice(checkindex, 0, {\r\n                        FieldValueData: addedspace, MatchIndex: addedspace.length, SameName: 'addedspace' + cursorpos\r\n                    })\r\n                    vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                    vm.InputValueArray.splice(checkindex, 0, {\r\n                        FieldValueData: addedspacefordb, MatchIndex: addedspace.length, SameName: 'addedspace' + cursorpos\r\n                    })\r\n                    vm.InputValueExpressionByID = vm.InputValueArray.map(x => x.FieldValueData).join('');\r\n                }\r\n            } else {\r\n                vm.fieldatavalue.push({ FieldValueData: addedspace, MatchIndex: addedspace.length, SameName: 'addedspace' + cursorpos })\r\n                vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                vm.InputValueArray.push({ FieldValueData: addedspacefordb, MatchIndex: addedspace.length, SameName: 'addedspace' + cursorpos })\r\n                vm.InputValueExpressionByID = vm.InputValueArray.map(x => x.FieldValueData).join('');\r\n            }\r\n            vm.FunctionValueArray = 'No_Value';\r\n            vm.updatingvalue();\r\n        },\r\n        ResetExpression() {\r\n            var vm = this;\r\n            vm.FieldsValue = '';\r\n            vm.FunctionValue = '';\r\n            vm.AddBracketValue = '';\r\n            vm.SubtractBracketValue = '';\r\n            vm.MultplyBracketValue = '';\r\n            vm.DivideBracketValue = '';\r\n            vm.OpenBracketExpValue = '';\r\n            vm.CloseBracketExpValue = '';\r\n            vm.modulelisting.splice(0);\r\n            vm.Functionskey.splice(0);\r\n            vm.InputValueExpression = '';\r\n            vm.InputValueExpressionByID = '';\r\n            vm.InputValueArray = [];\r\n            vm.FieldData = [];\r\n            vm.fieldatavalue = [];\r\n            vm.watchvalue = true;\r\n            vm.updateexpresion = false;\r\n            vm.verifiedvaluedata = null;\r\n            vm.FunctionValueArray = 'No_Value';\r\n            vm.GetCommaSeparatedValue = '';\r\n            vm.countbyfield = 0;\r\n            vm.modelconditionexpression = '';\r\n            vm.Functionkey = null;\r\n            vm.ShowDescriptionForFunction = null;\r\n            vm.conditionexpression = false;\r\n            vm.checkbycondition = 0;\r\n            vm.substringvalue = '';\r\n        },\r\n        updatevaluebyid(elem, checkindex, getdata, cursorpos) {\r\n            var vm = this;\r\n            if (vm.FunctionValueArray == vm.substringvalue) {\r\n                if (typeof vm.InputValueArray == 'object') {\r\n                    var convertarrid = String(vm.InputValueArray.map(x => x.FieldValueData));\r\n                    vm.InputValueArray = convertarrid\r\n                }\r\n                if (vm.GetCommaSeparatedValue == \"CommaSeparatedValue\" && vm.countbyfield == 0 && !vm.conditionexpression) {\r\n                    var firstindex = vm.InputValueArray.indexOf(\",\") + 1;\r\n                    var secondindex = vm.InputValueArray.indexOf(\")\")\r\n                    vm.countbyfield = vm.countbyfield + 1 + 1;\r\n                }\r\n                else if (vm.GetCommaSeparatedValue == \"CommaSeparatedValue\" && vm.countbyfield > 0 && !vm.conditionexpression) {\r\n                    var firstindex = vm.InputValueArray.indexOf(vm.InputValueArray.split(\",\")[vm.countbyfield]);\r\n                    var secondindex = vm.InputValueArray.indexOf(\")\")\r\n                    vm.countbyfield++;\r\n                }\r\n                else {\r\n                    var firstindex = vm.InputValueArray.indexOf(\"(\") + 1;\r\n                    var secondindex = vm.InputValueArray.indexOf(\")\")\r\n                }\r\n                vm.substringvalue = vm.InputValueArray.substring(firstindex, secondindex);\r\n                if (vm.substringvalue.includes(',')) {\r\n                    var substringarrid = vm.substringvalue.split(',')\r\n                    vm.substringvalue = substringarrid;\r\n                    vm.InputValueExpressionByID = vm.InputValueArray.replace(vm.substringvalue[0], vm.FieldTableNameValue)\r\n                    vm.InputValueArray = [];\r\n                    // vm.InputValueArray = vm.InputValueExpressionByID;\r\n                    vm.InputValueArray.push({\r\n                        FieldValueData: vm.InputValueExpressionByID,\r\n                        MatchIndex: vm.InputValueExpressionByID.length,\r\n                        SameName: 'Field_Added' + vm.InputValueExpressionByID.length,\r\n                        CustomFieldId: elem.CustomFieldId\r\n                    });\r\n                    vm.GetCommaSeparatedValue = \"CommaSeparatedValue\"\r\n                    $(\"#Submitbtn\").addClass('disabled');\r\n                } else {\r\n                    vm.InputValueExpressionByID = vm.InputValueArray.replace(vm.substringvalue, vm.FieldTableNameValue)\r\n                    // vm.InputValueArray = vm.InputValueExpressionByID;\r\n                    vm.InputValueArray = [];\r\n                    vm.InputValueArray.push({\r\n                        FieldValueData: vm.InputValueExpressionByID,\r\n                        MatchIndex: vm.InputValueExpressionByID.length,\r\n                        SameName: 'Field_Added' + vm.InputValueExpressionByID.length,\r\n                        CustomFieldId: elem.CustomFieldId\r\n                    });\r\n                    vm.substringvalue = '';\r\n                    $(\"#Submitbtn\").addClass('disabled');\r\n                }\r\n                vm.modelconditionexpression = '';\r\n                vm.conditionexpression = false;\r\n                vm.checkbycondition = 0;\r\n            }\r\n            else if (elem != undefined) {\r\n                if (vm.fieldadded) {\r\n                    var checkindex = vm.InputValueArray.findIndex(x => x.FieldValueData === getdata[0].FieldValueData);\r\n                    if (checkindex > -1) {\r\n                        vm.InputValueArray.splice(checkindex, 0, {\r\n                            FieldValueData: vm.FieldTableNameValue,\r\n                            MatchIndex: vm.$t((elem.DisplayName != null && elem.DisplayName != \"\") ? elem.DisplayName : elem.FieldName).length,\r\n                            SameName: 'Field_Added' + cursorpos,\r\n                            CustomFieldId: elem.CustomFieldId\r\n                        }\r\n                        )\r\n                        vm.InputValueExpressionByID = vm.InputValueArray.map(x => x.FieldValueData).join('')\r\n                    }\r\n                }\r\n                else {\r\n                    vm.InputValueArray.push({\r\n                        FieldValueData: vm.FieldTableNameValue,\r\n                        MatchIndex: vm.$t((elem.DisplayName != null && elem.DisplayName != \"\") ? elem.DisplayName : elem.FieldName).length,\r\n                        SameName: 'Field_Added' + cursorpos,\r\n                        CustomFieldId: elem.CustomFieldId\r\n                    });\r\n                    vm.InputValueExpressionByID = vm.InputValueArray.map(x => x.FieldValueData).join('')\r\n                }\r\n            }\r\n            else {\r\n                vm.InputValueExpressionByID = vm.InputValueArray.map(x => x.FieldValueData).join('')\r\n            }\r\n        },\r\n        updatingvalue() {\r\n            var vm = this;\r\n            if (typeof vm.InputValueExpression == 'object') {\r\n                var convertstr = String(vm.InputValueExpression)\r\n                vm.InputValueExpression = convertstr;\r\n            }\r\n            else {\r\n                vm.InputValueExpression = vm.FieldsValue;\r\n            }\r\n        },\r\n        deleteuserinput(event) {\r\n            var vm = this;\r\n            const key = event.key;\r\n            if (event.code === 'Space') { vm.AddSpace(); }\r\n            else if (event.keyCode >= 9 && event.keyCode <= 45 || event.keyCode > 90 && event.keyCode <= 93 || event.keyCode >= 112 && event.keyCode <= 167) {\r\n                event.preventDefault();\r\n            }\r\n            else if (key === 'Backspace' || event.keyCode === 8 || event.keyCode === 46) {\r\n                var cursorposition = vm.GetCursorPoint();\r\n                cursorposition = cursorposition - 1;\r\n                let assignindex;\r\n                vm.fieldatavalue.forEach(item => {\r\n                    if (item.MatchIndex < cursorposition) {\r\n                        assignindex = cursorposition - item.MatchIndex;\r\n                        cursorposition = assignindex;\r\n                    }\r\n                    else {\r\n                        if (cursorposition != 0) {\r\n                            let getindexofexp = vm.fieldatavalue.findIndex(x => x.SameName === item.SameName);\r\n                            let getfieldindex = vm.FieldData.findIndex(f => f.CustomFieldId === item.CustomFieldId);\r\n                            if (getindexofexp > -1) {\r\n                                vm.fieldatavalue.splice(getindexofexp, 1);\r\n                                vm.InputValueArray.splice(getindexofexp, 1);\r\n                                if (getfieldindex > -1) {\r\n                                    vm.FieldData.splice(getfieldindex, 1);\r\n                                }\r\n                                if (vm.fieldatavalue.length > 0) {\r\n                                    vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                                } else {\r\n                                    vm.FieldsValue = vm.fieldatavalue.join('');\r\n                                    vm.substringvalue = '';\r\n                                }\r\n                                cursorposition = 0;\r\n                                vm.Functionkey = null;\r\n                            }\r\n                        }\r\n                    }\r\n                })\r\n                vm.updatingvalue();\r\n                vm.updatevaluebyid();\r\n            }\r\n            else {\r\n                var cursorpos = vm.GetCursorPoint();\r\n                var getdata = vm.SetValueOnCursorPosition(cursorpos);\r\n                if (getdata.length > 1) {\r\n                    var checkindex = vm.InputValueArray.findIndex(x => x.FieldValueData === getdata[0].FieldValueData);\r\n                    if (checkindex > -1) {\r\n                        vm.fieldatavalue.splice(checkindex, 0, {\r\n                            FieldValueData: key, MatchIndex: key.length, SameName: 'User-input' + cursorpos\r\n                        })\r\n                        vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                        vm.InputValueArray.splice(checkindex, 0, {\r\n                            FieldValueData: key, MatchIndex: key.length, SameName: 'User-input' + cursorpos\r\n                        })\r\n                    }\r\n                } else {\r\n                    vm.fieldatavalue.push({ FieldValueData: key, MatchIndex: key.length, SameName: 'User-input' + cursorpos });\r\n                    vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                    vm.InputValueArray.push({ FieldValueData: key, MatchIndex: key.length, SameName: 'User-input' + cursorpos });\r\n                }\r\n                vm.updatingvalue();\r\n                vm.updatevaluebyid();\r\n            }\r\n            vm.buttons[0].class = \"btn btn-success mr-2 my-sm-0 disabled\";\r\n            event.preventDefault();\r\n        },\r\n        UserInputSelection(userinput) {\r\n            var vm = this;\r\n            vm.selecteduserinput = userinput.target.selectionStart;\r\n            vm.selecteduserinputbyid = vm.InputValueArray.length;\r\n        },\r\n        ExpresssionDataValue(data, fieldsdata) {\r\n            var vm = this;\r\n            //vm.ResetExpression();\r\n            data.forEach(dataitem => {\r\n                vm.ExpressionIDvalue = dataitem.ExpressionID;\r\n                // vm.modelfieldname = dataitem.ExpressionName;\r\n                vm.FormSchema[0].Data[0].value = dataitem.ExpressionName;\r\n                vm.fieldatavalue.push({ FieldValueData: dataitem.ExpressionDisplay, MatchIndex: dataitem.ExpressionDisplay.length, SameName: 'EditedExp' });\r\n                vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                vm.InputValueArray.push({ FieldValueData: dataitem.Expression, MatchIndex: dataitem.Expression.length, SameName: 'EditedExp' })\r\n                vm.InputValueExpressionByID = vm.InputValueArray.map(x => x.FieldValueData).join('')\r\n                vm.updatingvalue();\r\n            })\r\n            fieldsdata.forEach(item => {\r\n                vm.FieldData.push({ CustomFieldId: item.CustomFieldId, FieldName: item.FieldName, ColumnIndex: item.ColumnIndex });\r\n            })\r\n        },\r\n        VerifyExpression() {\r\n            var vm = this;\r\n            if (vm.InputValueExpression == '') {\r\n                vm.ShowAlert(vm.$t(\"Expressionemmty\"), 'failure', true, vm.$t('Alert'));\r\n            } else {\r\n                var jsondata = {\r\n                    \"Info\": {\r\n                        \"Expression\": encodeURIComponent(vm.InputValueExpressionByID),\r\n                        \"MODULENAME\": vm.customreportparameters.Modulename,\r\n                        \"SUBMODULECODE\": vm.customreportparameters.Submodulecode,\r\n                        \"FunctionExpression\": vm.Functionkey,\r\n                        \"FIELDS\": vm.FieldData\r\n                    }\r\n                }\r\n                var jsonvalue = `JsonData=${JSON.stringify(jsondata)}`;\r\n                vm.isLoading = true;\r\n                ExpressionDataService.VerifyExpressionFromDB(jsonvalue).then(res => {\r\n                    if (res.data.Result == \"True\") {\r\n                        vm.verifiedvaluedata = 1;\r\n                        vm.isLoading = false;\r\n                        vm.buttons[0].class = \"btn btn-success mr-2 my-sm-0\";\r\n                        vm.verifiedvalue = true;\r\n                    }\r\n                    else {\r\n                        vm.verifiedvaluedata = 0;\r\n                        vm.isLoading = false;\r\n                    }\r\n                }).catch(err => {\r\n                    console.log(err);\r\n                })\r\n            }\r\n        },\r\n        SubmitExpression() {\r\n            var vm = this;\r\n            var InavalidExpression = true;\r\n            if (!vm.editexpressionvalue) {\r\n                var checkeditfieldexist = vm.Columnlist.findIndex(x => x.FieldName === vm.FormSchema[0].Data[0].value);\r\n                if (checkeditfieldexist != -1) {\r\n                    InavalidExpression = false;\r\n                    vm.ShowAlert(vm.$t(\"ExpressionExist\"), 'failure', true, vm.$t('Alert'));\r\n                } else { InavalidExpression = true }\r\n            }\r\n            if (InavalidExpression) {\r\n                if (vm.verifiedvalue && vm.FormSchema[0].Data[0].value != '') {\r\n                    this.$emit('VerifiedExpressionData', {\r\n                        ExpressionID: vm.ExpressionIDvalue,\r\n                        FieldValue: vm.FormSchema[0].Data[0].value,\r\n                        VerifiedExpression: vm.InputValueExpressionByID,\r\n                        ExpressionFieldArray: vm.FieldData,\r\n                        ExpressionDisplay: vm.InputValueExpression,\r\n                        Functionkey: vm.Functionkey,\r\n                        IsEdit: vm.editexpressionvalue,\r\n                        IsExpExist: vm.AlreadyExistExpression\r\n                    })\r\n                    vm.verifiedvalue = false;\r\n                }\r\n            }\r\n        },\r\n        CancelExpressionUI() {\r\n            var vm = this;\r\n            vm.close();\r\n        },\r\n        closed() {\r\n            $(\"#verifiedid\").alert('close');\r\n        },\r\n        GetCursorPoint(e) {\r\n            var vm = this;\r\n            var cursorpos1 = document.getElementById(\"txtarea\");\r\n            cursorpos1.focus();\r\n            var cursorpos = document.getElementById(\"txtarea\").selectionStart;\r\n            cursorpos = cursorpos + 1;\r\n            return cursorpos;\r\n        },\r\n        SetValueOnCursorPosition(cursorpos) {\r\n            var vm = this;\r\n            var returndata = []\r\n            var assignindex;\r\n            vm.InputValueArray.forEach(item => {\r\n                if (item.MatchIndex < cursorpos) {\r\n                    assignindex = cursorpos - item.MatchIndex;\r\n                    cursorpos = assignindex;\r\n                }\r\n                else if (item.MatchIndex > cursorpos || cursorpos == 1) {\r\n                    returndata.push(item)\r\n                }\r\n            })\r\n            return returndata;\r\n        },\r\n        AddConditionExpression() {\r\n            var vm = this;\r\n            vm.conditionexpression = true;\r\n            if (vm.Functionkey == 'Date add' && vm.GetCommaSeparatedValue == 'CommaSeparatedValue') {\r\n                vm.conditionexpression = false;\r\n                vm.checkbycondition = vm.checkbycondition + 1;\r\n            }\r\n            vm.Addfields(vm.modelconditionexpression);\r\n        },\r\n        DescriptionForFunction() {\r\n            var vm = this;\r\n            if (vm.Functionkey == 'Date diff') {\r\n                vm.ShowDescriptionForFunction = 'Interval(Year,Month,Day)';\r\n            }\r\n            else if (vm.Functionkey == 'Date add') {\r\n                vm.ShowDescriptionForFunction = 'Interval(Year,Month,Day) Number(1,2,3,nth.)';\r\n            }\r\n            else if (vm.Functionkey == 'Date name') {\r\n                vm.ShowDescriptionForFunction = 'Interval(Year,Month,Day)';\r\n            }\r\n            else if (vm.Functionkey == 'Date part') {\r\n                vm.ShowDescriptionForFunction = 'Interval(Year,Month,Day)';\r\n            }\r\n            else if (vm.Functionkey == 'If') {\r\n                vm.ShowDescriptionForFunction = 'BooleanExpression,True Value, False Value';\r\n            }\r\n        },\r\n        ListFiltering() {\r\n            var vm = this;\r\n            var filterinput = vm.MainSearchmodel;\r\n            if (filterinput != null && filterinput != \"\") {\r\n                $(\".column-collapse\").addClass(\"show\");\r\n            }\r\n            else {\r\n                $(\".column-collapse\").removeClass(\"show\");\r\n            }\r\n            var searchcol = [];\r\n            var searchfilter = [];\r\n            vm.modulelisting.forEach((item, index) => {\r\n                vm.modulelisting[index].forEach((indexitem) => {\r\n                    searchfilter.push(indexitem);\r\n                    searchcol = searchfilter.filter(searchitem => {\r\n                        var displayMainColname = (searchitem.DisplayName != null) ? searchitem.DisplayName : searchitem.FieldName;\r\n                        return displayMainColname.replace(/\\W/g, \"\").toLowerCase().includes(filterinput.replace(/\\W/g, \"\").toLowerCase());\r\n                    })\r\n                })\r\n                vm.searchColumnfilter[index] = searchcol;\r\n                searchfilter = [];\r\n            })\r\n            let count = 0;\r\n            for (let filteritem in vm.searchColumnfilter) {\r\n                if (vm.searchColumnfilter[filteritem].length > 0) {\r\n                    count++;\r\n                }\r\n            }\r\n            if (count > 0) {\r\n                vm.SearchNoRecord = false\r\n            } else { vm.SearchNoRecord = true; }\r\n            return vm.searchColumnfilter;\r\n        }\r\n    }\r\n}\r\n</script>\r\n<template>\r\n    <div id=\"showcalculatedfield\" role=\"dialog\" class=\"modal my-popups centre fade\" v-cloak>\r\n        <div role=\"document\" class=\"modal-dialog\">\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header mheader-user\">\r\n                    <button type=\"button\" class=\"close\" v-on:click=\"close()\">\r\n                        <em aria-hidden=\"true\" class=\"fa fa-times\"></em>\r\n                    </button>\r\n                    <h4 id=\"myModalLabel\" class=\"modal-title\">{{ $t('customField') }}</h4>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                    <loader :is-visible=\"isLoading\"></loader>\r\n                    <dynamic-form lang=\"en\" :buttons=\"buttons\" :schema=\"FormSchema\" v-on:OnSubmit=\"SubmitExpression()\">\r\n                        <template v-slot:tgslot-CalculatedUIList=\"{ data }\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-12 p-0 float-left\">\r\n                                    <div class=\"col-lg-4 mb-0 float-left px-3\">\r\n                                        <div class=\"heading-border mb-4\">\r\n                                            <h5 class=\"h5\">\r\n                                                <span class=\"spngropuname\">\r\n                                                    {{ $t('Functions') }}\r\n                                                    <div class=\"w3-container w3-border w3-large\"></div>\r\n                                                </span>\r\n                                            </h5>\r\n                                        </div>\r\n                                        <div class=\"accordion md-accordion left-filter\" id=\"accordionEx1\">\r\n                                            <div class=\"card-panel\" style=\"border-top:1px solid #c7c7c7;\">\r\n                                                <div class=\"card\" v-for=\"(name, index) in FunctionsName\" :key=\"index\">\r\n                                                    <div class=\"card-header\" role=\"tab\" :id=\"'MainFunction' + index\">\r\n                                                        <h5 class=\"mb-0\"><a data-toggle=\"collapse\"\r\n                                                                data-parent=\"#accordionEx1\"\r\n                                                                :href=\"'#FucntionCollapse' + index\"\r\n                                                                :aria-expanded=\"index == 0 ? true : false\"\r\n                                                                :aria-controls=\"'FucntionCollapse' + index\"\r\n                                                                :class=\"index == 0 ? '' : 'collapsed'\"><em\r\n                                                                    class=\"fa fa fa-file-text-o\"\r\n                                                                    aria-hidden=\"true\"></em><span class=\"font-weight-bold\">\r\n                                                                    {{ name.FuncType }}</span><em\r\n                                                                    class=\"fa fa-angle-down rotate-icon\"\r\n                                                                    aria-hidden=\"true\"></em></a>\r\n                                                        </h5>\r\n                                                    </div>\r\n                                                    <div :id=\"'FucntionCollapse' + index\"\r\n                                                        :class=\"index == 0 ? 'collapse multi-collapse show' : 'collapse multi-collapse'\"\r\n                                                        role=\"tabpanel\" :aria-labelledby=\"'MainFunction' + index\"\r\n                                                        data-parent=\"#accordionEx1\">\r\n                                                        <div class=\"card-body p-0 customScrollForLeftBar llt\"\r\n                                                            style=\"max-height:300px;\">\r\n                                                            <div class=\"form-group\">\r\n                                                                <ul class=\"nav nav-pills flex-column left-tab responivecustomtab lefttabiconfix\"\r\n                                                                    style=\"max-height: 214px; overflow: auto; display: block;\">\r\n                                                                    <template v-for=\"element in Functionskey[index]\">\r\n                                                                        <li class=\"nav-item parent-element\">\r\n                                                                            <span class=\"nav-link left-menu px-4 \">\r\n                                                                                <em class=\"fa fa-bullhorn float-left\"\r\n                                                                                    aria-hidden=\"true\"></em>\r\n                                                                                <span class=\"text-truncate float-left\"\r\n                                                                                    style=\"width: 55%;\"\r\n                                                                                    :data-toggle-tooltip=\"element.Keys\"\r\n                                                                                    :title=\"element.Keys\">\r\n                                                                                    {{ element.Keys }}\r\n                                                                                </span>\r\n                                                                                <a href=\"javascript:;\"><em\r\n                                                                                        class=\"fa fa-plus float-right mt-1 text-success pr-0\"\r\n                                                                                        aria-hidden=\"true\"\r\n                                                                                        @click=\"AddFunctionsfields(element, $event, index)\"></em></a>\r\n                                                                            </span>\r\n                                                                        </li>\r\n                                                                    </template>\r\n                                                                </ul>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-lg-4 mb-0 float-left px-3\">\r\n                                        <div class=\"heading-border\">\r\n                                            <h5 class=\"h5\">\r\n                                                <span class=\"spngropuname\">\r\n                                                    {{ $t('Expression') }}\r\n                                                    <a title=\"@Resources.Edit\" href=\"javascript:;\"\r\n                                                        class=\"editgroupname d-none\"><em\r\n                                                            class=\"fa fa-pencil pl-2 text-success\"></em></a>\r\n                                                </span>\r\n                                            </h5>\r\n                                        </div>\r\n                                        <div class=\"border p-3 mt-4 float-left\">\r\n                                            <div class=\"row\">\r\n                                                <div class=\"col-md-11 mb-2\">\r\n                                                    <input :class=\"Functionkey == 'Date diff' || Functionkey == 'Date add' || Functionkey == 'Date name' || Functionkey == 'Date part' || Functionkey == 'If'\r\n                                                        ? 'form-control' : 'form-control d-none'\" type=\"text\"\r\n                                                        v-model=\"modelconditionexpression\"\r\n                                                        placeholder=\"Enter Your Conditions\" />\r\n                                                    <small\r\n                                                        :class=\"Functionkey == 'Date diff' || Functionkey == 'Date add' || Functionkey == 'Date name' || Functionkey == 'Date part' || Functionkey == 'If' ? 'text-danger' : 'd-none'\">{{\r\n                                                            ShowDescriptionForFunction }}</small>\r\n                                                </div>\r\n                                                <div class=\"col-md-1 p-0 my-1\">\r\n                                                    <a :class=\"Functionkey == 'Date diff' || Functionkey == 'Date add' || Functionkey == 'Date name' || Functionkey == 'Date part' || Functionkey == 'If'\r\n                                                        ? 'fa fa-play text-success' : 'fa fa-play text-success d-none'\"\r\n                                                        @click=\"AddConditionExpression\"></a>\r\n                                                </div>\r\n                                            </div>\r\n                                            <textarea class=\"border background-white float-left w-100 p-3\" id=\"txtarea\"\r\n                                                style=\"min-height: 250px;\" v-model=\"InputValueExpression\"\r\n                                                @keydown=\"deleteuserinput($event)\" @mouseup=\"GetCursorPoint($event)\"\r\n                                                v-on:select=\"UserInputSelection($event)\"></textarea>\r\n                                            <div class=\"expressionbx mb-4 bg-grey text-right float-left w-100 py-2 border\">\r\n                                                <a class=\"fa fa-keyboard-o\" v-on:click=\"AddSpace($event)\"></a>\r\n                                                <a href=\"javascript:;\" v-on:click=\"Addplussign($event)\">+</a>\r\n                                                <a href=\"javascript:;\" v-on:click=\"Addsubtractsign($event)\">-</a>\r\n                                                <a href=\"javascript:;\" v-on:click=\"Addmultiplysign($event)\">*</a>\r\n                                                <a href=\"javascript:;\" v-on:click=\"Adddividesign($event)\">/</a>\r\n                                                <a href=\"javascript:;\" v-on:click=\"Addopenbracketsign($event)\">(</a>\r\n                                                <a href=\"javascript:;\" v-on:click=\"Addclosebracketsign($event)\">)</a>\r\n                                            </div>\r\n\r\n                                            <div class=\"col-12 p-0 float-left\">\r\n                                                <div class=\"row flex-row-reverse\">\r\n                                                    <div class=\"col-12 p-0 float-left\" id=\"verifiedid\">\r\n                                                        <div class=\"alert alert-danger alert-dismissible fade show\"\r\n                                                            role=\"alert\" v-if=\"verifiedvaluedata == 0\">\r\n                                                            {{ $t(\"InvalidExp\") }}<button type=\"button\" class=\"close\"\r\n                                                                data-dismiss=\"alert\" @click=\"closed\" aria-label=\"Close\">\r\n                                                                <span aria-hidden=\"true\">×</span>\r\n                                                            </button>\r\n                                                        </div>\r\n                                                        <div class=\"alert alert-success alert-dismissible fade show\"\r\n                                                            role=\"alert\" v-if=\"verifiedvaluedata == 1\">\r\n\r\n                                                            {{ $t(\"ExpressionVerify\") }}<button type=\"button\" class=\"close\"\r\n                                                                data-dismiss=\"alert\" @click=\"closed\" aria-label=\"Close\">\r\n                                                                <span aria-hidden=\"true\">×</span>\r\n                                                            </button>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"col-lg-12 text-right\">\r\n                                                        <a href=\"javascript:;\"\r\n                                                            class=\"btn btn-success ancsaveuserticket mr-2\"\r\n                                                            v-on:click=\"VerifyExpression\">\r\n                                                            <em class=\"fa fa-check pr-2\"></em>Verify</a>\r\n                                                        <a href=\"javascript:;\" class=\"btn btn-danger ancsaveuserticket\"\r\n                                                            v-on:click=\"ResetExpression\">\r\n                                                            <em class=\"fa fa-refresh pr-2\"></em>Reset</a>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-lg-4 mb-0 float-left px-3\">\r\n                                        <div class=\"heading-border mb-4\">\r\n                                            <h5 class=\"h5\">\r\n                                                <span class=\"spngropuname\">\r\n                                                    {{ $t('Columns') }}\r\n                                                    <div class=\"w3-container w3-border w3-large\"></div>\r\n                                                </span>\r\n                                            </h5>\r\n                                        </div>\r\n                                        <div class=\"mb-0 d-lg-block p-2 border\">\r\n                                            <div class=\"input-group customsearchbox\">\r\n                                                <input type=\"text\" maxlength=\"50\" v-on:keydown=\"ListFiltering\"\r\n                                                    v-on:keyup=\"ListFiltering\" id=\"searchinput\" v-model=\"MainSearchmodel\"\r\n                                                    placeholder=\"Search by Name\"\r\n                                                    class=\"form-control searchcustomfilter border-right-0\"\r\n                                                    autocomplete=\"off\">\r\n                                                <div class=\"input-group-append\">\r\n                                                    <span class=\"input-group-text bg-transparent bg-white border-left-0\">\r\n                                                    </span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"accordion md-accordion left-filter\" id=\"accordionEx2\">\r\n                                            <div class=\"card-panel\" style=\"border-top:1px solid #c7c7c7;\">\r\n                                                <div class=\"card\" v-for=\"(name, index) in JsonColumns\" :key=\"index\">\r\n                                                    <div class=\"card-header\" role=\"tab\" :id=\"'MainColumn' + index\">\r\n                                                        <h5 class=\"mb-0\"><a data-toggle=\"collapse\"\r\n                                                                data-parent=\"#accordionEx2\"\r\n                                                                :href=\"'#ColumnCollapse' + index\"\r\n                                                                :aria-expanded=\"index == 0 ? true : false\"\r\n                                                                :aria-controls=\"'ColumnCollapse' + index\"\r\n                                                                :class=\"index == 0 ? '' : 'collapsed'\"><em\r\n                                                                    class=\"fa fa fa-file-text-o\"\r\n                                                                    aria-hidden=\"true\"></em><span class=\"font-weight-bold\">\r\n                                                                    {{ GetLocalizedValue(name.SubModule) }}</span><em\r\n                                                                    class=\"fa fa-angle-down rotate-icon\"\r\n                                                                    aria-hidden=\"true\"></em></a>\r\n                                                        </h5>\r\n                                                    </div>\r\n                                                    <div :id=\"'ColumnCollapse' + index\"\r\n                                                        :class=\"index == 0 ? 'collapse multi-collapse column-collapse show' : 'collapse multi-collapse column-collapse'\"\r\n                                                        role=\"tabpanel\" :aria-labelledby=\"'MainColumn' + index\"\r\n                                                        data-parent=\"#accordionEx2\">\r\n                                                        <div class=\"card-body p-0 customScrollForLeftBar llt\"\r\n                                                            style=\"max-height:300px;\">\r\n                                                            <div class=\"form-group\">\r\n                                                                <ul class=\"nav nav-pills flex-column left-tab responivecustomtab lefttabiconfix\"\r\n                                                                    style=\"max-height: 305px; overflow: auto; display: block;\">\r\n                                                                    <template\r\n                                                                        v-for=\"element in searchColumnfilter.length == 0 ? modulelisting[index] : searchColumnfilter[index]\">\r\n                                                                        <li class=\"nav-item parent-element\">\r\n                                                                            <span class=\"nav-link left-menu px-4 \">\r\n                                                                                <em :class=\"element.dttype[0].icon + ' ' + 'float-left'\"\r\n                                                                                    aria-hidden=\"true\"></em>\r\n                                                                                <span class=\"text-truncate float-left\"\r\n                                                                                    style=\"width: 55%;\"\r\n                                                                                    :data-toggle-tooltip=\"element.FieldName\"\r\n                                                                                    :title=\"element.FieldName\">\r\n                                                                                    {{\r\n                                                                                        GetLocalizedValue((element.DisplayName\r\n                                                                                            !=\r\n                                                                                            null &&\r\n                                                                                            element.DisplayName != \"\") ?\r\n                                                                                            element.DisplayName : element.FieldName)\r\n                                                                                    }}\r\n                                                                                </span>\r\n                                                                                <a href=\"javascript:;\"><em\r\n                                                                                        class=\"fa fa-plus float-right mt-1 text-success pr-0\"\r\n                                                                                        aria-hidden=\"true\"\r\n                                                                                        @click=\"Addfields(element, $event, index)\"></em></a>\r\n                                                                            </span>\r\n                                                                        </li>\r\n                                                                    </template>\r\n                                                                </ul>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div v-if=\"SearchNoRecord\"\r\n                                            class=\"text-center text-danger d-flex align-items-center justify-content-center norecs pt-2\">\r\n                                            {{\r\n                                                $t(\"NoRecordfound\") }}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <!-- <Form v-slot=\"{ values, meta }\" ref=\"form\">\r\n                        <div class=\"col-12 mt-0 mb-4 p-0\">\r\n                            <div class=\"form-group\">\r\n                                <label>{{ $t('fieldName') }}<span class=\"text-danger\">*</span></label>\r\n                                <Field name=\"modelfieldname\" :rules=\"{ 'required': true }\" label=\"Field Name\"\r\n                                    v-slot=\"{ field, errorMessage, meta }\" v-model=\"modelfieldname\">\r\n                                    <input v-bind=\"field\" placeholder=\"Enter Field Name\"\r\n                                        :class=\"{ 'form-control': true, 'is-invalid': meta.touched && !meta.valid }\"\r\n                                        type=\"text\" maxlength=\"50\" />\r\n                                    <span name=\"modelfieldname\" v-if=\"meta.touched && !meta.valid\"\r\n                                        class=\"invalid-feedback d-block\">{{\r\n                                            errorMessage\r\n                                        }}</span>\r\n                                </Field>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </Form> -->\r\n                            <!-- <div class=\"row\">\r\n                        <div class=\"col-12 p-0 float-left\">\r\n                            <div class=\"col-lg-4 mb-0 float-left px-3\">\r\n                                <div class=\"heading-border mb-4\">\r\n                                    <h5 class=\"h5\">\r\n                                        <span class=\"spngropuname\">\r\n                                            {{ $t('Functions') }}\r\n                                            <div class=\"w3-container w3-border w3-large\"></div>\r\n                                        </span>\r\n                                    </h5>\r\n                                </div>\r\n                                <div class=\"accordion md-accordion left-filter\" id=\"accordionEx\">\r\n                                    <div class=\"card-panel\" style=\"border-top:1px solid #c7c7c7;\">\r\n                                        <div class=\"card\" v-for=\"(name, index) in FunctionsName\" :key=\"index\">\r\n                                            <div class=\"card-header\" role=\"tab\" :id=\"'MainFunction' + index\">\r\n                                                <h5 class=\"mb-0\"><a data-toggle=\"collapse\" data-parent=\"#accordionEx\"\r\n                                                        :href=\"'#FucntionCollapse' + index\" aria-expanded=\"false\"\r\n                                                        :aria-controls=\"'FucntionCollapse' + index\" class=\"\"><em\r\n                                                            class=\"fa fa fa-file-text-o\" aria-hidden=\"true\"></em><span\r\n                                                            class=\"font-weight-bold\">\r\n                                                            {{ name.FuncType }}</span><em\r\n                                                            class=\"fa fa-angle-down rotate-icon\"\r\n                                                            aria-hidden=\"true\"></em></a>\r\n                                                </h5>\r\n                                            </div>\r\n                                            <div :id=\"'FucntionCollapse' + index\" class=\"collapse multi-collapse\"\r\n                                                role=\"tabpanel\" :aria-labelledby=\"'MainFunction' + index\"\r\n                                                data-parent=\"#accordionEx\">\r\n                                                <div class=\"card-body p-0 customScrollForLeftBar llt\"\r\n                                                    style=\"max-height:300px;\">\r\n                                                    <div class=\"form-group\">\r\n                                                        <ul class=\"nav nav-pills flex-column left-tab responivecustomtab lefttabiconfix\"\r\n                                                            style=\"max-height: 214px; overflow: auto; display: block;\">\r\n                                                            <template v-for=\"element in Functionskey[index]\">\r\n                                                                <li class=\"nav-item parent-element\">\r\n                                                                    <span class=\"nav-link left-menu px-4 \">\r\n                                                                        <em class=\"fa fa-bullhorn float-left\"\r\n                                                                            aria-hidden=\"true\"></em>\r\n                                                                        <span class=\"text-truncate float-left\"\r\n                                                                            style=\"width: 55%;\"\r\n                                                                            :data-toggle-tooltip=\"element.Keys\"\r\n                                                                            :title=\"element.Keys\">\r\n                                                                            {{ element.Keys }}\r\n                                                                        </span>\r\n                                                                        <a href=\"#\"><em\r\n                                                                                class=\"fa fa-plus float-right mt-1 text-success pr-0\"\r\n                                                                                aria-hidden=\"true\"\r\n                                                                                @click=\"AddFunctionsfields(element, $event, index)\"></em></a>\r\n                                                                    </span>\r\n                                                                </li>\r\n                                                            </template>\r\n                                                        </ul>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-lg-4 mb-0 float-left px-3\">\r\n                                <div class=\"heading-border\">\r\n                                    <h5 class=\"h5\">\r\n                                        <span class=\"spngropuname\">\r\n                                            {{ $t('Expression') }}\r\n                                            <a title=\"@Resources.Edit\" href=\"javascript:;\" class=\"editgroupname d-none\"><em\r\n                                                    class=\"fa fa-pencil pl-2 text-success\"></em></a>\r\n                                        </span>\r\n                                    </h5>\r\n                                </div>\r\n                                <div class=\"border p-3 mt-4 float-left\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-md-11 mb-2\">\r\n                                            <input :class=\"Functionkey == 'Datediff' || Functionkey == 'Dateadd' || Functionkey == 'Datename' || Functionkey == 'Datepart' || Functionkey == 'If'\r\n                                                ? 'form-control' : 'form-control d-none'\" type=\"text\"\r\n                                                v-model=\"modelconditionexpression\" placeholder=\"Enter Your Conditions\" />\r\n                                            <small :class=\"Functionkey == 'Datediff' || Functionkey == 'Dateadd' || Functionkey == 'Datename' || Functionkey == 'Datepart' || Functionkey == 'If' ? 'text-danger': 'd-none'\">{{ ShowDescriptionForFunction }}</small>\r\n                                        </div>\r\n                                        <div class=\"col-md-1 p-0 my-1\">\r\n                                            <a :class=\"Functionkey == 'Datediff' || Functionkey == 'Dateadd' || Functionkey == 'Datename' || Functionkey == 'Datepart' || Functionkey == 'If'\r\n                                                ? 'fa fa-play text-success' : 'fa fa-play text-success d-none'\"\r\n                                                @click=\"AddConditionExpression\"></a>\r\n                                        </div>\r\n                                    </div>\r\n                                    <textarea class=\"border background-white float-left w-100 p-3\" id=\"txtarea\"\r\n                                        style=\"min-height: 250px;\" v-model=\"InputValueExpression\"\r\n                                        @keydown=\"deleteuserinput($event)\" @mouseup=\"GetCursorPoint($event)\"\r\n                                        v-on:select=\"UserInputSelection($event)\"></textarea>\r\n                                    <div class=\"expressionbx mb-4 bg-grey text-right float-left w-100 py-2 border\">\r\n                                        <a class=\"fa fa-keyboard-o\" v-on:click=\"AddSpace($event)\"></a>\r\n                                        <a href=\"#\" v-on:click=\"Addplussign($event)\">+</a>\r\n                                        <a href=\"#\" v-on:click=\"Addsubtractsign($event)\">-</a>\r\n                                        <a href=\"#\" v-on:click=\"Addmultiplysign($event)\">*</a>\r\n                                        <a href=\"#\" v-on:click=\"Adddividesign($event)\">/</a>\r\n                                        <a href=\"#\" v-on:click=\"Addopenbracketsign($event)\">(</a>\r\n                                        <a href=\"#\" v-on:click=\"Addclosebracketsign($event)\">)</a>\r\n                                    </div>\r\n\r\n                                    <div class=\"col-12 p-0 float-left\">\r\n                                        <div class=\"row flex-row-reverse\">\r\n                                            <div class=\"col-12 p-0 float-left\" id=\"verifiedid\">\r\n                                                <div class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\"\r\n                                                    v-if=\"verifiedvaluedata == 0\">\r\n                                                    {{ verifyErrorMsg }}<button type=\"button\" class=\"close\"\r\n                                                        data-dismiss=\"alert\" @click=\"closed\" aria-label=\"Close\">\r\n                                                        <span aria-hidden=\"true\">×</span>\r\n                                                    </button>\r\n                                                </div>\r\n                                                <div class=\"alert alert-success alert-dismissible fade show\" role=\"alert\"\r\n                                                    v-if=\"verifiedvaluedata == 1\">\r\n\r\n                                                    {{ $t(\"ExpressionVerify\") }}<button type=\"button\" class=\"close\"\r\n                                                        data-dismiss=\"alert\" @click=\"closed\" aria-label=\"Close\">\r\n                                                        <span aria-hidden=\"true\">×</span>\r\n                                                    </button>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-lg-12 text-right\">\r\n                                                <a href=\"javascript:;\" class=\"btn btn-success ancsaveuserticket mr-2\"\r\n                                                    v-on:click=\"VerifyExpression\">\r\n                                                    <em class=\"fa fa-check pr-2\"></em>Verify</a>\r\n                                                <a href=\"javascript:;\" class=\"btn btn-danger ancsaveuserticket\"\r\n                                                    v-on:click=\"ResetExpression\">\r\n                                                    <em class=\"fa fa-refresh pr-2\"></em>Reset</a>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-lg-4 mb-0 float-left px-3\">\r\n                                <div class=\"heading-border mb-4\">\r\n                                    <h5 class=\"h5\">\r\n                                        <span class=\"spngropuname\">\r\n                                            {{ $t('Columns') }}\r\n                                            <div class=\"w3-container w3-border w3-large\"></div>\r\n                                        </span>\r\n                                    </h5>\r\n                                </div>\r\n                                <div class=\"mb-0 d-lg-block p-2 border\">\r\n                                    <div class=\"input-group customsearchbox\">\r\n                                        <input type=\"text\" maxlength=\"50\" v-on:keyup=\"ListFiltering\" id=\"searchinput\"\r\n                                            v-model=\"MainSearchmodel\" placeholder=\"Search by Name\"\r\n                                            class=\"form-control searchcustomfilter border-right-0\" autocomplete=\"off\">\r\n                                        <div class=\"input-group-append\">\r\n                                            <span class=\"input-group-text bg-transparent bg-white border-left-0\">\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"accordion md-accordion left-filter\" id=\"accordionEx\">\r\n                                    <div class=\"card-panel\" style=\"border-top:1px solid #c7c7c7;\">\r\n                                        <div class=\"card\" v-for=\"(name, index) in JsonColumns\" :key=\"index\">\r\n                                            <div class=\"card-header\" role=\"tab\" :id=\"'MainColumn' + index\">\r\n                                                <h5 class=\"mb-0\"><a data-toggle=\"collapse\" data-parent=\"#accordionEx\"\r\n                                                        :href=\"'#ColumnCollapse' + index\" aria-expanded=\"false\"\r\n                                                        :aria-controls=\"'ColumnCollapse' + index\" class=\"\"><em\r\n                                                            class=\"fa fa fa-file-text-o\" aria-hidden=\"true\"></em><span\r\n                                                            class=\"font-weight-bold\">\r\n                                                            {{ GetLocalizedValue(name.SubModule) }}</span><em\r\n                                                            class=\"fa fa-angle-down rotate-icon\"\r\n                                                            aria-hidden=\"true\"></em></a>\r\n                                                </h5>\r\n                                            </div>\r\n                                            <div :id=\"'ColumnCollapse' + index\" class=\"collapse multi-collapse column-collapse\"\r\n                                                role=\"tabpanel\" :aria-labelledby=\"'MainColumn' + index\"\r\n                                                data-parent=\"#accordionEx\">\r\n                                                <div class=\"card-body p-0 customScrollForLeftBar llt\"\r\n                                                    style=\"max-height:300px;\">\r\n                                                    <div class=\"form-group\">\r\n                                                        <ul class=\"nav nav-pills flex-column left-tab responivecustomtab lefttabiconfix\"\r\n                                                            style=\"max-height: 305px; overflow: auto; display: block;\">\r\n                                                            <template\r\n                                                                v-for=\"element in searchColumnfilter.length == 0 ? modulelisting[index] : searchColumnfilter[index]\" >\r\n                                                                <li class=\"nav-item parent-element\">\r\n                                                                    <span class=\"nav-link left-menu px-4 \">\r\n                                                                        <em :class=\"element.dttype[0].icon + ' ' + 'float-left'\"\r\n                                                                            aria-hidden=\"true\"></em>\r\n                                                                        <span class=\"text-truncate float-left\"\r\n                                                                            style=\"width: 55%;\"\r\n                                                                            :data-toggle-tooltip=\"element.FieldName\"\r\n                                                                            :title=\"element.FieldName\">\r\n                                                                            {{ GetLocalizedValue((element.DisplayName !=\r\n                                                                                null &&\r\n                                                                                element.DisplayName != \"\") ?\r\n                                                                                element.DisplayName : element.FieldName) }}\r\n                                                                        </span>\r\n                                                                        <a href=\"#\"><em\r\n                                                                                class=\"fa fa-plus float-right mt-1 text-success pr-0\"\r\n                                                                                aria-hidden=\"true\"\r\n                                                                                @click=\"Addfields(element, $event, index)\"></em></a>\r\n                                                                    </span>\r\n                                                                </li>\r\n                                                            </template>\r\n                                                        </ul>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div v-if=\"SearchNoRecord\"\r\n                                    class=\"text-center text-danger d-flex align-items-center justify-content-center norecs pt-2\">\r\n                                    {{\r\n                                        $t(\"NoRecordfound\") }}</div>\r\n                            </div>\r\n                        </div>\r\n                    </div> -->\r\n                            <!-- <div class=\"col-12 mt-3\">\r\n                            <div class=\"row flex-row-reverse\">\r\n                                <div class=\"col-lg-6 text-right\">\r\n                                        <button class=\"btn btn-success mr-2 my-sm-0 disabled\" id=\"Submitbtn\"\r\n                                            v-on:click=\"SubmitExpression\">\r\n                                            <span class=\"fa fa-floppy-o pl-2 pr-2\"></span>{{ $t(\"Submit\") }}\r\n                                        </button>\r\n                                        <button class=\"btn btn-primary delete-btn mr-2 my-sm-0\" v-on:click=\"CancelExpressionUI\">\r\n                                        <span class=\"fa fa-times pl-2 pr-2\"></span>{{ $t(\"Cancel\") }}\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div> -->\r\n                    </template>\r\n                </dynamic-form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div></template>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./modalCalculatedFieldUI.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./modalCalculatedFieldUI.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./modalCalculatedFieldUI.vue?vue&type=template&id=69294bc5&\"\nimport script from \"./modalCalculatedFieldUI.vue?vue&type=script&lang=js&\"\nexport * from \"./modalCalculatedFieldUI.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<script>\r\nimport DataReportService from \"@/services/DataService\";\r\nimport draggable from \"vuedraggable\";\r\nimport ReportPreview from '../Add_Report/ReportPreview.vue';\r\nimport CalculatedUI from \"../../../components/Common/Modal/modalCalculatedFieldUI.vue\";\r\nimport moment from 'moment'\r\n\r\nexport default {\r\n    components: {\r\n        draggable, ReportPreview, CalculatedUI\r\n    },\r\n    data() {\r\n        return {\r\n            isLoading: false,\r\n            modulelisting: [],\r\n            modulelistingforfilter: [],\r\n            showModuleListForField: true,\r\n            showModuleListForFilter: false,\r\n            reqFrom: 'Reporting',\r\n            submodulecode: null,\r\n            modulename: null,\r\n            maindiv: \"col-6 pl-0 float-left\",\r\n            expandcollapsediv: \"bottom_filter_button\",\r\n            showdiv: \"mb-0 d-none\",\r\n            fielddata: [],\r\n            Grouplist: [],\r\n            Columnlist: [],\r\n            Filterlist: [],\r\n            viewId: null,\r\n            ReportName: null,\r\n            fieldpan: 'col-6 p-0 float-left',\r\n            modulelistingmodel: null,\r\n            customreportparameters: null,\r\n            tempreportid: null,\r\n            saveclass: \"card d-none\",\r\n            editclass: \"card\",\r\n            savereportname: null,\r\n            Showsettingsview: false,\r\n            showdiv1: false,\r\n            dateformate: [],\r\n            GetOperator: [],\r\n            customField: null,\r\n            dragcount: 1,\r\n            templates: ['Match Any Value', 'Match All Value'],\r\n            category: 'Match All Value',\r\n            ReportPreviewListing: [],\r\n            previewdata: [],\r\n            itemclass: 'd-none',\r\n            Groupsearchmodel: '',\r\n            ColumnSearchmodel: '',\r\n            MainSearchmodel: '',\r\n            //filtergroup: [],\r\n            submodulename: [],\r\n            submodulecodename: [],\r\n            test1: [],\r\n            PageNumber: 1,\r\n            PAGESIZE: 10,\r\n            selectvalue: '',\r\n            selecteddatatype: '',\r\n            texttypevalue1: false,\r\n            numbertypevalue1: false,\r\n            datetypevalue1: false,\r\n            datetypevalue2: false,\r\n            timetypevalue: false,\r\n            timetypevalue2: false,\r\n            multiselectvalue: false,\r\n            numbertypevalue2: false,\r\n            texttypevalue2: false,\r\n            savedOperatorName: null,\r\n            drag: false,\r\n            GetDateFromDB: [],\r\n            modeldisplayname: null,\r\n            modeldateformat: '',\r\n            modeldecimalplaces: null,\r\n            modeluseseparator: null,\r\n            modelusecurrency: null,\r\n            FilterCount: 1,\r\n            valueTypeText: '',\r\n            valueTypeNumber: '',\r\n            valueTypeNumber2: '',\r\n            valueTypeFirstdate: '',\r\n            valueTypeSeconddate: '',\r\n            Displaymultiplevalue: '',\r\n            displayvalue2: '',\r\n            ValueDisplaytext: '',\r\n            ValueDisplaytext2: '',\r\n            ValueDisplaynumber: '',\r\n            ValueDisplaynumber2: '',\r\n            ValueDisplaydate: '',\r\n            ValueDisplaydate2: '',\r\n            ValueDisplayTime: '',\r\n            ValueDisplayTime2: '',\r\n            selectedvalue: '',\r\n            RequestFilterJosn: [],\r\n            CurrentOperatorSelected: null,\r\n            filtertype: null,\r\n            operator_id: null,\r\n            mode: 'tags',\r\n            dropdwonvalues: [],\r\n            options: [],\r\n            searchable: true,\r\n            createOption: true,\r\n            SelectedoperatorMappedDatatype: '',\r\n            commaSepratedSelectedValues: '',\r\n            selectedOPValue: '',\r\n            GraphJson: [],\r\n            sortingData: null,\r\n            graphData: null,\r\n            showReportPreview: false,\r\n            editjsondata: false,\r\n            valueKey: '',\r\n            valuekey2: '',\r\n            FirstOperand: '',\r\n            FirstOperandValue1: '',\r\n            SecondOperand: '',\r\n            SecondOperandValue1: '',\r\n            Datatype: '',\r\n            operator: '',\r\n            DisplayName: '',\r\n            showcalculatedUI: false,\r\n            CheckExpressionFeild: false,\r\n            ExpressionArray: [],\r\n            ExpressionFieldsArray: [],\r\n            saveJsonReport: [],\r\n            editexpressionvalue: false,\r\n            CalculatedUIEnabled: false,\r\n            searchColumnfilter: [],\r\n            LevelOfGrouping: null,\r\n            ExpFieldDataArray: [],\r\n            ExpDataArray: [],\r\n            setvalue: 0,\r\n            ChartGroupingArray: [],\r\n            GroupingArray: [],\r\n            PdfJsonReport: [],\r\n            FilterActiveForMandatory: false,\r\n            SearchNoRecord: false,\r\n            IsMandatoryforFilterAfterReset: false,\r\n            ArrayforFilterpopup: [],\r\n            modelFilterDDLValue: '',\r\n            DDLForFilter: false,\r\n            selctRuleForFilter: '',\r\n            IsForPreview: 1,\r\n            IsDDLValueInFilter: false,\r\n            GetSubModuleList: [],\r\n            showRowLevelFunction:false,\r\n            sortingresetvalue:false,\r\n            AlreadyExistExpression:{},\r\n            disableGrouping:true,\r\n            FormSchema:[\r\n                {\r\n                layoutType: \"single\",\r\n                Data: [ \r\n                        {\r\n                            astype: \"MultiSelectField\",\r\n                            label: '',\r\n                            name: \"Select\",\r\n                            value: \"\",\r\n                            mode:\"tag\",\r\n                            placeholder: \"Select\",\r\n                            config: {\r\n                                options: [],\r\n                                showAddIcon: false,\r\n                            },\r\n                            validationRules: \"\",\r\n                        },\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    },\r\n    created: async function () {\r\n        var vm = this;\r\n        $(\".fade\").addClass(\"show\");\r\n        if (this.$route.params.Modulename != undefined) {\r\n            vm.customreportparameters = this.$route.params;\r\n            vm.storeParameters();\r\n        } else { vm.GetStoredParameters(); }\r\n        await vm.GetList(vm.customreportparameters);\r\n        if (vm.customreportparameters.ReportID != null || vm.customreportparameters.ReportID != undefined) {\r\n            await vm.GetReportDetailsByReportId();\r\n            if (vm.IsDDLValueInFilter) {\r\n                setTimeout(function () {\r\n                    vm.showReportPreview = true;\r\n                }, 1000)\r\n            } else { vm.showReportPreview = true; }\r\n        }\r\n        vm.filterRulechange();\r\n    },\r\n    computed: {\r\n        filtergroup() {\r\n            var vm = this;\r\n            return vm.Columnlist.filter(item => {\r\n                var displayname = (item.DisplayName != null) ? item.DisplayName : item.FieldName;\r\n                return displayname.replace(/\\W/g, \"\").toLowerCase().includes(vm.Groupsearchmodel.replace(/\\W/g, \"\").toLowerCase());\r\n            })\r\n        },\r\n        filterColumngroup() {\r\n            var vm = this;\r\n            var searchColumn = [];\r\n            var searchfilter = [];\r\n            var GetSubModuleName = null;\r\n            vm.modulelisting.forEach((item, index) => {\r\n                vm.modulelisting[index].forEach((indexitem) => {\r\n                    searchfilter.push(indexitem);\r\n                    searchColumn = searchfilter.filter(searchitem => {\r\n                        var displaycolname = (searchitem.DisplayName != null) ? searchitem.DisplayName : searchitem.FieldName;\r\n                        return displaycolname.replace(/\\W/g, \"\").toLowerCase().includes(vm.ColumnSearchmodel.replace(/\\W/g, \"\").toLowerCase());\r\n                    })\r\n                    searchColumn.forEach(SearchItem => {\r\n                        GetSubModuleName = vm.modulelisting[index].find(x => x.CustomFieldId === SearchItem.CustomFieldId)\r\n                        if (GetSubModuleName != undefined) {\r\n                            GetSubModuleName.MainFieldname = vm.submodulename[index];\r\n                        }\r\n                    })\r\n                })\r\n            })\r\n            return searchColumn;\r\n        }\r\n    },\r\n    methods: {\r\n        storeParameters() {\r\n            var vm = this;\r\n            localStorage.setItem(\"SavedParameters\", JSON.stringify(vm.customreportparameters));\r\n        },\r\n        GetStoredParameters() {\r\n            var vm = this;\r\n            vm.customreportparameters = JSON.parse(localStorage.getItem(\"SavedParameters\"));\r\n        },\r\n        async GetFilterSelectDDL(CustomFieldId) {\r\n            var vm = this;\r\n            vm.options = [];\r\n            var Getddldata = [];\r\n            // vm.isLoading = false;\r\n            // if (vm.operator_id == 10 || vm.operator_id == 27) {\r\n            //     vm.isLoading = true;\r\n            // }\r\n            vm.isLoading = true;\r\n            await DataReportService.GetFilterDDLselectvalue(CustomFieldId).then(response => {\r\n                if (response.data.length > 0) {\r\n                    // vm.options = response.data.map(item => {\r\n                    //     return item.name != undefined ? item.name : item[FieldName]\r\n                    // });\r\n                    vm.FormSchema[0].Data[0].config.options = [];\r\n                    Getddldata = response.data;\r\n                    Getddldata.forEach(ddlitem => {\r\n                        vm.options.push({\r\n                            value: ddlitem.value,\r\n                            name: ddlitem.name\r\n                        })\r\n                    })\r\n                    vm.FormSchema[0].Data[0].config.options = vm.options;\r\n                    vm.isLoading = false;\r\n                } else { vm.isLoading = false; }\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n        },\r\n        async GetReportDetailsByReportId() {\r\n            var vm = this;\r\n            vm.isLoading = true;\r\n            var params = `ReportId=${vm.customreportparameters.ReportID}&IsPaged=1`;\r\n            await DataReportService.GetReportDetailsbyId(params).then(async response => {\r\n                var checkfields = [];\r\n                if (response.data != null && response.data != undefined && response.data != '') {\r\n                    checkfields = response.data.JSON_To_Create_ReportListing[0].Info.FIELDS;\r\n                }\r\n                if (response.data != null && response.data != undefined && response.data != '' && checkfields.length != 0) {\r\n                    vm.BindFeilds(response.data.JSON_To_Create_ReportListing[0].Info.FIELDS);\r\n                    await vm.BindFilters(response.data.JSON_To_Create_ReportListing[0].Info.FILTERS);\r\n                    vm.BindGROUP(response.data.JSON_To_Create_ReportListing[0].Info.GROUP);\r\n                    vm.sortingData = response.data.JSON_To_Create_ReportListing[0].Info.SORTING\r\n                    vm.graphData = response.data.JSON_To_Create_ReportListing[0].Info.GRAPH;\r\n                    vm.ExpressionArray = response.data.JSON_To_Create_ReportListing[0].Info.EXPRESSION;\r\n                    vm.ExpressionFieldsArray = response.data.JSON_To_Create_ReportListing[0].Info.EXPRESSIONFIELDSARRAY;\r\n                    vm.editexpressionvalue = true;\r\n                    if (response.data.ReportListing == 1) {\r\n                        vm.editjsondata = true;\r\n                        vm.saveJsonReport = response.data.JSON_To_Create_ReportListing[0];\r\n                        vm.PdfJsonReport = response.data.JSON_To_Create_ReportListing[0];\r\n                    }\r\n                } else {\r\n                    if (checkfields.length == 0) {\r\n                        vm.CheckIsMandartoryForFilter();\r\n                    }\r\n                    vm.isLoading = false;\r\n                }\r\n            }).catch(err => {\r\n                console.log(err);\r\n            })\r\n        },\r\n        BindFeilds(FIELDS) {\r\n            var vm = this;\r\n            FIELDS.forEach((item) => {\r\n                vm.Columnlist.push(item);\r\n                vm.modulelisting.forEach((mitem, index) => {\r\n                    let indexFound = vm.modulelisting[index].findIndex(element => { return element.CustomFieldId === item.CustomFieldId })\r\n                    if (indexFound != -1) {\r\n                        vm.modulelisting[index].splice(indexFound, 1);\r\n                    }\r\n                })\r\n            })\r\n            if (vm.Columnlist.length > 0) {\r\n                vm.CalculatedUIEnabled = true;\r\n            }\r\n        },\r\n        bindpouupvaluefordatetime(item) {\r\n            var vm = this;\r\n            if (item.ColumnFieldDataCode == 'datetime' || item.ColumnFieldDataCode == 'date') {\r\n                if (item.operator_display_name == 'Between') {\r\n                    vm.valueKey = 'valueTypeFirstdate'\r\n                    vm.valuekey2 = 'valueTypeSeconddate'\r\n                }\r\n                else {\r\n                    vm.valueKey = 'valueTypeFirstdate'\r\n                }\r\n            }\r\n            if (item.ColumnFieldDataCode == 'time') {\r\n                if (item.operator_display_name == 'Between') {\r\n                    vm.valueKey = 'ValueDisplayFirstTime'\r\n                    vm.valuekey2 = 'ValueDisplaySecondTime'\r\n                }\r\n                else {\r\n                    vm.valueKey = 'ValueDisplayFirstTime'\r\n                }\r\n            }\r\n        },\r\n        bindfilterdata(FILTERS) {\r\n            var vm = this;\r\n            vm.Filterlist = FILTERS.map((item, index) => {\r\n                var GetDDLValueinEdit = '';\r\n                var GetDDLTempVal = '';\r\n                if (item.ColumnFieldDataCode == 'select' && item.PickListOption == 'Lookup') {\r\n                    var GetDDLValueinEditArr = [];\r\n                    if (item.OperatorExpression.includes('IN') || item.OperatorExpression.includes('NOT IN')) {\r\n                        var GetDDLValueinEditMulti = [];\r\n                        GetDDLValueinEditArr = item.Value1.split(',');\r\n                        GetDDLValueinEditArr.forEach(DDLEditItem => {\r\n                            GetDDLValueinEdit = vm.options.find(i => i.value === DDLEditItem.replace(/\"|'/g, ''))\r\n                            GetDDLValueinEditMulti.push(GetDDLValueinEdit.name);\r\n                        })\r\n                        GetDDLTempVal = GetDDLValueinEditMulti?.join();\r\n                        vm.valueKey = 'Displaymultiplevalue';\r\n                    }\r\n                    else {\r\n                        GetDDLValueinEdit = vm.options.find(i => i.value === item.Value1);\r\n                        GetDDLTempVal = GetDDLValueinEdit?.name;\r\n                        vm.valueKey = 'DropDownValue';\r\n                    }\r\n                }\r\n                else if (item.ColumnFieldDataCode == 'decimal' || item.ColumnFieldDataCode == 'bigint' || item.ColumnFieldDataCode == 'int') {\r\n                    if (item.operator_display_name == 'Between') {\r\n                        vm.valueKey = 'valueTypeNumber';\r\n                        vm.valuekey2 = 'valueTypeNumber2';\r\n                    }\r\n                    else {\r\n                        vm.valueKey = 'valueTypeNumber';\r\n                    }\r\n                }\r\n                else if (item.ColumnFieldDataCode == 'string') {\r\n                    if (item.OperatorExpression.includes('IN') || item.OperatorExpression.includes('NOT IN')) {\r\n                        vm.valueKey = 'valueTypeText';\r\n                        vm.valuekey2 = 'valueTypeText2';\r\n                    } else { vm.valueKey = 'valueTypeText' };\r\n                }\r\n                vm.bindpouupvaluefordatetime(item);\r\n                let moduleIndex = vm.modulelistingforfilter.findIndex(moduleItem => {\r\n                    return moduleItem.find(field => {\r\n                        return field.CustomFieldId == item.CustomFieldId\r\n                    })\r\n                })\r\n                let indexFound = vm.modulelistingforfilter[moduleIndex].findIndex(field => { return field.CustomFieldId == item.CustomFieldId })\r\n                let returnObject = {}\r\n                if (indexFound != -1) {\r\n                    returnObject = {\r\n                        FieldName: vm.modulelistingforfilter[moduleIndex][indexFound].FieldName,\r\n                        CustomFieldId: item.CustomFieldId,\r\n                        ModuleIndex: moduleIndex,\r\n                        ActualDataType: item.ActualDataType,\r\n                        FilterCount: index + 1,\r\n                        FilterTypeAndorOr: vm.filtertype,\r\n                        OPERATOR_ID: item.OPERATOR_ID,\r\n                        OperatorDisplayName: item.operator_display_name,\r\n                        IsMandatoryforFilter: item.IsMandatoryforFilter,\r\n                        FieldIcons: item.FieldIcons,\r\n                        DisplayName: item.DisplayName,\r\n                        ColumnFieldDataCode: item.ColumnFieldDataCode,\r\n                        PickListOption: item.PickListOption,\r\n                        Calculated_Field: false\r\n                    }\r\n                    returnObject[vm.valuekey2] = item.Value2;\r\n                    returnObject[vm.valueKey] = GetDDLTempVal == '' ? item.Value1.replace(/\"|'/g, '') : GetDDLTempVal;\r\n                    vm.modulelistingforfilter[moduleIndex].splice(indexFound, 1);\r\n                }\r\n                return returnObject;\r\n            })\r\n        },\r\n        CheckforIncludeDataMatchesForFilter() {\r\n            var vm = this;\r\n            if (vm.filtertype == 'AND') {\r\n                vm.category = 'Match All Value';\r\n            } else {\r\n                vm.category = 'Match Any Value'\r\n            }\r\n        },\r\n        BindFilters: async function (FILTERS) {\r\n            var vm = this;\r\n            if (FILTERS.length > 0) {\r\n                FILTERS.map(async (item, index) => {\r\n                    if (item.ColumnFieldDataCode == 'select' && item.PickListOption == 'Lookup') {\r\n                        vm.IsDDLValueInFilter = true;\r\n                        await vm.GetFilterSelectDDL(item.CustomFieldId);\r\n                    }\r\n                })\r\n                if (vm.IsDDLValueInFilter) {\r\n                    setTimeout(function () {\r\n                        vm.filtertype = FILTERS[0].FilterTypeAndorOr;\r\n                        vm.CheckforIncludeDataMatchesForFilter();\r\n                        vm.bindfilterdata(FILTERS);\r\n                        vm.RequestFilterJosn = FILTERS.map((item, index) => {\r\n                            let indexFound = vm.Filterlist.findIndex(field => { return field.CustomFieldId == item.CustomFieldId })\r\n                            let returnObject = {}\r\n                            if (indexFound != -1) {\r\n                                returnObject = {\r\n                                    CustomFieldId: item.CustomFieldId,\r\n                                    FieldName: vm.Filterlist[indexFound].FieldName,\r\n                                    ActualDataType: item.ActualDataType,\r\n                                    FilterCount: index + 1,\r\n                                    OperatorExpression: item.OperatorExpression,\r\n                                    FilterTypeAndorOr: item.FilterTypeAndorOr,\r\n                                    OPERATOR_ID: item.OPERATOR_ID,\r\n                                    Value1: item.Value1,\r\n                                    Value2: item.Value2,\r\n                                    ColumnFieldDataCode: item.ColumnFieldDataCode,\r\n                                    PickListOption: item.PickListOption\r\n                                }\r\n                            }\r\n                            return returnObject;\r\n                        })\r\n                    }, 1000)\r\n                }\r\n                else {\r\n                    vm.filtertype = FILTERS[0].FilterTypeAndorOr;\r\n                    vm.CheckforIncludeDataMatchesForFilter();\r\n                    vm.bindfilterdata(FILTERS);\r\n                    vm.RequestFilterJosn = FILTERS.map((item, index) => {\r\n                        let indexFound = vm.Filterlist.findIndex(field => { return field.CustomFieldId == item.CustomFieldId })\r\n                        let returnObject = {}\r\n                        if (indexFound != -1) {\r\n                            returnObject = {\r\n                                CustomFieldId: item.CustomFieldId,\r\n                                FieldName: vm.Filterlist[indexFound].FieldName,\r\n                                ActualDataType: item.ActualDataType,\r\n                                FilterCount: index + 1,\r\n                                OperatorExpression: item.OperatorExpression,\r\n                                FilterTypeAndorOr: item.FilterTypeAndorOr,\r\n                                OPERATOR_ID: item.OPERATOR_ID,\r\n                                Value1: item.Value1,\r\n                                Value2: item.Value2,\r\n                                ColumnFieldDataCode: item.ColumnFieldDataCode,\r\n                                PickListOption: item.PickListOption\r\n                            }\r\n                        }\r\n                        return returnObject;\r\n                    })\r\n                }\r\n            }\r\n        },\r\n        BindGROUP(GROUP) {\r\n            var vm = this;\r\n            vm.Grouplist = [];\r\n            GROUP.forEach((item) => {\r\n                vm.Grouplist.push(item);\r\n            })\r\n        },\r\n        openSetting: function (element, event) {\r\n            debugger\r\n            var vm = this;\r\n            if (element.Calculated_Field) {\r\n                vm.showcalculatedUI = true;\r\n                vm.editexpressionvalue = true;\r\n                vm.AlreadyExistExpression = {};\r\n                if (vm.ExpressionFieldsArray.length > 0 || vm.ExpressionArray.length > 0) {\r\n                    let expIndex = -1;\r\n                    vm.ExpDataArray = [];\r\n                    vm.ExpFieldDataArray = [];\r\n                    for (var i = 0; i <= vm.ExpressionArray.length; i++) {\r\n                        if (vm.ExpressionArray[i].ColumnIndex === element.ModuleIndex) {\r\n                            vm.ExpDataArray.push(vm.ExpressionArray.find(x => x.ColumnIndex === element.ModuleIndex))\r\n                            break;\r\n                        }\r\n                    }\r\n                    vm.ExpressionFieldsArray.forEach(item => {\r\n                        var temparr = [];\r\n                        temparr.push(item);\r\n                        var checkexpfieldvalue = temparr.find(x => x.ColumnIndex === element.ModuleIndex);\r\n                        if (checkexpfieldvalue != undefined) {\r\n                            vm.ExpFieldDataArray.push(checkexpfieldvalue);\r\n                        }\r\n                    })\r\n                }\r\n                $(\"#showcalculatedfield\").modal(\"show\");\r\n                setTimeout(function () {\r\n                    $(\"#showcalculatedfield\").modal('show');\r\n                    setTimeout(function () {\r\n                        vm.SetBootstraptoolTip();\r\n                    }, 200);\r\n                }, 1000);\r\n                if (vm.editexpressionvalue) {\r\n                    vm.AlreadyExistExpression = element;\r\n                    vm.$refs.Calculated?.ExpresssionDataValue(vm.ExpDataArray, vm.ExpFieldDataArray);\r\n                }\r\n            } else {\r\n                vm.modeldisplayname = vm.GetLocalizedValue(element.DisplayName != null && element.DisplayName != '' ? element.DisplayName : element.FieldName);\r\n                vm.modeldateformat = element.DateFormat;\r\n                vm.modeldecimalplaces = element.DecimalPlace;\r\n                vm.modeluseseparator = element.IsUseSeprator;\r\n                vm.modelusecurrency = element.IsCurrencySymbol;\r\n                $(\".setting-div-box\").width('0px');\r\n                $(event.target).closest(\".parentdiv\").find(\".setting-div-box\").width('500px');\r\n                vm.GetDateFromDetail();\r\n            }\r\n         \r\n        },\r\n        CloseSetting: function (event) {\r\n            var vm = this;\r\n            vm.modeldisplayname = null;\r\n            vm.modeldateformat = '';\r\n            vm.modeldecimalplaces = null;\r\n            vm.modeluseseparator = null;\r\n            vm.modelusecurrency = null;\r\n            $(event.target).closest(\".setting-div-box\").width('0px');\r\n        },\r\n        ClosePopFilter: function () {\r\n            var vm = this;\r\n            $(\".filter-list-box\").width('0px').css(\"overflow\", \"hidden\");\r\n            vm.texttypevalue1 = false;\r\n            vm.numbertypevalue1 = false;\r\n            vm.datetypevalue1 = false;\r\n            vm.datetypevalue2 = false;\r\n            vm.multiselectvalue = false;\r\n            vm.numbertypevalue2 = false;\r\n            vm.texttypevalue2 = false;\r\n            vm.DDLForFilter = false;\r\n            vm.timetypevalue = false;\r\n            vm.timetypevalue2 = false;\r\n            vm.ValueDisplaytext = '';\r\n            vm.ValueDisplaytext2 = '';\r\n            vm.ValueDisplaynumber = '';\r\n            vm.ValueDisplaynumber2 = '';\r\n            vm.ValueDisplaydate = '';\r\n            vm.ValueDisplaydate2 = '';\r\n            vm.ValueDisplayTime = '';\r\n            vm.ValueDisplayTime2 = '';\r\n            vm.Displaymultiplevalue = '';\r\n            vm.dropdwonvalues = [];\r\n            vm.FormSchema[0].Data[0].value= [];\r\n            vm.modelFilterDDLValue = '';\r\n            vm.SecondOperand = '';\r\n            vm.SecondOperandValue1 = '';\r\n        },\r\n        CheckFeildOrFilter() {\r\n            var vm = this;\r\n            let isFieldsActive = vm.$refs.FIELDS.active\r\n            if (isFieldsActive) {\r\n                return 'FIELD'\r\n            }\r\n            else {\r\n                return 'Filters';\r\n            }\r\n        },\r\n        GetList: async function (customreportparameters) {\r\n            var vm = this;\r\n            if (customreportparameters.Modulename != undefined && customreportparameters.Submodulecode != undefined && customreportparameters.ReportName != null) {\r\n                var params = `moduleName=${customreportparameters.Modulename}&subModuleCode=${customreportparameters.Submodulecode}&viewId&reqFrom=${vm.reqFrom}`;\r\n                await DataReportService.GetListFields(params).then(response => {\r\n                    vm.submodulecodename = response.data.AVAILABLE_FIELDS[0];\r\n                    vm.submodulecodename.forEach((item) => {\r\n                        vm.submodulename.push(item.SubModule);\r\n                        vm.modulelisting.push([...item.CustomFields.sort(function(a, b){if(a.DisplayName < b.DisplayName) { return -1; }if(a.DisplayName > b.DisplayName) { return 1; }return 0; })]);\r\n                        vm.modulelistingforfilter.push([...item.CustomFields.sort(function(a, b){if(a.DisplayName < b.DisplayName) { return -1; }if(a.DisplayName > b.DisplayName) { return 1; }return 0; })]);\r\n                        vm.GetSubModuleList.push([...item.CustomFields]);\r\n                    })\r\n                    if (customreportparameters.NewReportInserted == \"Save\" && customreportparameters.ReportID != undefined || vm.IsMandatoryforFilterAfterReset) {\r\n                        vm.CheckIsMandartoryForFilter();\r\n                    }\r\n                    setTimeout(function () {\r\n                        vm.SetScrolbar('dark-thick', '', 'customScrollForLeftBar')\r\n                    }, 1000);\r\n                }).catch(err => { console.log(err); })\r\n                vm.submodulecode = customreportparameters.Submodulecode;\r\n                vm.ReportName = customreportparameters.ReportName;\r\n            }\r\n        },\r\n        CheckIsMandartoryForFilter: function () {\r\n            var vm = this;\r\n            vm.modulelisting.forEach((Fields, index) => {\r\n                vm.modulelisting[index].forEach(Fieldsitem => {\r\n                    if (Fieldsitem.IsMandatoryforFilter) {\r\n                        var CheckFields = vm.modulelisting[index].find(x => x.CustomFieldId === Fieldsitem.CustomFieldId)\r\n                        if (CheckFields.ActualDataType == \"datetime\") {\r\n                            vm.FilterActiveForMandatory = true;\r\n                            vm.SelectedoperatorMappedDatatype = CheckFields.dttype[0].DataTypeCode;\r\n                            vm.ValueDisplaydate = moment(moment().subtract(30, 'days')).format(\"YYYY-MM-DD\");\r\n                            // var date = new Date(); // Now\r\n                            // date.setDate(date.getDate() - 30); // Set now - 30 days as the new date\r\n                            // vm.ValueDisplaydate = date;\r\n                            vm.savedOperatorName = \"Greater Than\";\r\n                            vm.CurrentOperatorSelected = '>';\r\n                            vm.operator_id = 1;\r\n                            vm.AddFilter(CheckFields, index);\r\n                            vm.applySetting(CheckFields.CustomFieldId);\r\n                        }\r\n                    }\r\n                })\r\n            })\r\n        },\r\n        collapsedclick: function () {\r\n            var vm = this\r\n            vm.maindiv = \"col-6 pl-0 float-left d-none\";\r\n            vm.showdiv = \"mb-0\";\r\n            vm.fieldpan = 'col-6 p-0 float-left leftpancollapse col-11'\r\n        },\r\n        expandclick: function () {\r\n            var vm = this\r\n            vm.maindiv = \"col-6 pl-0 float-left \";\r\n            vm.showdiv = \"mb-0 d-none\";\r\n            vm.fieldpan = 'col-6 p-0 float-left';\r\n        },\r\n        editreport: function () {\r\n            var vm = this;\r\n            vm.editclass = \"card d-none\";\r\n            vm.saveclass = \"card\";\r\n            var params = `&Report_id=${vm.customreportparameters.ReportID}`;\r\n            DataReportService.Editdyanmicreport(params).then(response => {\r\n                vm.savereportname = response.data.ReportName;\r\n            }).catch(err => { console.log(err); })\r\n        },\r\n        savereport: function () {\r\n            var vm = this;\r\n            vm.editclass = \"card\";\r\n            vm.saveclass = \"card d-none\";\r\n            var params = `ReportName=${vm.savereportname}&Report_Id=${vm.customreportparameters.ReportID}&Folder_Id=${vm.customreportparameters.Folder_Id}&Module_Id=${vm.customreportparameters.Module_Id}&Sub_Module_Id=${vm.customreportparameters.Sub_Module_Id}&Ref_Code=${vm.customreportparameters.Submodulecode}&Version=${vm.customreportparameters.Version}`;\r\n            DataReportService.AddDynamicreport(params).then(response => {\r\n                if (response.data[0].Status == 'Update') {\r\n                    vm.ShowAlert(vm.$t(\"UpdatedSuccess\", [vm.$t(\"ReportName\")]), 'success', true, vm.$t('Alert'));\r\n                    vm.ReportName = vm.savereportname;\r\n                } else if (response.data[0].Status == 'Exists') {\r\n                    vm.savereportname = null;\r\n                    vm.ShowAlert(vm.$t(\"AlreadyExists\", [vm.$t(\"ReportName\")]), 'failure', true, vm.$t('Alert'));\r\n                } else {\r\n                    vm.savereportname = null;\r\n                    vm.ShowAlert(vm.$t(\"SaveError\", [vm.$t(\"ReportName\")]), 'failure', true, vm.$t('Alert'));\r\n                }\r\n            }).catch(err => { console.log(err); })\r\n        },\r\n        PreviewJson: async function (sortColummnarray, BindGraph, GraphDataValue) {\r\n            debugger\r\n            var vm = this;\r\n            var sortingArray = [];\r\n            vm.sortingresetvalue=true;\r\n            vm.isLoading = true;\r\n            let CheckSameNameExist = vm.MatchIfSameNameExist();\r\n            if (!CheckSameNameExist) {\r\n                let CheckValidSorting = vm.CheckForValidSorting(sortColummnarray);\r\n                if (CheckValidSorting == 0) {\r\n                    for (var i in sortColummnarray) {\r\n                        if (sortColummnarray[i].sortcolummnId != undefined && sortColummnarray[i].sortcolummnId != \"\") {\r\n                            sortingArray.push(\r\n                                { \"CustomFieldId\": sortColummnarray[i].sortcolummnId, \"SORTTYPE\": sortColummnarray[i].columnOrders, \"SortIndex\": parseInt(i), \"Calculated_Field\": \"\" }\r\n                            )\r\n                            vm.Columnlist.forEach(arritem => {\r\n                                var elem = sortingArray.find(x => x.CustomFieldId === arritem.CustomFieldId || x.CustomFieldId === arritem.FieldName)\r\n                                if (elem != undefined) {\r\n                                    elem.Calculated_Field = arritem.Calculated_Field;\r\n                                }\r\n                            })\r\n                        }\r\n                    }\r\n                    var temp;\r\n                    if (BindGraph) {\r\n                        vm.ChartGroupingArray = [];\r\n                        vm.GroupingArray = [];\r\n                        if (GraphDataValue != undefined && GraphDataValue != '') {\r\n                            var findvaluefromcolumnlistxaxis = vm.Columnlist.find(x => x.CustomFieldId === GraphDataValue.XAxisField || x.FieldName === GraphDataValue.XAxisField);\r\n                            var findvaluefromcolumnlistyaxis = vm.Columnlist.find(x => x.CustomFieldId === GraphDataValue.YAxisField || x.FieldName === GraphDataValue.YAxisField);\r\n                            vm.ChartGroupingArray.push({\r\n                                XCustomFieldId: findvaluefromcolumnlistxaxis.CustomFieldId, XFieldName: findvaluefromcolumnlistxaxis.FieldName,\r\n                                YCustomFieldId: findvaluefromcolumnlistyaxis.CustomFieldId, YFieldName: findvaluefromcolumnlistyaxis.FieldName, AggregateFunctionType: GraphDataValue.AggregateFunctionType\r\n                            });\r\n                        }\r\n                        temp = {\r\n                            \"Info\": {\r\n                                \"REPORTID\": vm.customreportparameters.ReportID,\r\n                                \"REPORTNAME\": vm.ReportName,\r\n                                \"MODULENAME\": vm.customreportparameters.Modulename,\r\n                                \"SUBMODULECODE\": vm.customreportparameters.Submodulecode,\r\n                                \"SUBMODULEID\": vm.customreportparameters.submoduleid,\r\n                                \"PAGESIZE\": 10,\r\n                                \"PAGENUMBER\": 1,\r\n                                \"IS_PAGED\": 1,\r\n                                \"IsForPreview\": vm.IsForPreview,\r\n                                \"FIELDS\": vm.Columnlist,\r\n                                \"FILTERS\": vm.RequestFilterJosn,\r\n                                \"GROUP\": [],\r\n                                \"CHARTGROUPARRAY\": vm.ChartGroupingArray,\r\n                                \"SORTING\": sortingArray,\r\n                                \"GRAPH\": [],\r\n                                \"EXPRESSION\": vm.ExpressionArray,\r\n                                \"EXPRESSIONFIELDSARRAY\": vm.ExpressionFieldsArray\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        temp = {\r\n                            \"Info\": {\r\n                                \"REPORTID\": vm.customreportparameters.ReportID,\r\n                                \"REPORTNAME\": vm.ReportName,\r\n                                \"MODULENAME\": vm.customreportparameters.Modulename,\r\n                                \"SUBMODULECODE\": vm.customreportparameters.Submodulecode,\r\n                                \"SUBMODULEID\": vm.customreportparameters.submoduleid,\r\n                                \"PAGESIZE\": 10,\r\n                                \"PAGENUMBER\": 1,\r\n                                \"IS_PAGED\": 1,\r\n                                \"IsForPreview\": vm.IsForPreview,\r\n                                \"FIELDS\": vm.Columnlist,\r\n                                \"FILTERS\": vm.RequestFilterJosn,\r\n                                \"GROUP\": vm.Grouplist,\r\n                                \"CHARTGROUPARRAY\": [],\r\n                                \"SORTING\": sortingArray,\r\n                                \"GRAPH\": [],\r\n                                \"EXPRESSION\": vm.ExpressionArray,\r\n                                \"EXPRESSIONFIELDSARRAY\": vm.ExpressionFieldsArray\r\n                            }\r\n                        }\r\n                        if( vm.Grouplist.length>0){\r\n                           vm.disableGrouping=false;\r\n                        }\r\n                        else{\r\n                            vm.disableGrouping=true;\r\n                        }\r\n                    }\r\n                     vm.showReportPreview = true;\r\n                    vm.saveJsonReport = temp;\r\n                    var jsondata = JSON.stringify(temp);\r\n                    await DataReportService.PreviewReport(jsondata).then((response) => {\r\n                        var checkdata = [];\r\n                        checkdata = JSON.parse(response.data[0].Value).ListingData;\r\n                        if (checkdata != null && checkdata != undefined && checkdata.length > 0) {\r\n                            if (BindGraph) {\r\n                                vm.GraphJson = JSON.parse(response.data[0].Value);\r\n                                if (!BindGraph) {\r\n                                    vm.previewdata = JSON.parse(response.data[0].Value).ListingData;\r\n                                }\r\n                            }\r\n                            else {\r\n                                vm.PdfJsonReport = temp;\r\n                                vm.previewdata = JSON.parse(response.data[0].Value).ListingData;\r\n                                vm.LevelOfGrouping = JSON.parse(response.data[0].Value).MetaData[0].LevelOfGrouping;\r\n                            }\r\n                            vm.isLoading = false;\r\n                        } else {\r\n                            vm.ShowAlert(vm.$t(\"No_Record_Found\"), 'failure', true, vm.$t('Alert'));\r\n                            vm.isLoading = false;\r\n                            vm.previewdata = [];\r\n                        }\r\n                    }).catch((err) => {\r\n                        console.log(\"Data not Found\");\r\n                        vm.previewdata = [];\r\n                        vm.ShowAlert(vm.$t(\"No_Record_Found\"), 'failure', true, vm.$t('Alert'));\r\n                        vm.isLoading = false;\r\n                    })\r\n                } \r\n                else {\r\n                    vm.ShowAlert(vm.$t(\"InvalidSorting\"), 'failure', true, vm.$t('Alert'));\r\n                    vm.isLoading = false;\r\n                }\r\n            } else {\r\n                vm.ShowAlert('Same Display Name ' + ' \"' + CheckSameNameExist + '\" ' + ' is Exist Mutiple Times Please Change', 'failure', true, vm.$t('Alert'));\r\n                vm.isLoading = false;\r\n            }\r\n          \r\n          \r\n        },\r\n        Addfields: function (element, event, index, MainFieldname) {\r\n            var vm = this;\r\n            let isFieldActive = vm.$refs.FIELDS.active;\r\n            var ColumnDisplayOrder;\r\n            if (vm.Columnlist.length < 20) {\r\n                if (isFieldActive) {\r\n                    if (vm.Columnlist.length < 1) {\r\n                        ColumnDisplayOrder = vm.Columnlist.length\r\n                    }\r\n                    else {\r\n                        const getlastarrayvalue = vm.Columnlist[vm.Columnlist.length - 1];\r\n                        ColumnDisplayOrder = getlastarrayvalue.Display_Order + 1;\r\n                    }\r\n                    if (element.hasOwnProperty(\"dttype\")) {\r\n                        const checkAlredyExist = vm.Columnlist.findIndex(object => object.CustomFieldId === element.CustomFieldId);\r\n                        if (checkAlredyExist === -1) {\r\n                            vm.Columnlist.push({\r\n                                CustomFieldId: element.CustomFieldId, DisplayName: element.DisplayName, FieldName: element.FieldName, ModuleIndex: index, ColumnFieldDataCode: element.dttype[0].DataTypeCode, Display_Order: ColumnDisplayOrder, Calculated_Field: false, MainFieldname: MainFieldname\r\n                                , FieldIcons: element.dttype[0].icon\r\n                            });\r\n                            if (event.removed == undefined) {\r\n                                vm.modulelisting[index].splice(vm.modulelisting[index].indexOf(element), 1);\r\n                            }\r\n                        }\r\n                    } else {\r\n                        const checkAlredyExist = vm.Columnlist.findIndex(object => object.CustomFieldId == element.CustomFieldId);\r\n                        if (checkAlredyExist === -1) {\r\n                            vm.Columnlist.push({\r\n                                CustomFieldId: element.CustomFieldId, DisplayName: element.DisplayName, FieldName: element.FieldName, ModuleIndex: index, ColumnFieldDataCode: element.ColumnFieldDataCode, Display_Order: ColumnDisplayOrder, Calculated_Field: false, MainFieldname: MainFieldname\r\n                                , FieldIcons: element.FieldIcons\r\n                            });\r\n                            if (event.removed == undefined) {\r\n                                vm.modulelisting[index].splice(vm.modulelisting[index].indexOf(element), 1);\r\n                            }\r\n                            // $(event.target).closest(\".parent-element\").remove();\r\n                        }\r\n\r\n                    }\r\n                }\r\n            } else {\r\n                vm.ShowAlert(vm.$t(\"AddCustomFields\"), 'failure', true, vm.$t('Alert'));\r\n            }\r\n            vm.CalculatedUIEnabled = true;\r\n            vm.searchColumnfilter = []\r\n            vm.MainSearchmodel = '';\r\n        },\r\n        SaveSelectedData: function (element, event) {\r\n            var vm = this;\r\n            var elem = vm.Columnlist.find(x => x.CustomFieldId == element.CustomFieldId);\r\n            elem.DisplayName = vm.modeldisplayname;\r\n            elem.DateFormat = vm.modeldateformat;\r\n            elem.DecimalPlace = vm.modeldecimalplaces;\r\n            elem.IsUseSeprator = vm.modeluseseparator;\r\n            elem.IsCurrencySymbol = vm.modelusecurrency;\r\n            if (vm.Grouplist.find(x => x.CustomFieldId === elem.CustomFieldId)) {\r\n                vm.Grouplist = [];\r\n                vm.Grouplist.push(elem);\r\n            }\r\n            vm.CloseSetting(event);\r\n        },\r\n        DeleteColumnFields: function (element, event) {\r\n            var vm = this;\r\n            let IsGraphColumn = vm.$refs.reportdata.CheckColumnExistInGraph(element.CustomFieldId)\r\n            if (!IsGraphColumn) {\r\n                if (!element.Calculated_Field) {\r\n                    let tagIndex = vm.Columnlist.findIndex(x => x.CustomFieldId == element.CustomFieldId);\r\n                    if (tagIndex > -1) {\r\n                        vm.Columnlist.splice(tagIndex, 1);\r\n                        vm.searchColumnfilter = [];\r\n                        $(\".setting-div-box\").width('0px');\r\n                    }\r\n                }\r\n                let tagIndex1 = vm.Grouplist.findIndex(x => x.CustomFieldId == element.CustomFieldId);\r\n                if (tagIndex1 > -1) {\r\n                    vm.Grouplist.splice(tagIndex1, 1);\r\n                }\r\n                if (vm.Columnlist.length == 0) {\r\n                    vm.previewdata = [];\r\n                    vm.CalculatedUIEnabled = false;\r\n                }\r\n                if (!element.Calculated_Field) {\r\n                    vm.modulelisting[element.ModuleIndex].push({\r\n                        CustomFieldId: element.CustomFieldId, DisplayName: element.DisplayName, FieldName: element.FieldName, ColumnFieldDataCode: element.ColumnFieldDataCode, Display_Order: element.Display_Order, Calculated_Field: false, MainFieldname: element.MainFieldname\r\n                        , FieldIcons: element.FieldIcons\r\n                    });\r\n                }\r\n                vm.Groupsearchmodel = '';\r\n                if (element.Calculated_Field) {\r\n                    if (vm.ExpressionFieldsArray.length > 0 || vm.ExpressionArray.length > 0) {\r\n                        let expIndex = -1;\r\n                        let calctagIndex = vm.Columnlist.findIndex(x => x.ModuleIndex == element.ModuleIndex);\r\n                        if (calctagIndex > -1) {\r\n                            vm.Columnlist.splice(calctagIndex, 1);\r\n                            vm.searchColumnfilter = [];\r\n                        }\r\n                        for (var i = 0; i <= vm.ExpressionArray.length; i++) {\r\n                            if (vm.ExpressionArray[i].ColumnIndex === element.ModuleIndex) {\r\n                                vm.ExpressionArray.splice(i, 1);\r\n                                break;\r\n                            }\r\n                        }\r\n                        vm.ExpressionFieldsArray.forEach(item => {\r\n                            var checkindex = vm.ExpressionFieldsArray.findIndex(x => x.ColumnIndex === element.ModuleIndex)\r\n                            if (checkindex > -1) {\r\n                                vm.ExpressionFieldsArray.splice(checkindex, 1);\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n                if (vm.sortingData != null && vm.sortingData.length > 0) {\r\n                    //let sortindex1 = vm.sortingData.findIndex(x => x.CustomFieldId === element.CustomFieldId)\r\n                    let sortindex = vm.sortingData.findIndex(x => x.Calculated_Field === element.Calculated_Field)\r\n                    if (sortindex > -1 ) {\r\n                        vm.sortingData.splice(sortindex, 1);\r\n                        vm.$refs.reportdata?.EditSortingData();\r\n                    }\r\n                }\r\n            }else{\r\n                vm.ShowAlert(vm.$t(\"GraphFields\"), 'warning', true, vm.$t('Alert'));\r\n            }\r\n        },\r\n        DeleteGroupFields: function (element, event) {\r\n            var vm = this;\r\n            let tagIndex = vm.Grouplist.findIndex(x => x.CustomFieldId == element.CustomFieldId);\r\n            vm.disableGrouping=true;\r\n            if (tagIndex > -1) {\r\n                vm.Grouplist.splice(tagIndex, 1);\r\n            }\r\n            vm.Groupsearchmodel = '';\r\n            if (vm.previewdata != null && vm.previewdata != undefined && vm.previewdata.length > 0) {\r\n                vm.$refs.reportdata?.RefreshReport();\r\n            }\r\n        },\r\n        AddFilter: function (element, index) {\r\n            var vm = this;\r\n            vm.filterRulechange();\r\n            let isFilterActive = vm.$refs.Filters.active != false ? vm.$refs.Filters.active : vm.FilterActiveForMandatory;\r\n            if (vm.Filterlist.length < 20) {\r\n                if (isFilterActive) {\r\n                    const checkAlredyExist = vm.Filterlist.findIndex(object => object.CustomFieldId === element.CustomFieldId);\r\n                    if (checkAlredyExist === -1) {\r\n                        if (vm.category == 'Match All Value') {\r\n                            vm.filtertype = 'AND'\r\n                        }\r\n                        else {\r\n                            vm.filtertype = 'OR'\r\n                        }\r\n                        vm.Filterlist.push({\r\n                            CustomFieldId: element.CustomFieldId,\r\n                            ModuleIndex: index,\r\n                            FieldName: element.FieldName,\r\n                            DisplayName: element.DisplayName,\r\n                            ActualDataType: element.ActualDataType,\r\n                            ColumnFieldDataCode: element.ColumnFieldDataCode != undefined ? element.ColumnFieldDataCode : element.dttype[0].DataTypeCode,\r\n                            PickListOption: element.PickListOption != undefined ? element.PickListOption : element.picklist_options,\r\n                            FilterCount: vm.getCountValue(),\r\n                            FilterTypeAndorOr: vm.filtertype,\r\n                            IsMandatoryforFilter: element.IsMandatoryforFilter,\r\n                            FieldIcons: element.FieldIcons != undefined ? element.FieldIcons : element.dttype[0].icon,\r\n                            OPERATOR_ID: ((typeof (element.OPERATOR_ID) === 'undefined') ? null : element.OPERATOR_ID),\r\n                            valueTypeText: ((typeof (element.result) === 'undefined') ? null : element.result),\r\n                            Calculated_Field: false\r\n                        });\r\n                    }\r\n                    if (event.removed == undefined) {\r\n                        vm.modulelistingforfilter[index].splice(vm.modulelistingforfilter[index].indexOf(element), 1);\r\n                    }\r\n                    vm.FilterActiveForMandatory = false;\r\n                }\r\n            }\r\n            else {\r\n                vm.ShowAlert(vm.$t(\"AddCustomFilter\"), 'failure', true, vm.$t('Alert'));\r\n            }\r\n            vm.searchColumnfilter = []\r\n            vm.MainSearchmodel = '';\r\n            // vm.ClosePopFilter();\r\n        },\r\n        DeleteFilterFields: function (element, event) {\r\n            var vm = this;\r\n            if (!element.IsMandatoryforFilter) {\r\n                let tagIndex = vm.Filterlist.findIndex(x => x.CustomFieldId == element.CustomFieldId);\r\n                if (tagIndex > -1) {\r\n                    vm.Filterlist.splice(tagIndex, 1);\r\n                }\r\n                let tagIndex1 = vm.Filterlist.findIndex(x => x.CustomFieldId == element.CustomFieldId);\r\n                if (tagIndex1 > -1) {\r\n                    vm.Filterlist.splice(tagIndex1, 1);\r\n                }\r\n                vm.dragcount = vm.dragcount - 1\r\n                vm.modulelistingforfilter[element.ModuleIndex].push({\r\n                    CustomFieldId: element.CustomFieldId, FieldName: element.FieldName, DisplayName: element.DisplayName, ActualDataType: element.ActualDataType,\r\n                    FieldIcons: element.FieldIcons, ColumnFieldDataCode: element.ColumnFieldDataCode, PickListOption: element.PickListOption, FilterType: element.filtertype\r\n                });\r\n                let tagIndex2 = vm.RequestFilterJosn.findIndex(item => item.CustomFieldId === element.CustomFieldId);\r\n                if (tagIndex2 != -1) {\r\n                    vm.RequestFilterJosn.splice(tagIndex, 1);\r\n                }\r\n                vm.ClosePopFilter();\r\n            }\r\n        },\r\n        openrulespop: function (element, event) {\r\n            var vm = this;\r\n            // if(element.selectedOPValue == undefined){\r\n            //     element.OPERATOR_ID = '';\r\n            // }\r\n            element.selectedOPValue = '';\r\n            $(\".filter-list-box\").width('0px').css(\"overflow\", \"hidden\");\r\n            $(event.target).closest(\".parentdiv\").find(\".filter-list-box\").width('500px').css(\"overflow\", \"visible\");\r\n            vm.GetOperatordata(element);\r\n            vm.texttypevalue1 = false;\r\n            vm.numbertypevalue1 = false;\r\n            vm.datetypevalue1 = false;\r\n            vm.datetypevalue2 = false;\r\n            vm.multiselectvalue = false;\r\n            vm.numbertypevalue2 = false;\r\n            vm.texttypevalue2 = false;\r\n            vm.DDLForFilter = false;\r\n            vm.timetypevalue = false;\r\n            vm.timetypevalue2 = false;\r\n            vm.dropdwonvalues = [];\r\n            vm.FormSchema[0].Data[0].value= []\r\n            vm.ValueDisplaytext = '';\r\n            vm.ValueDisplaytext2 = '';\r\n            vm.ValueDisplaynumber = '';\r\n            vm.ValueDisplaynumber2 = '';\r\n            vm.ValueDisplaydate = '';\r\n            vm.ValueDisplaydate2 = '';\r\n            vm.Displaymultiplevalue = '';\r\n            vm.modelFilterDDLValue = '';\r\n            vm.ValueDisplayTime = '';\r\n            vm.ValueDisplayTime2 = '';\r\n        },\r\n        getCountValue: function () {\r\n            return this.dragcount++;\r\n        },\r\n        dragover: function (event) {\r\n            let count = 1;\r\n            $(\".draggable-list .filter-div\").each(function (index) {\r\n                count = index + 1;\r\n                $(this).find(\".filter-count-div\").html(count);\r\n            });\r\n            this.dragcount = count;\r\n        },\r\n        GroupSearching: function () {\r\n            this.itemclass = '';\r\n        },\r\n        selectfiltervalue: function (data) {\r\n            var vm = this;\r\n            if (vm.Grouplist.length < 1) {\r\n                vm.Grouplist.push(data);\r\n                vm.itemclass = 'd-none';\r\n                vm.Groupsearchmodel = '';\r\n            }\r\n        },\r\n        selectfilterColumnvalue: function (data) {\r\n            var vm = this\r\n            const index = vm.Columnlist.findIndex(object => object.CustomFieldId === data.CustomFieldId);\r\n            if (index === -1) {\r\n                vm.modulelisting.forEach((mitem, mindex) => {\r\n                    vm.modulelisting[mindex].forEach(inneritem => {\r\n                        const validindex = vm.modulelisting[mindex].findIndex(x => x.CustomFieldId === data.CustomFieldId);\r\n                        if (validindex != -1) {\r\n                            vm.Addfields(data, '', mindex, vm.submodulename[mindex]);\r\n                            vm.itemclass = 'd-none';\r\n                        }\r\n                    })\r\n                })\r\n            }\r\n            vm.ColumnSearchmodel = '';\r\n        },\r\n        ResetPreview: function (customreportparameters) {\r\n            var vm = this;\r\n            vm.modulelisting.splice(0);\r\n            vm.Columnlist.splice(0);\r\n            vm.Columnlist = [];\r\n            vm.Grouplist.splice(0);\r\n            vm.Groupsearchmodel = '';\r\n            vm.previewdata.splice(0);\r\n            vm.RequestFilterJosn = [];\r\n            vm.Filterlist = [];\r\n            vm.ExpressionArray = [];\r\n            vm.ExpressionFieldsArray = [];\r\n            vm.saveJsonReport = [];\r\n            vm.setvalue = 0;\r\n            vm.modulelistingforfilter.splice(0);\r\n            vm.CalculatedUIEnabled = false;\r\n            vm.ChartGroupingArray = [];\r\n            vm.GroupingArray = [];\r\n            vm.MainSearchmodel = '';\r\n            vm.IsMandatoryforFilterAfterReset = true;\r\n            vm.SearchNoRecord = false;\r\n            vm.searchColumnfilter = [];\r\n            vm.GetList(customreportparameters);\r\n        },\r\n        GetDateFromDetail: function () {\r\n            var vm = this;\r\n            DataReportService.GetDateDetails().then((response) => {\r\n                vm.GetDateFromDB = response.data;\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            })\r\n        },\r\n        resetoldvalueinfilteroperator(element, IsBinding) {\r\n            var vm = this;\r\n            if (element.selectedOPValue != '' && IsBinding != '') {\r\n                vm.dropdwonvalues = [];\r\n                vm.FormSchema[0].Data[0].value= []\r\n                vm.ValueDisplaytext = '';\r\n                vm.ValueDisplaytext2 = '';\r\n                vm.ValueDisplaynumber = '';\r\n                vm.ValueDisplaynumber2 = '';\r\n                vm.ValueDisplaydate = '';\r\n                vm.ValueDisplaydate2 = '';\r\n                vm.Displaymultiplevalue = '';\r\n                vm.ValueDisplayTime = '';\r\n                vm.ValueDisplayTime2 = '';\r\n                vm.modelFilterDDLValue = '';\r\n            }\r\n        },\r\n        checkvalue: function (operatorname, element, OperatorExpression, operatorid, IsBinding) {\r\n            var vm = this;\r\n            if (element.ColumnFieldDataCode === 'select' && element.PickListOption === 'Lookup') {\r\n                vm.GetFilterSelectDDL(element.CustomFieldId, element.FieldName);\r\n            }\r\n            setTimeout(function () {\r\n                vm.savedOperatorName = \"\";\r\n                vm.SelectedoperatorMappedDatatype = element.ColumnFieldDataCode;\r\n                vm.CurrentOperatorSelected = OperatorExpression;\r\n                vm.savedOperatorName = operatorname;\r\n                vm.operator_id = operatorid;\r\n                if (element.ColumnFieldDataCode == 'string') {\r\n                    if (operatorname == 'Between') {\r\n                        vm.texttypevalue1 = true;\r\n                        vm.texttypevalue2 = true;\r\n                    } else if (operatorname == 'Is Empty' || operatorname == 'Is Not Empty') {\r\n                        vm.texttypevalue1 = false;\r\n                        vm.texttypevalue2 = false;\r\n                    }\r\n                    else {\r\n                        vm.texttypevalue1 = true;\r\n                        vm.texttypevalue2 = false;\r\n                    }\r\n                }\r\n                if (element.ColumnFieldDataCode == 'decimal' || element.ColumnFieldDataCode == 'int' || element.ColumnFieldDataCode == 'bigint') {\r\n                    if (operatorname == 'Between') {\r\n                        vm.numbertypevalue1 = true;\r\n                        vm.numbertypevalue2 = true;\r\n                    } else if (operatorname == 'Is Empty' || operatorname == 'Is Not Empty') {\r\n                        vm.numbertypevalue1 = false;\r\n                        vm.numbertypevalue2 = false;\r\n                    }\r\n                    else {\r\n                        vm.numbertypevalue1 = true;\r\n                        vm.numbertypevalue2 = false;\r\n                    }\r\n                }\r\n                if (element.ColumnFieldDataCode === 'select' && element.PickListOption === 'Lookup') {\r\n                    if (operatorname == 'Is Empty' || operatorname == 'Is Not Empty') {\r\n                        vm.DDLForFilter = false;\r\n                        vm.multiselectvalue = false;\r\n                        vm.texttypevalue1 = false;\r\n                        vm.texttypevalue2 = false;\r\n                    }\r\n                    else if (OperatorExpression == 'IN' || OperatorExpression == 'NOT IN') {\r\n                        vm.multiselectvalue = true;\r\n                        vm.DDLForFilter = false;\r\n                    } else {\r\n                        vm.DDLForFilter = true;\r\n                        vm.multiselectvalue = false;\r\n                        vm.texttypevalue1 = false;\r\n                        vm.texttypevalue2 = false;\r\n                    }\r\n                }\r\n                if (element.ColumnFieldDataCode === 'date') {\r\n                    if (operatorname == 'Between') {\r\n                        vm.datetypevalue1 = true;\r\n                        vm.datetypevalue2 = true;\r\n                    } else if (operatorname == 'Is Empty' || operatorname == 'Is Not Empty' || operatorname == 'Is Off Day' || operatorname == 'Is Week End') {\r\n                        vm.datetypevalue1 = false;\r\n                        vm.datetypevalue2 = false;\r\n                    }\r\n                    else {\r\n                        vm.datetypevalue1 = true;\r\n                        vm.datetypevalue2 = false;\r\n                    }\r\n                }\r\n\r\n                if (element.ColumnFieldDataCode === 'time') {\r\n                    if (operatorname == 'Between') {\r\n                        vm.timetypevalue = true;\r\n                        vm.timetypevalue2 = true;\r\n                    } else if (operatorname == 'Is Empty' || operatorname == 'Is Not Empty' || operatorname == 'Is Off Day' || operatorname == 'Is Week End') {\r\n                        vm.timetypevalue = false;\r\n                        vm.timetypevalue2 = false;\r\n                    }\r\n                    else {\r\n                        vm.timetypevalue = true;\r\n                        vm.timetypevalue2 = false;\r\n                    }\r\n                }\r\n\r\n                if (IsBinding != undefined) {\r\n                    if (operatorid != undefined && operatorname != undefined) {\r\n                        vm.dropdwonvalues = [];\r\n                        vm.FormSchema[0].Data[0].value= []\r\n                        vm.ValueDisplaytext = '';\r\n                        vm.ValueDisplaytext2 = '';\r\n                        vm.ValueDisplaynumber = '';\r\n                        vm.ValueDisplaynumber2 = '';\r\n                        vm.ValueDisplaydate = '';\r\n                        vm.ValueDisplaydate2 = '';\r\n                        vm.modelFilterDDLValue = '';\r\n                        vm.ValueDisplayTime = '';\r\n                        vm.ValueDisplayTime2 = '';\r\n                        if (element.OPERATOR_ID == operatorid) {\r\n                            vm.FillFiltervalue(operatorid, element);\r\n                        }\r\n                        element = [];\r\n                    }\r\n                }\r\n                else {\r\n                    var checksameoperator = vm.Filterlist.find(x => x.OPERATOR_ID === operatorid);\r\n                    if (checksameoperator != -1) {\r\n                        vm.resetoldvalueinfilteroperator(element, IsBinding)\r\n                    }\r\n                }\r\n            }, 1000);\r\n        },\r\n        GetOperatordata: function (element) {\r\n            var vm = this;\r\n            var CustomFieldId = element.CustomFieldId;\r\n            var params = `dataType=${element.ColumnFieldDataCode}&customField=${CustomFieldId}`;\r\n            DataReportService.GetDataOperator(params).then(response => {\r\n                vm.GetOperator = response.data.DATA;\r\n                vm.BindOperatorValues(CustomFieldId, element);\r\n                if (element.OPERATOR_ID > 0) {\r\n                    var checkIfExists = vm.GetOperator.filter((x) => {\r\n                        return x.OPERATOR_ID == element.OPERATOR_ID\r\n                    });\r\n                    if (checkIfExists.length > 0) {\r\n                        var IsBinding = true;\r\n                        vm.isBinding = IsBinding;\r\n                        vm.checkvalue(checkIfExists[0].OPERATOR_DISPLAY_NAME, element, checkIfExists[0].OPERATOR_EXPRESSION, element.OPERATOR_ID, checkIfExists[0].MP[0].OPERATION_DATA_TYPE, IsBinding)\r\n                    }\r\n                }\r\n            })\r\n        },\r\n        popupvaluebind(Index, data) {\r\n            var vm = this;\r\n            if (data.ColumnFieldDataCode == 'string') {\r\n                if (data.OperatorDisplayName == 'Equal to one of multiple possible values' || data.OperatorDisplayName == 'Not Equal to one of multiple possible values') {\r\n                    vm.texttypevalue1 = true;\r\n                    vm.ValueDisplaytext = this.Filterlist[Index].valueTypeText.split(',');\r\n                    //  vm.value5 = true;\r\n                    // vm.dropdwonvalues = this.Filterlist[Index].Displaymultiplevalue.split(',');\r\n                }\r\n                else {\r\n                    vm.texttypevalue1 = true;\r\n                    vm.ValueDisplaytext = this.Filterlist[Index].valueTypeText;\r\n                }\r\n            }\r\n            if (data.ColumnFieldDataCode == 'select') {\r\n                if (data.OperatorDisplayName == 'Equal to one of multiple possible values' || data.OperatorDisplayName == 'Not Equal to one of multiple possible values') {\r\n                    vm.multiselectvalue = true;\r\n                    vm.commaSepratedSelectedValues = this.Filterlist[Index].Displaymultiplevalue.split(',');\r\n                }\r\n                else {\r\n                    vm.DDLForFilter = true;\r\n                    var GetFilterddlvalue = vm.options.find(x => x.name === data.DropDownValue);\r\n                    vm.modelFilterDDLValue = GetFilterddlvalue?.value;\r\n                }\r\n            }\r\n            if (data.ColumnFieldDataCode == 'date') {\r\n                if (vm.DisplayName == 'Between') {\r\n                    vm.datetypevalue1 = true;\r\n                    vm.datetypevalue2 = true;\r\n                    vm.ValueDisplaydate = this.Filterlist[Index].valueTypeFirstdate;\r\n                    vm.ValueDisplaydate2 = this.Filterlist[Index].valueTypeSeconddate;\r\n                }\r\n                else {\r\n                    vm.datetypevalue1 = true;\r\n                    vm.ValueDisplaydate = this.Filterlist[Index].valueTypeFirstdate;\r\n                }\r\n            }\r\n            if (data.ColumnFieldDataCode == 'time') {\r\n                if (vm.DisplayName == 'Between') {\r\n                    vm.timetypevalue = true;\r\n                    vm.timetypevalue2 = true;\r\n                    vm.ValueDisplayTime = this.Filterlist[Index].ValueDisplayFirstTime;\r\n                    vm.ValueDisplayTime2 = this.Filterlist[Index].ValueDisplaySecondTime;\r\n                }\r\n                else {\r\n                    vm.timetypevalue = true;\r\n                    vm.ValueDisplayTime = this.Filterlist[Index].ValueDisplayFirstTime;\r\n                }\r\n            }\r\n        },\r\n        BindOperatorValues(CustomFieldId, element) {\r\n            var vm = this;\r\n            vm.isBinding = false;\r\n            var Index = this.Filterlist.findIndex(element => element.CustomFieldId == CustomFieldId)\r\n            vm.DisplayName = this.Filterlist[Index].OperatorDisplayName;\r\n            if (vm.DisplayName != null && vm.DisplayName != undefined && vm.DisplayName != '') {\r\n                vm.operator = this.GetOperator.find(item => item.OPERATOR_DISPLAY_NAME == vm.DisplayName)\r\n                vm.Filterlist[Index]['selectedOPValue'] = vm.operator.OPERATOR_ID;\r\n                vm.Datatype = vm.operator.MP[0].OPERATION_DATA_TYPE;\r\n                vm.popupvaluebind(Index, element);\r\n                if (element.ColumnFieldDataCode == 'decimal' || element.ColumnFieldDataCode == 'int') {\r\n                    if (vm.DisplayName == 'Between') {\r\n                        vm.numbertypevalue1 = true;\r\n                        vm.numbertypevalue2 = true;\r\n                        vm.ValueDisplaynumber = this.Filterlist[Index].valueTypeNumber;\r\n                        vm.ValueDisplaynumber2 = this.Filterlist[Index].valueTypeNumber2;\r\n                    }\r\n                    else {\r\n                        vm.numbertypevalue1 = true;\r\n                        vm.ValueDisplaynumber = this.Filterlist[Index].valueTypeNumber;\r\n                    }\r\n                }\r\n            } else {\r\n                vm.selectedOPValue = '';\r\n            }\r\n        },\r\n        FilterJosnRquest(elem) {\r\n            var vm = this;\r\n            if ((elem.OperatorDisplayName == 'Not Match a character pattern' || elem.OperatorDisplayName == 'Match a character pattern') && vm.ValueDisplaytext == '') {\r\n                vm.ShowAlert(vm.$t(\"Please enter some value in the text field\"), 'warning', true, vm.$t('Alert'));\r\n                return false;\r\n            }\r\n            if (vm.SelectedoperatorMappedDatatype == 'string') {\r\n                if (vm.CurrentOperatorSelected == 'IN' || vm.CurrentOperatorSelected == 'NOT IN') {\r\n                    vm.FirstOperand = vm.ValueDisplaytext\r\n                    vm.FirstOperandValue1 = vm.ValueDisplaytext2;\r\n\r\n                    if (elem.OperatorDisplayName == 'Equal to one of multiple possible values' || elem.OperatorDisplayName == 'Not Equal to one of multiple possible values') {\r\n                        let Commaseprated = vm.ValueDisplaytext.split(',')\r\n\r\n\r\n                        vm.FirstOperandValue1 = Commaseprated;\r\n                    }\r\n                }\r\n                else {\r\n                    vm.FirstOperand = '\\'' + vm.ValueDisplaytext + '\\'';\r\n                    vm.FirstOperandValue1 = vm.ValueDisplaytext;\r\n                }\r\n            }\r\n\r\n            else if (vm.SelectedoperatorMappedDatatype == 'decimal' || vm.SelectedoperatorMappedDatatype == 'int' || vm.SelectedoperatorMappedDatatype == 'bigint') {\r\n                if (elem.OperatorDisplayName == 'Between') {\r\n                    vm.FirstOperand = '\\'' + elem.valueTypeNumber + '\\'';\r\n                    vm.FirstOperandValue1 = elem.valueTypeNumber;\r\n                    vm.SecondOperand = '\\'' + elem.valueTypeNumber2 + '\\'';\r\n                    vm.SecondOperandValue1 = elem.valueTypeNumber2;\r\n                }\r\n                else {\r\n                    vm.FirstOperand = '\\'' + elem.valueTypeNumber + '\\'';\r\n                    vm.FirstOperandValue1 = elem.valueTypeNumber;\r\n                }\r\n            }\r\n            let operatoerExpressionResult = vm.ConvertOperatorToExpression(vm.CurrentOperatorSelected, vm.FirstOperand, vm.SecondOperand);\r\n            const checkAlredyExist = vm.RequestFilterJosn.findIndex(item => item.CustomFieldId === elem.CustomFieldId);\r\n            if (checkAlredyExist == -1) {\r\n                vm.RequestFilterJosn.push({\r\n                    CustomFieldId: elem.CustomFieldId,\r\n                    FieldName: elem.FieldName,\r\n                    ActualDataType: vm.SelectedoperatorMappedDatatype,\r\n                    FilterCount: elem.FilterCount,\r\n                    OperatorExpression: operatoerExpressionResult,\r\n                    OPERATOR_ID: vm.operator_id,\r\n                    Value1: vm.FirstOperandValue1,\r\n                    Value2: vm.SecondOperandValue1,\r\n                    IsMandatoryforFilter: elem.IsMandatoryforFilter,\r\n                    FieldIcons: elem.FieldIcons,\r\n                    DisplayName: elem.DisplayName,\r\n                    FilterTypeAndorOr: elem.FilterTypeAndorOr,\r\n                    PickListOption: elem.PickListOption,\r\n                    ColumnFieldDataCode: elem.ColumnFieldDataCode,\r\n                })\r\n            }\r\n            else {\r\n                let element = vm.RequestFilterJosn.find(item => item.CustomFieldId === elem.CustomFieldId);\r\n                element.OperatorExpression = operatoerExpressionResult;\r\n                element.PickListOption = elem.PickListOption;\r\n                element.ColumnFieldDataCode = elem.ColumnFieldDataCode;\r\n                element.OPERATOR_ID = vm.operator_id;\r\n                element.Value1 = vm.FirstOperandValue1;\r\n                element.Value2 = vm.SecondOperandValue1;\r\n                element.IsMandatoryforFilter = elem.IsMandatoryforFilter;\r\n            }\r\n            vm.ClosePopFilter();\r\n        },\r\n        FillFiltervalue: function (id, element) {\r\n            var vm = this;\r\n            vm.ArrayforFilterpopup.push(element);\r\n            var checkIfExists = vm.ArrayforFilterpopup.findIndex((x) => {\r\n                return x.OPERATOR_ID == id\r\n            });\r\n            if (checkIfExists > -1) {\r\n                var filtervalueexist = vm.RequestFilterJosn.find(x => x.OPERATOR_ID == id && x.CustomFieldId === element.CustomFieldId)\r\n                if (element.ColumnFieldDataCode == 'string') {\r\n                    vm.ValueDisplaytext = filtervalueexist?.Value1;\r\n                    // vm.ValueDisplaytext = element.valueTypeText\r\n                    vm.ValueDisplaytext2 = filtervalueexist?.Value2;\r\n                }\r\n                else if (element.ColumnFieldDataCode == 'decimal' || element.ColumnFieldDataCode == 'int' || element.ColumnFieldDataCode == 'bigint') {\r\n                    vm.ValueDisplaynumber = filtervalueexist?.Value1;\r\n                    vm.ValueDisplaynumber2 = filtervalueexist?.Value2;\r\n                }\r\n                else if (element.ColumnFieldDataCode === 'date') {\r\n                    vm.ValueDisplaydate = filtervalueexist?.Value1;\r\n                    // vm.ValueDisplaydate = element.valueTypeFirstdate;\r\n                    vm.ValueDisplaydate2 = filtervalueexist?.Value2;\r\n                }\r\n                else if (element.ColumnFieldDataCode === 'time') {\r\n                    vm.ValueDisplayTime = filtervalueexist?.Value1;\r\n                    // vm.ValueDisplayTime = element.ValueDisplayFirstTime;\r\n                    vm.ValueDisplayTime2 = filtervalueexist?.Value2;\r\n                }\r\n                else if (element.ColumnFieldDataCode === 'select' && element.PickListOption === 'Lookup') {\r\n                    if (vm.CurrentOperatorSelected == 'IN' || vm.CurrentOperatorSelected == 'NOT IN') {\r\n                        var multiddl = filtervalueexist?.Value1.replace(/\"|'/g, '');\r\n                        vm.dropdwonvalues = multiddl?.split(',');\r\n                        var fillmultiselect = [];\r\n                        vm.dropdwonvalues.forEach(dditem=>{\r\n                            const ifexist = vm.options.find(j => j.value === dditem)\r\n                            if (ifexist != -1 && ifexist != undefined) {\r\n                                var fillvalues = {value: ifexist.value, label: ifexist.name}\r\n                                fillmultiselect.push(fillvalues);\r\n                            }\r\n                        })\r\n                        vm.FormSchema[0].Data[0].value = fillmultiselect;\r\n                        vm.dropdwonvalues = [];\r\n                    } else {\r\n                        vm.modelFilterDDLValue = filtervalueexist?.Value1;\r\n                    }\r\n                }\r\n            }\r\n            vm.filterRulechange()\r\n        },\r\n        applySetting: function (CustomFieldId) {\r\n            var vm = this;\r\n            var isBetweenTrue = false\r\n            if(vm.FormSchema[0].Data[0].value.length > 0){\r\n                vm.FormSchema[0].Data[0].value.forEach(multiitem=>{\r\n                    vm.dropdwonvalues.push(multiitem.value)\r\n                })\r\n            }\r\n            if (vm.savedOperatorName == 'Between') {\r\n                if (vm.ValueDisplaytext != '' && vm.ValueDisplaytext2 != '' || (vm.ValueDisplaynumber != '' || vm.ValueDisplaynumber == '0') && vm.ValueDisplaynumber2 != ''\r\n                    || vm.ValueDisplaydate != '' && vm.ValueDisplaydate2 != '' || vm.ValueDisplayTime != '' && vm.ValueDisplayTime2 != '') {\r\n                    isBetweenTrue = true;\r\n                }\r\n            } else if (vm.ValueDisplaytext != '' || vm.ValueDisplaytext2 != '' || vm.ValueDisplaynumber != '' || vm.ValueDisplaynumber == '0' ||\r\n                vm.ValueDisplaynumber2 != '' || vm.ValueDisplaydate != '' || vm.ValueDisplaydate2 != '' || vm.ValueDisplayTime != '' || vm.ValueDisplayTime2 != '' ||\r\n                vm.dropdwonvalues.length > 0 || vm.modelFilterDDLValue != '' || vm.savedOperatorName == 'Is Empty' || vm.savedOperatorName == 'Is Not Empty'\r\n                || vm.savedOperatorName == 'Is Off Day' || vm.savedOperatorName == 'Is Week End') {\r\n                isBetweenTrue = true\r\n            }\r\n            setTimeout(function () {\r\n                if (isBetweenTrue) {\r\n                    var Multiddlvalue = [];\r\n                    // if(vm.ValueDisplaytext==\"\" && vm.ValueDisplaytext2==\"\"){\r\n                    //     vm.ShowAlert(\"Please fill this value.\", \"warning\")\r\n                    //     return false;\r\n                    // }\r\n                    vm.dropdwonvalues.forEach(ddlvalues => {\r\n                        const isddlvalueexist = vm.options.find(j => j.value === ddlvalues)\r\n                        if (isddlvalueexist != -1 && isddlvalueexist != undefined) {\r\n                            Multiddlvalue.push(isddlvalueexist.name);\r\n                        }\r\n                    })\r\n                    if (vm.dropdwonvalues != '') {\r\n                        vm.commaSepratedSelectedValues = vm.dropdwonvalues?.join();\r\n                        vm.modelFilterDDLValue = '';\r\n                    }\r\n                    var GetDDLValue = '';\r\n                    if (vm.modelFilterDDLValue != '') {\r\n                        GetDDLValue = vm.options.find(i => i.value === vm.modelFilterDDLValue)\r\n                    }\r\n                    var elem = vm.Filterlist.find(x => x.CustomFieldId == CustomFieldId);\r\n                    elem.OperatorDisplayName = vm.savedOperatorName;\r\n                    elem.valueTypeText = vm.ValueDisplaytext;\r\n                    elem.valueTypeText2 = vm.ValueDisplaytext2;\r\n                    elem.valueTypeNumber = vm.ValueDisplaynumber;\r\n                    elem.valueTypeNumber2 = vm.ValueDisplaynumber2;\r\n                    elem.valueTypeFirstdate = vm.ValueDisplaydate;\r\n                    elem.valueTypeSeconddate = vm.ValueDisplaydate2;\r\n                    elem.ValueDisplayFirstTime = vm.ValueDisplayTime;\r\n                    elem.ValueDisplaySecondTime = vm.ValueDisplayTime2;\r\n                    elem.Displaymultiplevalue = Multiddlvalue?.join();\r\n                    elem.DropDownValue = GetDDLValue?.name;\r\n                    // elem.DropDownValue = GetDDLValue;\r\n                    elem.OPERATOR_ID = vm.operator_id;\r\n                    if (vm.SelectedoperatorMappedDatatype == 'select') {\r\n                        if (vm.CurrentOperatorSelected == 'IN' || vm.CurrentOperatorSelected == 'NOT IN') {\r\n                            //multi select  IN(\"'1','2','3'\") in Filter Case\r\n                            let valArray = vm.commaSepratedSelectedValues.split(\".\");\r\n                            let commsplitedVal = valArray.join(\",\")\r\n                            vm.FirstOperand = '\\'' + commsplitedVal.split(',').join('\\',\\'') + '\\'';\r\n                            let CommaSepratedStringValues = vm.FirstOperand;\r\n                            vm.FirstOperandValue1 = CommaSepratedStringValues;\r\n                        }\r\n                        else {\r\n                            vm.FirstOperand = '\\'' + vm.modelFilterDDLValue + '\\'';\r\n                            vm.FirstOperandValue1 = vm.modelFilterDDLValue;\r\n                        }\r\n                    }\r\n                    else if (vm.SelectedoperatorMappedDatatype == 'date') {\r\n                        if (elem.OperatorDisplayName == 'Between') {\r\n                            vm.FirstOperand = '\\'' + elem.valueTypeFirstdate + '\\'';\r\n                            vm.FirstOperandValue1 = elem.valueTypeFirstdate;\r\n                            vm.SecondOperand = '\\'' + elem.valueTypeSeconddate + '\\'';\r\n                            vm.SecondOperandValue1 = elem.valueTypeSeconddate;\r\n                        } else {\r\n                            vm.FirstOperand = '\\'' + elem.valueTypeFirstdate + '\\'';\r\n                            vm.FirstOperandValue1 = elem.valueTypeFirstdate;\r\n                        }\r\n                    } else if (vm.SelectedoperatorMappedDatatype == 'time') {\r\n                        if (elem.OperatorDisplayName == 'Between') {\r\n                            vm.FirstOperand = '\\'' + elem.ValueDisplayFirstTime + '\\'';\r\n                            vm.FirstOperandValue1 = elem.ValueDisplayFirstTime;\r\n                            vm.SecondOperand = '\\'' + elem.ValueDisplaySecondTime + '\\'';\r\n                            vm.SecondOperandValue1 = elem.ValueDisplaySecondTime;\r\n                        } else {\r\n                            vm.FirstOperand = '\\'' + elem.ValueDisplayFirstTime + '\\'';\r\n                            vm.FirstOperandValue1 = elem.ValueDisplayFirstTime;\r\n                        }\r\n                    }\r\n                    vm.FilterJosnRquest(elem);\r\n                } else {\r\n                    vm.ShowAlert(\"Cannot Add Empty Filter\", \"failure\");\r\n                }\r\n            }, 500)\r\n            //vm.ClosePopFilter();\r\n        },\r\n        FilterTabClicked() {\r\n            var vm = this;\r\n            vm.showModuleListForFilter = true;\r\n            vm.showModuleListForField = false;\r\n            vm.MainSearchmodel = '';\r\n            vm.searchColumnfilter = [];\r\n\r\n        },\r\n        FieldTabClicked() {\r\n            var vm = this;\r\n            vm.showModuleListForFilter = false;\r\n            vm.showModuleListForField = true;\r\n            vm.MainSearchmodel = '';\r\n            vm.searchColumnfilter = [];\r\n        },\r\n        openActionIcon: function (e) {\r\n            var vm = this;\r\n            vm.showRowLevelFunction=true;\r\n            // e.target.nextSibling.removeAttribute('style');\r\n            // e.target.nextSibling.setAttribute('style', 'width:240px;');\r\n            // e.target.nextSibling.style.display = 'block';\r\n        },\r\n        closeActionIcon: function (e) {\r\n            var vm = this;\r\n            vm.showRowLevelFunction=false;\r\n        },\r\n        OpenCalculatedUI: function () {\r\n            var vm = this;\r\n            vm.showcalculatedUI = true;\r\n            vm.editexpressionvalue = false;\r\n            vm.showRowLevelFunction=false;\r\n            vm.AlreadyExistExpression = {};\r\n            $(\"#showcalculatedfield\").modal(\"show\");\r\n            setTimeout(function () {\r\n                $(\"#showcalculatedfield\").modal('show');\r\n                setTimeout(function () {\r\n                    vm.SetBootstraptoolTip();\r\n                }, 200);\r\n            }, 1000);\r\n        },\r\n        VerifiedExpressionColumnValue({ ExpressionID, FieldValue, VerifiedExpression, ExpressionFieldArray, ExpressionDisplay, Functionkey ,IsEdit,IsExpExist}) {\r\n            debugger\r\n            var vm = this;\r\n            const checkAlredyExist = vm.Columnlist.findIndex(object => object.CustomFieldId === ExpressionID);\r\n            const checkFieldVlaueExist = vm.Columnlist.findIndex(object => object.FieldName === FieldValue);\r\n            var ExpressionDisplayOrder;\r\n            if ((checkAlredyExist === -1 || checkFieldVlaueExist === -1) && !IsEdit) {\r\n                var checkExpExist = '';\r\n                var indexvalue = '';\r\n                var count = 0;\r\n                vm.Columnlist.forEach(CheckItem => {\r\n                    if (CheckItem.Calculated_Field || count != 0) {\r\n                        vm.setvalue = 1;\r\n                        count++;\r\n                    } else { vm.setvalue = 0; }\r\n                })\r\n                if (vm.setvalue == 1) {\r\n                    vm.Columnlist.forEach(item => {\r\n                        if (item.Calculated_Field) {\r\n                            var tempdata = [];\r\n                            tempdata.push(item);\r\n                            var checkExpvalue = tempdata.find(x => x.ModuleIndex);\r\n                            checkExpExist = checkExpvalue.ModuleIndex;\r\n                        }\r\n                    })\r\n                    indexvalue = parseInt(checkExpExist) + 1;\r\n                }\r\n                else {\r\n                    const getlastarrayvalue = vm.Columnlist[vm.Columnlist.length - 1];\r\n                    indexvalue = getlastarrayvalue.ModuleIndex + 2;\r\n                    vm.setvalue = 1;\r\n                }\r\n                if (vm.Columnlist.length < 1) {\r\n                    ExpressionDisplayOrder = vm.Columnlist.length\r\n                }\r\n                else {\r\n                    const getlastarrayvalue = vm.Columnlist[vm.Columnlist.length - 1];\r\n                    ExpressionDisplayOrder = getlastarrayvalue.Display_Order + 1;\r\n                }\r\n                vm.Columnlist.push({\r\n                    CustomFieldId: '', FieldName: FieldValue, DisplayName: FieldValue, DateFormat: null,\r\n                    DateFormatId: null,\r\n                    DecimalPlace: null,\r\n                    IsUseSeprator: null,\r\n                    IsCurrencySymbol: null,\r\n                    ColumnFieldDataCode: \"string\",\r\n                    Display_Order: ExpressionDisplayOrder,\r\n                    ModuleIndex: indexvalue,\r\n                    Calculated_Field: true,\r\n                    ExpressionDisplay: ExpressionDisplay\r\n                });\r\n                if (VerifiedExpression != \"\") {\r\n                    vm.ExpressionArray.push(\r\n                        {\r\n                            \"ExpressionID\": ExpressionID, \"Expression\": VerifiedExpression, \"ExpressionName\": FieldValue, \"ExpressionDisplay\": ExpressionDisplay, \"ColumnIndex\": indexvalue,\r\n                            \"REPORTID\": vm.customreportparameters.ReportID,\r\n                            \"FunctionKeys\": Functionkey\r\n                        }\r\n                    )\r\n                    var dataele = vm.Columnlist.find(x => x.FieldName === FieldValue);\r\n                    dataele.ModuleIndex = indexvalue;\r\n                    if (vm.ExpressionFieldsArray == undefined) {\r\n                        vm.ExpressionFieldsArray = [];\r\n                    }\r\n                    ExpressionFieldArray.forEach(Arrayitem => {\r\n                        vm.ExpressionFieldsArray.push({ CustomFieldId: Arrayitem.CustomFieldId, FieldName: Arrayitem.FieldName, ColumnIndex: indexvalue });\r\n                    })\r\n                }\r\n            }\r\n            else {\r\n                var colelem = vm.Columnlist.find(x=>x.ModuleIndex === IsExpExist.ModuleIndex)\r\n                colelem.CustomFieldId = ExpressionID;\r\n                colelem.FieldName = FieldValue;\r\n                colelem.DisplayName = FieldValue;\r\n                colelem.DateFormat = null;\r\n                colelem.DateFormatId = null;\r\n                colelem.DecimalPlace = null;\r\n                colelem.IsUseSeprator = null;\r\n                colelem.IsCurrencySymbol = null;\r\n                colelem.ColumnFieldDataCode = \"string\";\r\n                colelem.Display_Order = IsExpExist.Display_Order;\r\n                colelem.ModuleIndex = IsExpExist.ModuleIndex\r\n                colelem.Calculated_Field = true,\r\n                colelem.ExpressionDisplay = ExpressionDisplay;\r\n\r\n                var verifyelem = vm.ExpressionArray.find(vobject => vobject.ColumnIndex === IsExpExist.ModuleIndex)\r\n                verifyelem.ExpressionID = ExpressionID;\r\n                verifyelem.Expression = VerifiedExpression;\r\n                verifyelem.ExpressionName = FieldValue;\r\n                verifyelem.ExpressionDisplay = ExpressionDisplay;\r\n                verifyelem.ColumnIndex = IsExpExist.ModuleIndex;\r\n                verifyelem.REPORTID = vm.customreportparameters.ReportID;\r\n                verifyelem.FunctionKeys = Functionkey;\r\n\r\n                ExpressionFieldArray.forEach(Arrayitem => {\r\n                    var fieldexp = vm.ExpressionFieldsArray.find(fobject => fobject.ColumnIndex === IsExpExist.ColumnIndex)\r\n                    fieldexp.CustomFieldId = Arrayitem.CustomFieldId;\r\n                    fieldexp.FieldName = Arrayitem.FieldName;\r\n                    fieldexp.ColumnIndex = IsExpExist.ModuleIndex;\r\n                })\r\n            }\r\n            vm.$refs.Calculated?.close();\r\n        },\r\n        ListFiltering: function () {\r\n            var vm = this;\r\n            let isFieldActive = vm.$refs.FIELDS.active;\r\n            var input = document.getElementById('searchinput');\r\n\r\n            var filterinput = input.value.toUpperCase();\r\n            if (filterinput != null && filterinput != \"\") {\r\n                $(\".multi-collapse\").addClass(\"show\");\r\n            }\r\n            else {\r\n                $(\".multi-collapse\").removeClass(\"show\");\r\n            }\r\n            var searchcol = [];\r\n            var searchfilter = [];\r\n            if (isFieldActive) {\r\n                vm.modulelisting.forEach((item, index) => {\r\n                    vm.modulelisting[index].forEach((indexitem) => {\r\n                        searchfilter.push(indexitem);\r\n                        searchcol = searchfilter.filter(searchitem => {\r\n                            var displayMainColname = (searchitem.DisplayName != null) ? searchitem.DisplayName : searchitem.FieldName;\r\n                            return displayMainColname.replace(/\\W/g, \"\").toLowerCase().includes(filterinput.replace(/\\W/g, \"\").toLowerCase());\r\n                        })\r\n                    })\r\n                    vm.searchColumnfilter[index] = searchcol;\r\n                    searchfilter = [];\r\n                    searchcol = [];\r\n                })\r\n                let count = 0;\r\n                for (let filteritem in vm.searchColumnfilter) {\r\n                    if (vm.searchColumnfilter[filteritem].length > 0) {\r\n                        count++;\r\n                    }\r\n                }\r\n                if (count > 0) {\r\n                    vm.SearchNoRecord = false\r\n                } else { vm.SearchNoRecord = true; }\r\n                return vm.searchColumnfilter;\r\n            }\r\n            else {\r\n                vm.modulelistingforfilter.forEach((item, index) => {\r\n                    vm.modulelistingforfilter[index].forEach((indexitem) => {\r\n                        searchfilter.push(indexitem);\r\n                        searchcol = searchfilter.filter(searchitem => {\r\n                            var displayMainColname = (searchitem.DisplayName != null) ? searchitem.DisplayName : searchitem.FieldName;\r\n                            return displayMainColname.replace(/\\W/g, \"\").toLowerCase().includes(filterinput.replace(/\\W/g, \"\").toLowerCase());\r\n                        })\r\n                    })\r\n                    vm.searchColumnfilter[index] = searchcol;\r\n                    searchfilter = [];\r\n                    searchcol = [];\r\n                })\r\n                let count = 0;\r\n                for (let filteritem in vm.searchColumnfilter) {\r\n                    if (vm.searchColumnfilter[filteritem].length > 0) {\r\n                        count++;\r\n                    }\r\n                }\r\n                if (count > 0) {\r\n                    vm.SearchNoRecord = false\r\n                } else { vm.SearchNoRecord = true; }\r\n                return vm.searchColumnfilter;\r\n            }\r\n        },\r\n        checkMove(e) {\r\n            var vm = this;\r\n            var getindex = 0;\r\n            if (e.related.id == 'TargetDivID') {\r\n                if(!vm.showModuleListForFilter){\r\n                    if(vm.Columnlist.length < 20 || e.dragged.id === e.related.id){\r\n                        return true;}\r\n                    else{\r\n                        vm.ShowAlert(vm.$t(\"AddCustomFields\"), 'failure', true, vm.$t('Alert'));\r\n                        return false;\r\n                    }\r\n                }\r\n                else{\r\n                    if(vm.Filterlist.length < 20){\r\n                        return true;}\r\n                    else{\r\n                        vm.ShowAlert(vm.$t(\"AddCustomFilter\"), 'failure', true, vm.$t('Alert'));\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n            else if (!e.draggedContext.element.Calculated_Field && e.draggedContext.element.Calculated_Field != undefined) {\r\n                vm.modulelisting.forEach((i, index) => {\r\n                    vm.GetSubModuleList[index].forEach(j => {\r\n                        if (e.relatedContext.list.length == 0) {\r\n                            if (j.CustomFieldId === e.draggedContext.element.CustomFieldId) {\r\n                                getindex = index;\r\n                            }\r\n                        }\r\n                        else if (j.CustomFieldId === e.relatedContext.element.CustomFieldId) {\r\n                            getindex = index;\r\n                        }\r\n                    })\r\n                })\r\n                if (getindex === e.draggedContext.element.ModuleIndex) {\r\n                    return true;\r\n                } else {\r\n                    return false;\r\n                }\r\n            }\r\n            else {\r\n                return false;\r\n            } \r\n        },\r\n        onDragEnd: function (e, x) {\r\n            if (e.item.id == 'StopDragfield') {\r\n                return true;\r\n            }\r\n            else {\r\n                e.preventDefault();\r\n                return false;\r\n            }\r\n        },\r\n        ColumnListDisplayOrder: function (e) {\r\n            var vm = this;\r\n            if(!vm.showModuleListForFilter){\r\n                $(\".setting-div-box\").width('0px');\r\n                vm.Columnlist.forEach((Colitem, Colindex) => {\r\n                    Colitem.Display_Order = Colindex + 1;\r\n                })\r\n            }else{\r\n                vm.dragover();\r\n                vm.ClosePopFilter();\r\n            }\r\n        },\r\n        GetDraggedItem(event, index, MainFieldname) {\r\n            var vm = this;\r\n            if (event.removed != undefined) {\r\n                if (MainFieldname != undefined) {\r\n                    let GetAddedFieldFromDrag = vm.Columnlist.findIndex(AddedField => AddedField.CustomFieldId === event.removed.element.CustomFieldId);\r\n                    let GetAddedFieldFromModuleListing = vm.modulelisting[index].findIndex(ModuleListField => ModuleListField.CustomFieldId === event.removed.element.CustomFieldId);\r\n                    if (GetAddedFieldFromModuleListing != -1) {\r\n                        vm.modulelisting[index].splice(vm.modulelisting[index].indexOf(event.removed.element), 1);\r\n                    }\r\n                    if (GetAddedFieldFromDrag != -1) {\r\n                        vm.Columnlist.splice(GetAddedFieldFromDrag, 1);\r\n                        vm.Addfields(event.removed.element, event, index, MainFieldname);\r\n                    }\r\n                } else {\r\n                    let GetAddedFieldFromDrag = vm.Filterlist.findIndex(AddedField => AddedField.CustomFieldId === event.removed.element.CustomFieldId);\r\n                    let GetAddedFieldFromModuleListing = vm.modulelistingforfilter[index].findIndex(ModuleListField => ModuleListField.CustomFieldId === event.removed.element.CustomFieldId);\r\n                    if (GetAddedFieldFromModuleListing != -1) {\r\n                        vm.modulelistingforfilter[index].splice(vm.modulelistingforfilter[index].indexOf(event.removed.element), 1);\r\n                    }\r\n                    if (GetAddedFieldFromDrag != -1) {\r\n                        vm.Filterlist.splice(GetAddedFieldFromDrag, 1);\r\n                        vm.AddFilter(event.removed.element, index);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        MatchIfSameNameExist() {\r\n            var vm = this;\r\n            for (let i = 0; i < vm.Columnlist.length; i++) {\r\n                for (let j = 0; j < i; j++) {\r\n                    if (vm.Columnlist[i].CustomFieldId != vm.Columnlist[j].CustomFieldId && (vm.$t(vm.Columnlist[i].DisplayName) == vm.$t(vm.Columnlist[j].DisplayName)\r\n                    || vm.$t(vm.Columnlist[i].DisplayName).toLowerCase() == vm.$t(vm.Columnlist[j].DisplayName).toLowerCase())) {\r\n                        return vm.$t(vm.Columnlist[i].DisplayName);\r\n                    }\r\n                }\r\n            }\r\n            return false;\r\n        },\r\n        filterRulechange() {\r\n            var vm = this;\r\n            vm.filtertype = '';\r\n            if (vm.category == 'Match All Value') {\r\n                vm.Filterlist.forEach(Fitem => {\r\n                    Fitem.FilterTypeAndorOr = 'AND'\r\n                })\r\n                if (vm.RequestFilterJosn.length > 0) {\r\n                    vm.RequestFilterJosn.forEach(RFitem => {\r\n                        RFitem.FilterTypeAndorOr = 'AND'\r\n                    })\r\n                }\r\n                vm.filtertype = 'AND'\r\n            }\r\n            else {\r\n                vm.Filterlist.forEach(Fitem => {\r\n                    Fitem.FilterTypeAndorOr = 'OR'\r\n                })\r\n                if (vm.RequestFilterJosn.length > 0) {\r\n                    vm.RequestFilterJosn.forEach(RFitem => {\r\n                        RFitem.FilterTypeAndorOr = 'OR'\r\n                    })\r\n                }\r\n                vm.filtertype = 'OR'\r\n            }\r\n        },\r\n        CheckForValidSorting(sortColummnarray) {\r\n            var vm = this;\r\n            var count = 0;\r\n            sortColummnarray.forEach(sortitem => {\r\n                if (sortitem.sortcolummnId != '' && sortitem.columnOrders == '' || sortitem.sortcolummnId == '' && sortitem.columnOrders != '' || sortitem.sortcolummnId == undefined || sortitem.columnOrders == undefined) {\r\n                    count = 1;\r\n                }\r\n            })\r\n            return count;\r\n        },\r\n        PreventValues(event) {\r\n            var vm = this;\r\n            var ekey = event.keyCode;\r\n            if (ekey == 69 || ekey == 107 || ekey == 109) { event.preventDefault(); }\r\n        },\r\n        PreventDecimal(event) {\r\n            var ekey = event.keyCode;\r\n            if (ekey == 110 || ekey == 190) { event.preventDefault(); }\r\n        },\r\n        TruncateStr: function (str, len) {\r\n            var convertstring = '' + str;\r\n            if (convertstring != null)\r\n                if (convertstring.length <= len) return str;\r\n                else return convertstring.substring(0, len) + \"...\";\r\n        }\r\n    }\r\n}\r\n\r\n\r\n</script>\r\n<template>\r\n    <section class=\"page-action\">\r\n        <div class=\"left-menu-tab datareport\">\r\n            <div :class=\"maindiv\">\r\n                <loader :isVisible=\"isLoading\"></loader>\r\n                <div class=\"accordion md-accordion left-filter\" id=\"accordionEx\" role=\"tablist\" aria-multiselectable=\"true\">\r\n                    <div :class=\"editclass\">\r\n                        <div class=\"card-header filter-head p-0\" role=\"tab\" id=\"headingOne1\">\r\n                            <h5 class=\"mb-0 px-2\">{{ ReportName }}\r\n                                <span class=\"expand_all_filters\">\r\n                                    <span id=\"SearchData\"><a :title=\"$t('EditReportName')\" v-on:click=\"editreport()\"\r\n                                            data-toggle-tooltip=\"tooltip\" class=\"collapsed\"> <em aria-hidden=\"true\"\r\n                                                class=\"fa fa-pencil\" style=\"font-size:20px;\"></em></a></span>\r\n                                    <span>\r\n                                        <a title=\"Collapse\" v-on:click=\"collapsedclick()\" data-toggle-tooltip=\"tooltip\"\r\n                                            class=\"collapsed\"><em aria-hidden=\"true\"\r\n                                                class=\"fa fa-angle-double-left mt-1\"></em>\r\n                                        </a>\r\n                                    </span>\r\n                                </span>\r\n                            </h5>\r\n                        </div>\r\n                    </div>\r\n                    <div :class=\"saveclass\">\r\n                        <div class=\"card-header filter-head p-0\" role=\"tab\" id=\"headingOne1\">\r\n                            <h5 class=\"mb-0 pl-2 mt-1\"><input type=\"text\" style=\"width:83%\" class=\"form-control p-1\"\r\n                                    v-model=\"savereportname\" />\r\n                                <span class=\"expand_all_filters\">\r\n                                    <span id=\"SearchData\">\r\n                                        <a :title=\"$t('Save')\" v-on:click=\"savereport()\" data-toggle-tooltip=\"tooltip\"\r\n                                            class=\"collapsed\"><em aria-hidden=\"true\" class=\"fa fa-floppy-o mt-1\"></em>\r\n                                        </a>\r\n                                    </span>\r\n                                </span>\r\n                            </h5>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"card-panel\">\r\n                        <div class=\"mb-0 d-lg-block p-2 border\">\r\n                            <div class=\"input-group customsearchbox\">\r\n                                <input type=\"text\" maxlength=\"50\"  v-on:keydown=\"ListFiltering\" v-on:keyup=\"ListFiltering\" id=\"searchinput\"\r\n                                    v-model=\"MainSearchmodel\" placeholder=\"Search by Name\"\r\n                                    class=\"form-control searchcustomfilter border-right-0\" autocomplete=\"off\">\r\n                                <div class=\"input-group-append\">\r\n                                    <span class=\"input-group-text bg-transparent bg-white border-left-0\">\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"card\" style=\"border-bottom:1px solid #929292;\"\r\n                            v-for=\"(name, index) in submodulecodename\" :key=\"index\">\r\n                            <div class=\"card-header pl-0\" role=\"tab\" :id=\"'headingOnee' + index\">\r\n                                <h5 class=\"mb-0\"><a data-toggle=\"collapse\" data-parent=\"#accordionEx\"\r\n                                        href=\"javascript:;\" :aria-expanded=\"index == 0 ? true : false\" :data-target=\"'#collapseOne' + index\"\r\n                                        :aria-controls=\"'collapseOne' + index\" :class=\"index == 0 ? '' : 'collapsed'\"><em\r\n                                            class=\"fa fa fa-file-text-o\" aria-hidden=\"true\"></em><span\r\n                                            class=\"font-weight-bold\">\r\n                                            {{ GetLocalizedValue(name.SubModule) }}</span><em class=\"fa fa-angle-down rotate-icon\"\r\n                                            aria-hidden=\"true\"></em></a><a class=\"tab-Search-btn\"><em class=\"fa fa-search\"\r\n                                            aria-hidden=\"true\"></em></a>\r\n                                </h5>\r\n                            </div>\r\n                            <div\r\n                            :class=\"modulelisting.length == 0 ? 'd-none' : modulelisting[index].length == 0 && !showModuleListForFilter ||\r\n                            modulelistingforfilter[index].length == 0 && showModuleListForFilter ? 'text-center text-danger d-flex align-items-center justify-content-center norecs pt-2' : 'd-none'\"> {{\r\n                                $t(\"NoFieldAvailable\") }}</div>\r\n                            <div :id=\"'collapseOne' + index\" :class=\"index == 0 ? 'collapse multi-collapse show':'collapse multi-collapse'\" role=\"tabpanel\"\r\n                                :aria-labelledby=\"'headingOnee' + index\" data-parent=\"#accordionEx\">\r\n                                <PerfectScrollbar>\r\n                                    <div class=\"card-body p-0 customScrollForLeftBar llt\" style=\"max-height:300px;\">\r\n                                        <div class=\"form-group\">\r\n                                            <ul class=\"nav nav-pills flex-column left-tab responivecustomtab lefttabiconfix\">\r\n                                                <draggable v-model=\"modulelistingmodel\" class=\"draggable-list\"\r\n                                                    v-if=\"showModuleListForField\"\r\n                                                    :list=\"searchColumnfilter.length == 0 ? modulelisting[index] : searchColumnfilter[index]\"\r\n                                                    group=\"my-groupForFields\" @start=\"drag = true\" @end=\"onDragEnd\"\r\n                                                    @change=\"GetDraggedItem($event, index, name.SubModule)\" :move=\"checkMove\"\r\n                                                    item-key=\"CustomFieldId\">\r\n                                                    <li class=\"nav-item parent-element\"  id=\"StopDragfield\" v-for=\"(element,elementIndex) in (searchColumnfilter.length == 0 ? modulelisting[index] : searchColumnfilter[index])\" :key=\"elementIndex\">\r\n                                                        <span class=\"nav-link left-menu px-3 \">\r\n                                                            <em :class=\"element.FieldIcons != undefined ? element.FieldIcons + ' ' + 'float-left' : \r\n                                                            element.dttype[0].icon != null ? element.dttype[0].icon + ' ' + 'float-left' : 'float-left'\"\r\n                                                                aria-hidden=\"true\"></em>\r\n                                                            <span class=\"text-truncate float-left\" style=\"width: 55%;\"\r\n                                                                :data-toggle-tooltip=\"GetLocalizedValue(element.FieldName,\r\n                                                                    element.DisplayName)\"\r\n                                                                :title=\"GetLocalizedValue(element.FieldName, element.DisplayName)\">\r\n                                                                {{ GetLocalizedValue(element.FieldName, element.DisplayName)\r\n                                                                }}\r\n                                                            </span>\r\n                                                            <a href=\"javascript:;\">\r\n                                                                <em class=\"fa fa-plus float-right mt-1 text-success pr-0\"\r\n                                                                    aria-hidden=\"true\"\r\n                                                                    v-on:click=\"Addfields(element, $event, index, name.SubModule)\">\r\n                                                                </em>\r\n                                                            </a>\r\n                                                        </span>\r\n                                                    </li>\r\n                                                    <!-- <template #item=\"{ element }\">\r\n                                                        <li class=\"nav-item parent-element\" id=\"StopDragfield\">\r\n                                                            <span class=\"nav-link left-menu px-3 \">\r\n                                                                <em :class=\"element.FieldIcons != undefined ? element.FieldIcons + ' ' + 'float-left' : element.dttype[0].icon + ' ' + 'float-left'\"\r\n                                                                    aria-hidden=\"true\"></em>\r\n                                                                <span class=\"text-truncate float-left\" style=\"width: 55%;\"\r\n                                                                    :data-toggle-tooltip=\"GetLocalizedValue(element.FieldName,\r\n                                                                        element.DisplayName)\"\r\n                                                                    :title=\"GetLocalizedValue(element.FieldName, element.DisplayName)\">\r\n                                                                    {{ GetLocalizedValue(element.FieldName, element.DisplayName)\r\n                                                                    }}\r\n                                                                </span>\r\n                                                                <a href=\"#\">\r\n                                                                    <em class=\"fa fa-plus float-right mt-1 text-success pr-0\"\r\n                                                                        aria-hidden=\"true\"\r\n                                                                        v-on:click=\"Addfields(element, $event, index, name.SubModule)\">\r\n                                                                    </em>\r\n                                                                </a>\r\n                                                            </span>\r\n                                                        </li>\r\n                                                    </template> -->\r\n                                                </draggable>\r\n\r\n                                                <!-- Module List for Filter -->\r\n                                                <draggable v-model=\"modulelistingmodel\" class=\"draggable-list\"\r\n                                                    v-if=\"showModuleListForFilter\"\r\n                                                    :list=\"searchColumnfilter.length == 0 ? modulelistingforfilter[index] : searchColumnfilter[index]\"\r\n                                                    group=\"my-groupForFilter\" @start=\"drag = true\" @end=\"onDragEnd\"\r\n                                                    :move=\"checkMove\" item-key=\"CustomFieldId\"\r\n                                                    @change=\"GetDraggedItem($event, index)\">\r\n                                                    <!-- <template #item=\"{ element }\"> -->\r\n                                                        <li class=\"nav-item parent-element\" id=\"StopDragfield\" v-for=\"(element,elemIndex) in searchColumnfilter.length == 0 ? modulelistingforfilter[index] : searchColumnfilter[index]\" :key=\"elemIndex\">\r\n                                                            <span class=\"nav-link left-menu px-3 \">\r\n                                                                <em :class=\"element.FieldIcons != undefined ? element.FieldIcons + ' ' + 'float-left' : \r\n                                                                element.dttype[0].icon != null ? element.dttype[0].icon + ' ' + 'float-left' : 'float-left'\"\r\n                                                                    aria-hidden=\"true\">\r\n                                                                </em>\r\n                                                                <span class=\"text-truncate float-left\" style=\"width: 55%;\"\r\n                                                                    :data-toggle-tooltip=\"element.FieldName\"\r\n                                                                    :title=\"GetLocalizedValue(element.FieldName, element.DisplayName)\">\r\n                                                                    {{\r\n                                                                        GetLocalizedValue(element.FieldName,\r\n                                                                            element.DisplayName)\r\n                                                                    }}\r\n                                                                </span>\r\n                                                                <a href=\"javascript:;\">\r\n                                                                    <em class=\"fa fa-sliders float-right mt-1 text-primary pr-0\"\r\n                                                                        aria-hidden=\"true\" v-on:click=\"AddFilter(element, index)\">\r\n                                                                    </em>\r\n                                                                </a>\r\n                                                            </span>\r\n                                                        </li>\r\n                                                    <!-- </template> -->\r\n                                                </draggable>\r\n                                            </ul>\r\n                                        </div>\r\n                                    </div>\r\n                                </PerfectScrollbar>\r\n                            </div>\r\n                        </div>\r\n                        <div v-if=\"SearchNoRecord\"\r\n                            class=\"text-center text-danger d-flex align-items-center justify-content-center norecs pt-2\"> {{\r\n                                $t(\"NoRecordfound\") }}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div :class=\"showdiv\" v-on:click=\"expandclick()\" style=\"float: left;width: 50px;\">\r\n                <span class=\"expand_all_filters\" style=\"position:absolute;left:0;\">\r\n                    <span>\r\n                        <a title=\"Expand\" data-toggle-tooltip=\"tooltip\" class=\"collapsed\">\r\n                            <em aria-hidden=\"true\" class=\"fa fa-angle-double-right mt-1\">\r\n                            </em>\r\n                        </a>\r\n                    </span>\r\n                </span>\r\n            </div>\r\n            <div :class=\"fieldpan\">\r\n                <div class=\"tab-style w-100\">\r\n                    <div class=\"tab_container\" role=\"tabpanel\">\r\n                        <div class=\"tab-content\">\r\n                            <b-tabs pills>\r\n                                <b-tab title=\"FIELDS\" class=\"fields\" :active=\"showModuleListForField\" ref=\"FIELDS\"\r\n                                    v-on:click=\"FieldTabClicked\">\r\n                                    <div class=\"col-12 p-0 float-left\">\r\n                                        <h6 class=\"mb-1\">{{ $t('Groups') }}</h6>\r\n                                        <input placeholder=\"Add Group\"\r\n                                        :class=\"disableGrouping == true ? 'form-control' : 'form-control disabled'\" v-on:keypress=\"GroupSearching\"\r\n                                            v-model=\"Groupsearchmodel\" />\r\n                                        <div v-if=\"Groupsearchmodel != ''\" v-bind:class=\"itemclass\" class=\"autosuggestion\">\r\n                                            <div v-for=\"(item, i) in filtergroup\" :key=\"i\">\r\n                                                <div>\r\n                                                    <div v-on:click=\"selectfiltervalue(item)\">\r\n                                                        {{ GetLocalizedValue(item.FieldName, item.DisplayName) }} : {{\r\n                                                            item.MainFieldname }}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div v-if=\"filtergroup.length == 0\"\r\n                                                class=\"text-center text-danger d-flex align-items-center justify-content-center norecs pt-2\">\r\n                                                {{ $t(\"NoRecordfound\") }}\r\n                                            </div>\r\n                                        </div>\r\n                                        <br />\r\n                                        <draggable v-model=\"Grouplist\" class=\"draggable-list \" :list=\"Grouplist\"\r\n                                             group=\"my-groupGrouplist\" @start=\"drag = true\"\r\n                                             @end=\"drag = false\" item-key=\"CustomFieldId\">\r\n                                            <!-- <template #item=\"{ element }\" > -->\r\n                                                <div class=\"list-item\" v-for=\"(element,index) in Grouplist\" :key=\"index\">\r\n                                                    <span class=\"text-truncate float-left\"\r\n                                                        :data-toggle-tooltip=\"element.FieldName\" :title=\"element.FieldName\"\r\n                                                        style=\"width:200px;\">\r\n                                                        {{ GetLocalizedValue(element.FieldName, element.DisplayName) }}\r\n                                                    </span>\r\n                                                    <a><em class=\"fa fa-trash-o text-danger\" aria-hidden=\"true\"\r\n                                                            v-on:click=\"DeleteGroupFields(element, $event, index)\">\r\n                                                        </em>\r\n                                                    </a>\r\n                                                </div>\r\n                                            <!-- </template> -->\r\n                                        </draggable>\r\n                                    </div>\r\n                                    <hr />\r\n                                    <div class=\"col-12 p-0 float-left\">\r\n                                        <h6 class=\"mb-1\">{{ $t('COLUMNS') }}</h6>\r\n                                        <div class=\"verticle-action\" style=\"top:-3px;\">\r\n                                            <em id=\"btnpopup\"\r\n                                                :class=\"CalculatedUIEnabled == true ? 'fa fa-ellipsis-v action_icon' : 'fa fa-ellipsis-v action_icon disabled'\"\r\n                                                v-on:click=\"openActionIcon($event)\" aria-hidden=\"true\"></em>\r\n                                            <span class=\"action-list-box\" style=\"width: 240px; display:block;\" v-if=\"showRowLevelFunction\">\r\n                                                <span class=\"list-actions fsm-list\" id=\"action-list\" style=\"padding-left:0\">\r\n                                                    <a class=\"update actions-onclick\" v-on:click=\"OpenCalculatedUI\"><span\r\n                                                            class=\"text\">{{\r\n                                                                $t('CalcultedUIName') }}</span></a>\r\n                                                    <em class=\"fa fa-times close close-action\"\r\n                                                        v-on:click=\"closeActionIcon($event)\" aria-hidden=\"true\"></em>\r\n                                                </span>\r\n                                            </span>\r\n                                        </div>\r\n                                        <input placeholder=\"Add Column\" class=\"form-control\" v-on:keypress=\"GroupSearching\"\r\n                                            v-model=\"ColumnSearchmodel\" />\r\n                                        <div v-if=\"ColumnSearchmodel != ''\" v-bind:class=\"itemclass\" class=\"autosuggestion\"\r\n                                            style=\"z-index: 9999;\">\r\n                                            <div v-for=\"(item,indx) in filterColumngroup\" :key=\"indx\">\r\n                                                <div>\r\n                                                    <div v-on:click=\"selectfilterColumnvalue(item)\">\r\n                                                        {{ GetLocalizedValue(item.FieldName, item.DisplayName) }} : {{\r\n                                                            item.MainFieldname }}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div v-if=\"filterColumngroup.length == 0\"\r\n                                                class=\"text-center text-danger d-flex align-items-center justify-content-center norecs pt-2\">\r\n                                                {{ $t(\"NoRecordfound\") }}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"dashed_bod_drag text-center mt-2\">\r\n                                            <h6 class=\"p-2 m-0\">Drag Fields Here </h6>\r\n                                            <draggable v-model=\"Columnlist\" class=\"draggable-list\" :list=\"Columnlist\"\r\n                                                group=\"my-groupForFields\" @start=\"drag = true\" @end=\"ColumnListDisplayOrder\"\r\n                                                id=\"TargetDivID\" :move=\"checkMove\" item-key=\"CustomFieldId\">\r\n                                                    <div class=\"list-item parent-element\" id=\"TargetDivID\" v-for=\"(element,indx) in Columnlist\" :key=\"indx\">\r\n                                                        <span v-if=\"element.Calculated_Field == true\"\r\n                                                            style=\"font-size: 22px;float:left; margin-right: 10px;\">f<sub\r\n                                                                style=\"font-size: 12px;\">x</sub></span><span\r\n                                                            class=\"text-truncate float-left\"\r\n                                                            :data-toggle-tooltip=\"element.FieldName\"\r\n                                                            :title=\"GetLocalizedValue(element.FieldName, element.DisplayName)\"\r\n                                                            style=\"width:200px;\">\r\n                                                            {{ GetLocalizedValue(element.FieldName, element.DisplayName)\r\n                                                            }} {{ element.ExpresssionFieldName }}\r\n                                                        </span>\r\n                                                        <a aria-hidden=\"true\"\r\n                                                            v-on:click=\"DeleteColumnFields(element, $event)\"><em\r\n                                                                class=\"fa fa-trash-o text-danger\"></em></a>\r\n                                                        <div class=\"parentdiv datarepfix\">\r\n                                                            <a aria-hidden=\"true\" v-on:click=\"openSetting(element, $event)\"><em\r\n                                                                    class=\"fa fa-cog action_icon_cv\"></em></a>\r\n                                                            <div>\r\n                                                                <div class=\"verticle-action rt25\">\r\n                                                                    <span class=\"action-list-box small setting-div-box\">\r\n                                                                        <span id=\"action-list\"\r\n                                                                            class=\"list-actions text-left p-0 datarep ml-3\"\r\n                                                                            style=\"width:480px;\">\r\n                                                                            <div class=\"float-left col-12 p-0\">\r\n                                                                                <div class=\"container-fluid p-0 mb-3\">\r\n                                                                                    <div class=\"row\">\r\n                                                                                        <div class=\"col-md-12\">\r\n                                                                                            <div\r\n                                                                                                class=\"theme-primary partition-full\">\r\n                                                                                                <span\r\n                                                                                                    class=\"p-name text-white mt-2\">\r\n                                                                                                    {{ $t('Setting') }}\r\n                                                                                                </span>\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                                <div class=\"col-12 float-left\">\r\n                                                                                    <div class=\"col-12 p-0 float-left\">\r\n                                                                                        <div class=\"form-group\">\r\n                                                                                            <label>{{\r\n                                                                                                $t('DisplayName')\r\n                                                                                            }}</label>\r\n                                                                                            <input class=\"form-control\"\r\n                                                                                                v-model=\"modeldisplayname\"\r\n                                                                                                maxlength=\"20\" @paste.prevent\r\n                                                                                                v-on:keydown=\"PreventDecimal($event)\"/>\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                    <div class=\"col-12 p-0 float-left\">\r\n                                                                                        <div\r\n                                                                                            :class=\"element.ColumnFieldDataCode == 'date' ? '' : 'form-group d-none'\">\r\n                                                                                            <label>{{\r\n                                                                                                $t('DateFormat')\r\n                                                                                            }}:</label>\r\n                                                                                            <select\r\n                                                                                                class=\"form-control textnormal\"\r\n                                                                                                v-model=\"modeldateformat\">\r\n                                                                                                <option value=\"\" disabled>\r\n                                                                                                    Select\r\n                                                                                                </option>\r\n                                                                                                <option v-for=\"(dateformat,dateIndex) in GetDateFromDB\" :key=\"dateIndex\">\r\n                                                                                                    {{GetLocalizedValue(dateformat.dateFormat) }}\r\n                                                                                                </option>\r\n                                                                                            </select>\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                    <div class=\"col-12 p-0 float-left\">\r\n                                                                                        <div\r\n                                                                                            :class=\"element.ColumnFieldDataCode == 'decimal' ? '' : 'form-group d-none'\">\r\n                                                                                            <label>{{\r\n                                                                                                $t('DecimalPlaces')\r\n                                                                                            }}</label>\r\n                                                                                            <input type=\"number\"\r\n                                                                                                class=\"form-control\"\r\n                                                                                                v-model=\"modeldecimalplaces\" />\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                    <div class=\"col-12 p-0 float-left\"\r\n                                                                                        style=\"margin-top: 10px;\">\r\n                                                                                        <div\r\n                                                                                            :class=\"element.ColumnFieldDataCode == 'decimal' ? '' : 'form-group d-none'\">\r\n                                                                                            <input type=\"checkbox\"\r\n                                                                                                v-model=\"modeluseseparator\"\r\n                                                                                                id=\"useseparator\" />&nbsp;\r\n                                                                                            <label for=\"User\">{{\r\n                                                                                                $t('UseSeparator')\r\n                                                                                            }}</label><br>\r\n                                                                                            <input type=\"checkbox\"\r\n                                                                                                v-model=\"modelusecurrency\" />\r\n                                                                                            <label style=\"padding: 6px;\"\r\n                                                                                                for=\"Role\">{{\r\n                                                                                                    $t('UseCurrency')\r\n                                                                                                }}</label>\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                    <div class=\"col-12 p-0 float-left mb-3\">\r\n                                                                                        <div class=\"row flex-row-reverse\">\r\n                                                                                            <div\r\n                                                                                                class=\"col-lg-6 text-right\">\r\n                                                                                                <a class=\"btn btn-success ancsaveuserticket text-white\"\r\n                                                                                                    id=\"btnSaveTicket\"\r\n                                                                                                    title=\"\"\r\n                                                                                                    data-toggle-tooltip=\"tooltip\"\r\n                                                                                                    data-original-title=\"Click here to submit ticket\"\r\n                                                                                                    v-on:click=\"SaveSelectedData(element, $event)\">\r\n                                                                                                    <span\r\n                                                                                                        class=\"fa fa-floppy-o\"></span>\r\n                                                                                                    {{ $t('Save') }}\r\n                                                                                                </a>\r\n                                                                                            </div>\r\n\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                            <em aria-hidden=\"true\"\r\n                                                                                class=\"fa fa-times close close-action_cv\"\r\n                                                                                v-on:click=\"CloseSetting($event)\"></em>\r\n                                                                            <div class=\"va_rt25\"><em\r\n                                                                                    class=\"icon-solid arrow-solid-left text-dark\"\r\n                                                                                    style=\"font-size: 20pt;\"></em>\r\n                                                                            </div>\r\n                                                                        </span>\r\n                                                                    </span>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div class=\"float-left text-left w-100 font-12\">{{\r\n                                                            element.MainFieldname }}</div>\r\n                                                    </div>\r\n                                                \r\n                                            </draggable>\r\n                                        </div>\r\n                                    </div>\r\n                                </b-tab>\r\n                                <b-tab title=\"Filters\" :active=\"showModuleListForFilter\" ref=\"Filters\"\r\n                                    v-on:click=\"FilterTabClicked\">\r\n                                    <div class=\"col-12 p-0 float-left\">\r\n                                        <h6>include data if it matches</h6>\r\n                                        <select class=\"form-control\" name=\"template\" v-model=\"category\"\r\n                                            v-on:change=\"filterRulechange\">\r\n                                            <option v-for=\"(template,tempIndex) in templates\" :key=\"tempIndex\"\r\n                                                :selected=\"template == category ? 'selected' : ''\" :value=\"template\">\r\n                                                {{ template }}\r\n                                            </option>\r\n                                        </select>\r\n                                        <h6 class=\"mt-3\">Filter rules</h6>\r\n                                        <div class=\"form-control\">\r\n                                            <span ml-1 v-if=\"category == 'Match All Value'\" v-for=\"(item,itmIndex) in Filterlist\" :key=\"itmIndex\">\r\n                                                {{ (Filterlist.indexOf(item) + 1) }}\r\n                                                <span v-if=\"Filterlist.length > (Filterlist.indexOf(item) + 1)\"\r\n                                                    style=\"margin-right:3px;\"> {{ filtertype }}</span>\r\n                                            </span>\r\n                                            <span v-if=\"category != 'Match All Value'\" v-for=\"(item,itemIndex) in Filterlist\" :key=\"itemIndex\">\r\n                                                {{ (Filterlist.indexOf(item) + 1) }}\r\n                                                <span v-if=\"Filterlist.length > (Filterlist.indexOf(item) + 1)\"\r\n                                                    style=\"margin-right:3px;\">{{ filtertype }}</span>\r\n                                            </span>\r\n                                        </div>\r\n                                        <draggable v-model=\"Filterlist\" class=\"draggable-list\" :list=\"Filterlist\"\r\n                                            group=\"my-groupForFilter\" @start=\"drag = true\"  @end=\"ColumnListDisplayOrder\"\r\n                                            @dragenter=\"dragover($event)\" @dragleave=\"dragover($event)\"\r\n                                            @drop=\"dragover($event)\" :move=\"checkMove\" item-key=\"CustomFieldId\" id=\"TargetDivID\">\r\n                                            <!-- <template #item=\"{ element }\"> -->\r\n                                                <div class=\"list-item row filter-div\" @dragover=\"dragover($event)\"\r\n                                                    id=\"TargetDivID\" v-for=\"(element,eleIndex) in Filterlist\" :key=\"eleIndex\">\r\n                                                    <div class=\"counter_num px-1 py-2 filter-count-div\">\r\n                                                        {{ (Filterlist.indexOf(element) + 1) }}\r\n                                                    </div>\r\n                                                    <div style=\"width:77%;\">\r\n                                                        <div class=\"px-1 py-0 width120 text-truncate float-left font-14\">\r\n                                                            <span v-if=\"element.Calculated_Field == true\"\r\n                                                                style=\"font-size: 22px;float:left; margin-right: 10px;\">f<sub\r\n                                                                    style=\"font-size: 12px;\">x</sub></span><span\r\n                                                                class=\"text-truncate float-left\"\r\n                                                                :data-toggle-tooltip=\"element.FieldName\"\r\n                                                                :title=\"GetLocalizedValue(element.FieldName, element.DisplayName)\"\r\n                                                                style=\"width:110px;\">\r\n                                                                {{ GetLocalizedValue(element.FieldName, element.DisplayName)\r\n                                                                }}{{ element.ExpresssionFieldName }}\r\n                                                            </span>\r\n                                                        </div>\r\n                                                        <div\r\n                                                            class=\"px-1 py-0 text-primary width80 text-truncate float-left font-14\">\r\n                                                            {{ element.OperatorDisplayName }}\r\n                                                        </div>\r\n                                                        <div class=\"px-1 py-0 hh text-truncate float-left font-12 w-100\">\r\n                                                            {{ element.valueTypeText }}\r\n                                                            {{ element.valueTypeNumber }} \r\n                                                            {{ element.valueTypeNumber2 }}\r\n                                                            {{ $options.filters.formatDate(element.valueTypeFirstdate) }} \r\n                                                            {{ $options.filters.formatDate(element.valueTypeSeconddate) }}\r\n                                                            {{ element.ValueDisplayFirstTime }} \r\n                                                            {{ element.ValueDisplaySecondTime }}\r\n                                                            {{ element.Displaymultiplevalue }}\r\n                                                            {{ element.DropDownValue }}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"parentdiv datarepfix filters\">\r\n                                                        <a aria-hidden=\"true\"\r\n                                                            v-on:click=\"DeleteFilterFields(element, $event)\"><em\r\n                                                                :class=\"!element.IsMandatoryforFilter ? 'fa fa-trash-o text-danger' : 'fa fa-trash-o text-danger d-none'\"></em></a>\r\n                                                        <a aria-hidden=\"true\" v-on:click=\"openrulespop(element, $event)\"><em\r\n                                                                class=\"fa fa-cog action_icon_cv\"></em></a>\r\n                                                        <div>\r\n                                                            <div class=\"verticle-action rt25 rt502\">\r\n                                                                <span class=\"action-list-box small filter-list-box\">\r\n                                                                    <span id=\"action-list\"\r\n                                                                        class=\"list-actions text-left p-0 datarep ml-3\"\r\n                                                                        style=\"width:480px;\">\r\n                                                                        <div class=\"float-left col-12 p-0\">\r\n                                                                            <div class=\"container-fluid p-0 mb-3\">\r\n                                                                                <div class=\"row\">\r\n                                                                                    <div class=\"col-md-12\">\r\n                                                                                        <div\r\n                                                                                            class=\"theme-primary partition-full\">\r\n                                                                                            <span\r\n                                                                                                class=\"p-name text-white mt-2\">\r\n                                                                                                {{ $t('Setting') }}\r\n                                                                                            </span>\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                            <div class=\"col-12 float-left\">\r\n                                                                                <div class=\"col-12 p-0 float-left\">\r\n                                                                                    <div class=\"form-group\"\r\n                                                                                        v-for=\"(item,itmInx) in GetOperator\" :key=\"itmInx\">\r\n                                                                                        <input type=\"radio\" class=\"radio\"\r\n                                                                                            v-model=\"element.selectedOPValue\"\r\n                                                                                            :name=\"'radiobtn' + (Filterlist.indexOf(element) + 1)\"\r\n                                                                                            :value=\"item.OPERATOR_ID\"\r\n                                                                                            v-on:click=\"checkvalue(item.OPERATOR_DISPLAY_NAME, element, item.OPERATOR_EXPRESSION, item.OPERATOR_ID, item.MP[0].OPERATION_DATA_TYPE)\">\r\n                                                                                        <label class=\"ml-2\">\r\n                                                                                            {{\r\n                                                                                                item.OPERATOR_DISPLAY_NAME\r\n                                                                                            }}\r\n                                                                                        </label>\r\n                                                                                        <br />\r\n                                                                                    </div>\r\n                                                                                    <input type=\"text\" id=\"inpttxt\"\r\n                                                                                        class=\"form-control\"\r\n                                                                                        v-model=\"ValueDisplaytext\"\r\n                                                                                        v-if=\"texttypevalue1\" />\r\n                                                                                    <input type=\"text\" id=\"inpttxt2\"\r\n                                                                                        class=\"form-control\"\r\n                                                                                        v-model=\"ValueDisplaytext2\"\r\n                                                                                        v-if=\"texttypevalue2\" />\r\n                                                                                    <input type=\"number\" id=\"inpttxtbtw\"\r\n                                                                                        :class=\"{'form-control':true,'is-invalid':ValueDisplaynumber.length > 15}\"\r\n                                                                                        v-if=\"numbertypevalue1\"\r\n                                                                                        v-model=\"ValueDisplaynumber\"\r\n                                                                                        onKeyPress=\"if(this.value.length==16) return false;\"\r\n                                                                                        v-on:keydown=\"PreventValues($event)\" />\r\n                                                                                    <br> \r\n                                                                                    <input type=\"number\" id=\"inpttxtbtw\"\r\n                                                                                        :class=\"{ 'form-control': true, 'is-invalid': ((parseFloat(ValueDisplaynumber2) < parseFloat(ValueDisplaynumber) || \r\n                                                                                        parseFloat(ValueDisplaynumber2) == parseFloat(ValueDisplaynumber) || ValueDisplaynumber2.length > 15) && (ValueDisplaynumber2 != '' || ValueDisplaynumber2 == '0')) }\"\r\n                                                                                        v-if=\"numbertypevalue2\"\r\n                                                                                        v-model=\"ValueDisplaynumber2\"\r\n                                                                                        onKeyPress=\"if(this.value.length==16) return false;\"\r\n                                                                                        v-on:keydown=\"PreventValues($event)\" />\r\n                                                                                    <span\r\n                                                                                        v-if=\"((parseFloat(ValueDisplaynumber2) < parseFloat(ValueDisplaynumber) || \r\n                                                                                        parseFloat(ValueDisplaynumber2) == parseFloat(ValueDisplaynumber)) && (ValueDisplaynumber2 != '' || ValueDisplaynumber2 == '0'))\"\r\n                                                                                        class=\"invalid-feedback\">Second\r\n                                                                                        value should be greater than first\r\n                                                                                        value.</span>\r\n                                                                                    <span :class=\"ValueDisplaynumber.length > 15 || ValueDisplaynumber2.length > 15 ? 'invalid-feedback':'d-none'\">Can not add more than 15 digits</span>\r\n                                                                                    <input type=\"date\" id=\"inpttxtdate1\"\r\n                                                                                        class=\"form-control\"\r\n                                                                                        v-if=\"datetypevalue1\"\r\n                                                                                        v-model=\"ValueDisplaydate\"\r\n                                                                                        max=\"9999-12-31\" />\r\n                                                                                    <input type=\"date\" id=\"inpttxtdate2\"\r\n                                                                                        :class=\"{ 'form-control': true, 'disabled': ValueDisplaydate == '','is-invalid': ((Date.parse(ValueDisplaydate2) < Date.parse(ValueDisplaydate) \r\n                                                                                        || Date.parse(ValueDisplaydate2) == Date.parse(ValueDisplaydate)) && ValueDisplaydate2 != '') }\"\r\n                                                                                        v-if=\"datetypevalue2\"\r\n                                                                                        v-model=\"ValueDisplaydate2\"\r\n                                                                                        :min=\"ValueDisplaydate\"\r\n                                                                                        max=\"9999-12-31\" />\r\n                                                                                    <span v-if=\"((Date.parse(ValueDisplaydate2) < Date.parse(ValueDisplaydate) \r\n                                                                                        || Date.parse(ValueDisplaydate2) == Date.parse(ValueDisplaydate)) && ValueDisplaydate2 != '')\" class=\"invalid-feedback\">Second\r\n                                                                                        value should be greater than first\r\n                                                                                        value.</span>\r\n                                                                                    <input type=\"time\" id=\"inpttxttime1\"\r\n                                                                                        class=\"form-control\"\r\n                                                                                        v-if=\"timetypevalue\"\r\n                                                                                        v-model=\"ValueDisplayTime\" />\r\n                                                                                    <input type=\"time\" id=\"inpttxttime2\"\r\n                                                                                        :class=\"{ 'form-control': true, 'disabled': ValueDisplayTime == '' }\"\r\n                                                                                        v-if=\"timetypevalue2\"\r\n                                                                                        :min=\"ValueDisplayTime\"\r\n                                                                                        v-model=\"ValueDisplayTime2\" />\r\n\r\n                                                                                    <select class=\"form-control\"\r\n                                                                                        v-model=\"modelFilterDDLValue\"\r\n                                                                                        v-if=\"DDLForFilter\">\r\n                                                                                        <option disabled>Select </option>\r\n                                                                                        <option v-for=\"DDLitem in options\"\r\n                                                                                            :key=\"DDLitem.value\"\r\n                                                                                            :value=\"DDLitem.value\"\r\n                                                                                            :title=\"DDLitem.name\">\r\n                                                                                            {{ TruncateStr(DDLitem.name,\r\n                                                                                                50)\r\n                                                                                            }}</option>\r\n                                                                                    </select>\r\n                                                                                    <div v-if=\"multiselectvalue\">\r\n                                                                                        <dynamic-form lang=\"en\" :buttons=\"false\" :schema=\"FormSchema\" ></dynamic-form>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                                <div\r\n                                                                                    class=\"col-12 p-0 float-left mb-3 mt-3\">\r\n                                                                                    <div class=\"row flex-row-reverse\">\r\n                                                                                        <div class=\"col-lg-6 text-right\">\r\n                                                                                            <a :class=\"{ 'btn btn-primary ancsaveuserticket text-white': true, 'disabled': (parseFloat(ValueDisplaynumber2) < parseFloat(ValueDisplaynumber) \r\n                                                                                                || parseFloat(ValueDisplaynumber2) == parseFloat(ValueDisplaynumber) || ValueDisplaynumber.length > 15 || ValueDisplaynumber2.length > 15 && numbertypevalue2)\r\n                                                                                                || (Date.parse(ValueDisplaydate2) < Date.parse(ValueDisplaydate) || Date.parse(ValueDisplaydate2) == Date.parse(ValueDisplaydate) && datetypevalue2) }\"\r\n                                                                                                id=\"btnSaveTicket\" title=\"\"\r\n                                                                                                data-toggle-tooltip=\"tooltip\"\r\n                                                                                                v-on:click=\"applySetting(element.CustomFieldId)\"\r\n                                                                                                data-original-title=\"Click here to submit ticket\"><em\r\n                                                                                                    :class=\"{ 'fa fa-save text-white': true, 'disabled': (parseFloat(ValueDisplaynumber2) < parseFloat(ValueDisplaynumber) \r\n                                                                                                    || parseFloat(ValueDisplaynumber2) == parseFloat(ValueDisplaynumber) || ValueDisplaynumber.length > 15 || ValueDisplaynumber2.length > 15 && numbertypevalue2) \r\n                                                                                                    || (Date.parse(ValueDisplaydate2) < Date.parse(ValueDisplaydate) || Date.parse(ValueDisplaydate2) == Date.parse(ValueDisplaydate) && datetypevalue2)}\"></em>Apply</a>\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                        <em aria-hidden=\"true\"\r\n                                                                            class=\"fa fa-times close close-action_cv\"\r\n                                                                            v-on:click=\"ClosePopFilter()\"></em>\r\n                                                                        <div class=\"va_rt25\"><em\r\n                                                                                class=\"icon-solid arrow-solid-left text-dark\"\r\n                                                                                style=\"font-size: 20pt;\"></em></div>\r\n                                                                    </span>\r\n                                                                </span>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            <!-- </template> -->\r\n                                        </draggable>\r\n                                    </div>\r\n                                    <hr />\r\n                                </b-tab>\r\n                            </b-tabs>\r\n                            <div role=\"tabpanel\" id=\"tab-em-groups\" class=\"tab-pane\">\r\n                                <div class=\"col-sm-12 col-md-12 col-lg-12 col-xl-12 p-0\">\r\n                                    <div class=\"listing\">\r\n                                        <div class=\"table-responsive\"></div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <ReportPreview v-if=\"showReportPreview\" :previewdata=\"previewdata\" :customreportparameters=\"customreportparameters\"\r\n            :Columnlist=\"Columnlist\" :Grouplist=\"Grouplist\" ref=\"reportdata\" :saveJsonReport=\"saveJsonReport\"\r\n            :PdfJsonReport=\"PdfJsonReport\" :editjsondata=\"editjsondata\" :ReportName=\"ReportName\" :GraphData=\"graphData\"\r\n            :SortingData=\"sortingData\" :GraphJson=\"GraphJson\" :LevelOfGrouping=\"LevelOfGrouping\" >\r\n        </ReportPreview>\r\n        <CalculatedUI :customreportparameters=\"customreportparameters\" v-if=\"showcalculatedUI\" :Columnlist=\"Columnlist\"\r\n            :ExpFieldDataArray=\"ExpFieldDataArray\" :editexpressionvalue=\"editexpressionvalue\" :ExpDataArray=\"ExpDataArray\"\r\n            v-on:close=\"showcalculatedUI = false\" @VerifiedExpressionData=\"VerifiedExpressionColumnValue\" ref=\"Calculated\"\r\n            :AlreadyExistExpression=\"AlreadyExistExpression\">\r\n        </CalculatedUI>\r\n    </section>\r\n</template>\r\n<style scoped>\r\n.mCSB_inside>.mCSB_container {\r\n    margin-right: 30px;\r\n}\r\n\r\n.width80 {\r\n    width: 80px;\r\n}\r\n\r\n.width120 {\r\n    width: 110px;\r\n}\r\n\r\n.invalid-feedback {\r\n    white-space: normal;\r\n    font-size: 110%;\r\n}\r\n</style>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Datareport.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Datareport.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Datareport.vue?vue&type=template&id=4f97e8c1&scoped=true&\"\nimport script from \"./Datareport.vue?vue&type=script&lang=js&\"\nexport * from \"./Datareport.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Datareport.vue?vue&type=style&index=0&id=4f97e8c1&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"4f97e8c1\",\n  null\n  \n)\n\nexport default component.exports","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ReportPreview.vue?vue&type=style&index=0&id=3938c124&prod&scoped=true&lang=css&\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"2b098cdd\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Datareport.vue?vue&type=style&index=0&id=4f97e8c1&prod&scoped=true&lang=css&\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"41eaae45\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","export * from \"-!../../../../node_modules/vue-style-loader/index.js??ref--7-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Datareport.vue?vue&type=style&index=0&id=4f97e8c1&prod&scoped=true&lang=css&\""],"sourceRoot":""}