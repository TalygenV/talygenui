{"version":3,"sources":["webpack:///./src/components/Common/Modal/modalViewCustomReportFilter.vue?24e9","webpack:///./src/views/Reporting/Add_Report/ViewCustomReport.vue?1f23","webpack:///./src/components/Common/Modal/modalViewCustomReportFilter.vue?ae61","webpack:///./src/views/Reporting/Add_Report/ViewCustomReport.vue?3678","webpack:///./src/components/Common/Modal/modalViewCustomReportFilter.vue?132c","webpack:///./src/views/Reporting/Add_Report/ViewCustomReport.vue?b1ed","webpack:///./src/views/Reporting/Add_Report/ViewCustomReport.vue","webpack:///./src/components/Common/Modal/modalViewCustomReportFilter.vue","webpack:///src/components/Common/Modal/modalViewCustomReportFilter.vue","webpack:///./src/components/Common/Modal/modalViewCustomReportFilter.vue?d0f0","webpack:///./src/components/Common/Modal/modalViewCustomReportFilter.vue?ceb2","webpack:///src/views/Reporting/Add_Report/ViewCustomReport.vue","webpack:///./src/views/Reporting/Add_Report/ViewCustomReport.vue?a96b","webpack:///./src/views/Reporting/Add_Report/ViewCustomReport.vue?7b8f"],"names":["content","__esModule","default","module","i","locals","exports","add","___CSS_LOADER_API_IMPORT___","push","render","_vm","this","_c","_self","attrs","isLoading","class","undefined","ReportListParameters","staticClass","_v","_s","reportName","isFilterExist","on","OpenFilter","$t","CanEdit","EditReport","$event","ExportToPDF","ExportToExcel","directives","name","rawName","value","showGraphBtn","expression","OpenGraph","showgraph","OpenSortingPopup","OnBack","_m","staticStyle","isSortPopup","_l","sortColummnarray","input","index","sortcolummnId","$$selectedVal","Array","prototype","filter","call","target","options","o","selected","map","val","_value","$set","multiple","reportListingInfo","FIELDS","x","Calculated_Field","item","key","CustomFieldId","length","domProps","FieldName","DisplayName","GetLocalizedValue","columnOrders","AddSortingForm","RemoveSortingForm","EnableSortingSearch","RemoveSortingFromList","_e","XAxisFieldName","YAxisFieldName","aggregateFunctionResult","AggregateFuncField","chartType","ref","chartOptions","chartSeries","noRecord","previewgroupdata","pindex","showdata","previewcolumn","column","cindex","SortExp","SortBy","sortdata","previewdata","previewindex","data","sitem","sindex","gitem","gindex","totalRecord","groupindex","showcoldata","columnindex","TotalRecords","pagerMethod","SetPageSize","showViewCustomReportFilter","staticRenderFns","scopedSlots","_u","fn","handleSubmit","preventDefault","ApplyNewFilterToList","close","AddFilterRow","modelfiltertype","FilterCategory","filtertype","FILTERS","filterdata","isManuallyAdded","field","errors","errorMessage","meta","OnChangeFieldDdl","OPERATOR_ID","OnChangeOperator","GetOperatorList","OPERATOR_DISPLAY_NAME","style","ActualDataType","OperatorExpression","Value1","composing","Value2","PreventValues","selectOptions","DDLitem","label","values","TruncateStr","model","callback","$$v","DeleteFilterRow","RemoveNewFilterFromList","setup","Object","keys","rules","forEach","rule","extend","components","Form","Field","ValidationObserver","selectedOPValue","GetOperator","ValueDisplaytext","ValueDisplaytext2","ValueDisplaynumber","ValueDisplaynumber2","ValueDisplaydate","ValueDisplaydate2","modelFilterDDLValue","dropdwonvalues","texttypevalue1","texttypevalue2","numbertypevalue1","numbertypevalue2","datetypevalue1","datetypevalue2","multiselectvalue","DDLForFilter","SelectedoperatorMappedDatatype","CurrentOperatorSelected","savedOperatorName","operator_id","isBinding","ArrayforFilterpopup","FilterClose","props","type","created","vm","GetDropDownValueOnFilter","watch","newval","mounted","$","modal","backdrop","keyboard","methods","removeClass","remove","$emit","OpenFilterPopup","event","width","css","closest","find","GetOperatordata","ClosePopFilter","resetthevalueofoperator","Displaymultiplevalue","checkvalue","OperatorID","OperatorDisplayName","ColumnFieldDataCode","PickListOption","GetFilterSelectDDL","setTimeout","FillFilterValues","id","checkIfExists","findIndex","filtervalueexist","multiddl","replace","split","Getddldata","FilterViewReportServices","GetFilterDDLselectvalue","then","response","ddlitem","catch","err","console","log","params","GetDataOperator","OperatorList","DATA","IsBinding","OPERATOR_EXPRESSION","applySetting","_GetDDLValue","_vm$dropdwonvalues","Multiddlvalue","ddlvalues","isddlvalueexist","j","commaSepratedSelectedValues","join","GetDDLValue","elem","operator_display_name","MultiDropDown","SingleDropDown","FirstFilterValue","SecondFilterValue","FirstValueforJson","SecondValueforJson","getoperator","parseInt","MP","OPERATION_DATA_TYPE","CommaSepratedStringValues","Commaseprated","checkfiledexist","getoperatorvalues","getexpression","ConvertOperatorToExpression","operaterData","y","firstValue","secondValue","FilterTypeAndorOr","GRAPH","$parent","SetGroupDataforGraph","UpdatePreviewData","ekey","keyCode","GetMultiddlvalue","$refs","FilterForm","validate","valid","filterData","FieldIcons","splice","str","len","convertstring","substring","component","GetUserInfo","storeToRefs","useloggedUserInfo","pdfMake","vfs","pdfFonts","VueApexCharts","Pager","modalViewCustomReportFilter","viewreportparameters","count","chartTypes","chartOptionXAxisData","chartSeriesData","colourList","groupGraphlist","GraphJson","PageNumber","PageSize","TotalPages","allReocrdsData","TableBody","TableHeader","pdfpreviewdata","ExcelJsonData","IsForPreview","SingleSortArray","MainSortingArray","MainUpdatedArray","SelectedChartTypeId","JSON","parse","atob","$route","ReportID","GetChartTypes","GetPreviewData","ACCESS","SetBootstraptoolTip","$router","ReportId","ViewReportServices","GetReportDetailsbyId","ShowAlert","JSON_To_Create_ReportListing","Info","listingData","ReportListing","REPORTNAME","GetSortingData","BindGraph","Bindlisting","BindGroupListing","GROUP","UpdatedFilterArray","IsFilterValid","temp","REPORTID","MODULENAME","SUBMODULECODE","SUBMODULEID","CHARTGROUPARRAY","SORTING","EXPRESSION","EXPRESSIONFIELDSARRAY","jsondata","stringify","PreviewReport","Value","sortingArray","arritem","findsamesortvalue","listingInfo","MetaData","ListingData","TotalRecord","Math","ceil","IsGrouping","graphData","chartTypeID","chart_Type","toLowerCase","AggregateFunction","FilterColumnlist","XAxisField","CustomFieldName","YAxisField","SetGroupingGraphData","SetGraphValues","CalculationAggregateFunctionResult","DrawGraph","FuntionType","setGraphArray","XaxisField","yAxisField","mainindex","pushitem","GData","isHorizontal","chart","toolbar","export","svg","filename","png","csv","headerCategory","xaxis","categories","title","text","labels","trim","yaxis","formatter","toLocaleString","plotOptions","bar","borderRadius","horizontal","dataLabels","enabled","zoom","colors","XFieldName","YFieldName","items","BindXYFields","replaceXCurrencySymbol","ColumnFieldType","Columnlist","entries","functionType","tempval","sum","toFixed","parseFloat","aggregatecount","total","min","apply","Number","max","e","innerHTML","GetAllRecordsForPDF","GetDataForPDFListing","exceldatavalue","res","pdflisting","GetGraphImageURI","_vm$$refs$chart","URI","dataURI","uri","GetLimitRecordsData","GetTotalRecordsForExceed","confirmR","GetPdfAndExcelApi","GraphData","graphURI","allRecordslisting","pdfDetails","ReportName","pageType","pageOrientation","GraphWidth","BindPDFDataForGroup","BindPDFData","image","imgURI","alignment","pageSize","table","headerRows","body","styles","SetPDFStyle","defaultStyle","createPdf","print","download","TableHeader2","ColumnList","currentData","heading","columnList","groupingindex","tableData","headerelement","headerindex","groupColumn","rowSpan","tempitem","subheader","fontSize","bold","margin","jsonData","GetExcelReport","blob","Blob","link","document","createElement","href","window","URL","createObjectURL","current","Date","date","getDate","getMonth","getFullYear","fileName","click","Modulename","Submodulecode","Action","DownloadExceedRecords","EmailJson","Email","Name","CompanyLogo","exceljson","EmailParam","SendEmailService","Status","indexOf","SORTTYPE","CustomTotalRecords","InsertDynamicReportsLog","message","filedName","fieldId","SortDir","attr","fitem","FilterNotValid"],"mappings":"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","file":"js/chunk-0d64026d.js","sourcesContent":["export * from \"-!../../../../node_modules/vue-style-loader/index.js??ref--7-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./modalViewCustomReportFilter.vue?vue&type=style&index=0&id=3347de16&prod&scoped=true&lang=css&\"","export * from \"-!../../../../node_modules/vue-style-loader/index.js??ref--7-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ViewCustomReport.vue?vue&type=style&index=0&id=61fa196c&prod&scoped=true&lang=css&\"","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./modalViewCustomReportFilter.vue?vue&type=style&index=0&id=3347de16&prod&scoped=true&lang=css&\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"0c247ddb\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ViewCustomReport.vue?vue&type=style&index=0&id=61fa196c&prod&scoped=true&lang=css&\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"8a94a9fa\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".width80[data-v-3347de16]{width:90px}.width120[data-v-3347de16]{width:130px}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".parentdiv.datarepfix2[data-v-61fa196c]{position:absolute;right:0;top:0;z-index:999}.va_lft25[data-v-61fa196c]{position:absolute;right:40px;top:-5px;z-index:999;transform:rotate(90deg)}.action-list-box.small .close.closebtnsmall[data-v-61fa196c]{right:28px;top:4px;width:25px;height:25px;font-size:13px;line-height:12px;opacity:unset}.verticle-action.lft75.rt30[data-v-61fa196c]{right:30px;top:38px}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('loader',{attrs:{\"is-visible\":_vm.isLoading}}),_c('div',{class:_vm.ReportListParameters == undefined ? 'right-content hr_jobpost w-100' : 'right-content'},[_c('div',{staticClass:\"col-md-12 p-0 mb-2\"},[_c('div',{staticClass:\"theme-primary partition p-actions-expand\"},[_c('span',{staticClass:\"p-name text-white\"},[_vm._v(_vm._s(_vm.reportName))]),_c('span',{staticClass:\"p-actions float-right mydbsize\"},[_c('a',{class:_vm.isFilterExist > 0 ? 'p-action-btn text-white dash' : 'p-action-btn text-white dash',on:{\"click\":_vm.OpenFilter}},[_c('em',{staticClass:\"fa fa-filter\"}),_c('br'),_vm._v(_vm._s(_vm.$t('Filter'))+\" \")]),_c('a',{class:_vm.CanEdit == true ? 'p-action-btn text-white dash' : 'p-action-btn text-white dash d-none',attrs:{\"title\":\"Edit Report\"},on:{\"click\":_vm.EditReport}},[_c('em',{staticClass:\"fa fa-pencil text-white action-icon\"}),_c('br'),_vm._v(_vm._s(_vm.$t('Edit')))]),_c('a',{staticClass:\"p-action-btn text-white dash\",attrs:{\"data-original-title\":\"ExportToPDF\"},on:{\"click\":function($event){return _vm.ExportToPDF('download')}}},[_c('em',{staticClass:\"fa fa-file-pdf-o\"}),_c('br'),_vm._v(_vm._s(_vm.$t('PDF')))]),_c('a',{staticClass:\"p-action-btn text-white dash\",attrs:{\"data-original-title\":\"Print\"},on:{\"click\":function($event){return _vm.ExportToPDF('print')}}},[_c('em',{staticClass:\"fa fa-file-pdf-o\"}),_c('br'),_vm._v(_vm._s(_vm.$t('PRINT')))]),_c('a',{staticClass:\"p-action-btn text-white dash\",attrs:{\"data-original-title\":\"ExportToExcel\"},on:{\"click\":_vm.ExportToExcel}},[_c('em',{staticClass:\"fa fa-file-excel-o\"}),_c('br'),_vm._v(_vm._s(_vm.$t('Excel')))]),_c('a',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.showGraphBtn),expression:\"showGraphBtn\"}],staticClass:\"p-action-btn text-white dash\",on:{\"click\":_vm.OpenGraph}},[_c('em',{staticClass:\"fa fa-pie-chart\"}),_c('br'),_vm._v(_vm._s(_vm.showgraph ? _vm.$t('CollapseGraph') : _vm.$t('ExpandGraph'))+\" \")]),_c('a',{staticClass:\"p-action-btn text-white dash\",attrs:{\"data-original-title\":\"Sort\"},on:{\"click\":_vm.OpenSortingPopup}},[_c('em',{staticClass:\"fa fa-sort-amount-asc\"}),_c('br'),_vm._v(_vm._s(_vm.$t('Sort'))+\" \")]),_c('a',{staticClass:\"p-action-btn text-white dash\",attrs:{\"data-original-title\":\"Back\"},on:{\"click\":_vm.OnBack}},[_c('em',{staticClass:\"fa fa-angle-double-left\"}),_c('br'),_vm._v(_vm._s(_vm.$t('Back'))+\" \")])]),_vm._m(0)]),_c('div',{staticClass:\"parentdiv datarepfix2\"},[_c('div',{staticClass:\"verticle-action lft75 rt30\"},[_c('span',{staticClass:\"action-list-box small\",staticStyle:{\"width\":\"400px\"}},[(_vm.isSortPopup)?_c('span',{staticClass:\"text-left p-0 datarep mt-3 w-90 float-left bg_outerdark borderbababa\",attrs:{\"id\":\"action-list1\"}},[_c('div',{staticClass:\"float-left col-12\"},[_c('div',{staticClass:\"container-fluid p-0\"}),_vm._l((_vm.sortColummnarray),function(input,index){return _c('div',{staticClass:\"row px-3 pt-3 pb-0\"},[_c('div',{staticClass:\"col-lg-5 pl-0 pr-3\"},[_c('div',{staticClass:\"form-group mb-0\"},[_c('label',{staticClass:\"pb-2\"},[_vm._v(_vm._s(_vm.$t('SortBy')))]),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(input.sortcolummnId),expression:\"input.sortcolummnId\"}],staticClass:\"form-control\",attrs:{\"id\":'SortValue' + index},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(input, \"sortcolummnId\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},_vm._l((_vm.reportListingInfo.FIELDS.filter(x => x.Calculated_Field == false)),function(item){return _c('option',{key:item.CustomFieldId,attrs:{\"disabled\":(_vm.sortColummnarray.filter(x => x.sortcolummnId == item.CustomFieldId)).length > 0},domProps:{\"value\":item.CustomFieldId != '' ? item.CustomFieldId : item.FieldName}},[_vm._v(\" \"+_vm._s(item.DisplayName ? _vm.GetLocalizedValue(item.DisplayName) : _vm.GetLocalizedValue(item.FieldName)))])}),0)])]),_c('div',{staticClass:\"col-lg-5 pl-0 pr-3\"},[_c('div',{staticClass:\"form-group mb-0\"},[_c('label',{staticClass:\"pb-2\"},[_vm._v(_vm._s(_vm.$t('OrderBy')))]),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(input.columnOrders),expression:\"input.columnOrders\"}],staticClass:\"form-control\",on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(input, \"columnOrders\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},[_c('option',[_vm._v(_vm._s(_vm.$t('ASC')))]),_c('option',[_vm._v(_vm._s(_vm.$t('DESC')))])])])]),_c('div',{staticClass:\"col-lg-2 pl-0 pr-3 d-flex align-items-center\"},[_c('div',{staticClass:\"form-group mb-0\"},[_c('a',{on:{\"click\":function($event){return _vm.AddSortingForm(input)}}},[_c('em',{staticClass:\"fa fa-plus-circle font-24 text-success mt-3\"})]),_c('a',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.sortColummnarray[0].sortcolummnId != ''),expression:\"sortColummnarray[0].sortcolummnId != ''\"}],on:{\"click\":function($event){return _vm.RemoveSortingForm(input)}}},[_c('em',{staticClass:\"fa fa-times-circle font-24 text-danger mt-3 ml-1\"})])])])])}),_c('a',{staticClass:\"btn btn-success my-3 mr-2 pl-1\",on:{\"click\":function($event){return _vm.EnableSortingSearch(_vm.input)}}},[_c('span',{staticClass:\"fa fa-sort-amount-desc\"}),_vm._v(_vm._s(_vm.$t(' SORT')))]),_c('a',{staticClass:\"btn btn-danger pl-1 mb-0\",on:{\"click\":function($event){return _vm.RemoveSortingFromList()}}},[_c('span',{staticClass:\"fa fa-times\"}),_vm._v(\" Reset Sort\")])],2),_vm._m(1),_c('button',{staticClass:\"close closebtnsmall\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){_vm.isSortPopup = false}}},[_c('em',{staticClass:\"fa fa-times text\",attrs:{\"aria-hidden\":\"true\"}})])]):_vm._e()])])])]),_c('div',{staticClass:\"col-md-12 p-0 mb-2\"},[_c('div',{staticClass:\"tab-pane mb-0\"},[_c('div',{staticClass:\"tab-content fsmtabcontrolMobileView\",attrs:{\"id\":\"myTabContent\"}},[(_vm.showgraph)?_c('div',{staticClass:\"card mb-3 probx\"},[_c('div',{staticClass:\"card-header\"},[_c('h2',[_vm._v(_vm._s(_vm.$t('Graph')))])]),_c('div',{staticClass:\"card-body\",attrs:{\"id\":\"Reportpdf\"}},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12 col-lg-12 text-center\"},[_c('div',{staticClass:\"border bg-light position-absolute text-left p-0\",staticStyle:{\"z-index\":\"99\",\"height\":\"auto\",\"max-width\":\"20%\"}},[_c('ul',{staticClass:\"graphinfo\"},[_c('li',[_c('label',[_vm._v(\"X-axis:\")]),_vm._v(\" \"+_vm._s(_vm.GetLocalizedValue(_vm.XAxisFieldName)))]),_c('li',[_c('label',[_vm._v(\"Y-axis:\")]),_vm._v(\" \"+_vm._s(_vm.GetLocalizedValue(_vm.YAxisFieldName)))]),_c('li',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.aggregateFunctionResult != 0),expression:\"aggregateFunctionResult != 0\"}]},[_c('label',[_vm._v(\"# \"+_vm._s(_vm.AggregateFuncField)+\":\")]),_vm._v(_vm._s(_vm.aggregateFunctionResult)+\" \")])])]),(_vm.chartType == 'line' || _vm.chartType == 'bar' || _vm.chartType == 'horizontal_bar')?_c('div',[_c('VueApexCharts',{ref:\"chart\",attrs:{\"type\":_vm.chartType,\"height\":\"auto\",\"width\":\"40%\",\"options\":_vm.chartOptions,\"series\":_vm.chartSeries}})],1):_vm._e(),(_vm.chartType == 'pie' || _vm.chartType == 'donut')?_c('div',[_c('VueApexCharts',{ref:\"chart\",attrs:{\"type\":_vm.chartType,\"height\":\"auto\",\"width\":\"40%\",\"options\":_vm.chartOptions,\"series\":_vm.chartSeries}})],1):_vm._e()])])])]):_vm._e(),_c('div',{staticClass:\"tab-pane p-0 pb-2 border-0 active\",attrs:{\"role\":\"tabpanel\",\"id\":\"tab-detail-content\",\"aria-labelledby\":\"tab-detail-content\"}},[_c('div',{staticClass:\"listing\"},[_c('div',{staticClass:\"table-responsive table-fix-header\"},[(_vm.noRecord)?_c('table',{staticClass:\"table table-bordered mt-0\",staticStyle:{\"width\":\"100%\"},attrs:{\"aria-label\":\"NO Record Found\"}},[_vm._m(2),_c('tbody',[_c('tr',{staticStyle:{\"cursor\":\"initial\"}},[_c('td',{attrs:{\"colspan\":\"4\"}},[_c('div',{staticClass:\"text-center text-danger d-flex align-items-center justify-content-center norecs\"},[_vm._v(\" \"+_vm._s(_vm.$t(\"NoRecordfound\")))])])])])]):_vm._e(),_c('table',{staticClass:\"table table-bordered mt-0\",staticStyle:{\"width\":\"100%\"},attrs:{\"id\":\"Reportpdf\",\"aria-label\":\"View Record\"}},[_c('thead',{staticClass:\"thead-bg\"},[_c('tr',[_vm._l((_vm.previewgroupdata),function(item,pindex){return (_vm.showdata)?_c('th',{key:pindex,attrs:{\"scope\":\"col\"}},[_vm._v(\" \"+_vm._s(_vm.GetLocalizedValue((item.DisplayName != null && item.DisplayName != '') ? item.DisplayName : item.FieldName))+\" \")]):_vm._e()}),_vm._l((_vm.previewcolumn),function(column,cindex){return _c('th',{key:cindex,attrs:{\"scope\":\"col\"}},[(!column.Calculated_Field)?_c('span',{class:{\n                                                        'sort': true, 'tb_headerSortUp': _vm.SortExp == 'ASC' && _vm.SortBy == column.FieldName,\n                                                        'tb_headerSortDown': _vm.SortExp == 'DESC' && _vm.SortBy == column.FieldName\n                                                    },on:{\"click\":function($event){return _vm.sortdata(column.FieldName, column.CustomFieldId)}}},[_vm._v(\" \"+_vm._s(_vm.GetLocalizedValue((column.DisplayName != null && column.DisplayName != '') ? column.DisplayName : column.FieldName))+\" \")]):_c('span',[_vm._v(\" \"+_vm._s(_vm.GetLocalizedValue((column.DisplayName != null && column.DisplayName != '') ? column.DisplayName : column.FieldName))+\" \")])])})],2)]),_vm._l((_vm.previewdata),function(item,previewindex){return _c('tbody',{key:previewindex},[_vm._l((_vm.previewdata[previewindex].data),function(sitem,sindex){return (_vm.showdata)?_c('tr',{key:sindex},[(sindex == 0)?_vm._l((_vm.previewgroupdata),function(gitem,gindex){return _c('td',{key:gindex,class:{ 'onlyrtbod': true, '': item.totalRecord == null },attrs:{\"rowspan\":item.totalRecord}},[_vm._v(_vm._s((gitem.DisplayName != null && gitem.DisplayName != '') ? item[gitem.DisplayName] : item[gitem.FieldName])+\" (\"+_vm._s(item.totalRecord)+\")\")])}):_vm._e(),_vm._l((_vm.previewcolumn),function(column,groupindex){return _c('td',{key:groupindex},[_c('span',{domProps:{\"innerHTML\":_vm._s((sitem[column.DisplayName] != null && sitem[column.DisplayName] != '') ?\n                                                        (sitem[column.DisplayName] || sitem[column.DisplayName] == 0 ? sitem[column.DisplayName] : '') :\n                                                        (sitem[column.FieldName] || sitem[column.FieldName] == 0 ? sitem[column.FieldName] : ''))}})])})],2):_vm._e()}),(_vm.showcoldata)?_c('tr',_vm._l((_vm.previewcolumn),function(column,columnindex){return _c('td',{key:columnindex},[_c('span',{domProps:{\"innerHTML\":_vm._s((item[column.DisplayName] != null && item[column.DisplayName] != '') ?\n                                                        (item[column.DisplayName] || item[column.DisplayName] == 0 ? item[column.DisplayName] : '') :\n                                                        (item[column.FieldName] || item[column.FieldName] == 0 ? item[column.FieldName] : ''))}})])}),0):_vm._e()],2)})],2)]),_c('Pager',{class:{ 'd none': true, '': _vm.TotalRecords > 10 },attrs:{\"numberofrecords\":_vm.TotalRecords,\"prev-text\":\"Prev\",\"first-text\":\"First\",\"last-text\":\"Last\",\"next-text\":\"Next\"},on:{\"click\":_vm.pagerMethod,\"change\":_vm.SetPageSize}})],1)])])])])]),(_vm.showViewCustomReportFilter)?_c('modalViewCustomReportFilter',{attrs:{\"reportListingInfo\":_vm.reportListingInfo},on:{\"close\":function($event){_vm.showViewCustomReportFilter = false}}}):_vm._e()],1)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('span',{staticClass:\"collapse-head-btns\"},[_c('a',{staticClass:\"collapse-btns\",attrs:{\"href\":\"javascript:;\"}},[_c('em',{staticClass:\"fa fa-angle-up text-white\"})])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"va_lft25 top4\"},[_c('em',{staticClass:\"icon-solid arrow-solid-left text-secondary\",staticStyle:{\"font-size\":\"20pt\"}})])\n},function (){var _vm=this,_c=_vm._self._c;return _c('thead',[_c('th',{attrs:{\"scope\":\"col\"}})])\n}]\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"modal my-popups centre fade\",attrs:{\"id\":\"modalViewCustomReportFilter\",\"role\":\"dialog\"}},[_c('div',{staticClass:\"modal-dialog\",attrs:{\"role\":\"document\"}},[_c('div',{staticClass:\"modal-content\"},[_c('ValidationObserver',{ref:\"FilterForm\",scopedSlots:_vm._u([{key:\"default\",fn:function({ handleSubmit }){return [_c('form',{ref:\"FilterForm1\",on:{\"submit\":function($event){$event.preventDefault();return handleSubmit(_vm.ApplyNewFilterToList)}}},[_c('div',{staticClass:\"modal-header mheader-user\"},[_c('button',{staticClass:\"close\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.close()}}},[_c('em',{staticClass:\"fa fa-times\",attrs:{\"aria-hidden\":\"true\"}})]),_c('h4',{staticClass:\"modal-title\",attrs:{\"id\":\"myModalLabel\"}},[_vm._v(_vm._s(_vm.$t('FILTER')))])]),_c('div',{staticClass:\"modal-body\"},[_c('loader',{attrs:{\"is-visible\":_vm.isLoading}}),_c('div',{staticClass:\"list-item row filter-div\"},[_c('div',{staticClass:\"col-sm-12 col-md-12 col-lg-12 col-xl-12 float-left\"},[_c('div',{staticClass:\"form-content\"},[_c('div',{staticClass:\"col-sm-12 col-md-12 col-lg-12 col-xl-12 p-0 float-left\",attrs:{\"id\":\"divshowSearchCriteriaList\"}},[_c('div',{staticClass:\"heading-border\"},[_c('h5',{staticClass:\"h5\"},[_c('span',[_vm._v(\" Filter\")]),_c('small',{staticClass:\"float-right\"},[_c('a',{staticStyle:{\"cursor\":\"pointer\"},attrs:{\"href\":\"javascript:;\",\"title\":\"Add\"},on:{\"click\":function($event){return _vm.AddFilterRow()}}},[_c('em',{staticClass:\"fa fa-plus pr-2\"}),_vm._v(\" Add \")])])])]),_c('div',{staticClass:\"listing mt-2\"},[_c('div',{staticClass:\"mb-2\"},[_c('label',[_vm._v(\"Include data if it matches\")]),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.modelfiltertype),expression:\"modelfiltertype\"}],staticClass:\"form-control col-4\",on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.modelfiltertype=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},_vm._l((_vm.FilterCategory),function(filtertype){return _c('option',{domProps:{\"value\":filtertype}},[_vm._v(_vm._s(filtertype))])}),0)]),_c('div',{staticClass:\"table-responsive overflow-visible\"},[_c('table',{staticClass:\"table table-bordered dt-responsive nowrap mt-0 dataTable no-footer dtr-inline\",attrs:{\"aria-describedby\":\"serachfilter\"}},[_c('thead',{staticClass:\"thead-bg\"},[_c('tr',[_c('th',{staticStyle:{\"min-width\":\"180px\"},attrs:{\"scope\":\"col\"}},[_c('span',[_vm._v(\"Name\")])]),_c('th',{staticStyle:{\"min-width\":\"180px\"},attrs:{\"scope\":\"col\"}},[_c('span',[_vm._v(\"Operator\")])]),_c('th',{staticStyle:{\"min-width\":\"480px\"},attrs:{\"scope\":\"col\"}},[_c('span',[_vm._v(\"Value\")])]),_c('th',{staticStyle:{\"min-width\":\"50px\"},attrs:{\"scope\":\"col\"}},[_c('span',[_vm._v(\"Action\")])])])]),_c('tbody',[_vm._l((_vm.reportListingInfo.FILTERS),function(filterdata,index){return (_vm.reportListingInfo.FILTERS.length > 0)?_c('tr',[_c('td',[(!filterdata.isManuallyAdded)?_c('span',[_vm._v(_vm._s(_vm.GetLocalizedValue(filterdata.FieldName, filterdata.DisplayName)))]):_vm._e(),(filterdata.isManuallyAdded)?_c('Field',{attrs:{\"name\":'Field'+index,\"rules\":\"required\"},scopedSlots:_vm._u([{key:\"default\",fn:function({ field, errors, errorMessage, meta }){return [_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(filterdata.CustomFieldId),expression:\"filterdata.CustomFieldId\"}],class:{'form-control':true, 'is-invalid': errors[0]},on:{\"change\":[function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(filterdata, \"CustomFieldId\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])},function($event){return _vm.OnChangeFieldDdl(filterdata)}]}},[_c('option',{attrs:{\"value\":\"\"}},[_vm._v(\"Select field\")]),_vm._l((_vm.reportListingInfo.FIELDS),function(item){return _c('option',{attrs:{\"disabled\":(_vm.reportListingInfo.FILTERS.filter(x=> x.CustomFieldId == item.CustomFieldId)).length > 0},domProps:{\"value\":item.CustomFieldId}},[_vm._v(_vm._s(_vm.GetLocalizedValue(item.FieldName, item.DisplayName)))])})],2)]}}],null,true)}):_vm._e()],1),_c('td',[_c('Field',{attrs:{\"name\":'Operator'+index,\"rules\":\"required\"},scopedSlots:_vm._u([{key:\"default\",fn:function({ field, errors, errorMessage }){return [_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(filterdata.OPERATOR_ID),expression:\"filterdata.OPERATOR_ID\"}],class:{'form-control':true, 'is-invalid': errors[0]},on:{\"change\":[function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(filterdata, \"OPERATOR_ID\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])},function($event){return _vm.OnChangeOperator(filterdata)}]}},[_c('option',{attrs:{\"value\":\"\"}},[_vm._v(\"Select Operator\")]),_vm._l((_vm.GetOperatorList),function(item){return _c('option',{domProps:{\"value\":item.OPERATOR_ID}},[_vm._v(_vm._s(item.OPERATOR_DISPLAY_NAME))])})],2)]}}],null,true)})],1),_c('td',{style:(((filterdata.ActualDataType == 'select' && (filterdata.OperatorExpression == 'IN' || filterdata.OperatorExpression == 'NOT IN') ? 'display: contents;' : '')))},[(filterdata.OperatorExpression == 'Is Not Null' || filterdata.OperatorExpression == 'Is Null')?_c('span',[_vm._v(\"--\")]):_vm._e(),(filterdata.ActualDataType == 'string' && filterdata.OperatorExpression != 'Is Not Null' && filterdata.OperatorExpression != 'Is Null')?_c('Field',{attrs:{\"name\":'StringFirstValue'+index,\"rules\":\"required\"},scopedSlots:_vm._u([{key:\"default\",fn:function({ field, errors, errorMessage }){return [_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(filterdata.Value1),expression:\"filterdata.Value1\"}],class:{'form-control':true, 'is-invalid': errors[0]},style:((filterdata.OperatorExpression == 'between'?'width: 45%;float: left;': '')),attrs:{\"type\":\"text\",\"id\":\"inpttxt\"},domProps:{\"value\":(filterdata.Value1)},on:{\"input\":function($event){if($event.target.composing)return;_vm.$set(filterdata, \"Value1\", $event.target.value)}}})]}}],null,true)}):_vm._e(),(filterdata.ActualDataType == 'string' && filterdata.OperatorExpression == 'between')?_c('Field',{attrs:{\"name\":'StringSecondValue'+index,\"rules\":\"required\"},scopedSlots:_vm._u([{key:\"default\",fn:function({ field, errors, errorMessage }){return [_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(filterdata.Value2),expression:\"filterdata.Value2\"}],class:{'form-control':true, 'is-invalid': errors[0]},staticStyle:{\"width\":\"45%\",\"float\":\"left\",\"margin-left\":\"50px\"},attrs:{\"type\":\"text\",\"id\":\"inpttxt2\"},domProps:{\"value\":(filterdata.Value2)},on:{\"input\":function($event){if($event.target.composing)return;_vm.$set(filterdata, \"Value2\", $event.target.value)}}})]}}],null,true)}):_vm._e(),((filterdata.ActualDataType == 'decimal' || filterdata.ActualDataType == 'int' || filterdata.ActualDataType == 'bigint') && filterdata.OperatorExpression != 'Is Not Null' && filterdata.OperatorExpression != 'Is Null')?_c('Field',{attrs:{\"name\":'NumberFirstValue'+index,\"rules\":\"required\"},scopedSlots:_vm._u([{key:\"default\",fn:function({ field, errors, errorMessage }){return [_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(filterdata.Value1),expression:\"filterdata.Value1\"}],class:{'form-control':true, 'is-invalid': errors[0]},style:((filterdata.OperatorExpression == 'between'?'width: 45%;float: left;': '')),attrs:{\"type\":\"number\",\"id\":\"inpttxtbtw\"},domProps:{\"value\":(filterdata.Value1)},on:{\"keydown\":function($event){return _vm.PreventValues($event)},\"input\":function($event){if($event.target.composing)return;_vm.$set(filterdata, \"Value1\", $event.target.value)}}})]}}],null,true)}):_vm._e(),((filterdata.ActualDataType == 'decimal' || filterdata.ActualDataType == 'int' || filterdata.ActualDataType == 'bigint') && filterdata.OperatorExpression == 'between')?_c('Field',{attrs:{\"name\":'NumberSecondValue'+index,\"rules\":\"required\"},scopedSlots:_vm._u([{key:\"default\",fn:function({ field, errors, errorMessage }){return [_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(filterdata.Value2),expression:\"filterdata.Value2\"}],class:{'form-control':true, 'is-invalid': errors[0]},staticStyle:{\"width\":\"45%\",\"float\":\"left\",\"margin-left\":\"50px\"},attrs:{\"type\":\"number\",\"id\":\"inpttxtbtw\"},domProps:{\"value\":(filterdata.Value2)},on:{\"keydown\":function($event){return _vm.PreventValues($event)},\"input\":function($event){if($event.target.composing)return;_vm.$set(filterdata, \"Value2\", $event.target.value)}}})]}}],null,true)}):_vm._e(),((filterdata.ActualDataType == 'date' || filterdata.ActualDataType == 'datetime') && filterdata.OperatorExpression != 'Is Not Null' && filterdata.OperatorExpression != 'Is Null')?_c('Field',{attrs:{\"name\":'DateFirstValue'+index,\"rules\":\"required\"},scopedSlots:_vm._u([{key:\"default\",fn:function({ field, errors, errorMessage }){return [_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(filterdata.Value1),expression:\"filterdata.Value1\"}],class:{'form-control':true, 'is-invalid': errors[0]},style:((filterdata.OperatorExpression == 'between'?'width: 45%;float: left;': '')),attrs:{\"type\":\"date\",\"id\":\"inpttxtdate1\"},domProps:{\"value\":(filterdata.Value1)},on:{\"input\":function($event){if($event.target.composing)return;_vm.$set(filterdata, \"Value1\", $event.target.value)}}})]}}],null,true)}):_vm._e(),((filterdata.ActualDataType == 'date' || filterdata.ActualDataType == 'datetime') && filterdata.OperatorExpression == 'between')?_c('Field',{attrs:{\"name\":'DateSecondValue'+index,\"rules\":\"required\"},scopedSlots:_vm._u([{key:\"default\",fn:function({ field, errors, errorMessage }){return [_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(filterdata.Value2),expression:\"filterdata.Value2\"}],class:{'form-control':true, 'is-invalid': errors[0]},staticStyle:{\"width\":\"45%\",\"float\":\"left\",\"margin-left\":\"20px\"},attrs:{\"type\":\"date\",\"min\":filterdata.Value1},domProps:{\"value\":(filterdata.Value2)},on:{\"input\":function($event){if($event.target.composing)return;_vm.$set(filterdata, \"Value2\", $event.target.value)}}})]}}],null,true)}):_vm._e(),(filterdata.ActualDataType == 'select' && filterdata.OperatorExpression != 'IN' && filterdata.OperatorExpression != 'NOT IN' && filterdata.OperatorExpression != 'Is Not Null' && filterdata.OperatorExpression != 'Is Null')?_c('Field',{attrs:{\"name\":'Selectddl'+index,\"rules\":\"required\"},scopedSlots:_vm._u([{key:\"default\",fn:function({ field, errors, errorMessage }){return [_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(filterdata.Value1),expression:\"filterdata.Value1\"}],class:{'form-control':true, 'is-invalid': errors[0]},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(filterdata, \"Value1\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},[_c('option',{attrs:{\"value\":\"\"}},[_vm._v(\"Select value\")]),_vm._l((filterdata.selectOptions),function(DDLitem){return _c('option',{key:DDLitem.value,domProps:{\"value\":DDLitem.value}},[_vm._v(\" \"+_vm._s(DDLitem.label)+\" \")])})],2)]}}],null,true)}):_vm._e(),(filterdata.ActualDataType == 'select' && (filterdata.OperatorExpression == 'IN' || filterdata.OperatorExpression == 'NOT IN'))?_c('Field',{attrs:{\"name\":'MultiSelectddl'+index,\"rules\":\"required\"},scopedSlots:_vm._u([{key:\"default\",fn:function({ field, errors, errorMessage }){return [_c('div',[_c('Multiselect',{class:{'form-control':true, 'is-invalid': errors[0]},attrs:{\"multiple\":true,\"label\":\"label\",\"track-by\":\"label\",\"placeholder\":\"Select\",\"searchable\":true,\"mode\":\"multiple\",\"hideSelected\":false,\"close-on-select\":false,\"options\":filterdata.selectOptions},scopedSlots:_vm._u([{key:\"multiplelabel\",fn:function({ values }){return [(values && values.length>0)?_c('div',{staticClass:\"multiselect-multiple-label\"},[_c('div',{staticClass:\"multiselect-tags\",attrs:{\"data-tags\":\"\"}},[_c('span',{staticClass:\"multiselect-tag\",attrs:{\"tabindex\":\"-1\",\"aria-label\":values[0].label}},[_vm._v(_vm._s(_vm.TruncateStr(values[0].label,18))+\" \"),_c('span',{staticClass:\"multiselect-tag-remove\"},[_c('span',{staticClass:\"multiselect-tag-remove-icon\"})])])]),(values && values.length>1)?_c('span',[_vm._v(\" \"+_vm._s(values.length)+\" options selected \")]):_vm._e()]):_vm._e()]}}],null,true),model:{value:(filterdata.Value1),callback:function ($$v) {_vm.$set(filterdata, \"Value1\", $$v)},expression:\"filterdata.Value1\"}})],1)]}}],null,true)}):_vm._e()],1),_c('td',{staticClass:\"text-center\"},[_c('a',{attrs:{\"href\":\"javascript:;\"},on:{\"click\":function($event){return _vm.DeleteFilterRow(index)}}},[(filterdata.isManuallyAdded)?_c('em',{staticClass:\"fa fa-trash text-danger pr-2\"}):_vm._e()]),(!filterdata.isManuallyAdded)?_c('span',[_vm._v(\"--\")]):_vm._e()])]):_vm._e()}),(_vm.reportListingInfo.FILTERS.length == 0)?_c('tr',[_c('td',{staticClass:\"text-center text-danger py-3\",attrs:{\"colspan\":\"10\"}},[_vm._v(\"No record(s) found\")])]):_vm._e()],2)])])])])])])])],1),_c('div',{staticClass:\"col-12 mb-3 mr-auto d-flex align-items-center justify-content-end\"},[_c('button',{staticClass:\"btn btn-success my-2 my-sm-0 mr-2 pl-1\",attrs:{\"type\":\"submit\"}},[_c('span',{staticClass:\"fa fa-search\"}),_vm._v(\" Search\")]),_c('a',{staticClass:\"btn btn-danger pl-1 mb-0\",on:{\"click\":function($event){return _vm.RemoveNewFilterFromList()}}},[_c('span',{staticClass:\"fa fa-times\"}),_vm._v(\" Reset Filter\")])])])]}}])})],1)])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<script>\r\nimport FilterViewReportServices from \"@/services/DataService\";\r\nimport { ValidationObserver, Form, ValidationProvider as Field,extend, ErrorMessage } from 'vee-validate';\r\nimport * as rules from 'vee-validate/dist/rules';\r\nexport default {\r\n    setup(){\r\n        Object.keys(rules).forEach(rule => {\r\n            extend(rule, rules[rule]);\r\n        });\r\n    },\r\n    components:{\r\n        Form, Field, ValidationObserver\r\n    },\r\n    data() {\r\n        return {\r\n            isLoading: false,\r\n            isFilterExist: 0,\r\n            selectedOPValue: '',\r\n            GetOperator: [],\r\n            options: [],\r\n            ValueDisplaytext: '',\r\n            ValueDisplaytext2: '',\r\n            ValueDisplaynumber: '',\r\n            ValueDisplaynumber2: '',\r\n            ValueDisplaydate: '',\r\n            ValueDisplaydate2: '',\r\n            modelFilterDDLValue: '',\r\n            dropdwonvalues: [],\r\n            texttypevalue1: false,\r\n            texttypevalue2: false,\r\n            numbertypevalue1: false,\r\n            numbertypevalue2: false,\r\n            datetypevalue1: false,\r\n            datetypevalue2: false,\r\n            multiselectvalue: false,\r\n            DDLForFilter: false,\r\n            SelectedoperatorMappedDatatype: '',\r\n            CurrentOperatorSelected: '',\r\n            savedOperatorName: '',\r\n            operator_id: null,\r\n            isBinding: false,\r\n            ArrayforFilterpopup: [],\r\n            FilterClose:false,\r\n            FilterCategory:[\"AND\",\"OR\"],\r\n            modelfiltertype:'AND',\r\n            GetOperatorList: [],\r\n        }\r\n    },\r\n    props: {\r\n        reportListingInfo: {\r\n            type: Object\r\n        }\r\n    },\r\n    created() {\r\n        var vm = this;\r\n        vm.GetDropDownValueOnFilter();\r\n    },\r\n    watch:{\r\n        FilterClose(newval){\r\n            if(newval){\r\n                this.GetDropDownValueOnFilter();\r\n            }\r\n        }\r\n    },\r\n    mounted: function () {\r\n        $('#modalViewCustomReportFilter').modal({\r\n            backdrop: 'static',\r\n            keyboard: false\r\n        })\r\n    },\r\n    methods: {\r\n        close() {\r\n            var vm = this;\r\n            $(\"#modalViewCustomReportFilter\").modal(\"hide\"); $(\"body\").removeClass(\"modal-open\");\r\n            $(\".modal-backdrop\").remove();\r\n            this.$emit(\"close\");\r\n            //vm.FilterClose = true;\r\n        },\r\n        OpenFilterPopup(filterdata, event) {\r\n            var vm = this;\r\n            filterdata.selectedOPValue = '';\r\n            $(\".filter-list-box\").width('0px').css(\"overflow\", \"hidden\");\r\n            $(event.target).closest(\".parentdiv\").find(\".filter-list-box\").width('500px').css(\"overflow\", \"visible\");\r\n            vm.GetOperatordata(filterdata);\r\n            vm.texttypevalue1 = false;\r\n            vm.texttypevalue2 = false;\r\n            vm.numbertypevalue1 = false;\r\n            vm.datetypevalue1 = false;\r\n            vm.datetypevalue2 = false;\r\n            vm.multiselectvalue = false;\r\n            vm.numbertypevalue2 = false;\r\n            vm.DDLForFilter = false;\r\n            vm.dropdwonvalues = [];\r\n            vm.ValueDisplaytext = '';\r\n            vm.ValueDisplaynumber = '';\r\n            vm.ValueDisplaynumber2 = '';\r\n            vm.ValueDisplaydate = '';\r\n            vm.ValueDisplaydate2 = '';\r\n        },\r\n        ClosePopFilter() {\r\n            var vm = this;\r\n            $(\".filter-list-box\").width('0px').css(\"overflow\", \"hidden\");\r\n            vm.texttypevalue1 = false;\r\n            vm.texttypevalue2 = false;\r\n            vm.numbertypevalue1 = false;\r\n            vm.numbertypevalue2 = false;\r\n            vm.datetypevalue1 = false;\r\n            vm.datetypevalue2 = false;\r\n            vm.multiselectvalue = false;\r\n            vm.DDLForFilter = false;\r\n            vm.multiselectvalue = false;\r\n            vm.ValueDisplaytext = '';\r\n            vm.ValueDisplaynumber = '';\r\n            vm.ValueDisplaynumber2 = '';\r\n            vm.ValueDisplaydate = '';\r\n            vm.ValueDisplaydate2 = '';\r\n            vm.dropdwonvalues = [];\r\n        },\r\n        resetthevalueofoperator: function () {\r\n            var vm = this;\r\n            vm.dropdwonvalues = [];\r\n            vm.ValueDisplaytext = '';\r\n            vm.ValueDisplaytext2 = '';\r\n            vm.ValueDisplaynumber = '';\r\n            vm.ValueDisplaynumber2 = '';\r\n            vm.ValueDisplaydate = '';\r\n            vm.ValueDisplaydate2 = '';\r\n            vm.Displaymultiplevalue = ''\r\n        },\r\n        checkvalue: function (filterdata, OperatorID, OperatorDisplayName, OperatorExpression) {\r\n            var vm = this;\r\n            if (filterdata.ColumnFieldDataCode === 'select' && filterdata.PickListOption === 'Lookup') {\r\n                vm.GetFilterSelectDDL(filterdata);\r\n            }\r\n            setTimeout(function () {\r\n                vm.savedOperatorName = \"\";\r\n                vm.SelectedoperatorMappedDatatype = filterdata.ColumnFieldDataCode;\r\n                vm.CurrentOperatorSelected = OperatorExpression;\r\n                vm.savedOperatorName = OperatorDisplayName;\r\n                vm.operator_id = OperatorID\r\n\r\n                if (vm.SelectedoperatorMappedDatatype == 'string') {\r\n                    if (vm.savedOperatorName == 'Between') {\r\n                        vm.texttypevalue1 = true;\r\n                        vm.texttypevalue2 = true;\r\n                    } else if (vm.savedOperatorName == 'Is Empty' || vm.savedOperatorName == 'Is Not Empty') {\r\n                        vm.texttypevalue1 = false;\r\n                        vm.texttypevalue2 = false;\r\n                    }\r\n                    else {\r\n                        vm.texttypevalue1 = true;\r\n                        vm.texttypevalue2 = false;\r\n                    }\r\n                }\r\n                else if (vm.SelectedoperatorMappedDatatype == 'decimal' || vm.SelectedoperatorMappedDatatype == 'int' || vm.SelectedoperatorMappedDatatype == 'bigint') {\r\n                    if (vm.savedOperatorName == 'Between') {\r\n                        vm.numbertypevalue1 = true;\r\n                        vm.numbertypevalue2 = true;\r\n                    } else if (vm.savedOperatorName == 'Is Empty' || vm.savedOperatorName == 'Is Not Empty') {\r\n                        vm.numbertypevalue1 = false;\r\n                        vm.numbertypevalue2 = false;\r\n                    }\r\n                    else {\r\n                        vm.numbertypevalue1 = true;\r\n                        vm.numbertypevalue2 = false;\r\n                    }\r\n                }\r\n                else if (vm.SelectedoperatorMappedDatatype === 'select' && filterdata.PickListOption === 'Lookup') {\r\n                    if (vm.savedOperatorName == 'Is Empty' || vm.savedOperatorName == 'Is Not Empty') {\r\n                        vm.DDLForFilter = false;\r\n                        vm.multiselectvalue = false;\r\n                        vm.texttypevalue1 = false;\r\n                        vm.texttypevalue2 = false;\r\n                    }\r\n                    else if (vm.savedOperatorName == 'Equal to one of multiple possible values' || vm.savedOperatorName == 'Not Equal to one of multiple possible values') {\r\n                        vm.multiselectvalue = true;\r\n                        vm.DDLForFilter = false;\r\n                    } else {\r\n                        vm.DDLForFilter = true;\r\n                        vm.multiselectvalue = false;\r\n                        vm.texttypevalue1 = false;\r\n                        vm.texttypevalue2 = false;\r\n                    }\r\n                }\r\n                else if (vm.SelectedoperatorMappedDatatype === 'date') {\r\n                    if (vm.savedOperatorName == 'Between') {\r\n                        vm.datetypevalue1 = true;\r\n                        vm.datetypevalue2 = true;\r\n                    } else if (vm.savedOperatorName == 'Is Empty' || vm.savedOperatorName == 'Is Not Empty' || vm.savedOperatorName == 'Is Off Day' || vm.savedOperatorName == 'Is Week End') {\r\n                        vm.datetypevalue1 = false;\r\n                        vm.datetypevalue2 = false;\r\n                    }\r\n                    else {\r\n                        vm.datetypevalue1 = true;\r\n                        vm.datetypevalue2 = false;\r\n                    }\r\n                }\r\n                if (vm.operator_id != undefined && vm.savedOperatorName != undefined) {\r\n                    vm.dropdwonvalues = [];\r\n                    vm.ValueDisplaytext = '';\r\n                    vm.ValueDisplaytext2 = '';\r\n                    vm.ValueDisplaynumber = '';\r\n                    vm.ValueDisplaynumber2 = '';\r\n                    vm.ValueDisplaydate = '';\r\n                    vm.ValueDisplaydate2 = '';\r\n                    vm.modelFilterDDLValue = '';\r\n                    if (filterdata.OPERATOR_ID == vm.operator_id) {\r\n                        vm.FillFilterValues(OperatorID, filterdata);\r\n                    }\r\n                    // filterdata = [];\r\n                }\r\n                if (filterdata.OPERATOR_ID != vm.operator_id) {\r\n                    vm.resetthevalueofoperator();\r\n                }\r\n            }, 1000);\r\n        },\r\n        FillFilterValues(id, filterdata) {\r\n            var vm = this;\r\n            vm.ArrayforFilterpopup.push(filterdata);\r\n            var checkIfExists = vm.ArrayforFilterpopup.findIndex((x) => {\r\n                return x.OPERATOR_ID == id\r\n            });\r\n            if (checkIfExists > -1) {\r\n                var filtervalueexist = vm.ArrayforFilterpopup.find(x => x.OPERATOR_ID == id)\r\n                if (filterdata.ColumnFieldDataCode == 'string') {\r\n                    vm.ValueDisplaytext = filtervalueexist?.Value1;\r\n                    vm.ValueDisplaytext2 = filtervalueexist?.Value2;\r\n                }\r\n                else if (filterdata.ColumnFieldDataCode == 'decimal' || filterdata.ColumnFieldDataCode == 'int' || filterdata.ColumnFieldDataCode == 'bigint') {\r\n                    vm.ValueDisplaynumber = filtervalueexist?.Value1;\r\n                    vm.ValueDisplaynumber2 = filtervalueexist?.Value2;\r\n                }\r\n                else if (filterdata.ColumnFieldDataCode === 'date') {\r\n                    vm.ValueDisplaydate = filtervalueexist?.Value1;\r\n                    vm.ValueDisplaydate2 = filtervalueexist?.Value2;\r\n                }\r\n                else if (filterdata.ColumnFieldDataCode === 'select' && filterdata.PickListOption === 'Lookup') {\r\n                    if (vm.CurrentOperatorSelected == 'IN' || vm.CurrentOperatorSelected == 'NOT IN') {\r\n                        var multiddl = filtervalueexist?.Value1.replace(/\"|'/g, '');\r\n                        vm.dropdwonvalues = multiddl?.split(',');\r\n                    }\r\n                    else {\r\n                        vm.modelFilterDDLValue = filtervalueexist?.Value1;\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        //   Get Filter Select DDL \r\n        GetFilterSelectDDL(filterdata) {\r\n            var vm = this;\r\n            filterdata.selectOptions = [];\r\n            var Getddldata = [];\r\n            vm.isLoading = true;\r\n            FilterViewReportServices.GetFilterDDLselectvalue(filterdata.CustomFieldId).then(response => {\r\n                if (response.data.length > 0) {\r\n                    Getddldata = response.data;\r\n                    Getddldata.forEach(ddlitem => {\r\n                        filterdata.selectOptions.push({\r\n                            value: ddlitem.value,\r\n                            label: ddlitem.name\r\n                        })})\r\n                    vm.isLoading = false;\r\n                } else { vm.isLoading = false; }\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n        },\r\n        // Get oprators Data For Filter Apply on View Report \r\n        GetOperatordata(filterdata) {\r\n            var vm = this;\r\n            var CustomFieldId = filterdata.CustomFieldId;\r\n            var params = `dataType=${filterdata.ColumnFieldDataCode}&customField=${CustomFieldId}`;\r\n            FilterViewReportServices.GetDataOperator(params).then(response => {\r\n                filterdata.OperatorList = response.data.DATA;\r\n                vm.GetOperatorList = response.data.DATA;\r\n                // filterdata.selectedOPValue = parseInt(filterdata.OPERATOR_ID);\r\n                // vm.FillFilterValues(filterdata);\r\n                if (filterdata.OPERATOR_ID > 0) {\r\n                    // let operaterData = filterdata.OperatorList.find(x => x.OPERATOR_ID == filterdata.OPERATOR_ID);\r\n                    // filterdata.OperatorExpression = operaterData.OPERATOR_EXPRESSION;\r\n                    var checkIfExists = vm.GetOperator.filter((x) => {\r\n                        return x.OPERATOR_ID == filterdata.OPERATOR_ID\r\n                    });\r\n                    if (checkIfExists.length > 0) {\r\n                        var IsBinding = true;\r\n                        vm.isBinding = IsBinding;\r\n                        vm.checkvalue(filterdata, filterdata.OPERATOR_ID, checkIfExists[0].OPERATOR_DISPLAY_NAME, checkIfExists[0].OPERATOR_EXPRESSION, IsBinding)\r\n                    }\r\n                }\r\n            })\r\n        },\r\n        applySetting(CustomFieldId, event) {\r\n            var vm = this;\r\n            var vm = this;\r\n            var Multiddlvalue = [];\r\n            vm.dropdwonvalues.forEach(ddlvalues => {\r\n                const isddlvalueexist = vm.options.find(j => j.value === ddlvalues)\r\n                if (isddlvalueexist != -1 && isddlvalueexist != undefined) {\r\n                    Multiddlvalue.push(isddlvalueexist.label);\r\n                }\r\n            })\r\n            if (vm.dropdwonvalues != '') {\r\n                vm.commaSepratedSelectedValues = vm.dropdwonvalues?.join();\r\n                vm.modelFilterDDLValue = '';\r\n            }\r\n            var GetDDLValue = '';\r\n            if (vm.modelFilterDDLValue != '') {\r\n                GetDDLValue = vm.options.find(i => i.value === vm.modelFilterDDLValue)\r\n            }\r\n            var elem = vm.reportListingInfo.FILTERS.find(x => x.CustomFieldId === CustomFieldId);\r\n            elem.operator_display_name = vm.savedOperatorName;\r\n            elem.Value1 = vm.ValueDisplaytext;\r\n            elem.Value2 = vm.ValueDisplaytext2;\r\n            elem.Value1 = vm.ValueDisplaynumber;\r\n            elem.Value2 = vm.ValueDisplaynumber2;\r\n            elem.Value1 = vm.ValueDisplaydate;\r\n            elem.Value2 = vm.ValueDisplaydate2;\r\n            elem.MultiDropDown = Multiddlvalue?.join();\r\n            elem.SingleDropDown = GetDDLValue?.label;\r\n            elem.OPERATOR_ID = vm.operator_id;\r\n            var FirstFilterValue = '';\r\n            var SecondFilterValue = '';\r\n            var FirstValueforJson = '';\r\n            var SecondValueforJson = '';\r\n\r\n            if (vm.SelectedoperatorMappedDatatype == undefined && vm.CurrentOperatorSelected == undefined) {\r\n                var getoperator = vm.GetOperator.find(x => x.OPERATOR_ID === parseInt(elem.OPERATOR_ID))\r\n                vm.SelectedoperatorMappedDatatype = getoperator.MP[0].OPERATION_DATA_TYPE;\r\n                vm.CurrentOperatorSelected = getoperator.OPERATOR_EXPRESSION;\r\n                vm.savedOperatorName = getoperator.OPERATOR_DISPLAY_NAME;\r\n            }\r\n\r\n            if (elem.ColumnFieldDataCode == 'select' || elem.PickListOption == 'Lookup') {\r\n                if (vm.CurrentOperatorSelected == 'IN' || vm.CurrentOperatorSelected == 'NOT IN') {\r\n                    let CommaSepratedStringValues = vm.commaSepratedSelectedValues;\r\n                    FirstFilterValue = CommaSepratedStringValues;\r\n                    FirstValueforJson = CommaSepratedStringValues;\r\n                    \r\n                    \r\n                }\r\n                else {\r\n                    FirstFilterValue = '\\'' + vm.modelFilterDDLValue + '\\'';\r\n                    FirstValueforJson = vm.modelFilterDDLValue;\r\n                }\r\n            }\r\n\r\n            if (elem.ColumnFieldDataCode == 'date') {\r\n                if (elem.operator_display_name == 'Between') {\r\n                    FirstFilterValue = '\\'' + vm.ValueDisplaydate + '\\'';\r\n                    FirstValueforJson = vm.ValueDisplaydate;\r\n                    SecondFilterValue = '\\'' + vm.ValueDisplaydate2 + '\\'';\r\n                    SecondValueforJson = vm.ValueDisplaydate2;\r\n                } else {\r\n                    FirstFilterValue = '\\'' + vm.ValueDisplaydate + '\\'';\r\n                    FirstValueforJson = vm.ValueDisplaydate;\r\n                }\r\n            }\r\n\r\n            if (elem.ColumnFieldDataCode == 'string') {\r\n                if (vm.CurrentOperatorSelected == 'IN' || vm.CurrentOperatorSelected == 'NOT IN') {\r\n                    FirstFilterValue = vm.ValueDisplaytext\r\n                    FirstValueforJson = vm.ValueDisplaytext2;\r\n\r\n                    if (elem.operator_display_name == 'Equal to one of multiple possible values' || elem.operator_display_name == 'Not Equal to one of multiple possible values') {\r\n                        let Commaseprated = vm.ValueDisplaytext.split(',')\r\n                        FirstValueforJson = Commaseprated;\r\n                    }\r\n                }\r\n                else {\r\n                    FirstFilterValue = '\\'' + vm.ValueDisplaytext + '\\'';\r\n                    FirstValueforJson = vm.ValueDisplaytext;\r\n                }\r\n            }\r\n\r\n            if (elem.ColumnFieldDataCode == 'decimal' || elem.ColumnFieldDataCode == 'int' || elem.ColumnFieldDataCode == 'bigint') {\r\n                if (elem.operator_display_name == 'Between') {\r\n                    FirstFilterValue = '\\'' + vm.ValueDisplaynumber + '\\'';\r\n                    FirstValueforJson = vm.ValueDisplaynumber;\r\n                    SecondFilterValue = '\\'' + vm.ValueDisplaynumber2 + '\\'';\r\n                    SecondValueforJson = vm.ValueDisplaynumber2;\r\n                }\r\n                else {\r\n                    FirstFilterValue = '\\'' + vm.ValueDisplaynumber + '\\'';\r\n                    SecondValueforJson = vm.ValueDisplaynumber;\r\n                }\r\n            }\r\n\r\n\r\n            var checkfiledexist = vm.reportListingInfo.FILTERS.find(x => x.CustomFieldId === CustomFieldId)\r\n            var getoperatorvalues = vm.GetOperator.find(x => x.OPERATOR_ID === checkfiledexist.selectedOPValue);\r\n            var getexpression = vm.ConvertOperatorToExpression(getoperatorvalues.OPERATOR_EXPRESSION, FirstFilterValue, SecondFilterValue);\r\n            checkfiledexist.OPERATOR_ID = getoperatorvalues.OPERATOR_ID;\r\n            checkfiledexist.OperatorExpression = getexpression;\r\n            checkfiledexist.Value1 = FirstValueforJson;\r\n            checkfiledexist.Value2 = SecondValueforJson;\r\n            checkfiledexist.operator_display_name = getoperatorvalues.OPERATOR_DISPLAY_NAME;\r\n            //await vm.$parent.SetGroupDataforGraph([], vm.reportListingInfo.FILTERS);\r\n            //vm.ClosePopFilter(event);\r\n        },\r\n        async ApplyNewFilterToList() {\r\n            var vm = this;\r\n            this.reportListingInfo.FILTERS.forEach(function(x){\r\n                let operaterData = x.OperatorList.find(y => y.OPERATOR_ID == x.OPERATOR_ID);\r\n                let firstValue = '\\'' + x.Value1 + '\\'';\r\n                let secondValue =  '\\'' + x.Value2 + '\\'';\r\n                if(x.ColumnFieldDataCode == 'select' && (operaterData.OPERATOR_EXPRESSION == 'IN' || operaterData.OPERATOR_EXPRESSION == 'NOT IN')){\r\n                    //let valArray = x.Value1.split(\",\");\r\n                    firstValue =  '\\'' + x.Value1.join('\\',\\'') + '\\''\r\n                }\r\n                if(x.ColumnFieldDataCode == 'decimal' || x.ColumnFieldDataCode == 'int' || x.ColumnFieldDataCode == 'bigint'){\r\n                    x.Value1 = (x.Value1 == '') ? 0: x.Value1;\r\n                    x.Value2 =  (x.Value2 == '') ? 0: x.Value2;\r\n                    firstValue = x.Value1;\r\n                    secondValue =  x.Value2;\r\n                }\r\n                x.OperatorExpression = vm.ConvertOperatorToExpression(operaterData.OPERATOR_EXPRESSION, firstValue, secondValue);\r\n                x.FilterTypeAndorOr = vm.modelfiltertype;\r\n            });\r\n            vm.isLoading = true;\r\n            if (vm.reportListingInfo.GRAPH.length > 0) {\r\n                await vm.$parent.SetGroupDataforGraph([], vm.reportListingInfo.FILTERS);\r\n            }\r\n            vm.$parent.UpdatePreviewData([], vm.reportListingInfo.FILTERS);\r\n            vm.isLoading = false;\r\n            vm.close();\r\n        },\r\n        RemoveNewFilterFromList() {\r\n            var vm = this;\r\n            vm.$parent.RemoveNewFilterFromList();\r\n            vm.close();\r\n        },\r\n        PreventValues(event) {\r\n            var vm = this;\r\n            var ekey = event.keyCode;\r\n            if (ekey == 69 || ekey == 107 || ekey == 109) { event.preventDefault(); }\r\n        },\r\n        GetDropDownValueOnFilter() {\r\n            var vm = this;\r\n            console.log(vm.reportListingInfo.FILTERS);\r\n            vm.reportListingInfo.FILTERS.forEach(i => {\r\n                vm.modelfiltertype = i.FilterTypeAndorOr;\r\n                vm.GetOperatordata(i);\r\n                i.OperatorList = [];\r\n                if(typeof i.isManuallyAdded === 'undefined'){\r\n                    i.isManuallyAdded = false;\r\n                }\r\n                if (i.ColumnFieldDataCode == 'select' && i.PickListOption == 'Lookup') {\r\n                    var Multiddlvalue = [];\r\n                    var GetMultiddlvalue = [];\r\n                    vm.GetFilterSelectDDL(i);\r\n                    setTimeout(function () {\r\n                        if (i.operator_display_name == 'Equal to one of multiple possible values') {\r\n                            GetMultiddlvalue = i.Value1.split(',');\r\n                            GetMultiddlvalue.forEach(ddlvalues => {\r\n                                const isddlvalueexist = vm.options.find(j => j.value === ddlvalues)\r\n                                if (isddlvalueexist != -1 && isddlvalueexist != undefined) {\r\n                                    Multiddlvalue.push(isddlvalueexist.label);\r\n                                }\r\n                                i.MultiDropDown = Multiddlvalue?.join();\r\n                            })\r\n                        } else {\r\n                            var GetDDLValue = '';\r\n                            GetDDLValue = vm.options.find(i => i.value === i.Value1)\r\n                            if(GetDDLValue !=undefined)\r\n                                i.SingleDropDown = GetDDLValue.label;\r\n                        }\r\n                    }, 1000);\r\n                }\r\n            })\r\n        },\r\n        AddFilterRow: function(){\r\n            var vm = this;\r\n            this.$refs.FilterForm.validate().then(function(valid){\r\n                if(valid){\r\n                    vm.reportListingInfo.FILTERS.push({\r\n                        \"isManuallyAdded\": true,\r\n                        \"CustomFieldId\": \"\",\r\n                        \"FieldName\": \"\",\r\n                        \"ActualDataType\": \"string\",\r\n                        \"OperatorExpression\": \"\",\r\n                        \"FilterTypeAndorOr\": \"AND\",\r\n                        \"OPERATOR_ID\": \"\",\r\n                        \"operator_display_name\": \"\",\r\n                        \"Value1\": \"\",\r\n                        \"Value2\": \"\",\r\n                        \"IsMandatoryforFilter\": false,\r\n                        \"FieldIcons\": \"\",\r\n                        \"DisplayName\": \"\",\r\n                        \"PickListOption\": null,\r\n                        \"ColumnFieldDataCode\": \"\",\r\n                        \"selectedOPValue\": \"\",\r\n                        \"selectOptions\": []\r\n                    });\r\n                }\r\n            });\r\n        },\r\n        OnChangeFieldDdl: function(filterData){\r\n            filterData.OperatorExpression = \"\";\r\n            filterData.OPERATOR_ID = \"\";\r\n            filterData.selectOptions = [];\r\n            this.reportListingInfo.FIELDS.forEach(function(x){\r\n                if(x.CustomFieldId == filterData.CustomFieldId){\r\n                    filterData.DisplayName = x.DisplayName;\r\n                    filterData.ActualDataType = x.ColumnFieldDataCode;\r\n                    filterData.ColumnFieldDataCode = x.ColumnFieldDataCode;\r\n                    filterData.FieldName = x.FieldName;\r\n                    filterData.FieldIcons = x.FieldIcons;\r\n                    filterData.FieldIcons = x.FieldIcons;\r\n                }\r\n            });\r\n            this.GetOperatordata(filterData);\r\n        },\r\n        OnChangeOperator: function(filterData){\r\n            var vm = this;\r\n            filterData.selectOptions = [];\r\n            var Getddldata = [];\r\n            vm.isLoading = true;\r\n            if(filterData.OPERATOR_ID > 0){\r\n                let operaterData = filterData.OperatorList.find(x => x.OPERATOR_ID === filterData.OPERATOR_ID);\r\n                filterData.OperatorExpression = operaterData.OPERATOR_EXPRESSION;\r\n                if(filterData.OperatorExpression == \"IN\" || filterData.OperatorExpression == \"NOT IN\")\r\n                {\r\n                    filterData.Value1 = [];\r\n                }else{\r\n                    filterData.Value1 = \"\";\r\n                }\r\n            }\r\n            FilterViewReportServices.GetFilterDDLselectvalue(filterData.CustomFieldId).then(response => {\r\n                if (response.data.length > 0) {\r\n                    Getddldata = response.data;\r\n                    Getddldata.forEach(ddlitem => {\r\n                        filterData.selectOptions.push({\r\n                            value: ddlitem.value,\r\n                            label: ddlitem.name\r\n                        });\r\n                    })\r\n                    vm.isLoading = false;\r\n                } else { vm.isLoading = false; }\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n        },\r\n        DeleteFilterRow: function(index){\r\n            let vm = this;\r\n            this.reportListingInfo.FILTERS.splice(index, 1);\r\n        },\r\n        TruncateStr: function (str, len) {\r\n            var convertstring = '' + str;\r\n            if (convertstring != null)\r\n                if (convertstring.length <= len) return str;\r\n                else return convertstring.substring(0, len) + \"...\";\r\n        }\r\n    }\r\n}\r\n</script>\r\n<template>\r\n    <div id=\"modalViewCustomReportFilter\" role=\"dialog\" class=\"modal my-popups centre fade\" v-cloak>\r\n        <div role=\"document\" class=\"modal-dialog\">\r\n            <div class=\"modal-content\">\r\n                <ValidationObserver ref=\"FilterForm\"  v-slot=\"{ handleSubmit }\">\r\n                    <form @submit.prevent=\"handleSubmit(ApplyNewFilterToList)\" ref=\"FilterForm1\">\r\n                        <div class=\"modal-header mheader-user\">\r\n                            <button type=\"button\" class=\"close\" v-on:click=\"close()\">\r\n                                <em aria-hidden=\"true\" class=\"fa fa-times\"></em>\r\n                            </button>\r\n                            <h4 id=\"myModalLabel\" class=\"modal-title\">{{ $t('FILTER') }}</h4>\r\n                        </div>\r\n                        <div class=\"modal-body\">\r\n                            <loader :is-visible=\"isLoading\"></loader>\r\n                            <div class=\"list-item row filter-div\">\r\n                                <div class=\"col-sm-12 col-md-12 col-lg-12 col-xl-12 float-left\">\r\n                                    <div class=\"form-content\">                                    \r\n                                        <div id=\"divshowSearchCriteriaList\" class=\"col-sm-12 col-md-12 col-lg-12 col-xl-12 p-0 float-left\">\r\n                                            <div class=\"heading-border\">\r\n                                                <h5 class=\"h5\">\r\n                                                    <span> Filter</span><small class=\"float-right\">\r\n                                                    <a href=\"javascript:;\" style=\"cursor: pointer;\" title=\"Add\" v-on:click=\"AddFilterRow()\"><em class=\"fa fa-plus pr-2\"></em> Add </a></small>\r\n                                                </h5>\r\n                                            </div>\r\n                                            <div class=\"listing mt-2\">\r\n                                                <div class=\"mb-2\">\r\n                                                    <label>Include data if it matches</label>\r\n                                                <select class=\"form-control col-4\" v-model=\"modelfiltertype\">\r\n                                                    <option v-for=\"filtertype in FilterCategory\" :value=\"filtertype\">{{ filtertype }}</option>\r\n                                                </select>\r\n                                                </div>\r\n                                                <div class=\"table-responsive overflow-visible\">\r\n                                                    <table aria-describedby=\"serachfilter\" class=\"table table-bordered dt-responsive nowrap mt-0 dataTable no-footer dtr-inline\">\r\n                                                        <thead class=\"thead-bg\">\r\n                                                            <tr>\r\n                                                                <th scope=\"col\" style=\"min-width: 180px;\"><span>Name</span></th>\r\n                                                                <th scope=\"col\" style=\"min-width: 180px;\"><span>Operator</span></th>\r\n                                                                <th scope=\"col\" style=\"min-width: 480px;\"><span>Value</span></th>\r\n                                                                <th scope=\"col\" style=\"min-width: 50px;\"><span>Action</span></th>\r\n                                                            </tr>\r\n                                                        </thead>\r\n                                                        <tbody>\r\n                                                            <tr v-for=\"(filterdata, index) in reportListingInfo.FILTERS\" v-if=\"reportListingInfo.FILTERS.length > 0\">\r\n                                                                <td>\r\n                                                                    <span v-if=\"!filterdata.isManuallyAdded\">{{ GetLocalizedValue(filterdata.FieldName, filterdata.DisplayName) }}</span>\r\n                                                                    <Field :name=\"'Field'+index\" v-slot=\"{ field, errors, errorMessage, meta }\" rules=\"required\" v-if=\"filterdata.isManuallyAdded\">\r\n                                                                        <select :class=\"{'form-control':true, 'is-invalid': errors[0]}\" v-on:change=\"OnChangeFieldDdl(filterdata)\"  v-model=\"filterdata.CustomFieldId\">\r\n                                                                            <option value=\"\">Select field</option>\r\n                                                                            <option :value=\"item.CustomFieldId\" v-for=\"item in reportListingInfo.FIELDS\"\r\n                                                                            :disabled=\"(reportListingInfo.FILTERS.filter(x=> x.CustomFieldId == item.CustomFieldId)).length > 0\">{{  GetLocalizedValue(item.FieldName, item.DisplayName) }}</option>\r\n                                                                        </select>\r\n                                                                    </Field>\r\n                                                                </td>   \r\n                                                                <td>\r\n                                                                    <!-- {{ filterdata.operator_display_name }} -->\r\n                                                                    <Field :name=\"'Operator'+index\" v-slot=\"{ field, errors, errorMessage }\" rules=\"required\" >\r\n                                                                        <select :class=\"{'form-control':true, 'is-invalid': errors[0]}\" v-model=\"filterdata.OPERATOR_ID\" v-on:change=\"OnChangeOperator(filterdata)\">\r\n                                                                            <option value=\"\">Select Operator</option>\r\n                                                                            <option v-for=\"item in GetOperatorList\" :value=\"item.OPERATOR_ID\">{{ item.OPERATOR_DISPLAY_NAME }}</option>\r\n                                                                        </select>\r\n                                                                    </Field>\r\n                                                                </td>\r\n                                                                <td :style=\"((filterdata.ActualDataType == 'select' && (filterdata.OperatorExpression == 'IN' || filterdata.OperatorExpression == 'NOT IN') ? 'display: contents;' : ''))\">\r\n                                                                    <span v-if=\"filterdata.OperatorExpression == 'Is Not Null' || filterdata.OperatorExpression == 'Is Null'\">--</span>\r\n                                                                    \r\n                                                                    <Field :name=\"'StringFirstValue'+index\" v-slot=\"{ field, errors, errorMessage }\" rules=\"required\"  v-if=\"filterdata.ActualDataType == 'string' && filterdata.OperatorExpression != 'Is Not Null' && filterdata.OperatorExpression != 'Is Null'\">\r\n                                                                        <input type=\"text\" id=\"inpttxt\" :class=\"{'form-control':true, 'is-invalid': errors[0]}\"  v-model=\"filterdata.Value1\" :style=\"(filterdata.OperatorExpression == 'between'?'width: 45%;float: left;': '')\" />\r\n                                                                    </Field>\r\n\r\n                                                                    <Field :name=\"'StringSecondValue'+index\" v-slot=\"{ field, errors, errorMessage }\" rules=\"required\"  v-if=\"filterdata.ActualDataType == 'string' && filterdata.OperatorExpression == 'between'\">\r\n                                                                        <input  type=\"text\" id=\"inpttxt2\" :class=\"{'form-control':true, 'is-invalid': errors[0]}\"  v-model=\"filterdata.Value2\" style=\"width: 45%;float: left;margin-left: 50px;\" />\r\n                                                                    </Field>\r\n\r\n                                                                    <Field :name=\"'NumberFirstValue'+index\" v-slot=\"{ field, errors, errorMessage }\" rules=\"required\" v-if=\"(filterdata.ActualDataType == 'decimal' || filterdata.ActualDataType == 'int' || filterdata.ActualDataType == 'bigint') && filterdata.OperatorExpression != 'Is Not Null' && filterdata.OperatorExpression != 'Is Null'\">\r\n                                                                        <input  type=\"number\" id=\"inpttxtbtw\" :class=\"{'form-control':true, 'is-invalid': errors[0]}\" :style=\"(filterdata.OperatorExpression == 'between'?'width: 45%;float: left;': '')\" @keydown=\"PreventValues($event)\" v-model=\"filterdata.Value1\"/>\r\n                                                                    </Field>\r\n                                                                    \r\n                                                                    <Field :name=\"'NumberSecondValue'+index\" v-slot=\"{ field, errors, errorMessage }\" rules=\"required\" v-if=\"(filterdata.ActualDataType == 'decimal' || filterdata.ActualDataType == 'int' || filterdata.ActualDataType == 'bigint') && filterdata.OperatorExpression == 'between'\">\r\n                                                                        <input  type=\"number\" id=\"inpttxtbtw\" :class=\"{'form-control':true, 'is-invalid': errors[0]}\" style=\"width: 45%;float: left;margin-left: 50px;\" @keydown=\"PreventValues($event)\" v-model=\"filterdata.Value2\"/>\r\n                                                                    </Field>\r\n\r\n                                                                    <Field :name=\"'DateFirstValue'+index\" v-slot=\"{ field, errors, errorMessage }\" rules=\"required\" v-if=\"(filterdata.ActualDataType == 'date' || filterdata.ActualDataType == 'datetime') && filterdata.OperatorExpression != 'Is Not Null' && filterdata.OperatorExpression != 'Is Null'\">\r\n                                                                        <input  type=\"date\" id=\"inpttxtdate1\" :class=\"{'form-control':true, 'is-invalid': errors[0]}\" :style=\"(filterdata.OperatorExpression == 'between'?'width: 45%;float: left;': '')\" v-model=\"filterdata.Value1\"/>\r\n                                                                    </Field>\r\n                                                                    \r\n                                                                    <Field :name=\"'DateSecondValue'+index\" v-slot=\"{ field, errors, errorMessage }\" rules=\"required\" v-if=\"(filterdata.ActualDataType == 'date' || filterdata.ActualDataType == 'datetime') && filterdata.OperatorExpression == 'between'\">\r\n                                                                        <input type=\"date\" :min=\"filterdata.Value1\" :class=\"{'form-control':true, 'is-invalid': errors[0]}\" style=\"width: 45%;float: left;margin-left: 20px;\" v-model=\"filterdata.Value2\"/>\r\n                                                                    </Field>\r\n\r\n                                                                    <Field :name=\"'Selectddl'+index\" v-slot=\"{ field, errors, errorMessage }\" rules=\"required\" v-if=\"filterdata.ActualDataType == 'select' && filterdata.OperatorExpression != 'IN' && filterdata.OperatorExpression != 'NOT IN' && filterdata.OperatorExpression != 'Is Not Null' && filterdata.OperatorExpression != 'Is Null'\">\r\n                                                                        <select :class=\"{'form-control':true, 'is-invalid': errors[0]}\"  v-model=\"filterdata.Value1\">\r\n                                                                            <option value=\"\">Select value</option>\r\n                                                                            <option v-for=\"DDLitem in filterdata.selectOptions\" :key=\"DDLitem.value\" :value=\"DDLitem.value\">\r\n                                                                                {{ DDLitem.label }}\r\n                                                                            </option>\r\n                                                                        </select>\r\n                                                                    </Field>\r\n                                                                    \r\n                                                                    <Field :name=\"'MultiSelectddl'+index\" v-slot=\"{ field, errors, errorMessage }\" rules=\"required\" v-if=\"filterdata.ActualDataType == 'select' && (filterdata.OperatorExpression == 'IN' || filterdata.OperatorExpression == 'NOT IN')\">\r\n                                                                        <div>\r\n                                                                            <!-- <Multiselect v-bind=\"field\" :class=\"{'form-control':true, 'is-invalid': errorMessage}\" mode=\"tags\" :searchable=\"true\" :taggable=\"false\" :close-on-select=\"false\" :options=\"filterdata.selectOptions\" /> -->\r\n                                                                            <Multiselect                                                                          \r\n                                                                                :class=\"{'form-control':true, 'is-invalid': errors[0]}\"\r\n                                                                                v-model=\"filterdata.Value1\"\r\n                                                                                :multiple=\"true\"                                                                                                \r\n                                                                                label=\"label\" \r\n                                                                                track-by=\"label\"\r\n                                                                                placeholder=\"Select\"\r\n                                                                                :searchable=\"true\"\r\n                                                                                mode=\"multiple\"\r\n                                                                                :hideSelected=\"false\"\r\n                                                                                :close-on-select=\"false\"\r\n                                                                                :options=\"filterdata.selectOptions\">\r\n                                                                                <template v-slot:multiplelabel=\"{ values }\">\r\n                                                                                    <div class=\"multiselect-multiple-label\" v-if=\"values && values.length>0\">\r\n                                                                                        <div class=\"multiselect-tags\" data-tags=\"\">\r\n                                                                                            <span class=\"multiselect-tag\" tabindex=\"-1\" :aria-label=\"values[0].label\">{{ TruncateStr(values[0].label,18) }} \r\n                                                                                                <span class=\"multiselect-tag-remove\">\r\n                                                                                                    <span class=\"multiselect-tag-remove-icon\"></span>\r\n                                                                                                </span>\r\n                                                                                            </span>\r\n                                                                                        </div>\r\n                                                                                        <span v-if=\"values && values.length>1\">\r\n                                                                                        {{ values.length }} options selected\r\n                                                                                        </span>\r\n                                                                                    </div>                                                                                                                                                                          \r\n                                                                                </template>\r\n                                                                            </Multiselect>\r\n                                                                        </div>\r\n                                                                    </Field>\r\n                                                                </td>\r\n                                                                <td class=\"text-center\">\r\n                                                                    <a href=\"javascript:;\" v-on:click=\"DeleteFilterRow(index)\"><em v-if=\"filterdata.isManuallyAdded\" class=\"fa fa-trash text-danger pr-2\"></em></a>\r\n                                                                    <span v-if=\"!filterdata.isManuallyAdded\">--</span>\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                            <tr  v-if=\"reportListingInfo.FILTERS.length == 0\">\r\n                                                                <td colspan=\"10\" class=\"text-center text-danger py-3\">No record(s) found</td>\r\n                                                            </tr>\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-12 mb-3 mr-auto d-flex align-items-center justify-content-end\">\r\n                            <button type=\"submit\" class=\"btn btn-success my-2 my-sm-0 mr-2 pl-1\"> <span\r\n                                    class=\"fa fa-search\"></span> Search</button>\r\n                            <a class=\"btn btn-danger pl-1 mb-0\" v-on:click=\"RemoveNewFilterFromList()\">  <span\r\n                                    class=\"fa fa-times\"></span> Reset Filter</a>\r\n                        </div>\r\n                    </form>\r\n                </ValidationObserver>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<style scoped>\r\n.width80 {\r\n    width: 90px;\r\n}\r\n\r\n.width120 {\r\n    width: 130px;\r\n}\r\n</style>\r\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./modalViewCustomReportFilter.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./modalViewCustomReportFilter.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./modalViewCustomReportFilter.vue?vue&type=template&id=3347de16&scoped=true&\"\nimport script from \"./modalViewCustomReportFilter.vue?vue&type=script&lang=js&\"\nexport * from \"./modalViewCustomReportFilter.vue?vue&type=script&lang=js&\"\nimport style0 from \"./modalViewCustomReportFilter.vue?vue&type=style&index=0&id=3347de16&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"3347de16\",\n  null\n  \n)\n\nexport default component.exports","<template>\r\n    <div>\r\n        <loader :is-visible=\"isLoading\"></loader>\r\n        <div :class=\"ReportListParameters == undefined ? 'right-content hr_jobpost w-100' : 'right-content'\">\r\n            <div class=\"col-md-12 p-0 mb-2\">\r\n                <div class=\"theme-primary partition p-actions-expand\">\r\n                    <span class=\"p-name text-white\">{{ reportName }}</span>\r\n                    <span class=\"p-actions float-right mydbsize\">\r\n                        <a v-on:click=\"OpenFilter\"\r\n                            :class=\"isFilterExist > 0 ? 'p-action-btn text-white dash' : 'p-action-btn text-white dash'\">\r\n                            <em class=\"fa fa-filter\"></em><br>{{ $t('Filter') }}\r\n                        </a>\r\n                        <a v-on:click=\"EditReport\"\r\n                            :class=\"CanEdit == true ? 'p-action-btn text-white dash' : 'p-action-btn text-white dash d-none'\"\r\n                            title=\"Edit Report\">\r\n                            <em class=\"fa fa-pencil text-white action-icon\"></em><br>{{ $t('Edit') }}</a>\r\n                        <a v-on:click=\"ExportToPDF('download')\" class=\"p-action-btn text-white dash\"\r\n                            data-original-title=\"ExportToPDF\">\r\n                            <em class=\"fa fa-file-pdf-o\"></em><br>{{ $t('PDF') }}</a>\r\n                        <a v-on:click=\"ExportToPDF('print')\" class=\"p-action-btn text-white dash\" data-original-title=\"Print\">\r\n                            <em class=\"fa fa-file-pdf-o\"></em><br>{{ $t('PRINT') }}</a>\r\n                        <a v-on:click=\"ExportToExcel\" class=\"p-action-btn text-white dash\" data-original-title=\"ExportToExcel\">\r\n                            <em class=\"fa fa-file-excel-o\"></em><br>{{ $t('Excel') }}</a>\r\n                        <a v-show=\"showGraphBtn\" v-on:click=\"OpenGraph\" class=\"p-action-btn text-white dash\">\r\n                            <em class=\"fa fa-pie-chart\"></em><br>{{ showgraph ? $t('CollapseGraph') : $t('ExpandGraph') }}\r\n                        </a>\r\n                        <a v-on:click=\"OpenSortingPopup\" class=\"p-action-btn text-white dash\" data-original-title=\"Sort\">\r\n                            <em class=\"fa fa-sort-amount-asc\"></em><br>{{ $t('Sort') }}\r\n                        </a>\r\n                        <a v-on:click=\"OnBack\" class=\"p-action-btn text-white dash\" data-original-title=\"Back\"\r\n                            >\r\n                            <em class=\"fa fa-angle-double-left\"></em><br>{{ $t('Back') }}\r\n                        </a>\r\n                    </span>\r\n                    <span class=\"collapse-head-btns\">\r\n                        <a href=\"javascript:;\" class=\"collapse-btns\">\r\n                            <em class=\"fa fa-angle-up text-white\"></em>\r\n                        </a>\r\n                    </span>\r\n                </div>\r\n\r\n                <div class=\"parentdiv datarepfix2\">\r\n                    <div class=\"verticle-action lft75 rt30\">\r\n                        <span class=\"action-list-box small\" style=\"width:400px\">\r\n                            <span id=\"action-list1\"\r\n                                class=\"text-left p-0 datarep mt-3 w-90 float-left bg_outerdark borderbababa \"\r\n                                v-if=\"isSortPopup\">\r\n                                <div class=\"float-left col-12\">\r\n                                    <div class=\"container-fluid p-0\">\r\n                                    </div>\r\n                                    <div class=\"row px-3 pt-3 pb-0\" v-for=\"(input, index) in sortColummnarray\">\r\n                                        <div class=\"col-lg-5 pl-0 pr-3\">\r\n                                            <div class=\"form-group mb-0\">\r\n                                                <label class=\"pb-2\">{{ $t('SortBy') }}</label>\r\n                                                <select v-model=\"input.sortcolummnId\" class=\"form-control\"\r\n                                                    :id=\"'SortValue' + index\">\r\n                                                    <option\r\n                                                        v-for=\"item in reportListingInfo.FIELDS.filter(x => x.Calculated_Field == false)\"\r\n                                                        :value=\"item.CustomFieldId != '' ? item.CustomFieldId : item.FieldName\"\r\n                                                        :key=\"item.CustomFieldId\"\r\n                                                        :disabled=\"(sortColummnarray.filter(x => x.sortcolummnId == item.CustomFieldId)).length > 0\">\r\n                                                        {{ item.DisplayName ? GetLocalizedValue(item.DisplayName) :\r\n                                                            GetLocalizedValue(item.FieldName) }}</option>\r\n                                                </select>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-lg-5 pl-0 pr-3\">\r\n                                            <div class=\"form-group mb-0\">\r\n                                                <label class=\"pb-2\">{{ $t('OrderBy') }}</label>\r\n                                                <select v-model=\"input.columnOrders\" class=\"form-control\">\r\n                                                    <option>{{ $t('ASC') }}</option>\r\n                                                    <option>{{ $t('DESC') }}</option>\r\n                                                </select>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-lg-2 pl-0 pr-3 d-flex align-items-center\">\r\n                                            <div class=\"form-group mb-0\">\r\n                                                <a v-on:click=\"AddSortingForm(input)\"><em\r\n                                                        class=\"fa fa-plus-circle font-24 text-success mt-3\"></em></a>\r\n                                                <a v-show=\"sortColummnarray[0].sortcolummnId != ''\"\r\n                                                    v-on:click=\"RemoveSortingForm(input)\"><em\r\n                                                        class=\"fa fa-times-circle font-24 text-danger mt-3 ml-1\"></em></a>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <a class=\"btn btn-success my-3 mr-2 pl-1\" v-on:click=\"EnableSortingSearch(input)\"> \r\n                                        <span class=\"fa fa-sort-amount-desc\"></span>{{ $t(' SORT') }}</a>\r\n                                    <a class=\"btn btn-danger pl-1 mb-0\" v-on:click=\"RemoveSortingFromList()\">  <span\r\n                                            class=\"fa fa-times\"></span> Reset Sort</a>\r\n                                </div>\r\n                                <div class=\"va_lft25 top4\"><em class=\"icon-solid arrow-solid-left text-secondary\"\r\n                                        style=\"font-size: 20pt;\"></em>\r\n                                </div>\r\n                                <button type=\"button\" class=\"close closebtnsmall\" v-on:click=\"isSortPopup = false\">\r\n                                    <em aria-hidden=\"true\" class=\"fa fa-times text\"></em>\r\n                                </button>\r\n                            </span>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-12 p-0 mb-2\">\r\n                <div class=\"tab-pane mb-0\">\r\n                    <div class=\"tab-content fsmtabcontrolMobileView\" id=\"myTabContent\">\r\n                        <!-- Graph  -->\r\n                        <div v-if=\"showgraph\" class=\"card mb-3 probx\">\r\n                            <div class=\"card-header\">\r\n                                <h2>{{ $t('Graph') }}</h2>\r\n                            </div>\r\n                            <div class=\"card-body\" id=\"Reportpdf\">\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-12 col-lg-12 text-center\">\r\n                                        <div class=\"border bg-light position-absolute text-left p-0\"\r\n                                            style=\"z-index:99; height:auto; max-width:20%;\">\r\n                                            <ul class=\"graphinfo\">\r\n                                                <li><label>X-axis:</label> {{ GetLocalizedValue(XAxisFieldName) }}</li>\r\n                                                <li><label>Y-axis:</label> {{ GetLocalizedValue(YAxisFieldName) }}</li>\r\n                                                <li v-show=\"aggregateFunctionResult != 0\">\r\n                                                    <label># {{ AggregateFuncField }}:</label>{{ aggregateFunctionResult }}\r\n                                                </li>\r\n\r\n                                            </ul>\r\n                                        </div>\r\n                                        <div v-if=\"chartType == 'line' || chartType == 'bar' || chartType == 'horizontal_bar'\">\r\n                                            <VueApexCharts ref=\"chart\" :type=\"chartType\" height=\"auto\" width=\"40%\"\r\n                                                :options=\"chartOptions\" :series=\"chartSeries\">\r\n                                            </VueApexCharts>\r\n                                        </div>\r\n                                        <div v-if=\"chartType == 'pie' || chartType == 'donut'\">\r\n                                            <VueApexCharts ref=\"chart\" :type=\"chartType\" height=\"auto\" width=\"40%\"\r\n                                                :options=\"chartOptions\" :series=\"chartSeries\">\r\n                                            </VueApexCharts>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <!-- Graph  -->\r\n\r\n                        <!-- Listing Table -->\r\n                        <div class=\"tab-pane p-0 pb-2 border-0 active\" role=\"tabpanel\" id=\"tab-detail-content\"\r\n                            aria-labelledby=\"tab-detail-content\">\r\n                            <div class=\"listing\">\r\n                                <div class=\"table-responsive table-fix-header\">\r\n                                    <table class=\"table table-bordered mt-0\" style=\"width:100%\" v-if=\"noRecord\"\r\n                                        aria-label=\"NO Record Found\">\r\n                                        <thead>\r\n                                            <th scope=\"col\"></th>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <tr style=\"cursor:initial;\">\r\n                                                <td colspan=\"4\">\r\n                                                    <div\r\n                                                        class=\"text-center text-danger d-flex align-items-center justify-content-center norecs\">\r\n                                                        {{ $t(\"NoRecordfound\") }}</div>\r\n                                                </td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n\r\n                                    <table class=\"table table-bordered mt-0\" style=\"width:100%\" id=\"Reportpdf\"\r\n                                        aria-label=\"View Record\">\r\n\r\n                                        <thead class=\"thead-bg\">\r\n                                            <tr>\r\n                                                <th scope=\"col\" v-for=\"(item, pindex) in previewgroupdata\" :key=\"pindex\"\r\n                                                    v-if=\"showdata\">\r\n                                                    {{ GetLocalizedValue((item.DisplayName != null && item.DisplayName != '') ?\r\n                                                        item.DisplayName : item.FieldName) }}\r\n                                                </th>\r\n                                                <th scope=\"col\" v-for=\"(column, cindex) in previewcolumn\" :key=\"cindex\">\r\n                                                    <span v-on:click=\"sortdata(column.FieldName, column.CustomFieldId)\"\r\n                                                        v-if=\"!column.Calculated_Field\"\r\n                                                        v-bind:class=\"{\r\n                                                            'sort': true, 'tb_headerSortUp': SortExp == 'ASC' && SortBy == column.FieldName,\r\n                                                            'tb_headerSortDown': SortExp == 'DESC' && SortBy == column.FieldName\r\n                                                        }\">\r\n                                                        {{ GetLocalizedValue((column.DisplayName != null && column.DisplayName\r\n                                                            != '') ? column.DisplayName : column.FieldName) }}\r\n                                                    </span>\r\n                                                    <span v-else>\r\n                                                        {{ GetLocalizedValue((column.DisplayName != null && column.DisplayName\r\n                                                            != '') ? column.DisplayName : column.FieldName) }}\r\n                                                    </span>\r\n                                                </th>\r\n                                            </tr>\r\n                                        </thead>\r\n\r\n                                        <tbody v-for=\"(item, previewindex) in previewdata\" :key=\"previewindex\">\r\n                                            <tr v-for=\"(sitem, sindex) in previewdata[previewindex].data\" v-if=\"showdata\" :key=\"sindex\">\r\n                                                <template v-if=\"sindex == 0\">\r\n                                                    <td v-for=\"(gitem, gindex) in previewgroupdata\" :key=\"gindex\"\r\n                                                        :class=\"{ 'onlyrtbod': true, '': item.totalRecord == null }\"\r\n                                                        :rowspan=\"item.totalRecord\">{{ (gitem.DisplayName != null &&\r\n                                                            gitem.DisplayName != '') ? item[gitem.DisplayName] :\r\n                                                            item[gitem.FieldName] }} ({{ item.totalRecord }})</td>\r\n                                                </template>\r\n                                                <td v-for=\"(column, groupindex) in previewcolumn\" :key=\"groupindex\">\r\n                                                    <span\r\n                                                        v-html=\"(sitem[column.DisplayName] != null && sitem[column.DisplayName] != '') ?\r\n                                                            (sitem[column.DisplayName] || sitem[column.DisplayName] == 0 ? sitem[column.DisplayName] : '') :\r\n                                                            (sitem[column.FieldName] || sitem[column.FieldName] == 0 ? sitem[column.FieldName] : '')\">\r\n                                                    </span>\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr v-if=\"showcoldata\">\r\n                                                <td v-for=\"(column, columnindex) in previewcolumn\" :key=\"columnindex\">\r\n                                                    <span\r\n                                                        v-html=\"(item[column.DisplayName] != null && item[column.DisplayName] != '') ?\r\n                                                            (item[column.DisplayName] || item[column.DisplayName] == 0 ? item[column.DisplayName] : '') :\r\n                                                            (item[column.FieldName] || item[column.FieldName] == 0 ? item[column.FieldName] : '')\">\r\n                                                    </span>\r\n                                                </td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                                <Pager :class=\"{ 'd none': true, '': TotalRecords > 10 }\" :numberofrecords=\"TotalRecords\"\r\n                                    prev-text=\"Prev\" first-text=\"First\" last-text=\"Last\" next-text=\"Next\" v-on:click=\"pagerMethod\"\r\n                                    v-on:change=\"SetPageSize\">\r\n                                </Pager>\r\n                            </div>\r\n                        </div>\r\n                        <!-- Listing Table -->\r\n                    </div>\r\n                    <!-- <div\r\n                        :class=\"TotalRecords > 100000 ? 'table-responsive table-fix-header' : 'table-responsive table-fix-header d-none'\">\r\n                        <table class=\"table table-bordered mt-0\" style=\"width:100%\" aria-label=\"NO Record Found\">\r\n                            <thead>\r\n                                <th scope=\"col\"></th>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr style=\"cursor:initial;\">\r\n                                    <td colspan=\"4\">\r\n                                        <div\r\n                                            class=\"text-center text-danger d-flex align-items-center justify-content-center norecs\">\r\n                                            <a @click=\"DownloadExceedRecords\"\r\n                                                class=\"text-center text-danger d-flex align-items-center justify-content-center norecs\">\r\n                                                {{ $t(\"LimitExceed\") }}</a>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div> -->\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <modalViewCustomReportFilter v-if=\"showViewCustomReportFilter\" @close=\"showViewCustomReportFilter = false\"\r\n            :reportListingInfo=\"reportListingInfo\">\r\n        </modalViewCustomReportFilter>\r\n    </div>\r\n</template>\r\n<script>\r\nimport ViewReportServices from \"@/services/DataService\";\r\nimport modalViewCustomReportFilter from \"../../../components/Common/Modal/modalViewCustomReportFilter.vue\"\r\nimport { storeToRefs } from \"pinia\";\r\nimport { useloggedUserInfo } from \"@/stores/UserInfo\";\r\nconst { GetUserInfo } = storeToRefs(useloggedUserInfo());\r\nimport VueApexCharts from \"vue-apexcharts\";\r\nimport Pager from '../../../components/Common/Pager.vue';\r\nimport * as pdfFonts from \"pdfmake/build/vfs_fonts.js\"; // <-- vfs_fonts has to be imported before pdfmake\r\nimport pdfMake from 'pdfmake';\r\npdfMake.vfs = pdfFonts.pdfMake.vfs;\r\n\r\n\r\nexport default {\r\n    components: {\r\n        VueApexCharts,\r\n        Pager,\r\n        modalViewCustomReportFilter\r\n    },\r\n    data() {\r\n        return {\r\n            // filter\r\n            showViewCustomReportFilter: false,\r\n            isFilterExist: 0,\r\n            isLoading: false,\r\n            showdata: false,\r\n            showcoldata: true,\r\n            showgraph: false,\r\n            reportName: '',\r\n            showGraphBtn: true,\r\n            viewreportparameters:'',\r\n            count:0,\r\n\r\n            //Sorting\r\n            isSortPopup: false,\r\n            sortColummnarray: [{ sortcolummnId: \"\", columnOrders: \"\" }],\r\n            SortExp: null,\r\n            SortBy: null,\r\n\r\n            //Chart \r\n            chartTypes: null,\r\n            chartType: \"\",\r\n            chartOptions: {},\r\n            chartSeries: [],\r\n            chartOptionXAxisData: [],\r\n            chartSeriesData: [],\r\n            colourList: ['#8892d0', '#da9c49', '#94c5a3', '#e67d21', '#787878', '#c59e71', '#38b8df', '#f55e1a', '#207a92', '#13599c'],\r\n            AggregateFuncField: null,\r\n            aggregateFunctionResult: 0,\r\n            XAxisFieldName: null,\r\n            YAxisFieldName: null,\r\n            groupGraphlist: [],\r\n            GraphJson: [],\r\n\r\n            //List\r\n            previewcolumn: [],\r\n            previewgroupdata: [],\r\n            reportListingInfo: [],\r\n            previewdata: [],\r\n            CanEdit: true,\r\n\r\n            //pagination\r\n            TotalRecords: 0,\r\n            PageNumber: 1,\r\n            PageSize: 10,\r\n            TotalPages: 0,\r\n\r\n            //Export to PDF\r\n            allReocrdsData: null,\r\n            TableBody: [],\r\n            TableHeader: [],\r\n            pdfpreviewdata: [],\r\n            ExcelJsonData: null,\r\n            count: 0,\r\n            IsForPreview: 0,\r\n            SingleSortArray: [],\r\n            MainSortingArray: [],\r\n            MainUpdatedArray: [],\r\n            SelectedChartTypeId: '',\r\n            noRecord: true\r\n        }\r\n    },\r\n    props: {\r\n        ReportListParameters: {\r\n            type: Object\r\n        }\r\n    },\r\n    created: async function () {\r\n        var vm = this;\r\n        vm.isLoading = true;\r\n        vm.viewreportparameters = vm.ReportListParameters == undefined ? JSON.parse(atob(vm.$route.params.ReportID)) : vm.ReportListParameters;\r\n        await vm.GetChartTypes();\r\n        await vm.GetPreviewData(vm.viewreportparameters.ReportID);\r\n        if (vm.viewreportparameters.ACCESS == 1) {\r\n            vm.CanEdit = false;\r\n        }\r\n        else {\r\n            vm.CanEdit = true;\r\n        }\r\n        vm.count += 1;\r\n    },\r\n    methods: {\r\n        // open filter\r\n        OpenFilter: function () {\r\n            var vm = this;\r\n            vm.showViewCustomReportFilter = true;\r\n            $(\"#modalViewCustomReportFilter\").modal(\"show\");\r\n            setTimeout(function () {\r\n                $(\"#modalViewCustomReportFilter\").modal('show');\r\n                setTimeout(function () {\r\n                    vm.SetBootstraptoolTip();\r\n                }, 200);\r\n            }, 1000);\r\n        },\r\n        RemoveNewFilterFromList() {\r\n            var vm = this;\r\n            vm.isLoading = true;\r\n            vm.GetPreviewData(vm.viewreportparameters.ReportID);\r\n            vm.MainUpdatedArray = [];\r\n            vm.noRecord = false;\r\n        },\r\n        // show graph model based on ExpandGraph or CollapseGraph click\r\n        OpenGraph() {\r\n            var vm = this;\r\n            if (vm.showgraph) {\r\n                vm.showgraph = false;\r\n            }\r\n            else {\r\n                vm.showgraph = true;\r\n            }\r\n        },\r\n\r\n        //  on Click back button \r\n        OnBack: function () {\r\n            var vm = this;\r\n            vm.$router.push({ name: 'CustomReports' })\r\n        },\r\n\r\n        // View/fetch  data on click of View button and based on its reportId\r\n        GetPreviewData(ReportId) {\r\n            var vm = this;\r\n            var params = `ReportId=${ReportId}&IsPaged=1`\r\n            ViewReportServices.GetReportDetailsbyId(params).then(async (response) => {\r\n                if(response.data == \"No Data\"){\r\n                    vm.ShowAlert(vm.$t(\"ReportNotExist\"), 'failure', true, vm.$t('Alert'));\r\n                    vm.$router.push({ name: 'CustomReports' });\r\n                    vm.isLoading = false;\r\n                }else{\r\n                if (response.data != null && response.data != undefined && response.data != \"\") {\r\n                    vm.reportListingInfo = response.data.JSON_To_Create_ReportListing[0].Info;\r\n                    vm.isFilterExist = vm.reportListingInfo.FILTERS.length;\r\n                    var listingData = response.data.ReportListing;\r\n                    vm.reportName = vm.reportListingInfo.REPORTNAME;\r\n                    vm.previewcolumn = [];\r\n                    if (listingData != null && listingData != undefined && listingData == 1) {\r\n                        if (vm.reportListingInfo.GRAPH.length > 0) {\r\n                            await vm.SetGroupDataforGraph();\r\n                        }\r\n                        await vm.UpdatePreviewData();\r\n                        await vm.GetSortingData();\r\n                        vm.BindGraph();\r\n                    }\r\n                    else {\r\n                        vm.noRecord = true;\r\n                        vm.showgraph = false;\r\n                        vm.showGraphBtn = false;\r\n                        vm.isLoading = false;\r\n                    }\r\n                } else {\r\n                    vm.noRecord = true;\r\n                    vm.showgraph = false;\r\n                    vm.showGraphBtn = false;\r\n                    vm.isLoading = false;\r\n                }\r\n            }\r\n            })\r\n        },\r\n\r\n        // Bind the Column List without grouping \r\n        Bindlisting: function (listingData) {\r\n            var vm = this;\r\n            if (listingData != null && listingData != undefined) {\r\n                for (let j in vm.reportListingInfo.FIELDS) {\r\n                    if (vm.reportListingInfo.FIELDS[j].FieldName && vm.reportListingInfo.FIELDS[j].DisplayName != 'ROWNUMBER'\r\n                        && vm.reportListingInfo.FIELDS[j].FieldName != 'Total_Records' && vm.reportListingInfo.FIELDS[j].DisplayName != 'Total_Records') {\r\n                        vm.previewcolumn.push({\r\n                            \"FieldName\": vm.reportListingInfo.FIELDS[j].DisplayName != null && vm.reportListingInfo.FIELDS[j].DisplayName != '' ? vm.reportListingInfo.FIELDS[j].DisplayName :\r\n                                vm.reportListingInfo.FIELDS[j].FieldName,\r\n                            \"CustomFieldId\": vm.reportListingInfo.FIELDS[j].CustomFieldId, \"Calculated_Field\": vm.reportListingInfo.FIELDS[j].Calculated_Field\r\n                        })\r\n                    }\r\n                }\r\n                vm.noRecord = false;\r\n            }\r\n            else {\r\n                vm.noRecord = true;\r\n            }\r\n        },\r\n\r\n        // Bind the column list if the list is grouped.\r\n        BindGroupListing: function (listingData) {\r\n            var vm = this;\r\n            vm.previewgroupdata = [];\r\n            vm.showdata = true;\r\n            vm.showcoldata = false;\r\n            if (listingData != null && listingData != undefined) {\r\n                for (let i in vm.reportListingInfo.GROUP) {\r\n                    vm.previewgroupdata.push({\r\n                        \"FieldName\": vm.reportListingInfo.GROUP[i].DisplayName != null && vm.reportListingInfo.GROUP[i].DisplayName != '' ? vm.reportListingInfo.GROUP[i].DisplayName :\r\n                            vm.reportListingInfo.GROUP[i].FieldName,\r\n                        \"CustomFieldId\": vm.reportListingInfo.FIELDS[i].CustomFieldId\r\n                    })\r\n                    for (let j in vm.reportListingInfo.FIELDS) {\r\n                        if (vm.reportListingInfo.GROUP[i].FieldName != vm.reportListingInfo.FIELDS[j].FieldName) {\r\n                            vm.previewcolumn.push({\r\n                                \"FieldName\": vm.reportListingInfo.FIELDS[j].DisplayName != null && vm.reportListingInfo.FIELDS[j].DisplayName != '' ? vm.reportListingInfo.FIELDS[j].DisplayName :\r\n                                    vm.reportListingInfo.FIELDS[j].FieldName,\r\n                                \"CustomFieldId\": vm.reportListingInfo.FIELDS[j].CustomFieldId, \"Calculated_Field\": vm.reportListingInfo.FIELDS[j].Calculated_Field\r\n                            })\r\n                        }\r\n                    }\r\n                }\r\n                vm.noRecord = false;\r\n            }\r\n            else {\r\n                vm.noRecord = true;\r\n            }\r\n        },\r\n\r\n        // fetch the data for Graph\r\n        async SetGroupDataforGraph(sortColummnarray, UpdatedFilterArray) {\r\n            var vm = this;\r\n            vm.IsFilterValid();\r\n            var temp = {\r\n                \"Info\": {\r\n                    \"REPORTID\": vm.reportListingInfo.REPORTID,\r\n                    \"REPORTNAME\": vm.reportListingInfo.REPORTNAME,\r\n                    \"MODULENAME\": vm.reportListingInfo.MODULENAME,\r\n                    \"SUBMODULECODE\": vm.reportListingInfo.SUBMODULECODE,\r\n                    \"SUBMODULEID\": vm.reportListingInfo.SUBMODULEID,\r\n                    \"PAGESIZE\": parseInt(vm.PageSize),\r\n                    \"PAGENUMBER\": parseInt(vm.PageNumber),\r\n                    \"IS_PAGED\": 0,\r\n                    \"IsForPreview\": vm.IsForPreview,\r\n                    \"FIELDS\": vm.reportListingInfo.FIELDS,\r\n                    \"FILTERS\": UpdatedFilterArray == undefined ? vm.reportListingInfo.FILTERS : UpdatedFilterArray,\r\n                    \"GROUP\": [],\r\n                    \"CHARTGROUPARRAY\": vm.reportListingInfo.CHARTGROUPARRAY,\r\n                    \"SORTING\": vm.reportListingInfo.SORTING,\r\n                    \"GRAPH\": vm.reportListingInfo.GRAPH,\r\n                    \"EXPRESSION\": vm.reportListingInfo.EXPRESSION,\r\n                    \"EXPRESSIONFIELDSARRAY\": vm.reportListingInfo.EXPRESSIONFIELDSARRAY\r\n                }\r\n\r\n            }\r\n            var jsondata = JSON.stringify(temp);\r\n            await ViewReportServices.PreviewReport(jsondata).then((response) => {\r\n                if (response.data != null && response.data != undefined) {\r\n                    vm.groupGraphlist = JSON.parse(response.data[0].Value);\r\n                    if (UpdatedFilterArray != undefined) {\r\n                        vm.BindGraph();\r\n                    }\r\n                }\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            })\r\n        },\r\n\r\n        // fetch the data when user change the paging \r\n        UpdatePreviewData(sortColummnarray, UpdatedFilterArray) {\r\n            var vm = this;\r\n            vm.isLoading = true;\r\n            var sortingArray = [];\r\n            vm.IsFilterValid();\r\n            vm.MainSortingArray = sortColummnarray;\r\n            vm.MainUpdatedArray = UpdatedFilterArray;\r\n            for (var i in sortColummnarray) {\r\n                if (sortColummnarray[i].sortcolummnId != undefined && sortColummnarray[i].sortcolummnId != \"\") {\r\n                    sortingArray.push(\r\n                        { \"CustomFieldId\": sortColummnarray[i].sortcolummnId, \"SORTTYPE\": sortColummnarray[i].columnOrders, \"SortIndex\": parseInt(i), \"Calculated_Field\": \"\" }\r\n                    )\r\n                    vm.reportListingInfo.FIELDS.forEach(arritem => {\r\n                        var elem = sortingArray.find(x => x.CustomFieldId === arritem.CustomFieldId)\r\n                        if (elem != undefined) {\r\n                            elem.Calculated_Field = arritem.Calculated_Field;\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n            if (vm.SingleSortArray.length > 0 && sortingArray.length > 0) {\r\n                const findsamesortvalue = sortingArray.findIndex(x => x.CustomFieldId === vm.SingleSortArray[0].sortcolummnId);\r\n                if (findsamesortvalue != -1) {\r\n                    sortingArray.splice(findsamesortvalue, 1);\r\n                    if (vm.sortColummnarray.length > 1) {\r\n                        vm.sortColummnarray.splice(findsamesortvalue, 1);\r\n                    } else {\r\n                        vm.sortColummnarray[findsamesortvalue].sortcolummnId = '';\r\n                        vm.sortColummnarray[findsamesortvalue].columnOrders = '';\r\n                    }\r\n                }\r\n            }\r\n            var temp = {\r\n                \"Info\": {\r\n                    \"REPORTID\": vm.reportListingInfo.REPORTID,\r\n                    \"REPORTNAME\": vm.reportListingInfo.REPORTNAME,\r\n                    \"MODULENAME\": vm.reportListingInfo.MODULENAME,\r\n                    \"SUBMODULECODE\": vm.reportListingInfo.SUBMODULECODE,\r\n                    \"SUBMODULEID\": vm.reportListingInfo.SUBMODULEID,\r\n                    \"PAGESIZE\": vm.PageSize,\r\n                    \"PAGENUMBER\": parseInt(vm.PageNumber),\r\n                    \"IS_PAGED\": 1,\r\n                    \"IsForPreview\": vm.IsForPreview,\r\n                    \"FIELDS\": vm.reportListingInfo.FIELDS,\r\n                    \"FILTERS\": UpdatedFilterArray == undefined ? vm.reportListingInfo.FILTERS : UpdatedFilterArray,\r\n                    \"GROUP\": vm.reportListingInfo.GROUP,\r\n                    \"SORTING\": sortingArray == null || sortingArray == [] || sortingArray.length == 0 ? vm.reportListingInfo.SORTING : sortingArray,\r\n                    \"EXPRESSION\": vm.reportListingInfo.EXPRESSION,\r\n                    \"EXPRESSIONFIELDSARRAY\": vm.reportListingInfo.EXPRESSIONFIELDSARRAY,\r\n                    \"SINGLE_SORT\": vm.SingleSortArray\r\n                }\r\n            }\r\n            var jsondata = JSON.stringify(temp);\r\n            ViewReportServices.PreviewReport(jsondata).then(async (response) => {\r\n                if (response.data != null && response.data != undefined) {\r\n                    vm.previewcolumn = [];\r\n                    var listingInfo = JSON.parse(response.data[0].Value);\r\n                    if (listingInfo != null && listingInfo != undefined) {\r\n                        var MetaData = listingInfo.MetaData[0];\r\n                        vm.previewdata = listingInfo.ListingData;\r\n                        vm.TotalRecords = MetaData.TotalRecord;\r\n                        vm.TotalPages = Math.ceil(vm.TotalRecords / vm.PageSize);\r\n                        if (MetaData.IsGrouping) {\r\n                            vm.BindGroupListing(vm.previewdata);\r\n                        }\r\n                        else {\r\n                            vm.Bindlisting(vm.previewdata);\r\n                        }\r\n                    }\r\n                    else {\r\n                        vm.noRecord = true;\r\n                        vm.TotalRecords = 0;\r\n                        vm.showgraph = false;\r\n                        vm.showGraphBtn = false;\r\n                    }\r\n                    vm.isLoading = false;\r\n                }\r\n                else {\r\n                    vm.isLoading = false;\r\n                }\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            })\r\n\r\n        },\r\n\r\n        // Bind the graph Values\r\n        BindGraph: function () {\r\n            var vm = this;\r\n            let graphData = vm.reportListingInfo.GRAPH[0]\r\n            if (graphData != null && graphData != undefined && graphData != '') {\r\n                vm.chartType = vm.chartTypes.find(x => x.id == graphData.chartTypeID).chart_Type.toLowerCase();\r\n                vm.SelectedChartTypeId = graphData.chartTypeID;\r\n                vm.AggregateFuncField = graphData.AggregateFunction;\r\n                vm.XAxisFieldName = vm.FilterColumnlist(graphData.XAxisField).CustomFieldName;\r\n                vm.YAxisFieldName = vm.FilterColumnlist(graphData.YAxisField).CustomFieldName;\r\n                if (vm.groupGraphlist.MetaData[0].IsGrouping) {\r\n                    vm.SetGroupingGraphData(graphData.AggregateFunction);\r\n                }\r\n                vm.SetGraphValues(vm.GraphJson, vm.XAxisFieldName, vm.YAxisFieldName);\r\n                vm.CalculationAggregateFunctionResult(graphData.AggregateFunction);\r\n                vm.DrawGraph(graphData);\r\n                vm.showgraph = true;\r\n            }\r\n            else {\r\n                vm.showgraph = false;\r\n                vm.showGraphBtn = false;\r\n            }\r\n        },\r\n        SetGroupingGraphData(FuntionType) {\r\n            var vm = this;\r\n            let ListingData = vm.groupGraphlist.ListingData;\r\n            let setGraphArray = [];\r\n            let XaxisField = vm.XAxisFieldName;\r\n            let yAxisField = vm.YAxisFieldName;\r\n            if (ListingData != null && ListingData != undefined) {\r\n                ListingData.forEach((item, mainindex) => {\r\n                    if (item[XaxisField] != undefined || XaxisField != undefined) {\r\n                        if (FuntionType == \"Count\" || FuntionType == \"Sum\" || FuntionType == \"Avg\" || FuntionType == \"Min\" || FuntionType == \"Max\") {\r\n                            var pushitem = item[XaxisField] != undefined ? item[XaxisField] : item.data[0][XaxisField] + ` (${item.totalRecord})`;\r\n                            for (var i = 0; i <= parseInt(item.totalRecord); i++) {\r\n                                if (i == 0) {\r\n                                    setGraphArray.push({\r\n                                        [XaxisField]: pushitem,\r\n                                        [yAxisField]: item.GData != null && item.GData != 0 && item.GData > item.totalRecord ? item.GData : item.totalRecord\r\n                                    });\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                })\r\n                vm.GraphJson = setGraphArray\r\n                vm.showgraph = true;\r\n            } else {\r\n                vm.GraphJson = [];\r\n                vm.XAxisFieldName = null;\r\n                vm.YAxisFieldName = null;\r\n                vm.showgraph = false;\r\n                vm.showGraphBtn = false;\r\n            }\r\n        },\r\n        // Draw graph \r\n        DrawGraph: function (graphData) {\r\n            var vm = this;\r\n            var isHorizontal = false;\r\n            if (vm.chartType == \"bar\" || vm.chartType == \"line\" || vm.chartType == 'horizontal_bar') {\r\n                if(vm.chartType == 'horizontal_bar'){\r\n                    vm.chartType = \"bar\";\r\n                    isHorizontal = true;\r\n                }\r\n                vm.chartSeries = [{\r\n                    name: vm.$t(vm.FilterColumnlist(graphData.YAxisField).CustomFieldName),\r\n                    data: vm.chartSeriesData\r\n                }]\r\n                vm.chartOptions = {\r\n                    chart: {\r\n                        toolbar: {\r\n                            export: {\r\n                                svg: {\r\n                                    filename: vm.reportName,\r\n                                },\r\n                                png: {\r\n                                    filename: vm.reportName,\r\n                                },\r\n                                csv: {\r\n                                    headerCategory: vm.$t(vm.FilterColumnlist(graphData.XAxisField).CustomFieldName),\r\n                                    filename: vm.reportName,\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    xaxis: {\r\n                        categories: vm.chartOptionXAxisData,\r\n                        title: {\r\n                            text: isHorizontal ? vm.$t(vm.FilterColumnlist(graphData.YAxisField).CustomFieldName) : vm.$t(vm.FilterColumnlist(graphData.XAxisField).CustomFieldName),\r\n                        },\r\n                        labels: {\r\n                            trim: true,\r\n                        }\r\n                    },\r\n                    yaxis: {\r\n                        title: {\r\n                            text: isHorizontal ? vm.$t(vm.FilterColumnlist(graphData.XAxisField).CustomFieldName) : vm.$t(vm.FilterColumnlist(graphData.YAxisField).CustomFieldName)\r\n                        },\r\n                        labels:{\r\n                            formatter:function(val){\r\n                                return val.toLocaleString(\"en-US\");\r\n                            }\r\n                        }\r\n                    },\r\n                    plotOptions: isHorizontal ? { bar: { borderRadius: 4, horizontal: true, } } : {},\r\n                    dataLabels: {\r\n                        enabled: true,\r\n                    },\r\n                    zoom: {\r\n                        enabled: true,\r\n                    }\r\n                }\r\n            }\r\n            if (vm.chartType == \"pie\" || vm.chartType == \"donut\") {\r\n                vm.chartSeries = vm.chartSeriesData;\r\n                vm.chartOptions = {\r\n                    labels: vm.chartOptionXAxisData,\r\n                    colors: vm.colourList,\r\n                }\r\n            }\r\n        },\r\n\r\n        // Set the Chart Xaxis and Yaxis\r\n        SetGraphValues(data, XFieldName, YFieldName) {\r\n            var vm = this;\r\n            vm.chartOptionXAxisData = [];\r\n            vm.chartSeriesData = [];\r\n            data.forEach(items => {\r\n                if (XFieldName in items) {\r\n                    if (items[XFieldName] != null && items[XFieldName] != undefined) {\r\n                        vm.chartOptionXAxisData.push(items[XFieldName])\r\n                        //set graph Values if XField  is Not Null  \r\n                        vm.BindXYFields(items, XFieldName, YFieldName);\r\n\r\n                    }\r\n                    else {\r\n                        //set graph Values if XField  is  Null\r\n                        if (items[YFieldName] != null && items[YFieldName] != undefined) {\r\n                            if (typeof XFieldName == \"string\") {\r\n                                vm.chartOptionXAxisData = [...vm.chartOptionXAxisData, \"-\"]\r\n                            }\r\n                            else {\r\n                                vm.chartOptionXAxisData = [...vm.chartOptionXAxisData, 0]\r\n                            }\r\n                            vm.BindXYFields(items, XFieldName, YFieldName);\r\n                        }\r\n\r\n                    }\r\n                }\r\n            });\r\n        },\r\n        //set graph X and Y fields \r\n        BindXYFields: function (items, XFieldName, YFieldName) {\r\n            var vm = this;\r\n            if (YFieldName in items) {\r\n                if (items[YFieldName] != null && items[YFieldName] != undefined) {\r\n                    if (typeof items[YFieldName] == \"string\") {\r\n                        var replaceXCurrencySymbol = items[YFieldName].replace(/[$€£]/g, '')\r\n                        vm.chartSeriesData.push(parseInt(replaceXCurrencySymbol))\r\n                    }\r\n                    else {\r\n                        vm.chartSeriesData.push(items[YFieldName])\r\n                    }\r\n                }\r\n                else {\r\n                    vm.chartSeriesData = [...vm.chartSeriesData, 0]\r\n                }\r\n            }\r\n        },\r\n\r\n        // Filter column List baesd on CustomFieldId\r\n        FilterColumnlist(CustomFieldId) {\r\n            var vm = this;\r\n            let Columnlist = vm.reportListingInfo.FIELDS\r\n            let CustomFieldName, ColumnFieldType;\r\n            for (let [index] of Columnlist.entries()) {\r\n                if (Columnlist[index].CustomFieldId == CustomFieldId) {\r\n                    if (Columnlist[index].DisplayName != null && Columnlist[index].DisplayName != '') {\r\n                        CustomFieldName = Columnlist[index].DisplayName;\r\n                    }\r\n                    else {\r\n                        CustomFieldName = Columnlist[index].FieldName;\r\n                    }\r\n                    ColumnFieldType = Columnlist[index].ColumnFieldDataCode;\r\n                }\r\n            }\r\n            return { 'CustomFieldName': CustomFieldName, 'ColumnFieldType': ColumnFieldType }\r\n        },\r\n\r\n        // Calculating  Aggregate Function Result\r\n        CalculationAggregateFunctionResult: function (functionType) {\r\n            var vm = this;\r\n            var tempval = 0;\r\n            if (functionType == \"Sum\") {\r\n                var sum = 0;\r\n                vm.chartSeriesData.forEach(item => {\r\n                    sum += item;\r\n                });\r\n                vm.aggregateFunctionResult = sum.toFixed(2);\r\n                vm.aggregateFunctionResult = parseFloat(vm.aggregateFunctionResult).toLocaleString('en-US');\r\n            }\r\n            if (functionType == \"Count\") {\r\n                var aggregatecount = 0;\r\n                aggregatecount = vm.chartSeriesData.length;\r\n                vm.aggregateFunctionResult = aggregatecount;\r\n            }\r\n            if (functionType == \"Avg\") {\r\n                var total = 0;\r\n                var count = 0;\r\n                vm.chartSeriesData.forEach(function (item, index) {\r\n                    total += item;\r\n                    count++;\r\n                });\r\n                tempval = total / count;\r\n                vm.aggregateFunctionResult = tempval.toFixed(2);\r\n                vm.aggregateFunctionResult = parseFloat(vm.aggregateFunctionResult).toLocaleString('en-US');\r\n            }\r\n            if (functionType == \"Min\") {\r\n                tempval= Math.min.apply(Math, vm.chartSeriesData.filter(Number));\r\n                vm.aggregateFunctionResult  = tempval.toFixed(2);\r\n                vm.aggregateFunctionResult = parseFloat(vm.aggregateFunctionResult).toLocaleString('en-US');\r\n            }\r\n            if (functionType == \"Max\") {\r\n                tempval = Math.max(...vm.chartSeriesData)\r\n                vm.aggregateFunctionResult = tempval.toFixed(2);\r\n                vm.aggregateFunctionResult = parseFloat(vm.aggregateFunctionResult).toLocaleString('en-US');\r\n            }\r\n        },\r\n\r\n        // Get All Chart Types\r\n        async GetChartTypes() {\r\n            var vm = this;\r\n            await ViewReportServices.GetChartTypes().then((response) => {\r\n                vm.chartTypes = response.data;\r\n            })\r\n        },\r\n        // Pager methods\r\n        pagerMethod: function (e) {\r\n            var vm = this;\r\n            if (e.target.innerHTML == 'Prev') {\r\n                vm.PageNumber = vm.PageNumber - 1;\r\n            }\r\n            else if (e.target.innerHTML == 'Next') {\r\n                vm.PageNumber = parseInt(vm.PageNumber) + 1;\r\n            }\r\n            else {\r\n                vm.PageNumber = e.target.innerHTML;\r\n            }\r\n            if (vm.PageNumber == \"First\") {\r\n                vm.PageNumber = \"1\";\r\n            }\r\n            if (vm.PageNumber == \"Last\") {\r\n                vm.PageNumber = vm.TotalPages\r\n            }\r\n            if (parseInt(vm.PageNumber) >= 1) {\r\n                vm.UpdatePreviewData(vm.sortColummnarray);\r\n            }\r\n        },\r\n        SetPageSize: function (event) {\r\n            var vm = this;\r\n            vm.PageSize = event.target.value;\r\n            vm.PageNumber = 1;\r\n            vm.TotalPages = Math.ceil(vm.TotalRecords / vm.PageSize);\r\n            vm.UpdatePreviewData(vm.sortColummnarray);\r\n        },\r\n        //Get All Records List For genrate PDF\r\n        GetAllRecordsForPDF: function () {\r\n            var vm = this;\r\n            // var params = `ReportId=${ReportId}&IsPaged=0`\r\n            // await ViewReportServices.GetReportDetailsbyId(params).then(async (response) => {\r\n            //     if (response.data != null && response.data != undefined) {\r\n            //         vm.allReocrdsData = response.data;\r\n            //     }\r\n            // })\r\n        },\r\n        GetDataForPDFListing: async function (exceldatavalue) {\r\n            var vm = this;\r\n            vm.count = 0;\r\n            vm.IsFilterValid();\r\n            if (vm.previewdata.length > 0) {\r\n                var temp = {\r\n                    \"Info\": {\r\n                        \"REPORTID\": vm.reportListingInfo.REPORTID,\r\n                        \"REPORTNAME\": vm.reportListingInfo.REPORTNAME,\r\n                        \"MODULENAME\": vm.reportListingInfo.MODULENAME,\r\n                        \"SUBMODULECODE\": vm.reportListingInfo.SUBMODULECODE,\r\n                        \"SUBMODULEID\": vm.reportListingInfo.SUBMODULEID,\r\n                        \"PAGESIZE\": vm.PageSize,\r\n                        \"PAGENUMBER\": parseInt(vm.PageNumber),\r\n                        \"IS_PAGED\": 0,\r\n                        \"IsForPreview\": vm.IsForPreview,\r\n                        \"FIELDS\": vm.reportListingInfo.FIELDS,\r\n                        \"FILTERS\": vm.MainUpdatedArray != undefined ? vm.MainUpdatedArray : vm.reportListingInfo.FILTERS,\r\n                        \"GROUP\": vm.reportListingInfo.GROUP,\r\n                        \"SORTING\": vm.MainSortingArray != undefined ? vm.MainSortingArray : vm.reportListingInfo.SORTING,\r\n                        \"EXPRESSION\": vm.reportListingInfo.EXPRESSION,\r\n                        \"EXPRESSIONFIELDSARRAY\": vm.reportListingInfo.EXPRESSIONFIELDSARRAY\r\n                    }\r\n                }\r\n                var jsondata = JSON.stringify(temp);\r\n                vm.ExcelJsonData = jsondata;\r\n                if (exceldatavalue == undefined) {\r\n                    await ViewReportServices.PreviewReport(jsondata).then(res => {\r\n                        var pdflisting = JSON.parse(res.data[0].Value);\r\n                        vm.pdfpreviewdata = pdflisting;\r\n                        vm.count = vm.count + 1;\r\n                    }).catch(err => {\r\n                        console.log('Data not Found');\r\n                    })\r\n                }\r\n            }\r\n        },\r\n        // Get the Image URI of Graph\r\n        GetGraphImageURI: async function () {\r\n            var vm = this;\r\n            var URI;\r\n            await vm.$refs.chart?.chart.dataURI().then(uri => {\r\n                URI = uri;\r\n            });\r\n            return URI;\r\n        },\r\n\r\n        //Export TO PDF functionality \r\n        ExportToPDF: async function (type) {\r\n            var vm = this;\r\n            vm.isLoading = true;\r\n            var GetLimitRecordsData = vm.GetTotalRecordsForExceed();\r\n            if (vm.TotalRecords > GetLimitRecordsData) {\r\n                vm.confirmR(vm.$t(\"LimitExceed\"), true, (vm.$t(\"LimitExceed\") + \"  \" + vm.$t(\"Report\")), function () {\r\n                    vm.GetPdfAndExcelApi();\r\n                })\r\n            } else {\r\n                await vm.GetDataForPDFListing();\r\n                if (vm.count != 0) {\r\n                    var GraphData = {};\r\n                    var graphURI = await vm.GetGraphImageURI();\r\n                    var allRecordslisting = vm.pdfpreviewdata.ListingData;\r\n                    let MetaData = vm.pdfpreviewdata.MetaData[0].IsGrouping;\r\n                    let ReportName = vm.reportListingInfo.REPORTNAME.replace('.', '-');\r\n                    let pageType = 'A2';\r\n                    let pdfDetails;\r\n                    let pageOrientation = '';\r\n                    let GraphWidth = 300;\r\n\r\n                    // Create PDF with  Grouping \r\n                    if (MetaData) {\r\n                        await vm.BindPDFDataForGroup(allRecordslisting);\r\n\r\n                    }\r\n                    // Create PDF without  Grouping \r\n                    else {\r\n                        await vm.BindPDFData(allRecordslisting);\r\n                    }\r\n\r\n                    //Set Page Type \r\n                    if (vm.TableHeader.length > 5) {\r\n                        pageType = \"A1\";\r\n                        GraphWidth = 500\r\n                    }\r\n                    //Set Page  pageOrientation\r\n\r\n                    if (vm.TableHeader.length > 10) {\r\n                        pageOrientation = 'landscape';\r\n                    }\r\n                    if (graphURI != null && graphURI != undefined) {\r\n                        GraphData = {\r\n                            image: graphURI.imgURI,\r\n                            width: GraphWidth,\r\n                            alignment: 'center'\r\n\r\n                        }\r\n                    }\r\n\r\n                    //Set Page Type and pageOrientation\r\n                    pdfDetails = {\r\n                        pageSize: pageType,\r\n                        pageOrientation: pageOrientation,\r\n                        content: [\r\n                            GraphData,\r\n                            // { text: `Report Name = ${ReportName}`, style: 'subheader' },\r\n\r\n                            {\r\n                                style: 'table',\r\n                                table: {\r\n                                    headerRows: 1,\r\n                                    body: vm.TableBody\r\n                                }\r\n                            },\r\n                        ],\r\n                        styles: vm.SetPDFStyle(),\r\n                        defaultStyle: {\r\n                            alignment: 'justify'\r\n                        }\r\n                    }\r\n                    if (type == \"print\") {\r\n                        pdfMake.createPdf(pdfDetails).print();\r\n                    }\r\n                    else {\r\n                        pdfMake.createPdf(pdfDetails).download(ReportName);\r\n                    }\r\n                    vm.isLoading = false;\r\n                } else {\r\n                    vm.ShowAlert(vm.$t(\"No_Record_Found\"), 'danger', true, vm.$t('Alert'));\r\n                    vm.isLoading = false;\r\n                }\r\n            }\r\n            vm.isLoading = false;\r\n        },\r\n\r\n        BindPDFData: function (allRecordslisting) {\r\n            var vm = this;\r\n            vm.TableBody = [];\r\n            vm.TableHeader = [];\r\n            var TableHeader2=[];\r\n            //Add  Column for Table header\r\n            var ColumnList = Object.keys(allRecordslisting[0])\r\n            ColumnList.forEach((item) => {\r\n                if (item != 'ROWNUMBER') {\r\n                    vm.TableHeader.push({ text: vm.$t(item), style: 'tableHeader', alignment: 'center' })\r\n                    TableHeader2.push({ text: item, style: 'tableHeader', alignment: 'center' })\r\n                }\r\n            })\r\n\r\n            vm.TableBody.push(vm.TableHeader);\r\n\r\n            allRecordslisting.forEach((item) => {\r\n                let currentData = [];\r\n                TableHeader2.forEach((heading) => {\r\n                    currentData.push(item[heading.text]);\r\n                })\r\n                vm.TableBody.push(currentData);\r\n            })\r\n        },\r\n\r\n        BindPDFDataForGroup: function (allRecordslisting) {\r\n            var vm = this;\r\n            vm.TableBody = [];\r\n            vm.TableHeader = [];\r\n            var TableHeader2=[];\r\n            //Add Grouping Column for Table header\r\n            vm.TableHeader.push({ text: vm.$t(Object.keys(allRecordslisting[0])[0]), style: 'tableHeader', alignment: 'center' })\r\n            TableHeader2.push({ text: Object.keys(allRecordslisting[0])[0], style: 'tableHeader', alignment: 'center' })\r\n\r\n            // Add all Column in Table Header \r\n            var columnList = Object.keys(allRecordslisting[0].data[0])\r\n            columnList.forEach((item) => {\r\n                vm.TableHeader.push({ text: vm.$t(item), style: 'tableHeader', alignment: 'center' })\r\n                TableHeader2.push({ text: item, style: 'tableHeader', alignment: 'center' })\r\n            })\r\n\r\n            //Add First header array into Table Body\r\n            vm.TableBody.push(vm.TableHeader);\r\n\r\n            //Create Array for PDF\r\n            allRecordslisting.forEach((item) => {\r\n                item.data.forEach((heading, groupingindex) => {\r\n                    let tableData = [];\r\n                    TableHeader2.forEach((headerelement, headerindex) => {\r\n                        if (groupingindex == 0 && headerindex == 0) {\r\n                            var groupColumn = `${item[headerelement.text]} (${item.totalRecord})`\r\n                            tableData.push({ rowSpan: parseInt(item.totalRecord), text: groupColumn })\r\n                        }\r\n                        else if (groupingindex == 1 && headerindex == 0) {\r\n                            tableData.push(\"\")\r\n                        }\r\n                        else {\r\n                            if (heading[headerelement.text] != undefined && heading[headerelement.text] != \"\") {\r\n                                tableData.push(heading[headerelement.text]);\r\n                            }\r\n                            else {\r\n                                var tempitem = heading[headerelement.text] = \"-\";\r\n                                tableData.push(tempitem);\r\n                            }\r\n                        }\r\n                    })\r\n                    vm.TableBody.push(tableData)\r\n                })\r\n            })\r\n        },\r\n        SetPDFStyle: function () {\r\n            return {\r\n                subheader: {\r\n                    fontSize: 16,\r\n                    bold: true,\r\n                    margin: [0, 0, 0, 10]\r\n                },\r\n                table: {\r\n                    margin: [0, 5, 0, 15]\r\n                }\r\n            };\r\n        },\r\n        ExportToExcel: async function () {\r\n            var vm = this;\r\n            var GetLimitRecordsData = vm.GetTotalRecordsForExceed();\r\n            if (vm.TotalRecords > GetLimitRecordsData) {\r\n                vm.confirmR(vm.$t(\"LimitExceed\"), true, (vm.$t(\"LimitExceed\") + \"  \" + vm.$t(\"Report\")), function () {\r\n                    vm.GetPdfAndExcelApi();\r\n                })\r\n            } else {\r\n                vm.isLoading = true;\r\n                await vm.GetDataForPDFListing('Excel');\r\n                if (vm.ExcelJsonData != null && vm.ExcelJsonData != undefined) {\r\n                    var jsonData = vm.ExcelJsonData;\r\n                    var params = `ReportId=${vm.reportListingInfo.REPORTID}&pagetype=preview&IsPaged=0`\r\n                    ViewReportServices.GetExcelReport(params, jsonData).then((response) => {\r\n                        var blob = new Blob([response.data], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;' });\r\n                        var link = document.createElement('a');\r\n                        link.href = window.URL.createObjectURL(blob);\r\n                        const current = new Date();\r\n                        const date = `${current.getDate()}_${current.getMonth()+1}_${current.getFullYear()}`;\r\n                        var fileName = `ReportData-${vm.reportListingInfo.REPORTNAME.replace('.', '-')}-${date}`;\r\n                        fileName = fileName.split(\" \").join(\"\");\r\n                        link.download = fileName;\r\n                        link.click();\r\n                        vm.isLoading = false;\r\n                    }).catch((err) => { console.log(err); vm.isLoading = false; })\r\n                } else {\r\n                    vm.ShowAlert(vm.$t(\"No_Record_Found\"), 'danger', true, vm.$t('Alert'));\r\n                    vm.isLoading = false;\r\n                }\r\n            }\r\n        },\r\n        EditReport: function () {\r\n            var vm = this;\r\n            vm.$router.push({\r\n                name: 'Datareport',\r\n                params: {\r\n                    Modulename: vm.reportListingInfo.MODULENAME,\r\n                    Submodulecode: vm.reportListingInfo.SUBMODULECODE,\r\n                    ReportName: vm.reportListingInfo.REPORTNAME,\r\n                    ReportID: vm.reportListingInfo.REPORTID,\r\n                    Action: 'Edit'\r\n                }\r\n            });\r\n        },\r\n        DownloadExceedRecords: async function () {\r\n            var vm = this;\r\n            var EmailJson = {\r\n                \"emailPostString\": [\r\n                    {\r\n                        \"configModuleName\": \"Email\",\r\n                        \"reportId\": vm.reportListingInfo.REPORTID,\r\n                        \"reportname\": vm.reportListingInfo.REPORTNAME,\r\n                        \"username\": GetUserInfo._value.Email,\r\n                        \"moduleName\": vm.reportListingInfo.MODULENAME,\r\n                        \"subModuleCode\": vm.reportListingInfo.SUBMODULECODE,\r\n                        \"from\": GetUserInfo._value.Name,\r\n                        \"to\": GetUserInfo._value.Email,\r\n                        \"subject\": vm.reportListingInfo.REPORTNAME,\r\n                        \"message\": \"Greetings! This is the Test Email of Reporting Data with an Excel File Attachment.Find Attachment\",\r\n                        \"importance \": \"high\",\r\n                        \"quoteCompanyLogo\": \"\",\r\n                        \"emailCc\": \"\",\r\n                        \"emailBcc\": \"\",\r\n                        \"companyLogo\": GetUserInfo._value.CompanyLogo,\r\n                        \"emailContent\": \"\",\r\n                        \"forInvoice\": \"yes\",\r\n                        \"refId\": 0,\r\n                        \"isSaveLog\": \"\"\r\n                    }\r\n                ]\r\n            }\r\n            var exceljson = {\r\n                \"Info\": {\r\n                    \"REPORTID\": vm.reportListingInfo.REPORTID,\r\n                    \"REPORTNAME\": vm.reportListingInfo.REPORTNAME,\r\n                    \"MODULENAME\": vm.reportListingInfo.MODULENAME,\r\n                    \"SUBMODULECODE\": vm.reportListingInfo.SUBMODULECODE,\r\n                    \"SUBMODULEID\": vm.reportListingInfo.SUBMODULEID,\r\n                    \"PAGESIZE\": 10,\r\n                    \"PAGENUMBER\": 1,\r\n                    \"IS_PAGED\": 0,\r\n                    \"IsForPreview\": vm.IsForPreview,\r\n                    \"FIELDS\": vm.reportListingInfo.FIELDS,\r\n                    \"FILTERS\": vm.reportListingInfo.FILTERS,\r\n                    \"GROUP\": vm.reportListingInfo.GROUP,\r\n                    \"SORTING\": vm.reportListingInfo.SORTING,\r\n                    \"EXPRESSION\": vm.reportListingInfo.EXPRESSION,\r\n                    \"EXPRESSIONFIELDSARRAY\": vm.reportListingInfo.EXPRESSIONFIELDSARRAY,\r\n                    \"EmailArray\": EmailJson\r\n                }\r\n            }\r\n            var EmailParam = JSON.stringify(exceljson);\r\n            // var ExcelJson = JSON.stringify(exceljson);\r\n            if (vm.reportListingInfo.REPORTID > 0) {\r\n                vm.isLoading = true;\r\n                await ViewReportServices.SendEmailService(EmailParam).then((response) => {\r\n                    if (response.data[0].Status == 'Success') {\r\n                        vm.ShowAlert(vm.$t(\"Email_Sent\"), 'success', true, vm.$t('Alert'));\r\n                        vm.isLoading = false;\r\n                    }\r\n                    vm.isLoading = false;\r\n                }).catch((err) => {\r\n                    console.log(err);\r\n                })\r\n            }\r\n        },\r\n        OpenSortingPopup: function () {\r\n            var vm = this;\r\n            if (!vm.isSortPopup) {\r\n                vm.isSortPopup = true;\r\n            }\r\n            else {\r\n                vm.isSortPopup = false;\r\n            }\r\n        },\r\n        AddSortingForm: function (value) {\r\n            var vm = this\r\n            if (vm.sortColummnarray[0].columnOrders != '' && vm.sortColummnarray[0].sortcolummnId != '' && vm.sortColummnarray.length < vm.previewcolumn.length) {\r\n                vm.sortColummnarray.push({ sortcolummnId: \"\", columnOrders: \"\" });\r\n            } else {\r\n                vm.ShowAlert(vm.sortColummnarray[0].columnOrders != '' && vm.sortColummnarray[0].sortcolummnId != '' ? vm.$t(\"SortLimitExceed\") : vm.$t(\"AddFieldsFirst\"), 'danger', true, vm.$t('Alert'));\r\n            }\r\n        },\r\n        RemoveSortingForm: function (value) {\r\n            var vm = this;\r\n            if (vm.sortColummnarray.length == 1) {\r\n                vm.sortColummnarray = [{ sortcolummnId: \"\", columnOrders: \"\" }]\r\n            }\r\n            else {\r\n                vm.sortColummnarray.splice(vm.sortColummnarray.indexOf(value), 1);\r\n            }\r\n        },\r\n        EnableSortingSearch: function (value) {\r\n            var vm = this;\r\n            if (vm.sortColummnarray[0].columnOrders != '' && vm.sortColummnarray[0].sortcolummnId != '') {\r\n                vm.UpdatePreviewData(vm.sortColummnarray);\r\n            }\r\n        },\r\n        RemoveSortingFromList: function () {\r\n            var vm = this;\r\n            vm.isLoading = true;\r\n            vm.GetPreviewData(vm.viewreportparameters.ReportID);\r\n            vm.MainSortingArray = [];\r\n            vm.noRecord = false;\r\n        },\r\n        GetSortingData: function () {\r\n            var vm = this;\r\n            if (vm.reportListingInfo.SORTING != null && vm.reportListingInfo.SORTING != undefined && vm.reportListingInfo.SORTING != '' && vm.reportListingInfo.SORTING.length > 0) {\r\n                vm.sortColummnarray = [];\r\n                vm.reportListingInfo.SORTING.forEach((item, index) => {\r\n                    vm.sortColummnarray.push({\r\n                        \"sortcolummnId\": item.CustomFieldId,\r\n                        \"columnOrders\": item.SORTTYPE\r\n                    })\r\n                })\r\n            }\r\n            else {\r\n                vm.sortColummnarray = [{ sortcolummnId: \"\", columnOrders: \"\" }]\r\n            }\r\n        },\r\n        GetTotalRecordsForExceed() {\r\n            var CustomTotalRecords = 100000;\r\n            return CustomTotalRecords;\r\n        },\r\n        GetPdfAndExcelApi() {\r\n            var vm = this;\r\n            vm.isLoading = true;\r\n            vm.IsFilterValid();\r\n            var exceljson = {\r\n                \"Info\": {\r\n                    \"REPORTID\": vm.reportListingInfo.REPORTID,\r\n                    \"REPORTNAME\": vm.reportListingInfo.REPORTNAME,\r\n                    \"MODULENAME\": vm.reportListingInfo.MODULENAME,\r\n                    \"SUBMODULECODE\": vm.reportListingInfo.SUBMODULECODE,\r\n                    \"SUBMODULEID\": vm.reportListingInfo.SUBMODULEID,\r\n                    \"PAGESIZE\": 10,\r\n                    \"PAGENUMBER\": 1,\r\n                    \"IS_PAGED\": 0,\r\n                    \"IsForPreview\": vm.IsForPreview,\r\n                    \"FIELDS\": vm.reportListingInfo.FIELDS,\r\n                    \"FILTERS\": vm.MainUpdatedArray != undefined ? vm.MainUpdatedArray : vm.reportListingInfo.FILTERS,\r\n                    \"GROUP\": vm.reportListingInfo.GROUP,\r\n                    \"SORTING\": vm.MainSortingArray != undefined ? vm.MainSortingArray : vm.reportListingInfo.SORTING,\r\n                    \"EXPRESSION\": vm.reportListingInfo.EXPRESSION,\r\n                    \"EXPRESSIONFIELDSARRAY\": vm.reportListingInfo.EXPRESSIONFIELDSARRAY,\r\n                    \"Req_From\": \"FromExcel\"\r\n                }\r\n            }\r\n            var EmailParam = JSON.stringify(exceljson);\r\n            ViewReportServices.InsertDynamicReportsLog(EmailParam).then(response => {\r\n                if (response.data[0].Status == 'Success') {\r\n                    vm.ShowAlert(vm.$t(\"Email_Sent\"), 'success', true, vm.$t('Alert'));\r\n                    // ViewReportServices.GenerateReportEmailFromSchedule().then(res=>{\r\n                    //     debugger\r\n                    // }).catch(err=>{console.log(err.message)})\r\n                    vm.isLoading = false;\r\n                } else {\r\n                    vm.ShowAlert(vm.$t(\"EmailFailed\"), 'danger', true, vm.$t('Alert'));\r\n                    vm.isLoading = false;\r\n                }\r\n            }).catch(err => {\r\n                console.log(err.message);\r\n            })\r\n        },\r\n        sortdata: function (filedName, fieldId) {\r\n            var vm = this;\r\n            var SortDir = \"sort tb_headerSortDown\";\r\n            vm.SortBy = filedName;\r\n            if (filedName === vm.SortBy) {\r\n                if (vm.SortExp == \"\" || vm.SortExp == null) {\r\n                    vm.SortExp = \"ASC\";\r\n                    SortDir = \"sort tb_headerSortDown\";\r\n                }\r\n                else if (vm.SortExp == \"ASC\") {\r\n                    vm.SortExp = \"DESC\";\r\n                    SortDir = \"sort tb_headerSortUp\";\r\n                }\r\n                else {\r\n                    vm.SortExp = \"ASC\";\r\n                    SortDir = \"sort tb_headerSortDown\";\r\n                }\r\n            }\r\n            // var objSort = vm.sortColummnarray.filter(x=>x.sortcolummnId == fieldId)[0];\r\n            // if(objSort !=undefined && objSort.columnOrders.length > 0){\r\n            //     objSort.columnOrders=vm.SortExp;\r\n            // }\r\n            // else{\r\n            //     vm.sortColummnarray.push({'sortcolummnId':fieldId,'columnOrders':vm.SortExp})\r\n            // }\r\n            // vm.UpdatePreviewData(vm.sortColummnarray);\r\n            vm.SingleSortArray = [];\r\n            vm.SingleSortArray.push({ 'sortcolummnId': fieldId, 'columnOrders': vm.SortExp })\r\n            vm.UpdatePreviewData();\r\n            $(\"#\" + filedName + '  span:first-child').attr(\"class\", SortDir);\r\n        },\r\n        IsFilterValid: function () {\r\n            var vm = this;\r\n            vm.reportListingInfo.FILTERS.forEach(fitem => {\r\n                if (fitem.isManuallyAdded) {\r\n                    if (fitem.FieldName != '' && fitem.Value1 != '' && fitem.OPERATOR_ID != '') {\r\n                        console.log('Valid Filter')\r\n                    } else {\r\n                        let FilterNotValid = vm.reportListingInfo.FILTERS.findIndex(x => x.CustomFieldId === fitem.CustomFieldId);\r\n                        vm.reportListingInfo.FILTERS.splice(FilterNotValid, 1);\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n.parentdiv.datarepfix2 {\r\n    position: absolute;\r\n    right: 0px;\r\n    top: 0px;\r\n    z-index: 999;\r\n}\r\n\r\n.va_lft25 {\r\n    position: absolute;\r\n    right: 40px;\r\n    top: -5px;\r\n    z-index: 999;\r\n    transform: rotate(90deg);\r\n}\r\n\r\n.action-list-box.small .close.closebtnsmall {\r\n    right: 28px;\r\n    top: 4px;\r\n    width: 25px;\r\n    height: 25px;\r\n    font-size: 13px;\r\n    line-height: 12px;\r\n    opacity: unset;\r\n}\r\n\r\n.verticle-action.lft75.rt30 {\r\n    right: 30px;\r\n    top: 38px;\r\n}</style>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ViewCustomReport.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ViewCustomReport.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ViewCustomReport.vue?vue&type=template&id=61fa196c&scoped=true&\"\nimport script from \"./ViewCustomReport.vue?vue&type=script&lang=js&\"\nexport * from \"./ViewCustomReport.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ViewCustomReport.vue?vue&type=style&index=0&id=61fa196c&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"61fa196c\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}