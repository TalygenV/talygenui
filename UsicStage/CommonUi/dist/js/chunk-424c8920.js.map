{"version":3,"sources":["webpack:///./src/views/Reporting/Add_Report/Datareport.vue?348c","webpack:///./src/views/Reporting/Add_Report/ReportPreview.vue?5bfb","webpack:///./src/views/Reporting/Add_Report/Datareport.vue?bf0c","webpack:///./src/views/Reporting/Add_Report/ReportPreview.vue?0e98","webpack:///./src/views/Reporting/Add_Report/Datareport.vue?c70a","webpack:///./src/views/Reporting/Add_Report/Datareport.vue","webpack:///./src/views/Reporting/Add_Report/ReportPreview.vue","webpack:///./src/components/Common/Modal/modalGraphOptions.vue","webpack:///src/components/Common/Modal/modalGraphOptions.vue","webpack:///./src/components/Common/Modal/modalGraphOptions.vue?56c9","webpack:///./src/components/Common/Modal/modalGraphOptions.vue?b0e7","webpack:///src/views/Reporting/Add_Report/ReportPreview.vue","webpack:///./src/views/Reporting/Add_Report/ReportPreview.vue?68c7","webpack:///./src/views/Reporting/Add_Report/ReportPreview.vue?f7d0","webpack:///./src/components/Common/Modal/modalCalculatedFieldUI.vue","webpack:///src/components/Common/Modal/modalCalculatedFieldUI.vue","webpack:///./src/components/Common/Modal/modalCalculatedFieldUI.vue?4a2d","webpack:///./src/components/Common/Modal/modalCalculatedFieldUI.vue?db08","webpack:///src/views/Reporting/Add_Report/Datareport.vue","webpack:///./src/views/Reporting/Add_Report/Datareport.vue?0d46","webpack:///./src/views/Reporting/Add_Report/Datareport.vue?fb43","webpack:///./src/views/Reporting/Add_Report/ReportPreview.vue?52b7"],"names":["content","__esModule","default","module","i","locals","exports","add","___CSS_LOADER_API_IMPORT___","push","render","_vm","this","_c","_self","staticClass","class","maindiv","attrs","isLoading","editclass","_v","_s","ReportName","$t","on","$event","editreport","staticStyle","collapsedclick","saveclass","directives","name","rawName","value","savereportname","expression","domProps","target","composing","savereport","MainSearchmodel","ListFiltering","_m","_l","submodulecodename","index","key","SubModule","modulelisting","length","showModuleListForFilter","modulelistingforfilter","showModuleListForField","searchColumnfilter","checkMove","drag","onDragEnd","GetDraggedItem","model","modulelistingmodel","callback","$$v","element","elementIndex","undefined","FieldIcons","dttype","icon","GetLocalizedValue","FieldName","DisplayName","Addfields","_e","elemIndex","AddFilter","SearchNoRecord","showdiv","expandclick","fieldpan","ref","FieldTabClicked","Groupsearchmodel","GroupSearching","itemclass","filtergroup","item","selectfiltervalue","MainFieldname","Grouplist","DeleteGroupFields","CalculatedUIEnabled","openActionIcon","showRowLevelFunction","OpenCalculatedUI","closeActionIcon","ColumnSearchmodel","filterColumngroup","indx","selectfilterColumnvalue","Columnlist","ColumnListDisplayOrder","Calculated_Field","ExpresssionFieldName","DeleteColumnFields","openSetting","modeldisplayname","ColumnFieldDataCode","modeldateformat","$$selectedVal","Array","prototype","filter","call","options","o","selected","map","val","_value","multiple","GetDateFromDB","dateformat","dateIndex","dateFormat","modeldecimalplaces","modeluseseparator","isArray","_i","$$a","$$el","$$c","checked","$$i","concat","slice","modelusecurrency","SaveSelectedData","CloseSetting","FilterTabClicked","category","filterRulechange","templates","template","tempIndex","Filterlist","itmIndex","indexOf","filtertype","itemIndex","dragover","eleIndex","OperatorDisplayName","valueTypeText","valueTypeNumber","valueTypeNumber2","valueTypeFirstdate","valueTypeSeconddate","ValueDisplayFirstTime","ValueDisplaySecondTime","Displaymultiplevalue","DropDownValue","DeleteFilterFields","IsMandatoryforFilter","openrulespop","GetOperator","itmInx","selectedOPValue","OPERATOR_ID","_q","checkvalue","OPERATOR_DISPLAY_NAME","OPERATOR_EXPRESSION","MP","OPERATION_DATA_TYPE","$set","texttypevalue1","ValueDisplaytext","texttypevalue2","ValueDisplaytext2","numbertypevalue1","ValueDisplaynumber","PreventValues","numbertypevalue2","ValueDisplaynumber2","datetypevalue1","ValueDisplaydate","datetypevalue2","ValueDisplaydate2","timetypevalue","ValueDisplayTime","timetypevalue2","ValueDisplayTime2","DDLForFilter","modelFilterDDLValue","DDLitem","label","TruncateStr","multiselectvalue","scopedSlots","_u","fn","values","dropdwonvalues","applySetting","CustomFieldId","ClosePopFilter","showReportPreview","previewdata","customreportparameters","saveJsonReport","PdfJsonReport","editjsondata","graphData","sortingData","GraphJson","LevelOfGrouping","showcalculatedUI","ExpFieldDataArray","editexpressionvalue","ExpDataArray","VerifiedExpressionColumnValue","staticRenderFns","PreviewReport","ResetData","ExportToPDF","ExportToExcel","OpenSortingPopup","OpenGraph","isSortPopup","sortColummnarray","input","sortcolummnId","x","columnOrders","AddSortingForm","isValueExistInSort","RemoveSortingForm","close","showGraphOptions","OpenGraphOptions","showChart","ResetGraphData","FilterCustomFieldName","XAxisField","YAxisField","aggregateFunctionResult","aggregateFunctionType","chartType","chartOptions","chartSeries","previewgroupdata","showdata","previewcolumn","column","noRecord","data","sitem","sindex","gitem","gindex","totalRecord","showcoldata","SaveAllReport","CancelAll","GraphData","CloseGraphOptions","FormSchema","onSubmit","chartTypes","id","selectedChartTypeID","chart_Type","error","Data","ViewReportGraph","PreviewChart","selectedChartType","chartseries","resultMsg","ApplyGraph","components","VueApexCharts","props","type","Object","reportTitle","selectedChartXAxis","selectedChartYAxis","colourList","chartOptionXAxisData","chartSeriesData","GroupingGraphData","BindGraph","isChartData","isGraphLoadedAlready","graphParams","layoutType","astype","placeholder","config","showAddIcon","validationRules","onChange","onChangeDropdown","onChangeXYAxisDropdown","visibility","GetRadioValue","created","vm","GetChartTypes","GetColumnList","chartTypeID","AggregateFuncField","CheckFieldType","watch","methods","$","modal","removeClass","remove","$refs","refGraphForm","validateForm","reset","$parent","GraphServices","then","response","forEach","dataset","ResetGraph","GraphDataValue","AggregateFunction","findvaluefromcolumnlistxaxis","find","parseInt","findvaluefromcolumnlistyaxis","PreviewJson","MetaData","IsGrouping","SetGroupingGraphData","toLowerCase","SetGraphValues","FilterColumnlist","CustomFieldName","CalculatingAggregateFuncResult","DrawGraph","ShowAlert","ListingData","setGraphArray","XaxisField","yAxisField","keys","mainindex","pushitem","GData","validate","valid","isHorizontal","chart","toolbar","export","svg","filename","png","csv","headerCategory","tooltip","enabled","formatter","xaxis","categories","title","text","labels","substring","yaxis","toLocaleString","plotOptions","bar","borderRadius","horizontal","dataLabels","colors","functionType","tempval","sum","toFixed","parseFloat","aggregatecount","total","count","Math","min","apply","Number","max","ColumnFieldType","CheckFieldTypeX","entries","XFieldName","YFieldName","items","BindXYFields","replaceXCurrencySymbol","replace","GenrateRandomColorCode","randomColor","floor","random","toString","GenrateRandomColorList","color","IsExist","formfields","component","pdfMake","vfs","pdfFonts","modalGraphOptions","String","SortingData","Boolean","showmulitGrouping","DynamicFillValue","GroupValue","isGraph","YAxisfield","watchvalue","allReocrdsList","ExcelData","allReocrdsData","TableBody","TableHeader","pdfContent","ExcelJsonData","isPreviewForPdfExcel","EditSortingData","RenderList","mounted","_vm$$refs$modalGraph","modalGraph","newval","oldval","SORTTYPE","RefreshReport","splice","assign","_vm$$refs$modalGraph2","ResetPreview","graphArray","Info","GROUP","GRAPH","jsonData","JSON","stringify","ReportPreviewService","SaveAllDynamicReport","Value","$router","catch","err","console","log","setTimeout","SetBootstraptoolTip","chartoptions","CheckColumnExistInGraph","GetAllRecordsForPDF","excelvalue","temp","ReportID","Modulename","Submodulecode","submoduleid","PageSize","PageNumber","FIELDS","FILTERS","SORTING","EXPRESSION","jsondata","parse","graphURI","GetGraphImageURI","allRecordslisting","pdfDetails","pageType","pageOrientation","GraphWidth","BindPDFDataForGroup","BindPDFData","image","imgURI","width","alignment","pageSize","style","table","headerRows","body","styles","SetPDFStyle","defaultStyle","createPdf","download","TableHeader2","ColumnList","currentData","heading","columnList","groupingindex","tableData","headerelement","headerindex","groupColumn","rowSpan","tempitem","subheader","fontSize","bold","margin","_vm$$refs$chart","URI","dataURI","uri","params","GetExcelReport","blob","Blob","link","document","createElement","href","window","URL","createObjectURL","current","Date","date","getDate","getMonth","getFullYear","fileName","split","join","click","buttons","SubmitExpression","FunctionsName","FuncType","Functionskey","Keys","AddFunctionsfields","modelconditionexpression","Functionkey","ShowDescriptionForFunction","AddConditionExpression","InputValueExpression","deleteuserinput","GetCursorPoint","UserInputSelection","AddSpace","Addplussign","Addsubtractsign","Addmultiplysign","Adddividesign","Addopenbracketsign","Addclosebracketsign","verifiedvaluedata","verifyErrorMsg","closed","VerifyExpression","ResetExpression","JsonColumns","ResponseColumnData","ResponseFunctionData","FieldsValue","FunctionValue","AddBracketValue","SubtractBracketValue","MultplyBracketValue","DivideBracketValue","OpenBracketExpValue","CloseBracketExpValue","FieldData","fieldatavalue","reqFrom","verifiedvalue","modelfieldname","substringvalue","InputValueArray","InputValueExpressionByID","FunctionValueArray","selecteduserinput","selecteduserinputbyid","ExpressionIDvalue","updateexpresion","fieldadded","FieldTableNameValue","GetCommaSeparatedValue","countbyfield","conditionexpression","checkbycondition","onClick","CancelExpressionUI","ExpresssionDataValue","GetFunctionList","backdrop","keyboard","addClass","$emit","ExpressionDataService","GetListFields","AVAILABLE_FIELDS","CustomFields","res","Functions","event","cursorpos","getdata","SetValueOnCursorPosition","checkindex","findIndex","FieldValueData","MatchIndex","SameName","convertarr","firstindex","secondindex","includes","substringarr","IsSystemGenerated","TableName","updatingvalue","updatevaluebyid","DescriptionForFunction","closest","openbracketexpsign","openbracket","closebracketexpsign","closebracket","addbracketexpsign","Addsign","subtractbracketexpsign","subtractsign","multiplybracketexpsign","multiplysign","dividebracketexpsign","dividesign","spaceaddingexp","addedspace","addedspacefordb","replaceAll","elem","convertarrid","substringarrid","convertstr","code","keyCode","preventDefault","cursorposition","assignindex","getindexofexp","getfieldindex","f","userinput","selectionStart","fieldsdata","dataitem","ExpressionID","ExpressionName","ExpressionDisplay","Expression","ColumnIndex","encodeURIComponent","jsonvalue","VerifyExpressionFromDB","Result","Error","InavalidExpression","checkeditfieldexist","FieldValue","VerifiedExpression","ExpressionFieldArray","alert","e","cursorpos1","getElementById","focus","returndata","filterinput","searchcol","searchfilter","indexitem","searchitem","displayMainColname","filteritem","draggable","ReportPreview","CalculatedUI","submodulecode","modulename","expandcollapsediv","fielddata","viewId","tempreportid","Showsettingsview","showdiv1","dateformate","customField","dragcount","ReportPreviewListing","submodulename","test1","PAGESIZE","selectvalue","selecteddatatype","savedOperatorName","FilterCount","displayvalue2","selectedvalue","RequestFilterJosn","CurrentOperatorSelected","operator_id","mode","searchable","createOption","SelectedoperatorMappedDatatype","commaSepratedSelectedValues","valueKey","valuekey2","FirstOperand","FirstOperandValue1","SecondOperand","SecondOperandValue1","Datatype","operator","CheckExpressionFeild","ExpressionArray","ExpressionFieldsArray","setvalue","ChartGroupingArray","GroupingArray","FilterActiveForMandatory","IsMandatoryforFilterAfterReset","ArrayforFilterpopup","selctRuleForFilter","IsForPreview","IsDDLValueInFilter","GetSubModuleList","$route","storeParameters","GetStoredParameters","GetList","GetReportDetailsByReportId","computed","displayname","searchColumn","GetSubModuleName","displaycolname","SearchItem","localStorage","setItem","getItem","Getddldata","DataReportService","GetFilterDDLselectvalue","ddlitem","GetReportDetailsbyId","checkfields","JSON_To_Create_ReportListing","BindFeilds","BindFilters","BindGROUP","EXPRESSIONFIELDSARRAY","ReportListing","CheckIsMandartoryForFilter","mitem","indexFound","bindpouupvaluefordatetime","operator_display_name","bindfilterdata","GetDDLValueinEdit","GetDDLTempVal","PickListOption","GetDDLValueinEditArr","OperatorExpression","GetDDLValueinEditMulti","Value1","DDLEditItem","_GetDDLValueinEdit","moduleIndex","moduleItem","field","returnObject","ModuleIndex","ActualDataType","FilterTypeAndorOr","Value2","CheckforIncludeDataMatchesForFilter","GetFilterSelectDDL","temparr","checkexpfieldvalue","_vm$$refs$Calculated","Calculated","DateFormat","DecimalPlace","IsUseSeprator","IsCurrencySymbol","GetDateFromDetail","css","CheckFeildOrFilter","isFieldsActive","active","sort","a","b","NewReportInserted","SetScrolbar","Fields","Fieldsitem","CheckFields","DataTypeCode","setDate","Editdyanmicreport","Folder_Id","Module_Id","Sub_Module_Id","Version","AddDynamicreport","Status","sortingArray","CheckSameNameExist","MatchIfSameNameExist","CheckValidSorting","CheckForValidSorting","arritem","XCustomFieldId","YCustomFieldId","AggregateFunctionType","checkdata","isFieldActive","ColumnDisplayOrder","getlastarrayvalue","Display_Order","hasOwnProperty","checkAlredyExist","object","removed","IsGraphColumn","reportdata","tagIndex","tagIndex1","calctagIndex","sortindex","_vm$$refs$reportdata","_vm$$refs$reportdata2","isFilterActive","Filters","picklist_options","getCountValue","result","FilterType","tagIndex2","GetOperatordata","each","html","mindex","inneritem","validindex","GetDateDetails","resetoldvalueinfilteroperator","IsBinding","operatorname","operatorid","FillFiltervalue","checksameoperator","GetDataOperator","DATA","BindOperatorValues","checkIfExists","isBinding","popupvaluebind","Index","GetFilterddlvalue","FilterJosnRquest","Commaseprated","operatoerExpressionResult","ConvertOperatorToExpression","filtervalueexist","multiddl","isBetweenTrue","_GetDDLValue","_vm$dropdwonvalues","Multiddlvalue","ddlvalues","isddlvalueexist","j","GetDDLValue","valueTypeText2","$options","filters","formatDate","valArray","commsplitedVal","CommaSepratedStringValues","_vm$$refs$Calculated2","checkFieldVlaueExist","obj","ExpressionDisplayOrder","checkExpExist","indexvalue","CheckItem","tempdata","checkExpvalue","DateFormatId","dataele","Arrayitem","getindexvalue","getlastarrayvalueorder","verifyelem","vobject","REPORTID","FunctionKeys","fieldexp","fobject","toUpperCase","getindex","related","dragged","draggedContext","relatedContext","list","Colitem","Colindex","GetAddedFieldFromDrag","AddedField","GetAddedFieldFromModuleListing","ModuleListField","Fitem","RFitem","sortitem","ekey","str","len","convertstring"],"mappings":"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","file":"js/chunk-424c8920.js","sourcesContent":["export * from \"-!../../../../node_modules/vue-style-loader/index.js??ref--7-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Datareport.vue?vue&type=style&index=0&id=58e431ef&prod&scoped=true&lang=css&\"","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ReportPreview.vue?vue&type=style&index=0&id=5ab5b642&prod&scoped=true&lang=css&\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"5a49f493\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".mCSB_inside>.mCSB_container[data-v-58e431ef]{margin-right:30px}.width80[data-v-58e431ef]{width:80px}.width120[data-v-58e431ef]{width:110px}.invalid-feedback[data-v-58e431ef]{white-space:normal;font-size:110%}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Datareport.vue?vue&type=style&index=0&id=58e431ef&prod&scoped=true&lang=css&\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"ad2e5ab6\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('section',{staticClass:\"page-action\"},[_c('div',{staticClass:\"left-menu-tab datareport\"},[_c('div',{class:_vm.maindiv},[_c('loader',{attrs:{\"isVisible\":_vm.isLoading}}),_c('div',{staticClass:\"accordion md-accordion left-filter\",attrs:{\"id\":\"accordionEx\",\"role\":\"tablist\",\"aria-multiselectable\":\"true\"}},[_c('div',{class:_vm.editclass},[_c('div',{staticClass:\"card-header filter-head p-0\",attrs:{\"role\":\"tab\",\"id\":\"headingOne1\"}},[_c('h5',{staticClass:\"mb-0 px-2\"},[_vm._v(_vm._s(_vm.ReportName)+\" \"),_c('span',{staticClass:\"expand_all_filters\"},[_c('span',{attrs:{\"id\":\"SearchData\"}},[_c('a',{staticClass:\"collapsed\",attrs:{\"title\":_vm.$t('EditReportName'),\"data-toggle-tooltip\":\"tooltip\"},on:{\"click\":function($event){return _vm.editreport()}}},[_c('em',{staticClass:\"fa fa-pencil\",staticStyle:{\"font-size\":\"20px\"},attrs:{\"aria-hidden\":\"true\"}})])]),_c('span',[_c('a',{staticClass:\"collapsed\",attrs:{\"title\":\"Collapse\",\"data-toggle-tooltip\":\"tooltip\"},on:{\"click\":function($event){return _vm.collapsedclick()}}},[_c('em',{staticClass:\"fa fa-angle-double-left mt-1\",attrs:{\"aria-hidden\":\"true\"}})])])])])])]),_c('div',{class:_vm.saveclass},[_c('div',{staticClass:\"card-header filter-head p-0\",attrs:{\"role\":\"tab\",\"id\":\"headingOne1\"}},[_c('h5',{staticClass:\"mb-0 pl-2 mt-1\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.savereportname),expression:\"savereportname\"}],staticClass:\"form-control p-1\",staticStyle:{\"width\":\"83%\"},attrs:{\"type\":\"text\"},domProps:{\"value\":(_vm.savereportname)},on:{\"input\":function($event){if($event.target.composing)return;_vm.savereportname=$event.target.value}}}),_c('span',{staticClass:\"expand_all_filters\"},[_c('span',{attrs:{\"id\":\"SearchData\"}},[_c('a',{staticClass:\"collapsed\",attrs:{\"title\":_vm.$t('Save'),\"data-toggle-tooltip\":\"tooltip\"},on:{\"click\":function($event){return _vm.savereport()}}},[_c('em',{staticClass:\"fa fa-floppy-o mt-1\",attrs:{\"aria-hidden\":\"true\"}})])])])])])]),_c('div',{staticClass:\"card-panel\"},[_c('div',{staticClass:\"mb-0 d-lg-block p-2 border\"},[_c('div',{staticClass:\"input-group customsearchbox\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.MainSearchmodel),expression:\"MainSearchmodel\"}],staticClass:\"form-control searchcustomfilter border-right-0\",attrs:{\"type\":\"text\",\"maxlength\":\"50\",\"id\":\"searchinput\",\"placeholder\":\"Search by Name\",\"autocomplete\":\"off\"},domProps:{\"value\":(_vm.MainSearchmodel)},on:{\"keyup\":_vm.ListFiltering,\"input\":function($event){if($event.target.composing)return;_vm.MainSearchmodel=$event.target.value}}}),_vm._m(0)])]),_vm._l((_vm.submodulecodename),function(name,index){return _c('div',{key:index,staticClass:\"card\",staticStyle:{\"border-bottom\":\"1px solid #929292\"}},[_c('div',{staticClass:\"card-header pl-0\",attrs:{\"role\":\"tab\",\"id\":'headingOnee' + index}},[_c('h5',{staticClass:\"mb-0\"},[_c('a',{class:index == 0 ? '' : 'collapsed',attrs:{\"data-toggle\":\"collapse\",\"data-parent\":\"#accordionEx\",\"href\":\"javascript:;\",\"aria-expanded\":index == 0 ? true : false,\"data-target\":'#collapseOne' + index,\"aria-controls\":'collapseOne' + index}},[_c('em',{staticClass:\"fa fa fa-file-text-o\",attrs:{\"aria-hidden\":\"true\"}}),_c('span',{staticClass:\"font-weight-bold\"},[_vm._v(\" \"+_vm._s(name.SubModule))]),_c('em',{staticClass:\"fa fa-angle-down rotate-icon\",attrs:{\"aria-hidden\":\"true\"}})]),_vm._m(1,true)])]),_c('div',{class:_vm.modulelisting.length == 0 ? 'd-none' : _vm.modulelisting[index].length == 0 && !_vm.showModuleListForFilter ||\n                        _vm.modulelistingforfilter[index].length == 0 && _vm.showModuleListForFilter ? 'text-center text-danger d-flex align-items-center justify-content-center norecs pt-2' : 'd-none'},[_vm._v(\" \"+_vm._s(_vm.$t(\"NoFieldAvailable\")))]),_c('div',{class:index == 0 ? 'collapse multi-collapse show':'collapse multi-collapse',attrs:{\"id\":'collapseOne' + index,\"role\":\"tabpanel\",\"aria-labelledby\":'headingOnee' + index,\"data-parent\":\"#accordionEx\"}},[_c('PerfectScrollbar',[_c('div',{staticClass:\"card-body p-0 customScrollForLeftBar llt\",staticStyle:{\"max-height\":\"300px\"}},[_c('div',{staticClass:\"form-group\"},[_c('ul',{staticClass:\"nav nav-pills flex-column left-tab responivecustomtab lefttabiconfix\"},[(_vm.showModuleListForField)?_c('draggable',{staticClass:\"draggable-list\",attrs:{\"list\":_vm.searchColumnfilter.length == 0 ? _vm.modulelisting[index] : _vm.searchColumnfilter[index],\"group\":\"my-groupForFields\",\"move\":_vm.checkMove,\"item-key\":\"CustomFieldId\"},on:{\"start\":function($event){_vm.drag = true},\"end\":_vm.onDragEnd,\"change\":function($event){return _vm.GetDraggedItem($event, index, name.SubModule)}},model:{value:(_vm.modulelistingmodel),callback:function ($$v) {_vm.modulelistingmodel=$$v},expression:\"modulelistingmodel\"}},_vm._l(((_vm.searchColumnfilter.length == 0 ? _vm.modulelisting[index] : _vm.searchColumnfilter[index])),function(element,elementIndex){return _c('li',{key:elementIndex,staticClass:\"nav-item parent-element\",attrs:{\"id\":\"StopDragfield\"}},[_c('span',{staticClass:\"nav-link left-menu px-3\"},[_c('em',{class:element.FieldIcons != undefined ? element.FieldIcons + ' ' + 'float-left' : \n                                                        element.dttype[0].icon != null ? element.dttype[0].icon + ' ' + 'float-left' : 'float-left',attrs:{\"aria-hidden\":\"true\"}}),_c('span',{staticClass:\"text-truncate float-left\",staticStyle:{\"width\":\"55%\"},attrs:{\"data-toggle-tooltip\":_vm.GetLocalizedValue(element.FieldName,\n                                                                element.DisplayName),\"title\":_vm.GetLocalizedValue(element.FieldName, element.DisplayName)}},[_vm._v(\" \"+_vm._s(_vm.GetLocalizedValue(element.FieldName, element.DisplayName))+\" \")]),_c('a',{attrs:{\"href\":\"javascript:;\"}},[_c('em',{staticClass:\"fa fa-plus float-right mt-1 text-success pr-0\",attrs:{\"aria-hidden\":\"true\"},on:{\"click\":function($event){return _vm.Addfields(element, $event, index, name.SubModule)}}})])])])}),0):_vm._e(),(_vm.showModuleListForFilter)?_c('draggable',{staticClass:\"draggable-list\",attrs:{\"list\":_vm.searchColumnfilter.length == 0 ? _vm.modulelistingforfilter[index] : _vm.searchColumnfilter[index],\"group\":\"my-groupForFilter\",\"move\":_vm.checkMove,\"item-key\":\"CustomFieldId\"},on:{\"start\":function($event){_vm.drag = true},\"end\":_vm.onDragEnd,\"change\":function($event){return _vm.GetDraggedItem($event, index)}},model:{value:(_vm.modulelistingmodel),callback:function ($$v) {_vm.modulelistingmodel=$$v},expression:\"modulelistingmodel\"}},_vm._l((_vm.searchColumnfilter.length == 0 ? _vm.modulelistingforfilter[index] : _vm.searchColumnfilter[index]),function(element,elemIndex){return _c('li',{key:elemIndex,staticClass:\"nav-item parent-element\",attrs:{\"id\":\"StopDragfield\"}},[_c('span',{staticClass:\"nav-link left-menu px-3\"},[_c('em',{class:element.FieldIcons != undefined ? element.FieldIcons + ' ' + 'float-left' : \n                                                            element.dttype[0].icon != null ? element.dttype[0].icon + ' ' + 'float-left' : 'float-left',attrs:{\"aria-hidden\":\"true\"}}),_c('span',{staticClass:\"text-truncate float-left\",staticStyle:{\"width\":\"55%\"},attrs:{\"data-toggle-tooltip\":element.FieldName,\"title\":_vm.GetLocalizedValue(element.FieldName, element.DisplayName)}},[_vm._v(\" \"+_vm._s(_vm.GetLocalizedValue(element.FieldName, element.DisplayName))+\" \")]),_c('a',{attrs:{\"href\":\"javascript:;\"}},[_c('em',{staticClass:\"fa fa-sliders float-right mt-1 text-primary pr-0\",attrs:{\"aria-hidden\":\"true\"},on:{\"click\":function($event){return _vm.AddFilter(element, index)}}})])])])}),0):_vm._e()],1)])])])],1)])}),(_vm.SearchNoRecord)?_c('div',{staticClass:\"text-center text-danger d-flex align-items-center justify-content-center norecs pt-2\"},[_vm._v(\" \"+_vm._s(_vm.$t(\"NoRecordfound\")))]):_vm._e()],2)])],1),_c('div',{class:_vm.showdiv,staticStyle:{\"float\":\"left\",\"width\":\"50px\"},on:{\"click\":function($event){return _vm.expandclick()}}},[_vm._m(2)]),_c('div',{class:_vm.fieldpan},[_c('div',{staticClass:\"tab-style w-100\"},[_c('div',{staticClass:\"tab_container\",attrs:{\"role\":\"tabpanel\"}},[_c('div',{staticClass:\"tab-content\"},[_c('b-tabs',{attrs:{\"pills\":\"\"}},[_c('b-tab',{ref:\"FIELDS\",staticClass:\"fields\",attrs:{\"title\":\"FIELDS\",\"active\":_vm.showModuleListForField},on:{\"click\":_vm.FieldTabClicked}},[_c('div',{staticClass:\"col-12 p-0 float-left\"},[_c('h6',{staticClass:\"mb-1\"},[_vm._v(_vm._s(_vm.$t('Groups')))]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.Groupsearchmodel),expression:\"Groupsearchmodel\"}],staticClass:\"form-control\",attrs:{\"placeholder\":\"Add Group\"},domProps:{\"value\":(_vm.Groupsearchmodel)},on:{\"keypress\":_vm.GroupSearching,\"input\":function($event){if($event.target.composing)return;_vm.Groupsearchmodel=$event.target.value}}}),(_vm.Groupsearchmodel != '')?_c('div',{staticClass:\"autosuggestion\",class:_vm.itemclass},[_vm._l((_vm.filtergroup),function(item,i){return _c('div',{key:i},[_c('div',[_c('div',{on:{\"click\":function($event){return _vm.selectfiltervalue(item)}}},[_vm._v(\" \"+_vm._s(_vm.GetLocalizedValue(item.FieldName, item.DisplayName))+\" : \"+_vm._s(item.MainFieldname)+\" \")])])])}),(_vm.filtergroup.length == 0)?_c('div',{staticClass:\"text-center text-danger d-flex align-items-center justify-content-center norecs pt-2\"},[_vm._v(\" \"+_vm._s(_vm.$t(\"NoRecordfound\"))+\" \")]):_vm._e()],2):_vm._e(),_c('br'),_c('draggable',{staticClass:\"draggable-list\",attrs:{\"list\":_vm.Grouplist,\"group\":\"my-groupGrouplist\",\"item-key\":\"CustomFieldId\"},on:{\"start\":function($event){_vm.drag = true},\"end\":function($event){_vm.drag = false}},model:{value:(_vm.Grouplist),callback:function ($$v) {_vm.Grouplist=$$v},expression:\"Grouplist\"}},_vm._l((_vm.Grouplist),function(element,index){return _c('div',{key:index,staticClass:\"list-item\"},[_c('span',{staticClass:\"text-truncate float-left\",staticStyle:{\"width\":\"200px\"},attrs:{\"data-toggle-tooltip\":element.FieldName,\"title\":element.FieldName}},[_vm._v(\" \"+_vm._s(_vm.GetLocalizedValue(element.FieldName, element.DisplayName))+\" \")]),_c('a',[_c('em',{staticClass:\"fa fa-trash-o text-danger\",attrs:{\"aria-hidden\":\"true\"},on:{\"click\":function($event){return _vm.DeleteGroupFields(element, $event, index)}}})])])}),0)],1),_c('hr'),_c('div',{staticClass:\"col-12 p-0 float-left\"},[_c('h6',{staticClass:\"mb-1\"},[_vm._v(_vm._s(_vm.$t('COLUMNS')))]),_c('div',{staticClass:\"verticle-action\",staticStyle:{\"top\":\"-3px\"}},[_c('em',{class:_vm.CalculatedUIEnabled == true ? 'fa fa-ellipsis-v action_icon' : 'fa fa-ellipsis-v action_icon disabled',attrs:{\"id\":\"btnpopup\",\"aria-hidden\":\"true\"},on:{\"click\":function($event){return _vm.openActionIcon($event)}}}),(_vm.showRowLevelFunction)?_c('span',{staticClass:\"action-list-box\",staticStyle:{\"width\":\"240px\",\"display\":\"block\"}},[_c('span',{staticClass:\"list-actions fsm-list\",staticStyle:{\"padding-left\":\"0\"},attrs:{\"id\":\"action-list\"}},[_c('a',{staticClass:\"update actions-onclick\",on:{\"click\":_vm.OpenCalculatedUI}},[_c('span',{staticClass:\"text\"},[_vm._v(_vm._s(_vm.$t('CalcultedUIName')))])]),_c('em',{staticClass:\"fa fa-times close close-action\",attrs:{\"aria-hidden\":\"true\"},on:{\"click\":function($event){return _vm.closeActionIcon($event)}}})])]):_vm._e()]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.ColumnSearchmodel),expression:\"ColumnSearchmodel\"}],staticClass:\"form-control\",attrs:{\"placeholder\":\"Add Column\"},domProps:{\"value\":(_vm.ColumnSearchmodel)},on:{\"keypress\":_vm.GroupSearching,\"input\":function($event){if($event.target.composing)return;_vm.ColumnSearchmodel=$event.target.value}}}),(_vm.ColumnSearchmodel != '')?_c('div',{staticClass:\"autosuggestion\",class:_vm.itemclass,staticStyle:{\"z-index\":\"9999\"}},[_vm._l((_vm.filterColumngroup),function(item,indx){return _c('div',{key:indx},[_c('div',[_c('div',{on:{\"click\":function($event){return _vm.selectfilterColumnvalue(item)}}},[_vm._v(\" \"+_vm._s(_vm.GetLocalizedValue(item.FieldName, item.DisplayName))+\" : \"+_vm._s(item.MainFieldname)+\" \")])])])}),(_vm.filterColumngroup.length == 0)?_c('div',{staticClass:\"text-center text-danger d-flex align-items-center justify-content-center norecs pt-2\"},[_vm._v(\" \"+_vm._s(_vm.$t(\"NoRecordfound\"))+\" \")]):_vm._e()],2):_vm._e(),_c('div',{staticClass:\"dashed_bod_drag text-center mt-2\"},[_c('h6',{staticClass:\"p-2 m-0\"},[_vm._v(\"Drag Fields Here \")]),_c('draggable',{staticClass:\"draggable-list\",attrs:{\"list\":_vm.Columnlist,\"group\":\"my-groupForFields\",\"id\":\"TargetDivID\",\"move\":_vm.checkMove,\"item-key\":\"CustomFieldId\"},on:{\"start\":function($event){_vm.drag = true},\"end\":_vm.ColumnListDisplayOrder},model:{value:(_vm.Columnlist),callback:function ($$v) {_vm.Columnlist=$$v},expression:\"Columnlist\"}},_vm._l((_vm.Columnlist),function(element,indx){return _c('div',{key:indx,staticClass:\"list-item parent-element\",attrs:{\"id\":\"TargetDivID\"}},[(element.Calculated_Field == true)?_c('span',{staticStyle:{\"font-size\":\"22px\",\"float\":\"left\",\"margin-right\":\"10px\"}},[_vm._v(\"f\"),_c('sub',{staticStyle:{\"font-size\":\"12px\"}},[_vm._v(\"x\")])]):_vm._e(),_c('span',{staticClass:\"text-truncate float-left\",staticStyle:{\"width\":\"200px\"},attrs:{\"data-toggle-tooltip\":element.FieldName,\"title\":_vm.GetLocalizedValue(element.FieldName, element.DisplayName)}},[_vm._v(\" \"+_vm._s(_vm.GetLocalizedValue(element.FieldName, element.DisplayName))+\" \"+_vm._s(element.ExpresssionFieldName)+\" \")]),_c('a',{attrs:{\"aria-hidden\":\"true\"},on:{\"click\":function($event){return _vm.DeleteColumnFields(element, $event)}}},[_c('em',{staticClass:\"fa fa-trash-o text-danger\"})]),_c('div',{staticClass:\"parentdiv datarepfix\"},[_c('a',{attrs:{\"aria-hidden\":\"true\"},on:{\"click\":function($event){return _vm.openSetting(element, $event)}}},[_c('em',{staticClass:\"fa fa-cog action_icon_cv\"})]),_c('div',[_c('div',{staticClass:\"verticle-action rt25\"},[_c('span',{staticClass:\"action-list-box small setting-div-box\"},[_c('span',{staticClass:\"list-actions text-left p-0 datarep ml-3\",staticStyle:{\"width\":\"480px\"},attrs:{\"id\":\"action-list\"}},[_c('div',{staticClass:\"float-left col-12 p-0\"},[_c('div',{staticClass:\"container-fluid p-0 mb-3\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"theme-primary partition-full\"},[_c('span',{staticClass:\"p-name text-white mt-2\"},[_vm._v(\" \"+_vm._s(_vm.$t('Setting'))+\" \")])])])])]),_c('div',{staticClass:\"col-12 float-left\"},[_c('div',{staticClass:\"col-12 p-0 float-left\"},[_c('div',{staticClass:\"form-group\"},[_c('label',[_vm._v(_vm._s(_vm.$t('DisplayName')))]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.modeldisplayname),expression:\"modeldisplayname\"}],staticClass:\"form-control\",attrs:{\"maxlength\":\"20\"},domProps:{\"value\":(_vm.modeldisplayname)},on:{\"input\":function($event){if($event.target.composing)return;_vm.modeldisplayname=$event.target.value}}})])]),_c('div',{staticClass:\"col-12 p-0 float-left\"},[_c('div',{class:element.ColumnFieldDataCode == 'date' ? '' : 'form-group d-none'},[_c('label',[_vm._v(_vm._s(_vm.$t('DateFormat'))+\":\")]),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.modeldateformat),expression:\"modeldateformat\"}],staticClass:\"form-control textnormal\",on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.modeldateformat=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},[_c('option',{attrs:{\"value\":\"\",\"disabled\":\"\"}},[_vm._v(\" Select \")]),_vm._l((_vm.GetDateFromDB),function(dateformat,dateIndex){return _c('option',{key:dateIndex},[_vm._v(\" \"+_vm._s(_vm.GetLocalizedValue(dateformat.dateFormat))+\" \")])})],2)])]),_c('div',{staticClass:\"col-12 p-0 float-left\"},[_c('div',{class:element.ColumnFieldDataCode == 'decimal' ? '' : 'form-group d-none'},[_c('label',[_vm._v(_vm._s(_vm.$t('DecimalPlaces')))]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.modeldecimalplaces),expression:\"modeldecimalplaces\"}],staticClass:\"form-control\",attrs:{\"type\":\"number\"},domProps:{\"value\":(_vm.modeldecimalplaces)},on:{\"input\":function($event){if($event.target.composing)return;_vm.modeldecimalplaces=$event.target.value}}})])]),_c('div',{staticClass:\"col-12 p-0 float-left\",staticStyle:{\"margin-top\":\"10px\"}},[_c('div',{class:element.ColumnFieldDataCode == 'decimal' ? '' : 'form-group d-none'},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.modeluseseparator),expression:\"modeluseseparator\"}],attrs:{\"type\":\"checkbox\",\"id\":\"useseparator\"},domProps:{\"checked\":Array.isArray(_vm.modeluseseparator)?_vm._i(_vm.modeluseseparator,null)>-1:(_vm.modeluseseparator)},on:{\"change\":function($event){var $$a=_vm.modeluseseparator,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.modeluseseparator=$$a.concat([$$v]))}else{$$i>-1&&(_vm.modeluseseparator=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.modeluseseparator=$$c}}}}),_vm._v(\"  \"),_c('label',{attrs:{\"for\":\"User\"}},[_vm._v(_vm._s(_vm.$t('UseSeparator')))]),_c('br'),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.modelusecurrency),expression:\"modelusecurrency\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.modelusecurrency)?_vm._i(_vm.modelusecurrency,null)>-1:(_vm.modelusecurrency)},on:{\"change\":function($event){var $$a=_vm.modelusecurrency,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.modelusecurrency=$$a.concat([$$v]))}else{$$i>-1&&(_vm.modelusecurrency=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.modelusecurrency=$$c}}}}),_c('label',{staticStyle:{\"padding\":\"6px\"},attrs:{\"for\":\"Role\"}},[_vm._v(_vm._s(_vm.$t('UseCurrency')))])])]),_c('div',{staticClass:\"col-12 p-0 float-left mb-3\"},[_c('div',{staticClass:\"row flex-row-reverse\"},[_c('div',{staticClass:\"col-lg-6 text-right\"},[_c('a',{staticClass:\"btn btn-success ancsaveuserticket text-white\",attrs:{\"id\":\"btnSaveTicket\",\"title\":\"\",\"data-toggle-tooltip\":\"tooltip\",\"data-original-title\":\"Click here to submit ticket\"},on:{\"click\":function($event){return _vm.SaveSelectedData(element, $event)}}},[_c('span',{staticClass:\"fa fa-floppy-o\"}),_vm._v(\" \"+_vm._s(_vm.$t('Save'))+\" \")])])])])])]),_c('em',{staticClass:\"fa fa-times close close-action_cv\",attrs:{\"aria-hidden\":\"true\"},on:{\"click\":function($event){return _vm.CloseSetting($event)}}}),_c('div',{staticClass:\"va_rt25\"},[_c('em',{staticClass:\"icon-solid arrow-solid-left text-dark\",staticStyle:{\"font-size\":\"20pt\"}})])])])])])]),_c('div',{staticClass:\"float-left text-left w-100 font-12\"},[_vm._v(_vm._s(element.MainFieldname))])])}),0)],1)])]),_c('b-tab',{ref:\"Filters\",attrs:{\"title\":\"Filters\",\"active\":_vm.showModuleListForFilter},on:{\"click\":_vm.FilterTabClicked}},[_c('div',{staticClass:\"col-12 p-0 float-left\"},[_c('h6',[_vm._v(\"include data if it matches\")]),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.category),expression:\"category\"}],staticClass:\"form-control\",attrs:{\"name\":\"template\"},on:{\"change\":[function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.category=$event.target.multiple ? $$selectedVal : $$selectedVal[0]},_vm.filterRulechange]}},_vm._l((_vm.templates),function(template,tempIndex){return _c('option',{key:tempIndex,domProps:{\"selected\":template == _vm.category ? 'selected' : '',\"value\":template}},[_vm._v(\" \"+_vm._s(template)+\" \")])}),0),_c('h6',{staticClass:\"mt-3\"},[_vm._v(\"Filter rules\")]),_c('div',{staticClass:\"form-control\"},[_vm._l((_vm.Filterlist),function(item,itmIndex){return (_vm.category == 'Match All Value')?_c('span',{key:itmIndex,attrs:{\"ml-1\":\"\"}},[_vm._v(\" \"+_vm._s((_vm.Filterlist.indexOf(item) + 1))+\" \"),(_vm.Filterlist.length > (_vm.Filterlist.indexOf(item) + 1))?_c('span',{staticStyle:{\"margin-right\":\"3px\"}},[_vm._v(\" \"+_vm._s(_vm.filtertype))]):_vm._e()]):_vm._e()}),_vm._l((_vm.Filterlist),function(item,itemIndex){return (_vm.category != 'Match All Value')?_c('span',{key:itemIndex},[_vm._v(\" \"+_vm._s((_vm.Filterlist.indexOf(item) + 1))+\" \"),(_vm.Filterlist.length > (_vm.Filterlist.indexOf(item) + 1))?_c('span',{staticStyle:{\"margin-right\":\"3px\"}},[_vm._v(_vm._s(_vm.filtertype))]):_vm._e()]):_vm._e()})],2),_c('draggable',{staticClass:\"draggable-list\",attrs:{\"list\":_vm.Filterlist,\"group\":\"my-groupForFilter\",\"move\":_vm.checkMove,\"item-key\":\"CustomFieldId\",\"id\":\"TargetDivID\"},on:{\"start\":function($event){_vm.drag = true},\"end\":function($event){_vm.drag = false},\"dragenter\":function($event){return _vm.dragover($event)},\"dragleave\":function($event){return _vm.dragover($event)},\"drop\":function($event){return _vm.dragover($event)}},model:{value:(_vm.Filterlist),callback:function ($$v) {_vm.Filterlist=$$v},expression:\"Filterlist\"}},_vm._l((_vm.Filterlist),function(element,eleIndex){return _c('div',{key:eleIndex,staticClass:\"list-item row filter-div\",attrs:{\"id\":\"TargetDivID\"},on:{\"dragover\":function($event){return _vm.dragover($event)}}},[_c('div',{staticClass:\"counter_num px-1 py-2 filter-count-div\"},[_vm._v(\" \"+_vm._s((_vm.Filterlist.indexOf(element) + 1))+\" \")]),_c('div',{staticStyle:{\"width\":\"77%\"}},[_c('div',{staticClass:\"px-1 py-0 width120 text-truncate float-left font-14\"},[(element.Calculated_Field == true)?_c('span',{staticStyle:{\"font-size\":\"22px\",\"float\":\"left\",\"margin-right\":\"10px\"}},[_vm._v(\"f\"),_c('sub',{staticStyle:{\"font-size\":\"12px\"}},[_vm._v(\"x\")])]):_vm._e(),_c('span',{staticClass:\"text-truncate float-left\",staticStyle:{\"width\":\"110px\"},attrs:{\"data-toggle-tooltip\":element.FieldName,\"title\":_vm.GetLocalizedValue(element.FieldName, element.DisplayName)}},[_vm._v(\" \"+_vm._s(_vm.GetLocalizedValue(element.FieldName, element.DisplayName))+_vm._s(element.ExpresssionFieldName)+\" \")])]),_c('div',{staticClass:\"px-1 py-0 text-primary width80 text-truncate float-left font-14\"},[_vm._v(\" \"+_vm._s(element.OperatorDisplayName)+\" \")]),_c('div',{staticClass:\"px-1 py-0 hh text-truncate float-left font-12 w-100\"},[_vm._v(\" \"+_vm._s(element.valueTypeText)+\" \"+_vm._s(element.valueTypeNumber)+\" \"+_vm._s(element.valueTypeNumber2 != '' ? '-' : '')+\" \"+_vm._s(element.valueTypeNumber2)+\" \"+_vm._s(element.valueTypeFirstdate)+\" \"+_vm._s(element.valueTypeSeconddate != '' ? '-' : '')+\" \"+_vm._s(element.valueTypeSeconddate)+\" \"+_vm._s(element.ValueDisplayFirstTime)+\" \"+_vm._s(element.ValueDisplaySecondTime != '' ? '-' : '')+\" \"+_vm._s(element.ValueDisplaySecondTime)+\" \"+_vm._s(element.Displaymultiplevalue)+\" \"+_vm._s(element.DropDownValue)+\" \")])]),_c('div',{staticClass:\"parentdiv datarepfix filters\"},[_c('a',{attrs:{\"aria-hidden\":\"true\"},on:{\"click\":function($event){return _vm.DeleteFilterFields(element, $event)}}},[_c('em',{class:!element.IsMandatoryforFilter ? 'fa fa-trash-o text-danger' : 'fa fa-trash-o text-danger d-none'})]),_c('a',{attrs:{\"aria-hidden\":\"true\"},on:{\"click\":function($event){return _vm.openrulespop(element, $event)}}},[_c('em',{staticClass:\"fa fa-cog action_icon_cv\"})]),_c('div',[_c('div',{staticClass:\"verticle-action rt25 rt502\"},[_c('span',{staticClass:\"action-list-box small filter-list-box\"},[_c('span',{staticClass:\"list-actions text-left p-0 datarep ml-3\",staticStyle:{\"width\":\"480px\"},attrs:{\"id\":\"action-list\"}},[_c('div',{staticClass:\"float-left col-12 p-0\"},[_c('div',{staticClass:\"container-fluid p-0 mb-3\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"theme-primary partition-full\"},[_c('span',{staticClass:\"p-name text-white mt-2\"},[_vm._v(\" \"+_vm._s(_vm.$t('Setting'))+\" \")])])])])]),_c('div',{staticClass:\"col-12 float-left\"},[_c('div',{staticClass:\"col-12 p-0 float-left\"},[_vm._l((_vm.GetOperator),function(item,itmInx){return _c('div',{key:itmInx,staticClass:\"form-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(element.selectedOPValue),expression:\"element.selectedOPValue\"}],staticClass:\"radio\",attrs:{\"type\":\"radio\",\"name\":'radiobtn' + (_vm.Filterlist.indexOf(element) + 1)},domProps:{\"value\":item.OPERATOR_ID,\"checked\":_vm._q(element.selectedOPValue,item.OPERATOR_ID)},on:{\"click\":function($event){return _vm.checkvalue(item.OPERATOR_DISPLAY_NAME, element, item.OPERATOR_EXPRESSION, item.OPERATOR_ID, item.MP[0].OPERATION_DATA_TYPE)},\"change\":function($event){return _vm.$set(element, \"selectedOPValue\", item.OPERATOR_ID)}}}),_c('label',{staticClass:\"ml-2\"},[_vm._v(\" \"+_vm._s(item.OPERATOR_DISPLAY_NAME)+\" \")]),_c('br')])}),(_vm.texttypevalue1)?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.ValueDisplaytext),expression:\"ValueDisplaytext\"}],staticClass:\"form-control\",attrs:{\"type\":\"text\",\"id\":\"inpttxt\"},domProps:{\"value\":(_vm.ValueDisplaytext)},on:{\"input\":function($event){if($event.target.composing)return;_vm.ValueDisplaytext=$event.target.value}}}):_vm._e(),(_vm.texttypevalue2)?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.ValueDisplaytext2),expression:\"ValueDisplaytext2\"}],staticClass:\"form-control\",attrs:{\"type\":\"text\",\"id\":\"inpttxt2\"},domProps:{\"value\":(_vm.ValueDisplaytext2)},on:{\"input\":function($event){if($event.target.composing)return;_vm.ValueDisplaytext2=$event.target.value}}}):_vm._e(),(_vm.numbertypevalue1)?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.ValueDisplaynumber),expression:\"ValueDisplaynumber\"}],staticClass:\"form-control\",attrs:{\"type\":\"number\",\"id\":\"inpttxtbtw\"},domProps:{\"value\":(_vm.ValueDisplaynumber)},on:{\"keydown\":function($event){return _vm.PreventValues($event)},\"input\":function($event){if($event.target.composing)return;_vm.ValueDisplaynumber=$event.target.value}}}):_vm._e(),_c('br'),(_vm.numbertypevalue2)?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.ValueDisplaynumber2),expression:\"ValueDisplaynumber2\"}],class:{ 'form-control': true, 'is-invalid': ((_vm.ValueDisplaynumber2 < _vm.ValueDisplaynumber) && (_vm.ValueDisplaynumber2 != '' || _vm.ValueDisplaynumber2 == '0')) },attrs:{\"type\":\"number\",\"id\":\"inpttxtbtw\"},domProps:{\"value\":(_vm.ValueDisplaynumber2)},on:{\"keydown\":function($event){return _vm.PreventValues($event)},\"input\":function($event){if($event.target.composing)return;_vm.ValueDisplaynumber2=$event.target.value}}}):_vm._e(),(((_vm.ValueDisplaynumber2 < _vm.ValueDisplaynumber) && (_vm.ValueDisplaynumber2 != '' || _vm.ValueDisplaynumber2 == '0')))?_c('span',{staticClass:\"invalid-feedback\"},[_vm._v(\"Second value should be greater than first value.\")]):_vm._e(),(_vm.datetypevalue1)?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.ValueDisplaydate),expression:\"ValueDisplaydate\"}],staticClass:\"form-control\",attrs:{\"type\":\"date\",\"id\":\"inpttxtdate1\",\"max\":\"9999-12-31\"},domProps:{\"value\":(_vm.ValueDisplaydate)},on:{\"input\":function($event){if($event.target.composing)return;_vm.ValueDisplaydate=$event.target.value}}}):_vm._e(),(_vm.datetypevalue2)?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.ValueDisplaydate2),expression:\"ValueDisplaydate2\"}],class:{ 'form-control': true, 'disabled': _vm.ValueDisplaydate == '' },attrs:{\"type\":\"date\",\"id\":\"inpttxtdate2\",\"min\":_vm.ValueDisplaydate,\"max\":\"9999-12-31\"},domProps:{\"value\":(_vm.ValueDisplaydate2)},on:{\"input\":function($event){if($event.target.composing)return;_vm.ValueDisplaydate2=$event.target.value}}}):_vm._e(),(_vm.timetypevalue)?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.ValueDisplayTime),expression:\"ValueDisplayTime\"}],staticClass:\"form-control\",attrs:{\"type\":\"time\",\"id\":\"inpttxttime1\"},domProps:{\"value\":(_vm.ValueDisplayTime)},on:{\"input\":function($event){if($event.target.composing)return;_vm.ValueDisplayTime=$event.target.value}}}):_vm._e(),(_vm.timetypevalue2)?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.ValueDisplayTime2),expression:\"ValueDisplayTime2\"}],class:{ 'form-control': true, 'disabled': _vm.ValueDisplayTime == '' },attrs:{\"type\":\"time\",\"id\":\"inpttxttime2\",\"min\":_vm.ValueDisplayTime},domProps:{\"value\":(_vm.ValueDisplayTime2)},on:{\"input\":function($event){if($event.target.composing)return;_vm.ValueDisplayTime2=$event.target.value}}}):_vm._e(),(_vm.DDLForFilter)?_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.modelFilterDDLValue),expression:\"modelFilterDDLValue\"}],staticClass:\"form-control\",on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.modelFilterDDLValue=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},[_c('option',{attrs:{\"disabled\":\"\"}},[_vm._v(\"Select \")]),_vm._l((_vm.options),function(DDLitem){return _c('option',{key:DDLitem.value,attrs:{\"title\":DDLitem.label},domProps:{\"value\":DDLitem.value}},[_vm._v(\" \"+_vm._s(_vm.TruncateStr(DDLitem.label, 50)))])})],2):_vm._e(),(_vm.multiselectvalue)?_c('div',[_c('Multiselect',{staticClass:\"form-control\",attrs:{\"multiple\":true,\"label\":\"label\",\"track-by\":\"label\",\"placeholder\":\"Select\",\"searchable\":true,\"mode\":\"multiple\",\"hideSelected\":false,\"close-on-select\":false,\"options\":_vm.options},scopedSlots:_vm._u([{key:\"multiplelabel\",fn:function({ values }){return [(values && values.length > 0)?_c('div',{staticClass:\"multiselect-multiple-label\"},[_c('div',{staticClass:\"multiselect-tags\",attrs:{\"data-tags\":\"\"}},[_c('span',{staticClass:\"multiselect-tag\",attrs:{\"tabindex\":\"-1\",\"aria-label\":values[0].label}},[_vm._v(_vm._s(_vm.TruncateStr(values[0].label, 18))+\" \"),_c('span',{staticClass:\"multiselect-tag-remove\"},[_c('span',{staticClass:\"multiselect-tag-remove-icon\"})])])]),(values && values.length > 1)?_c('span',[_vm._v(\" \"+_vm._s(values.length)+\" options selected \")]):_vm._e()]):_vm._e()]}}],null,true),model:{value:(_vm.dropdwonvalues),callback:function ($$v) {_vm.dropdwonvalues=$$v},expression:\"dropdwonvalues\"}})],1):_vm._e()],2),_c('div',{staticClass:\"col-12 p-0 float-left mb-3 mt-3\"},[_c('div',{staticClass:\"row flex-row-reverse\"},[_c('div',{staticClass:\"col-lg-6 text-right\"},[_c('a',{class:{ 'btn btn-primary ancsaveuserticket text-white': true, 'disabled': (_vm.ValueDisplaynumber2 < _vm.ValueDisplaynumber && _vm.numbertypevalue2) },attrs:{\"id\":\"btnSaveTicket\",\"title\":\"\",\"data-toggle-tooltip\":\"tooltip\",\"data-original-title\":\"Click here to submit ticket\"},on:{\"click\":function($event){return _vm.applySetting(element.CustomFieldId)}}},[_c('em',{class:{ 'fa fa-save text-white': true, 'disabled': (_vm.ValueDisplaynumber2 < _vm.ValueDisplaynumber && _vm.numbertypevalue2) }}),_vm._v(\"Apply\")])])])])])]),_c('em',{staticClass:\"fa fa-times close close-action_cv\",attrs:{\"aria-hidden\":\"true\"},on:{\"click\":function($event){return _vm.ClosePopFilter()}}}),_c('div',{staticClass:\"va_rt25\"},[_c('em',{staticClass:\"icon-solid arrow-solid-left text-dark\",staticStyle:{\"font-size\":\"20pt\"}})])])])])])])])}),0)],1),_c('hr')])],1),_vm._m(3)],1)])])])]),(_vm.showReportPreview)?_c('ReportPreview',{ref:\"reportdata\",attrs:{\"previewdata\":_vm.previewdata,\"customreportparameters\":_vm.customreportparameters,\"Columnlist\":_vm.Columnlist,\"Grouplist\":_vm.Grouplist,\"saveJsonReport\":_vm.saveJsonReport,\"PdfJsonReport\":_vm.PdfJsonReport,\"editjsondata\":_vm.editjsondata,\"ReportName\":_vm.ReportName,\"GraphData\":_vm.graphData,\"SortingData\":_vm.sortingData,\"GraphJson\":_vm.GraphJson,\"LevelOfGrouping\":_vm.LevelOfGrouping}}):_vm._e(),(_vm.showcalculatedUI)?_c('CalculatedUI',{ref:\"Calculated\",attrs:{\"customreportparameters\":_vm.customreportparameters,\"Columnlist\":_vm.Columnlist,\"ExpFieldDataArray\":_vm.ExpFieldDataArray,\"editexpressionvalue\":_vm.editexpressionvalue,\"ExpDataArray\":_vm.ExpDataArray},on:{\"close\":function($event){_vm.showcalculatedUI = false},\"VerifiedExpressionData\":_vm.VerifiedExpressionColumnValue}}):_vm._e()],1)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"input-group-append\"},[_c('span',{staticClass:\"input-group-text bg-transparent bg-white border-left-0\"})])\n},function (){var _vm=this,_c=_vm._self._c;return _c('a',{staticClass:\"tab-Search-btn\"},[_c('em',{staticClass:\"fa fa-search\",attrs:{\"aria-hidden\":\"true\"}})])\n},function (){var _vm=this,_c=_vm._self._c;return _c('span',{staticClass:\"expand_all_filters\",staticStyle:{\"position\":\"absolute\",\"left\":\"0\"}},[_c('span',[_c('a',{staticClass:\"collapsed\",attrs:{\"title\":\"Expand\",\"data-toggle-tooltip\":\"tooltip\"}},[_c('em',{staticClass:\"fa fa-angle-double-right mt-1\",attrs:{\"aria-hidden\":\"true\"}})])])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"tab-pane\",attrs:{\"role\":\"tabpanel\",\"id\":\"tab-em-groups\"}},[_c('div',{staticClass:\"col-sm-12 col-md-12 col-lg-12 col-xl-12 p-0\"},[_c('div',{staticClass:\"listing\"},[_c('div',{staticClass:\"table-responsive\"})])])])\n}]\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('div',{staticClass:\"right-content datareport hr_jobpost\"},[_c('div',{staticClass:\"col-md-12 p-0 mb-2\"},[_c('div',{staticClass:\"theme-primary partition p-actions-expand\"},[_c('loader',{attrs:{\"isVisible\":_vm.isLoading}}),_c('span',{staticClass:\"p-name text-white\"},[_vm._v(_vm._s(_vm.$t('ReportPreview')))]),_c('span',{staticClass:\"p-actions float-right mydbsize\"},[_c('a',{staticClass:\"p-action-btn text-white dash\",attrs:{\"data-original-title\":\"REPORT PREVIEW\"},on:{\"click\":_vm.PreviewReport}},[_c('em',{staticClass:\"fa fa-play\"}),_c('br'),_vm._v(_vm._s(_vm.$t('ReportPreview'))+\" \")]),_c('a',{staticClass:\"p-action-btn text-white dash\",attrs:{\"data-original-title\":\"RESET\"},on:{\"click\":_vm.ResetData}},[_c('em',{staticClass:\"fa fa-repeat\"}),_c('br'),_vm._v(_vm._s(_vm.$t('Reset'))+\" \")]),_c('a',{staticClass:\"p-action-btn text-white dash\",attrs:{\"data-original-title\":\"PDF\"},on:{\"click\":_vm.ExportToPDF}},[_c('em',{staticClass:\"fa fa-file-pdf-o\"}),_c('br'),_vm._v(_vm._s(_vm.$t('ExportToPdf'))+\" \")]),_c('a',{staticClass:\"p-action-btn text-white dash\",attrs:{\"data-original-title\":\"Excel\"},on:{\"click\":_vm.ExportToExcel}},[_c('em',{staticClass:\"fa fa-file-excel-o\"}),_c('br'),_vm._v(_vm._s(_vm.$t('ExportToExcel'))+\" \")]),_c('a',{staticClass:\"p-action-btn text-white dash\",attrs:{\"data-original-title\":\"SORT\"},on:{\"click\":_vm.OpenSortingPopup}},[_c('em',{staticClass:\"fa fa-sort-amount-asc\"}),_c('br'),_vm._v(_vm._s(_vm.$t('SORT'))+\" \")]),_c('a',{staticClass:\"p-action-btn text-white dash\",attrs:{\"data-original-title\":\"GRAPH\"},on:{\"click\":_vm.OpenGraph}},[_c('em',{staticClass:\"fa fa-pie-chart\"}),_c('br'),_vm._v(_vm._s(_vm.$t('Graph'))+\" \")])]),_vm._m(0)],1),_c('div',{staticClass:\"parentdiv datarepfix2\"},[_c('div',{staticClass:\"verticle-action lft75 rt30\"},[_c('span',{staticClass:\"action-list-box small\",staticStyle:{\"width\":\"400px\"}},[(_vm.isSortPopup)?_c('span',{staticClass:\"text-left p-0 datarep mt-3 w-90 float-left bg_outerdark borderbababa position-relative\",attrs:{\"id\":\"action-list1\"}},[_c('div',{staticClass:\"float-left col-12\"},[_c('div',{staticClass:\"container-fluid p-0 mb-3\"}),_vm._l((_vm.sortColummnarray),function(input,index){return _c('div',{key:`phoneInput-${index}`,staticClass:\"row px-3 pb-0\"},[_c('div',{staticClass:\"col-lg-5 pl-0 pr-3\"},[_c('div',{staticClass:\"form-group\"},[_c('label',[_vm._v(_vm._s(_vm.$t('SortBy')))]),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(input.sortcolummnId),expression:\"input.sortcolummnId\"}],staticClass:\"form-control\",on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(input, \"sortcolummnId\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},_vm._l((_vm.Columnlist.filter(x => x.Calculated_Field == false)),function(item){return _c('option',{key:item.CustomFieldId,attrs:{\"disabled\":(_vm.sortColummnarray.filter(x => x.sortcolummnId == item.CustomFieldId)).length > 0},domProps:{\"value\":item.CustomFieldId}},[_vm._v(\" \"+_vm._s(item.DisplayName ? _vm.GetLocalizedValue(item.DisplayName) : _vm.GetLocalizedValue(item.FieldName))+\" \")])}),0)])]),_c('div',{staticClass:\"col-lg-5 pl-0 pr-3\"},[_c('div',{staticClass:\"form-group\"},[_c('label',[_vm._v(_vm._s(_vm.$t('OrderBy')))]),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(input.columnOrders),expression:\"input.columnOrders\"}],staticClass:\"form-control\",on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(input, \"columnOrders\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},[_c('option',[_vm._v(_vm._s(_vm.$t('ASC')))]),_c('option',[_vm._v(_vm._s(_vm.$t('DESC')))])])])]),_c('div',{staticClass:\"col-lg-2\"},[_c('div',{staticClass:\"form-group\"},[_c('a',{on:{\"click\":function($event){return _vm.AddSortingForm(input)}}},[_c('em',{staticClass:\"fa fa-plus-circle font-24 text-success mt-3\"})]),_c('a',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.sortColummnarray[0].sortcolummnId != '' || _vm.isValueExistInSort),expression:\"sortColummnarray[0].sortcolummnId != '' || isValueExistInSort\"}],on:{\"click\":function($event){return _vm.RemoveSortingForm(input)}}},[_c('em',{staticClass:\"fa fa-times-circle font-24 text-danger mt-3 ml-1\"})])])])])})],2),_vm._m(1),_c('button',{staticClass:\"close closebtnsmall\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.close()}}},[_c('em',{staticClass:\"fa fa-times\",attrs:{\"aria-hidden\":\"true\"}})])]):_vm._e()])])])]),_c('div',{staticClass:\"col-md-12 p-0 mb-2\"},[_c('div',{staticClass:\"tab-pane mb-0\"},[_c('div',{staticClass:\"tab-content fsmtabcontrolMobileView\",attrs:{\"id\":\"myTabContent\"}},[_vm._m(2),(_vm.showGraphOptions)?_c('div',{staticClass:\"card mb-3 probx\"},[_c('div',{staticClass:\"card-header\"},[_c('h2',[_vm._v(_vm._s(_vm.$t('Graph')))]),_c('a',{staticClass:\"btn btn-primary\",on:{\"click\":_vm.OpenGraphOptions}},[_vm._v(_vm._s(_vm.$t('GraphOptions'))+\" \"),_c('em',{staticClass:\"fa fa-cogs\"})])]),(_vm.showChart)?_c('div',{staticClass:\"card-body\",staticStyle:{\"min-height\":\"245px\"},attrs:{\"id\":\"Reportpdf\"}},[_c('div',{staticClass:\"float-right\"},[_c('a',{staticClass:\"text-center text-danger\",on:{\"click\":function($event){return _vm.ResetGraphData()}}},[_c('span',{staticClass:\"fa fa-trash-o text-danger\",staticStyle:{\"font-size\":\"25px\"}})])]),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12 col-lg-12 text-center p-0\"},[_c('div',{staticClass:\"border bg-light float-left text-left p-0 graphinfo_base_lft\"},[_c('ul',{staticClass:\"graphinfo\"},[_c('li',[_c('label',[_vm._v(\"X-axis:\")]),_vm._v(\" \"+_vm._s(_vm.GetLocalizedValue(_vm.FilterCustomFieldName(_vm.XAxisField))))]),_c('li',[_c('label',[_vm._v(\"Y-axis:\")]),_vm._v(\" \"+_vm._s(_vm.GetLocalizedValue(_vm.FilterCustomFieldName(_vm.YAxisField))))]),_c('li',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.aggregateFunctionResult != 0),expression:\"aggregateFunctionResult != 0\"}]},[_c('label',[_vm._v(\"# \"+_vm._s(_vm.aggregateFunctionType)+\":\")]),_vm._v(\" \"+_vm._s(_vm.aggregateFunctionResult)+\" \")])])]),(_vm.chartType == 'line' || _vm.chartType == 'bar')?_c('div',{staticClass:\"p-0 m-0 float-left graphinfo_base_rgt\"},[_c('VueApexCharts',{ref:\"chart\",attrs:{\"type\":_vm.chartType,\"height\":\"auto\",\"options\":_vm.chartOptions,\"series\":_vm.chartSeries}})],1):_vm._e(),(_vm.chartType == 'pie' || _vm.chartType == 'donut')?_c('div',{staticClass:\"p-0 m-0 float-left graphinfo_base_rgt\"},[_c('VueApexCharts',{ref:\"chart\",attrs:{\"type\":_vm.chartType,\"height\":\"auto\",\"options\":_vm.chartOptions,\"series\":_vm.chartSeries}})],1):_vm._e()])])]):_vm._e()]):_vm._e(),_c('div',{staticClass:\"tab-pane p-0 pb-2 border-0 active\",attrs:{\"role\":\"tabpanel\",\"id\":\"tab-detail-content\",\"aria-labelledby\":\"tab-detail-content\"}},[_c('div',{staticClass:\"listing mt-3\"},[_c('div',{staticClass:\"table-responsive table-fix-header\"},[_c('table',{staticClass:\"table table-bordered mt-0\",staticStyle:{\"width\":\"100%\"},attrs:{\"id\":\"Reportpdf\",\"aria-label\":\"Report Preview Listing\"}},[_c('thead',{staticClass:\"thead-bg\"},[_c('tr',[_vm._l((_vm.previewgroupdata),function(item,index){return (_vm.showdata)?_c('th',{key:index,attrs:{\"scope\":\"col\"}},[_vm._v(\" \"+_vm._s(_vm.GetLocalizedValue((item.DisplayName != null && item.DisplayName != '') ? item.DisplayName : item.FieldName)))]):_vm._e()}),_vm._l((_vm.previewcolumn),function(column,index){return _c('th',{key:index,attrs:{\"scope\":\"col\"}},[_vm._v(\" \"+_vm._s(_vm.GetLocalizedValue((column.DisplayName != null && column.DisplayName != '') ? column.DisplayName : column.FieldName))+_vm._s(column.ExpresssionFieldName)+\" \")])})],2)]),(_vm.noRecord)?_c('tbody',[_c('tr',{staticStyle:{\"cursor\":\"initial\"}},[_c('td',{attrs:{\"colspan\":\"4\"}},[_c('div',{staticClass:\"text-center text-danger d-flex align-items-center justify-content-center norecs\"},[_vm._v(\" \"+_vm._s(_vm.$t(\"NoRecordfound\")))])])])]):_vm._e(),_vm._l((_vm.previewdata),function(item,index){return _c('tbody',[_vm._l((_vm.previewdata[index].data),function(sitem,sindex){return (_vm.showdata)?_c('tr',[(sindex == 0)?_vm._l((_vm.previewgroupdata),function(gitem,gindex){return _c('td',{class:{ 'onlyrtbod': true, '': item.totalRecord == null },attrs:{\"rowspan\":item.totalRecord}},[_vm._v(\" \"+_vm._s((item[gitem.DisplayName] != null && item[gitem.DisplayName] != '') ? item[gitem.DisplayName] : item[gitem.FieldName])+\" \"),_vm._v(\" (\"+_vm._s((item[gitem.DisplayName] != null && item[gitem.DisplayName] != '' || gitem.FieldName != null && gitem.FieldName != '') ? item.totalRecord : '-')+\") \")])}):_vm._e(),_vm._l((_vm.previewcolumn),function(column,i){return _c('td',{key:i},[_c('span',{domProps:{\"innerHTML\":_vm._s((sitem[column.DisplayName] == true && sitem[column.DisplayName] != 1 || sitem[column.DisplayName] == false && sitem[column.DisplayName] != 0) ?\n                                                    (sitem[column.DisplayName] == true ? 'YES' : 'NO') : (sitem[column.FieldName]\n                                                    == true ? 'YES' : 'NO') ||\n                                                    (sitem[column.DisplayName] != null && sitem[column.DisplayName] != '') ?\n                                                    (sitem[column.DisplayName] || sitem[column.DisplayName] == 0 ? sitem[column.DisplayName] : '') :\n                                                    (sitem[column.FieldName] || sitem[column.DisplayName] == 0 ? sitem[column.FieldName] : ''))}})])})],2):_vm._e()}),(_vm.showcoldata)?_c('tr',_vm._l((_vm.previewcolumn),function(column,i){return _c('td',{key:i},[_c('span',{domProps:{\"innerHTML\":_vm._s((item[column.DisplayName] == true && item[column.DisplayName] != 1 || item[column.DisplayName] == false && item[column.DisplayName] != 0) ?\n                                                    (item[column.DisplayName] == true ? 'YES' : 'NO') : (item[column.FieldName]\n                                                    == true ? 'YES' : 'NO') ||\n                                                    (item[column.DisplayName] != null && item[column.DisplayName] != '') ?\n                                                    (item[column.DisplayName] || item[column.DisplayName] == 0 ? item[column.DisplayName] : '') :\n                                                    (item[column.FieldName] || item[column.DisplayName] == 0 ? item[column.FieldName] : ''))}}),_vm._v(\" \"+_vm._s(item[column.ExpresssionFieldName])+\" \")])}),0):_vm._e()],2)})],2)])])]),_c('div',{staticClass:\"float-right\"},[_c('a',{staticClass:\"btn btn-success my-2 my-sm-0 mr-2\",on:{\"click\":function($event){return _vm.SaveAllReport()}}},[_vm._v(\"  \"),_c('span',{staticClass:\"fa fa-floppy-o\"}),_vm._v(\" \"+_vm._s(_vm.$t('Save'))+\" \")]),_c('a',{staticClass:\"btn btn-danger\",on:{\"click\":function($event){return _vm.CancelAll()}}},[_vm._v(\"  \"),_c('span',{staticClass:\"fa fa-times\"}),_vm._v(\" \"+_vm._s(_vm.$t('Cancel'))+\" \")])])])])])]),_c('modalGraphOptions',{ref:\"modalGraph\",attrs:{\"Columnlist\":_vm.Columnlist,\"showGraphOptions\":_vm.showGraphOptions,\"customreportparameters\":_vm.customreportparameters,\"GraphData\":_vm.GraphData,\"sortColummnarray\":_vm.sortColummnarray,\"GraphJson\":_vm.GraphJson}})],1)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('span',{staticClass:\"collapse-head-btns\"},[_c('a',{staticClass:\"collapse-btns\",attrs:{\"href\":\"javascript:;\"}},[_c('em',{staticClass:\"fa fa-angle-up text-white\"})])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"va_lft25 top4\"},[_c('em',{staticClass:\"icon-solid arrow-solid-left text-secondary\",staticStyle:{\"font-size\":\"20pt\"}})])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"expand-list\"},[_c('a',{staticClass:\"expand-list-btn justify-content-center align-items-center\",attrs:{\"href\":\"javascript:;\"}},[_c('em',{staticClass:\"icon-solid arrow-solid-left text-white\",staticStyle:{\"font-size\":\"9pt\"}})])])\n}]\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"modal my-popups right fade\",attrs:{\"id\":\"CustomGraphOptions\",\"role\":\"dialog\",\"data-backdrop\":\"static\",\"data-keyboard\":\"false\"}},[_c('div',{staticClass:\"modal-dialog mw-1100\",attrs:{\"role\":\"document\"}},[_c('div',{staticClass:\"modal-content\"},[_c('div',{staticClass:\"modal-header mheader-user\"},[_c('button',{staticClass:\"close\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.CloseGraphOptions()}}},[_c('em',{staticClass:\"fa fa-times\",attrs:{\"aria-hidden\":\"true\"}})]),_c('h4',{staticClass:\"modal-title\",attrs:{\"id\":\"myModalLabel\"}},[_vm._v(_vm._s(_vm.$t(\"GraphSetting\")))]),_c('span',{staticClass:\"user-guide\"},[_c('a',{staticClass:\"ancuserguide\",attrs:{\"data-toggle\":\"collapse\",\"href\":\"javascript:;\",\"role\":\"button\",\"aria-expanded\":\"false\",\"aria-controls\":\"collapseExample\"}},[_vm._v(_vm._s(_vm.$t(\"GuideForUser\")))]),_c('div',{staticClass:\"divancuserguide collapse\",attrs:{\"id\":\"collapseReplyUG\"}},[_c('div',{staticClass:\"custom-scrollbar-js\",attrs:{\"id\":\"scrollbarreplyuserguideMangeView\"}},[_c('div',{staticClass:\"con\"},[_vm._v(_vm._s(_vm.$t(\"MangeViewUG1\")))])])])])]),_c('div',{staticClass:\"modal-body p-3\"},[_c('loader',{attrs:{\"is-visible\":_vm.isLoading}}),_c('div',{staticClass:\"container-fluid tab-content\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-6\"},[_c('dynamic-form',{ref:\"refGraphForm\",attrs:{\"lang\":\"en\",\"buttons\":false,\"schema\":_vm.FormSchema},on:{\"OnSubmit\":_vm.onSubmit},scopedSlots:_vm._u([{key:\"tgslot-chartlist\",fn:function({ data }){return [_c('div',{staticClass:\"user_type_choice coloredicons row\"},_vm._l((_vm.chartTypes),function(item,index){return _c('div',{key:index,staticClass:\"btn-group btn-group-toggle mb-2\",attrs:{\"data-toggle\":\"buttons\"}},[_c('label',{class:{ 'btn btn_cstm': true, 'active': (item.id == _vm.selectedChartTypeID) },attrs:{\"for\":'cls_usertype' + index}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.selectedChartTypeID),expression:\"selectedChartTypeID\"}],attrs:{\"type\":\"radio\",\"name\":\"cls_usertype\",\"id\":'cls_usertype' + index},domProps:{\"value\":item.id,\"checked\":_vm._q(_vm.selectedChartTypeID,item.id)},on:{\"change\":function($event){_vm.selectedChartTypeID=item.id}}}),_c('span',{staticClass:\"d-block pb-2\"},[_c('em',{class:[item.chart_Type == 'Pie' ? 'fa fa-pie-chart bg-transparent' : '',\n                                                    item.chart_Type == 'Bar' ? 'fa fa-bar-chart bg-transparent' : '',\n                                                    item.chart_Type == 'Line' ? 'fa fa-line-chart bg-transparent' : '',\n                                                    item.chart_Type == 'Horizontal_Bar' ? 'fa fa-bars bg-transparent' : '',\n                                                    item.chart_Type == 'Donut' ? 'fa fa-circle-o-notch bg-transparent' : ''],attrs:{\"aria-hidden\":\"true\"}})])])])}),0),(data.error != '')?_c('span',{staticClass:\"invalid-feedback d-block\"},[_vm._v(_vm._s(data.error))]):_vm._e()]}}])})],1),_c('div',{staticClass:\"col-md-6\"},[_c('div',{staticClass:\"p-3 bg-light border\"},[_c('div',{staticClass:\"heading-border\"},[_c('h5',{staticClass:\"h5\"},[_c('span',[_vm._v(_vm._s(_vm.$t('Preview')))])])]),_c('span',{staticClass:\"text-center my-3 w-100 float-left\"},[_vm._v(_vm._s(_vm.FormSchema[0].Data[0].value)+\" - \"),_c('button',{staticClass:\"btn btn-info mt-2\",attrs:{\"href\":\"javascript:;\"},on:{\"click\":_vm.ViewReportGraph}},[_vm._v(\" \"+_vm._s(_vm.$t('ViewReport'))+\" \")])]),(_vm.PreviewChart)?_c('div',{staticClass:\"col-sm-12 col-lg-12 px-0 py-4 float-left bg-white\"},[_c('VueApexCharts',{attrs:{\"type\":_vm.selectedChartType,\"options\":_vm.chartOptions,\"series\":_vm.chartseries}}),(_vm.aggregateFunctionResult != 0)?_c('div',{class:_vm.selectedChartType == 'pie' || _vm.selectedChartType == 'donut' ? 'text-left pl-4 ml-4' : 'text-center'},[_c('a',{attrs:{\"href\":\"javascript:;\"}},[_vm._v(_vm._s(_vm.resultMsg)+\" : \"+_vm._s(_vm.aggregateFunctionResult))])]):_vm._e()],1):_vm._e()])])]),_c('div',{staticClass:\"col-12 p-0 mt-3 float-left\"},[_c('div',{staticClass:\"row flex-row-reverse\"},[_c('div',{staticClass:\"col-lg-6 text-right\"},[_c('button',{staticClass:\"btn btn-success ancsaveuserticket\",on:{\"click\":_vm.ApplyGraph}},[_c('em',{staticClass:\"fa fa-share pr-2\"}),_vm._v(_vm._s(_vm.$t('Apply')))])])])])])],1)])])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div id=\"CustomGraphOptions\" role=\"dialog\" class=\"modal my-popups right fade\" data-backdrop=\"static\"\r\n        data-keyboard=\"false\" v-cloak>\r\n        <div role=\"document\" class=\"modal-dialog mw-1100\">\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header mheader-user\">\r\n                    <button type=\"button\" class=\"close\" v-on:click=\"CloseGraphOptions()\">\r\n                        <em aria-hidden=\"true\" class=\"fa fa-times\"></em>\r\n                    </button>\r\n                    <h4 id=\"myModalLabel\" class=\"modal-title\">{{ $t(\"GraphSetting\") }}</h4>\r\n                    <span class=\"user-guide\">\r\n                        <a class=\"ancuserguide\" data-toggle=\"collapse\" href=\"javascript:;\" role=\"button\"\r\n                            aria-expanded=\"false\" aria-controls=\"collapseExample\">{{ $t(\"GuideForUser\") }}</a>\r\n                        <div id=\"collapseReplyUG\" class=\"divancuserguide collapse\">\r\n                            <div id=\"scrollbarreplyuserguideMangeView\" class=\"custom-scrollbar-js\">\r\n                                <div class=\"con\">{{ $t(\"MangeViewUG1\") }}</div>\r\n                            </div>\r\n                        </div>\r\n                    </span>\r\n                </div>\r\n                <div class=\"modal-body p-3\">\r\n                    <loader :is-visible=\"isLoading\"></loader>\r\n                    <div class=\"container-fluid tab-content\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6\">\r\n                                <dynamic-form lang=\"en\" ref=\"refGraphForm\" :buttons=\"false\" :schema=\"FormSchema\"\r\n                                    v-on:OnSubmit=\"onSubmit\">\r\n                                    <template v-slot:tgslot-chartlist=\"{ data }\">\r\n                                        <div class=\"user_type_choice coloredicons row\">\r\n                                            <div class=\"btn-group btn-group-toggle mb-2\" data-toggle=\"buttons\"\r\n                                                v-for=\"(item, index) in chartTypes\" :key=\"index\">\r\n                                                <label\r\n                                                    v-bind:class=\"{ 'btn btn_cstm': true, 'active': (item.id == selectedChartTypeID) }\"\r\n                                                    v-bind:for=\"'cls_usertype' + index\">\r\n                                                    <input type=\"radio\" v-bind:value=\"item.id\" name=\"cls_usertype\"\r\n                                                        v-bind:id=\"'cls_usertype' + index\" v-model=\"selectedChartTypeID\" />\r\n                                                    <span class=\"d-block pb-2\">\r\n                                                        <em :class=\"[item.chart_Type == 'Pie' ? 'fa fa-pie-chart bg-transparent' : '',\r\n                                                        item.chart_Type == 'Bar' ? 'fa fa-bar-chart bg-transparent' : '',\r\n                                                        item.chart_Type == 'Line' ? 'fa fa-line-chart bg-transparent' : '',\r\n                                                        item.chart_Type == 'Horizontal_Bar' ? 'fa fa-bars bg-transparent' : '',\r\n                                                        item.chart_Type == 'Donut' ? 'fa fa-circle-o-notch bg-transparent' : '']\"\r\n                                                            aria-hidden=\"true\"></em>\r\n                                                    </span>\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n                                        <span class=\"invalid-feedback d-block\" v-if=\"data.error != ''\">{{ data.error }}</span>\r\n                                    </template>\r\n                                </dynamic-form>\r\n                            </div>\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"p-3 bg-light border\">\r\n                                    <div class=\"heading-border\">\r\n                                        <h5 class=\"h5\"><span>{{ $t('Preview') }}</span></h5>\r\n                                    </div>\r\n                                    <span class=\"text-center my-3 w-100 float-left\">{{ FormSchema[0].Data[0].value }} -\r\n                                        <button href=\"javascript:;\" class=\"btn btn-info mt-2\" v-on:click=\"ViewReportGraph\">\r\n                                            {{ $t('ViewReport') }}\r\n                                        </button>\r\n                                    </span>\r\n                                    <div v-if=\"PreviewChart\" class=\"col-sm-12 col-lg-12 px-0 py-4 float-left bg-white\">\r\n                                        <VueApexCharts :type=\"selectedChartType\" :options=\"chartOptions\"\r\n                                            :series=\"chartseries\">\r\n                                        </VueApexCharts>\r\n                                        <div :class=\"selectedChartType == 'pie' || selectedChartType == 'donut' ? 'text-left pl-4 ml-4' : 'text-center'\"\r\n                                            v-if=\"aggregateFunctionResult != 0\">\r\n                                            <a href=\"javascript:;\">{{ resultMsg }} : {{ aggregateFunctionResult }}</a>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <!-- <div class=\"col-lg-12\">\r\n                                        <div class=\"form-group\">\r\n                                            <label>{{ $t('ViewAs') }}:</label>\r\n                                            <div v-if=\"isTypeInteger\" class=\"input-group\">\r\n                                                <input name=\"sum\" v-model=\"aggregateFunctionType\" value=\"Sum\" type=\"radio\"\r\n                                                    class=\"mr-2\" />{{ $t('Sum') }}\r\n                                                <input name=\"sum\" v-model=\"aggregateFunctionType\" value=\"Avg\" type=\"radio\"\r\n                                                    class=\"mr-2 ml-3\" />{{ $t('Average') }}\r\n                                                <input name=\"sum\" v-model=\"aggregateFunctionType\" value=\"Min\" type=\"radio\"\r\n                                                    class=\"mr-2 ml-3\" />{{ $t('Min') }}\r\n                                                <input name=\"sum\" v-model=\"aggregateFunctionType\" value=\"Max\" type=\"radio\"\r\n                                                    class=\"mr-2 ml-3\" />{{ $t('Max') }}\r\n                                                <input name=\"sum\" v-model=\"aggregateFunctionType\" value=\"Count\" type=\"radio\"\r\n                                                    class=\"mr-2 ml-3\" />{{ $t('Count') }}\r\n                                            </div>\r\n                                            <div class=\"input-group\" v-if=\"!isTypeInteger\">\r\n                                                <input name=\"sum\" v-model=\"aggregateFunctionType\" value=\"Count\" checked\r\n                                                    type=\"radio\" class=\"mr-2 ml-3\" />{{ $t('Count') }}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                        </div> -->\r\n                            <!-- <div class=\"col-sm-12 col-lg-6 p-3 bg-light border\">\r\n                                <div class=\"heading-border\">\r\n                                    <h5 class=\"h5\"><span>{{ $t('Preview') }}</span></h5>\r\n                                </div>\r\n                                <span class=\"text-center my-3 w-100 float-left\">{{ reportTitle }} -\r\n                                    <button href=\"#\" class=\"btn btn-info\" @click=\"ViewReportGraph\">\r\n                                        {{ $t('ViewReport') }}\r\n                                    </button>\r\n                                </span>\r\n                                <div v-if=\"PreviewChart\" class=\"col-sm-12 col-lg-12 px-0 py-4 float-left bg-white\">\r\n                                    <VueApexCharts :type=\"selectedChartType\" :options=\"chartOptions\" :series=\"chartseries\">\r\n                                    </VueApexCharts>\r\n                                    <div :class=\"selectedChartType == 'pie' || selectedChartType == 'donut' ? 'text-left pl-4 ml-4' : 'text-center'\"\r\n                                        v-if=\"aggregateFunctionResult != 0\">\r\n                                        <a href=\"#\">{{ resultMsg }} : {{ aggregateFunctionResult }}</a>\r\n                                    </div>\r\n                                </div>\r\n                            </div> -->\r\n\r\n                        </div>\r\n\r\n\r\n                        <!-- <Form v-slot=\"{ values, meta }\" ref=\"form\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-12 col-lg-6 float-left leftsideicon pl-0 py-3 border\">\r\n                                    <div class=\"col-lg-12\">\r\n                                        <div class=\"form-group\">\r\n                                            <label>{{ $t('ReportTitle') }} :</label>\r\n                                            <input v-model=\"reportTitle\" placeholder=\"Report Title\" class=\"form-control\"\r\n                                                type=\"text\" maxlength=\"50\" disabled />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-lg-12\">\r\n                                        <div class=\"form-group\">\r\n                                            <Field name=\"ChartTypes\" :rules=\"{ 'required': true }\" label=\"Chart Type\"\r\n                                                v-slot=\"{ field, errorMessage, meta }\">\r\n                                                <label>{{ $t('ChartTypes') }}<span class=\"text-danger\">*</span></label>\r\n                                                <div class=\"user_type_choice coloredicons row\"\r\n                                                    v-bind:class=\"{ '': true, 'is-invalid': meta.touched && !meta.valid && !selectedChartTypeID }\">\r\n                                                    <div class=\"btn-group btn-group-toggle mb-2\" data-toggle=\"buttons\"\r\n                                                        v-for=\"(item, index) in chartTypes\" :key=\"index\">\r\n                                                        <label\r\n                                                            v-bind:class=\"{ 'btn btn_cstm': true, 'active': (item.id == selectedChartTypeID) }\"\r\n                                                            v-bind:for=\"'cls_usertype' + index\">\r\n                                                            <input v-bind=\"field\" type=\"radio\" v-bind:value=\"item.id\"\r\n                                                                name=\"cls_usertype\" v-bind:id=\"'cls_usertype' + index\"\r\n                                                                v-model=\"selectedChartTypeID\" />\r\n                                                            <span class=\"d-block pb-2\">\r\n                                                                <em :class=\"[item.chart_Type == 'Pie' ? 'fa fa-pie-chart bg-transparent' : '',\r\n                                                                item.chart_Type == 'Bar' ? 'fa fa-bar-chart bg-transparent' : '',\r\n                                                                item.chart_Type == 'Line' ? 'fa fa-line-chart bg-transparent' : '',\r\n                                                                item.chart_Type == 'Horizontal_Bar' ? 'fa fa-bars bg-transparent' : '',\r\n                                                                item.chart_Type == 'Donut' ? 'fa fa-circle-o-notch bg-transparent' : '']\"\r\n                                                                    aria-hidden=\"true\"></em>\r\n                                                            </span>\r\n                                                        </label>\r\n\r\n                                                    </div>\r\n                                                </div>\r\n                                                <span name=\"ChartTypes\" v-if=\"meta.touched && !meta.valid\"\r\n                                                    class=\"invalid-feedback\">\r\n                                                    {{ errorMessage }}\r\n                                                </span>\r\n                                            </Field>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-lg-12\">\r\n                                        <div class=\"form-group\">\r\n                                            <Field name=\"selectedChartXAxis\" :rules=\"{ 'required': true }\"\r\n                                                v-model=\"selectedChartXAxis\" label=\"X Axis\"\r\n                                                v-slot=\"{ field, errorMessage, meta }\">\r\n                                                <label>{{ $t('XAXIS') }}<span class=\"text-danger\">*</span></label>\r\n                                                <div class=\"input-group\">\r\n                                                    <select v-bind=\"field\" @change=\"CheckFieldTypeX(selectedChartXAxis)\"\r\n                                                        v-bind:class=\"{ 'form-control': true, 'is-invalid': meta.touched && !meta.valid && !selectedChartXAxis }\">\r\n                                                        <option value=\"\" disabled>Select</option>\r\n                                                        <option v-for=\"item in Columnlist\"\r\n                                                            :value=\"item.CustomFieldId != '' ? item.CustomFieldId : item.FieldName\"\r\n                                                            :key=\"item.CustomFieldId\">\r\n                                                            {{ GetLocalizedValue((item.DisplayName != null &&\r\n                                                                item.DisplayName != '') ?\r\n                                                                item.DisplayName : item.FieldName) }}\r\n                                                        </option>\r\n                                                    </select>\r\n                                                    <span name=\"selectedChartXAxis\" v-if=\"meta.touched && !meta.valid\"\r\n                                                        class=\"invalid-feedback\">{{\r\n                                                            errorMessage\r\n                                                        }}</span>\r\n                                                </div>\r\n                                            </Field>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-lg-12\">\r\n                                        <div class=\"form-group\">\r\n                                            <label>{{ $t('YAXIS') }}<span class=\"text-danger\">*</span></label>\r\n                                            <div class=\"input-group\">\r\n                                                <Field name=\"selectedChartYAxis\" :rules=\"{ 'required': true }\"\r\n                                                    v-model=\"selectedChartYAxis\" label=\"Y Axis\"\r\n                                                    v-slot=\"{ field, errorMessage, meta }\">\r\n                                                    <select v-bind=\"field\" @change=\"CheckFieldType(selectedChartYAxis)\"\r\n                                                        :class=\"{ 'form-control': true, 'is-invalid': meta.touched && !meta.valid && !selectedChartYAxis }\">\r\n                                                        <option value=\"\" disabled>Select</option>\r\n                                                        <option\r\n                                                            v-for=\"item in Columnlist.filter(x => x.CustomFieldId != selectedChartXAxis)\"\r\n                                                            :value=\"item.CustomFieldId != '' ? item.CustomFieldId : item.FieldName\"\r\n                                                            :key=\"item.CustomFieldId\">\r\n                                                            {{ GetLocalizedValue((item.DisplayName != null &&\r\n                                                                item.DisplayName != '') ?\r\n                                                                item.DisplayName : item.FieldName) }}\r\n                                                        </option>\r\n                                                    </select>\r\n                                                    <span name=\"selectedChartYAxis\" v-if=\"meta.touched && !meta.valid\"\r\n                                                        class=\"invalid-feedback\">\r\n                                                        {{ errorMessage }}\r\n                                                    </span>\r\n                                                </Field>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-lg-12\">\r\n                                        <div class=\"form-group\">\r\n                                            <label>{{ $t('ViewAs') }}:</label>\r\n                                            <div v-if=\"isTypeInteger\" class=\"input-group\">\r\n                                                <input name=\"sum\" v-model=\"aggregateFunctionType\" value=\"Sum\" type=\"radio\"\r\n                                                    class=\"mr-2\" />{{ $t('Sum') }}\r\n                                                <input name=\"sum\" v-model=\"aggregateFunctionType\" value=\"Avg\" type=\"radio\"\r\n                                                    class=\"mr-2 ml-3\" />{{ $t('Average') }}\r\n                                                <input name=\"sum\" v-model=\"aggregateFunctionType\" value=\"Min\" type=\"radio\"\r\n                                                    class=\"mr-2 ml-3\" />{{ $t('Min') }}\r\n                                                <input name=\"sum\" v-model=\"aggregateFunctionType\" value=\"Max\" type=\"radio\"\r\n                                                    class=\"mr-2 ml-3\" />{{ $t('Max') }}\r\n                                                <input name=\"sum\" v-model=\"aggregateFunctionType\" value=\"Count\" type=\"radio\"\r\n                                                    class=\"mr-2 ml-3\" />{{ $t('Count') }}\r\n                                            </div>\r\n                                            <div class=\"input-group\" v-if=\"!isTypeInteger\">\r\n                                                <input name=\"sum\" v-model=\"aggregateFunctionType\" value=\"Count\" checked\r\n                                                    type=\"radio\" class=\"mr-2 ml-3\" />{{ $t('Count') }}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div class=\"col-sm-12 col-lg-6 p-3 bg-light border\">\r\n                                    <div class=\"heading-border\">\r\n                                        <h5 class=\"h5\"><span>{{ $t('Preview') }}</span></h5>\r\n                                    </div>\r\n                                    <span class=\"text-center my-3 w-100 float-left\">{{ reportTitle }} -\r\n                                        <button href=\"#\" class=\"btn btn-info\" @click=\"ViewReportGraph\">\r\n                                            {{ $t('ViewReport') }}\r\n                                        </button>\r\n                                    </span>\r\n                                    <div v-if=\"PreviewChart\" class=\"col-sm-12 col-lg-12 px-0 py-4 float-left bg-white\">\r\n                                        <VueApexCharts :type=\"selectedChartType\" :options=\"chartOptions\"\r\n                                            :series=\"chartseries\">\r\n                                        </VueApexCharts>\r\n                                        <div :class=\"selectedChartType == 'pie' || selectedChartType == 'donut' ? 'text-left pl-4 ml-4' : 'text-center'\"\r\n                                            v-if=\"aggregateFunctionResult != 0\">\r\n                                            <a href=\"#\">{{ resultMsg }} : {{ aggregateFunctionResult }}</a>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"col-12 p-0 mt-3 float-left\">\r\n                                <div class=\"row flex-row-reverse\">\r\n                                    <div class=\"col-lg-6 text-right\">\r\n                                        <button class=\"btn btn-success ancsaveuserticket\" @click=\"ApplyGraph\">\r\n                                            <em class=\"fa fa-share pr-2\"></em>{{ $t('Apply') }}</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Form> -->\r\n                        <div class=\"col-12 p-0 mt-3 float-left\">\r\n                            <div class=\"row flex-row-reverse\">\r\n                                <div class=\"col-lg-6 text-right\">\r\n                                    <button class=\"btn btn-success ancsaveuserticket\" @click=\"ApplyGraph\">\r\n                                        <em class=\"fa fa-share pr-2\"></em>{{ $t('Apply') }}</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport GraphServices from \"@/services/DataService\";\r\nimport VueApexCharts from \"vue-apexcharts\";\r\nexport default {\r\n    components: {\r\n        VueApexCharts\r\n    },\r\n    props: {\r\n        Columnlist: {\r\n            type: Array\r\n        },\r\n        customreportparameters: {\r\n            type: Object\r\n        },\r\n        GraphData: {\r\n            type: Object\r\n        },\r\n        GraphJson: {\r\n            type: Object\r\n        },\r\n        sortColummnarray: {\r\n            type: Array\r\n        },\r\n    },\r\n    data() {\r\n        return {\r\n            isLoading: false,\r\n            reportTitle: '',\r\n            chartTypes: null,\r\n            // isTypeInteger: false,\r\n            // Selected Chart Properties\r\n            selectedChartTypeID: null,\r\n            selectedChartXAxis: \"\",\r\n            selectedChartYAxis: \"\",\r\n            PreviewChart: false,\r\n            aggregateFunctionType: \"Count\",\r\n            aggregateFunctionResult: 0,\r\n            //Chart Properties\r\n            chartseries: [],\r\n            chartOptions: {},\r\n            colourList: ['#8892d0', '#da9c49', '#94c5a3', '#e67d21', '#787878', '#c59e71', '#38b8df', '#f55e1a', '#207a92', '#13599c'],\r\n            // Properties for Binding the Chart Valus\r\n            chartOptionXAxisData: [],\r\n            chartSeriesData: [],\r\n            selectedChartType: \"\",\r\n            resultMsg: \"\",\r\n            GroupingGraphData: [],\r\n            BindGraph: false,\r\n            isChartData: false,\r\n            isGraphLoadedAlready: false,\r\n            graphParams: {},\r\n            FormSchema: [\r\n                {\r\n                    layoutType: \"single\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"TextField\",\r\n                            label: this.$t('ReportTitle'),\r\n                            name: \"ReportTitle\",\r\n                            value: \"\",\r\n                            placeholder: \"Enter ReportTitle\",\r\n                            config: {\r\n                                options: [],\r\n                                showAddIcon: false,\r\n                            },\r\n                            validationRules: \"\",\r\n                        },\r\n                        {\r\n                            astype: \"SlotField\",\r\n                            label: this.$t('ChartTypes'),\r\n                            name: \"chartlist\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            config: {\r\n                                options: [],\r\n                                showAddIcon: false,\r\n                                onChange: this.onChangeDropdown\r\n                            },\r\n                            validationRules: \"required\",\r\n                        },\r\n                        {\r\n                            astype: \"SelectField\",\r\n                            label: this.$t('XAXIS'),\r\n                            name: \"XAXIS\",\r\n                            value: \"\",\r\n                            placeholder: \"Please Select X Axis\",\r\n                            config: {\r\n                                options: [],\r\n                                showAddIcon: false,\r\n                                onChange: this.onChangeXYAxisDropdown\r\n                            },\r\n                            validationRules: \"required\",\r\n                        },\r\n                        {\r\n                            astype: \"SelectField\",\r\n                            label: this.$t('YAXIS'),\r\n                            name: \"YAXIS\",\r\n                            value: '',\r\n                            placeholder: \"\",\r\n                            //visibility:true,\r\n                            config: {\r\n                                options: [],\r\n                                showAddIcon: false,\r\n                                onChange: this.onChangeXYAxisDropdown\r\n                            },\r\n                            validationRules: \"required\",\r\n                        },\r\n                        {\r\n                            astype: \"RadioField\",\r\n                            label: this.$t('ViewAs'),\r\n                            name: \"ViewAs\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            visibility: false,\r\n                            config: {\r\n                                options: [{\r\n                                    value: \"Sum\",\r\n                                    name: \"Sum\"\r\n                                },\r\n                                {\r\n                                    value: \"Avg\",\r\n                                    name: \"Average\"\r\n                                },\r\n                                {\r\n                                    value: \"Min\",\r\n                                    name: \"Min\"\r\n                                }, {\r\n                                    value: \"Max\",\r\n                                    name: \"Max\"\r\n                                }, {\r\n                                    value: \"Count\",\r\n                                    name: \"Count\"\r\n                                }],\r\n                                showAddIcon: false,\r\n                                onChange: this.GetRadioValue\r\n                            },\r\n                            validationRules: \"\",\r\n                        },\r\n                        {\r\n                            astype: \"RadioField\",\r\n                            label: this.$t('ViewAs'),\r\n                            name: \"ViewAs\",\r\n                            value: \"Count\",\r\n                            placeholder: \"\",\r\n                            visibility: true,\r\n                            config: {\r\n                                options: [{\r\n                                    value: \"Count\",\r\n                                    name: \"Count\"\r\n                                }],\r\n                                showAddIcon: false\r\n                            },\r\n                            validationRules: \"\",\r\n                        },\r\n                    ]\r\n                },\r\n            ],\r\n            // buttons: [\r\n            //     {\r\n            //         type: \"submit\",\r\n            //         class: \"btn btn-success save\",\r\n            //         text: \"<i class='fa fa-save pr-2'></i>Apply\"\r\n            //     }\r\n            // ]\r\n        }\r\n    },\r\n    created: async function () {\r\n        var vm = this;\r\n        await vm.GetChartTypes();\r\n        vm.GetColumnList();\r\n        vm.FormSchema[0].Data[0].value = vm.customreportparameters.ReportName;\r\n        if (vm.GraphData != null && vm.GraphData != undefined && vm.GraphData != '' && vm.GraphData.length > 0) {\r\n            vm.selectedChartTypeID = vm.GraphData[0].chartTypeID;\r\n            vm.aggregateFunctionType = vm.GraphData[0].AggregateFuncField;\r\n            vm.selectedChartXAxis = vm.GraphData[0].XAxisField;\r\n            vm.FormSchema[0].Data[2].value = vm.GraphData[0].XAxisField;\r\n            vm.selectedChartYAxis = vm.GraphData[0].YAxisField;\r\n            vm.FormSchema[0].Data[3].value = vm.GraphData[0].YAxisField;\r\n            await vm.CheckFieldType(vm.selectedChartYAxis);\r\n            await vm.ViewReportGraph();\r\n            await vm.ApplyGraph();\r\n        }\r\n    },\r\n    watch:{\r\n        Columnlist(){\r\n            var vm = this;\r\n            vm.GetColumnList();\r\n        }\r\n    },\r\n    methods: {\r\n        //Close Graph Options Model\r\n        CloseGraphOptions: function () {\r\n            var vm = this;\r\n            $(\"#CustomGraphOptions\").modal(\"hide\");\r\n            $(\"body\").removeClass(\"modal-open\");\r\n            $(\".modal-backdrop\").remove();\r\n            vm.$refs.refGraphForm.validateForm.reset();\r\n            if(vm.graphParams.selectedChartTypeID != null && vm.graphParams.selectedChartType != '' && vm.graphParams.selectedChartXAxis != '' && vm.graphParams.selectedChartYAxis != ''){\r\n            vm.$parent.showChart = true;}\r\n            // vm.ApplyGraph();\r\n        },\r\n\r\n        // Get all Chart types\r\n        async GetChartTypes() {\r\n            var vm = this;\r\n            await GraphServices.GetChartTypes().then((response) => {\r\n                vm.chartTypes = response.data;\r\n            })\r\n        },\r\n\r\n        // Fill Values in Dropdowns\r\n        GetColumnList() {\r\n            var vm = this;\r\n            vm.FormSchema[0].Data[2].config.options = [];\r\n            vm.FormSchema[0].Data[3].config.options = [];\r\n            vm.Columnlist.forEach(item => {\r\n                vm.FormSchema[0].Data[2].config.options.push({\r\n                    value: item.CustomFieldId,\r\n                    name: item.DisplayName != '' ? vm.$t(item.DisplayName) : vm.$(item.FieldName)\r\n                })\r\n                vm.FormSchema[0].Data[3].config.options.push({\r\n                    value: item.CustomFieldId,\r\n                    name: item.DisplayName != '' ? vm.$t(item.DisplayName) : vm.$(item.FieldName)\r\n                })\r\n            })\r\n        },\r\n\r\n        // On change X and Y Axis\r\n        onChangeXYAxisDropdown(x, data) {\r\n            var vm = this;\r\n            if (data.name == \"XAXIS\") {\r\n                vm.selectedChartXAxis = data.value;\r\n                vm.FormSchema[0].Data[3].config.options = [];\r\n                vm.Columnlist.forEach(item => {\r\n                    if (item.CustomFieldId != vm.selectedChartXAxis) {\r\n                        vm.FormSchema[0].Data[3].config.options.push({\r\n                            value: item.CustomFieldId,\r\n                            name: item.DisplayName != '' ? vm.$t(item.DisplayName) : vm.$(item.FieldName)\r\n                        })\r\n                    }\r\n                    if(vm.selectedChartXAxis === vm.selectedChartYAxis){\r\n                        vm.selectedChartYAxis = '';\r\n                        vm.FormSchema[0].Data[3].value = '';\r\n                    }\r\n                })\r\n            }\r\n            else {\r\n                vm.selectedChartYAxis = data.value;\r\n                vm.CheckFieldType(vm.selectedChartYAxis)\r\n            }\r\n        },\r\n\r\n        // Get Radio Selected Value \r\n        GetRadioValue(x, data) {\r\n            var vm = this;\r\n            vm.aggregateFunctionType = x.target.dataset.value;\r\n        },\r\n        // Reset Graph properties when click on reset button \r\n        ResetGraph() {\r\n            var vm = this;\r\n            vm.selectedChartXAxis = \"\";\r\n            vm.selectedChartYAxis = \"\";\r\n            // vm.$refs.form.setFieldTouched('selectedChartXAxis', false)\r\n            // vm.$refs.form.setFieldTouched('selectedChartYAxis', false)\r\n            vm.chartseries = [];\r\n            vm.chartOptions = {};\r\n            vm.selectedChartTypeID = null;\r\n            vm.selectedChartType = \"\";\r\n            vm.aggregateFunctionResult = 0;\r\n            vm.aggregateFunctionType = \"Count\";\r\n            vm.resultMsg = \"\";\r\n            vm.graphParams = {};\r\n            vm.FormSchema[0].Data[2].value = '';\r\n            vm.FormSchema[0].Data[3].value = '';\r\n            vm.FormSchema[0].Data[4].value = 'Count';\r\n            vm.FormSchema[0].Data[5].value = 'Count';\r\n            vm.FormSchema[0].Data[4].visibility = false;\r\n            vm.FormSchema[0].Data[5].visibility = true;\r\n            vm.$refs.refGraphForm.validateForm.reset();\r\n            vm.PreviewChart = false;\r\n        },\r\n\r\n        // View Graph when click on View Report\r\n        async ViewReportGraph() {\r\n            var vm = this;\r\n            vm.resultMsg = vm.aggregateFunctionType;\r\n            vm.PreviewChart = false;\r\n            vm.BindGraph = true;\r\n            var GraphDataValue = null;\r\n                if (vm.aggregateFunctionType == null || vm.aggregateFunctionType == '' && vm.GraphData != null && vm.isChartData == false) {\r\n                    if (vm.GraphData.length > 0) {\r\n                        vm.resultMsg = vm.GraphData[0].AggregateFunction\r\n                        vm.aggregateFunctionType = vm.resultMsg\r\n                        vm.selectedChartYAxis = vm.GraphData[0].YAxisField;\r\n                        vm.selectedChartXAxis = vm.GraphData[0].XAxisField;\r\n                        vm.FormSchema[0].Data[4].value = vm.GraphData[0].AggregateFunction;\r\n                    }\r\n                }\r\n                if (vm.selectedChartTypeID != null && vm.selectedChartXAxis != '' && vm.selectedChartYAxis != '') {\r\n                    if (vm.aggregateFunctionType == \"\") {\r\n                        vm.aggregateFunctionType = vm.FormSchema[0].Data[4].value;\r\n                        vm.resultMsg = vm.aggregateFunctionType;\r\n                    }\r\n                    var findvaluefromcolumnlistxaxis = vm.Columnlist.find(x => x.FieldName === vm.selectedChartXAxis || x.CustomFieldId === parseInt(vm.selectedChartXAxis));\r\n                    var findvaluefromcolumnlistyaxis = vm.Columnlist.find(x => x.FieldName === vm.selectedChartYAxis || x.CustomFieldId === parseInt(vm.selectedChartYAxis));\r\n                    GraphDataValue = {\r\n                        \"XAxisField\": findvaluefromcolumnlistxaxis.CustomFieldId != '' ? findvaluefromcolumnlistxaxis.CustomFieldId : findvaluefromcolumnlistxaxis.FieldName,\r\n                        \"YAxisField\": findvaluefromcolumnlistyaxis.CustomFieldId != '' ? findvaluefromcolumnlistyaxis.CustomFieldId : findvaluefromcolumnlistyaxis.FieldName,\r\n                        \"AggregateFunctionType\": vm.aggregateFunctionType\r\n                    }\r\n                    await vm.$parent.$parent.PreviewJson(vm.sortColummnarray, vm.BindGraph, GraphDataValue);\r\n                    if (vm.GraphJson.MetaData[0].IsGrouping) {\r\n                        vm.SetGroupingGraphData();\r\n                    }\r\n                    vm.selectedChartType = vm.chartTypes.find(x => x.id == vm.selectedChartTypeID).chart_Type.toLowerCase();\r\n                    vm.SetGraphValues(vm.GroupingGraphData, vm.FilterColumnlist(vm.selectedChartXAxis).CustomFieldName, vm.FilterColumnlist(vm.selectedChartYAxis).CustomFieldName);\r\n                    vm.CalculatingAggregateFuncResult(vm.aggregateFunctionType);\r\n                    vm.DrawGraph();\r\n                    vm.PreviewChart = true;\r\n                    vm.isChartData = true\r\n                    vm.isGraphLoadedAlready = true;\r\n                } else {\r\n                    vm.ShowAlert(vm.$t(\"FillGraphDetails\"), 'failure', true, vm.$t('Alert'));\r\n                    vm.isLoading = false;\r\n                }\r\n        },\r\n\r\n        SetGroupingGraphData() {\r\n            var vm = this;\r\n            let ListingData = vm.GraphJson.ListingData;\r\n            let setGraphArray = [];\r\n            let XaxisField = vm.FilterColumnlist(vm.selectedChartXAxis).CustomFieldName;\r\n            let yAxisField = vm.FilterColumnlist(vm.selectedChartYAxis).CustomFieldName;\r\n            if (Object.keys(ListingData[0])[0] == vm.FilterColumnlist(vm.selectedChartXAxis).CustomFieldName && Object.keys(ListingData[0])[0] == vm.FilterColumnlist(vm.selectedChartYAxis).CustomFieldName && vm.GraphData.length > 0\r\n                || XaxisField == undefined && yAxisField == undefined) {\r\n                XaxisField = Object.keys(ListingData[0])[0];\r\n                yAxisField = Object.keys(ListingData[0].data[0])[0];\r\n                vm.aggregateFunctionType = vm.GraphData[0].AggregateFunction;\r\n            }\r\n            ListingData.forEach((item, mainindex) => {\r\n                if (item[XaxisField] != undefined || XaxisField != undefined) {\r\n                    if (vm.aggregateFunctionType == \"Count\" || vm.aggregateFunctionType == \"Sum\" || vm.aggregateFunctionType == \"Avg\"\r\n                        || vm.aggregateFunctionType == \"Min\" || vm.aggregateFunctionType == \"Max\") {\r\n                        var pushitem = item[XaxisField] != undefined ? item[XaxisField] : item.data[0][XaxisField] + ` (${item.totalRecord})`;\r\n                        for (var i = 0; i <= parseInt(item.totalRecord); i++) {\r\n                            if (i == 0) {\r\n                                setGraphArray.push({\r\n                                    [XaxisField]: pushitem,\r\n                                    [yAxisField]: item.GData != null && item.GData != 0 && item.GData > item.totalRecord ? item.GData : item.totalRecord\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n            vm.GroupingGraphData = setGraphArray\r\n        },\r\n        // Apply  Graph Values when click on Apply adn bind the final values of graph and pass to Reportpreview \r\n        async ApplyGraph() {\r\n            var vm = this;\r\n            this.$refs.refGraphForm.validateForm.validate().then(async function (valid) {\r\n                if (valid) {\r\n                    if (!vm.isGraphLoadedAlready) {\r\n                        await vm.ViewReportGraph();\r\n                    }\r\n                    vm.graphParams = {\r\n                        \"selectedChartType\": vm.selectedChartType,\r\n                        \"selectedChartTypeID\": vm.selectedChartTypeID,\r\n                        \"chartseries\": vm.chartseries,\r\n                        \"chartoptions\": vm.chartOptions,\r\n                        \"aggregateFunctionType\": vm.aggregateFunctionType,\r\n                        \"aggregateFunctionResult\": vm.aggregateFunctionResult,\r\n                        \"selectedChartXAxis\": vm.selectedChartXAxis,\r\n                        \"selectedChartYAxis\": vm.selectedChartYAxis\r\n                    }\r\n                    if (vm.graphParams.selectedChartTypeID != null && vm.graphParams.selectedChartType != '' && vm.graphParams.selectedChartXAxis != '' && vm.graphParams.selectedChartYAxis != '') {\r\n                        vm.$parent.DrawGraph(vm.graphParams, vm.BindGraph)\r\n                        vm.isGraphLoadedAlready = false\r\n                        vm.CloseGraphOptions();\r\n                    }\r\n                }\r\n            });\r\n        },\r\n\r\n        // Draw Graph\r\n        DrawGraph: function () {\r\n            var vm = this;\r\n            var isHorizontal = false;\r\n            if (vm.selectedChartType == \"bar\" || vm.selectedChartType == \"line\" || vm.selectedChartType == 'horizontal_bar') {\r\n                if (vm.selectedChartType == 'horizontal_bar') {\r\n                    vm.selectedChartType = \"bar\";\r\n                    isHorizontal = true;\r\n                }\r\n                vm.chartseries = [{\r\n                    name: vm.$t(vm.FilterColumnlist(vm.selectedChartYAxis).CustomFieldName),\r\n                    data: vm.chartSeriesData\r\n                }]\r\n                vm.chartOptions = {\r\n                    chart: {\r\n                        toolbar: {\r\n                            export: {\r\n                                svg: {\r\n                                    filename: vm.FormSchema[0].Data[0].value,\r\n                                },\r\n                                png: {\r\n                                    filename: vm.FormSchema[0].Data[0].value,\r\n                                },\r\n                                csv: {\r\n                                    headerCategory: vm.$t(vm.FilterColumnlist(vm.selectedChartXAxis).CustomFieldName),\r\n                                    filename: vm.FormSchema[0].Data[0].value,\r\n                                }\r\n                            }\r\n                        },\r\n                    },\r\n                    tooltip:{\r\n                        enabled:true,\r\n                        x:{\r\n                            formatter:(val) => val\r\n                        }\r\n                    },\r\n                    xaxis: {\r\n                        categories: vm.chartOptionXAxisData,\r\n                        title: {\r\n                            text: isHorizontal ? vm.$t(vm.FilterColumnlist(vm.selectedChartYAxis).CustomFieldName) : vm.$t(vm.FilterColumnlist(vm.selectedChartXAxis).CustomFieldName),\r\n                        },\r\n                        labels: {\r\n                            formatter: function (val) {\r\n                                return isHorizontal ? val : val != undefined ? val.substring(0,6) : val;\r\n                            }\r\n                        },\r\n                    },\r\n                    yaxis: {\r\n                        title: {\r\n                            text: isHorizontal ? vm.$t(vm.FilterColumnlist(vm.selectedChartXAxis).CustomFieldName) : vm.$t(vm.FilterColumnlist(vm.selectedChartYAxis).CustomFieldName),\r\n                        },\r\n                        labels: {\r\n                            formatter: function (val) {\r\n                                return val.toLocaleString(\"en-US\");\r\n                            }\r\n                        }\r\n                    },\r\n                    plotOptions: isHorizontal ? { bar: { borderRadius: 4, horizontal: true, } } : {},\r\n                    dataLabels: {\r\n                        enabled: true,\r\n                    },\r\n\r\n                }\r\n            }\r\n            if (vm.selectedChartType == \"pie\" || vm.selectedChartType == \"donut\") {\r\n                vm.chartseries = vm.chartSeriesData;\r\n                vm.chartOptions = {\r\n                    labels: vm.chartOptionXAxisData,\r\n                    colors: vm.colourList,\r\n                }\r\n            }\r\n        },\r\n\r\n        // Calculating  Aggregate Function Result\r\n        CalculatingAggregateFuncResult: function (functionType) {\r\n            var vm = this;\r\n            var tempval = 0;\r\n            if (functionType == \"Sum\") {\r\n                var sum = 0;\r\n                vm.chartSeriesData.forEach(item => {\r\n                    sum += parseInt(item);\r\n                });\r\n                vm.aggregateFunctionResult = sum.toFixed(2);\r\n                vm.aggregateFunctionResult = parseFloat(vm.aggregateFunctionResult).toLocaleString('en-US');\r\n            }\r\n            if (functionType == \"Count\") {\r\n                var aggregatecount = 0;\r\n                aggregatecount = vm.chartSeriesData.length;\r\n                vm.aggregateFunctionResult = aggregatecount;\r\n            }\r\n            if (functionType == \"Avg\") {\r\n                var total = 0;\r\n                var count = 0;\r\n\r\n                vm.chartSeriesData.forEach(function (item, index) {\r\n                    total += item;\r\n                    count++;\r\n                });\r\n                tempval = total / count;\r\n                vm.aggregateFunctionResult = tempval.toFixed(2);\r\n                vm.aggregateFunctionResult = parseFloat(vm.aggregateFunctionResult).toLocaleString('en-US');\r\n            }\r\n            if (functionType == \"Min\") {\r\n                tempval = Math.min.apply(Math, vm.chartSeriesData.filter(Number));\r\n                vm.aggregateFunctionResult = tempval.toFixed(2);\r\n                vm.aggregateFunctionResult = parseFloat(vm.aggregateFunctionResult).toLocaleString('en-US');\r\n            }\r\n            if (functionType == \"Max\") {\r\n                tempval = Math.max(...vm.chartSeriesData)\r\n                vm.aggregateFunctionResult = tempval.toFixed(2);\r\n                vm.aggregateFunctionResult = parseFloat(vm.aggregateFunctionResult).toLocaleString('en-US');\r\n            }\r\n        },\r\n\r\n        // Check field type for View AS checkbox \r\n        CheckFieldType: function (CustomFieldId) {\r\n            var vm = this;\r\n            if (vm.selectedChartYAxis == vm.selectedChartXAxis) {\r\n                vm.selectedChartYAxis = '';\r\n                vm.ShowAlert(\"X and Y axis values are not same\", \"warning\")\r\n                return false;\r\n            }\r\n            vm.aggregateFunctionResult = 0;\r\n            let ColumnFieldType = vm.FilterColumnlist(CustomFieldId).ColumnFieldType;\r\n            if (ColumnFieldType == \"decimal\" || ColumnFieldType == \"int\") {\r\n                vm.FormSchema[0].Data[4].visibility = true;\r\n                vm.FormSchema[0].Data[5].visibility = false;\r\n                vm.FormSchema[0].Data[4].value = 'Count'\r\n                vm.aggregateFunctionType = ''\r\n            }\r\n            else {\r\n                vm.FormSchema[0].Data[4].visibility = false;\r\n                vm.FormSchema[0].Data[5].visibility = true;\r\n                vm.FormSchema[0].Data[5].value = 'Count'\r\n                vm.aggregateFunctionType = 'Count'\r\n            }\r\n        },\r\n        CheckFieldTypeX: function (CustomFieldId) {\r\n            var vm = this;\r\n            //vm.aggregateFunctionType = ''\r\n            if (vm.selectedChartYAxis == vm.selectedChartXAxis) {\r\n                vm.selectedChartXAxis = '';\r\n                vm.ShowAlert(\"X and Y axis values are not same\", \"warning\")\r\n                return false;\r\n            }\r\n        },\r\n        // Filter column List baesd on CustomFieldId\r\n        FilterColumnlist(CustomFieldId) {\r\n            var vm = this;\r\n            let CustomFieldName, ColumnFieldType;\r\n            for (let [index] of vm.Columnlist.entries()) {\r\n                if (vm.Columnlist[index].CustomFieldId == CustomFieldId || vm.Columnlist[index].FieldName == CustomFieldId) {\r\n                    if (vm.Columnlist[index].DisplayName != null && vm.Columnlist[index].DisplayName != '') {\r\n                        CustomFieldName = vm.Columnlist[index].DisplayName;\r\n                    }\r\n                    else {\r\n                        CustomFieldName = vm.Columnlist[index].FieldName;\r\n                    }\r\n                    ColumnFieldType = vm.Columnlist[index].ColumnFieldDataCode;\r\n                }\r\n            }\r\n            return { 'CustomFieldName': CustomFieldName, 'ColumnFieldType': ColumnFieldType }\r\n        },\r\n\r\n        // Set the Chart Xaxis and Yaxis\r\n        SetGraphValues(data, XFieldName, YFieldName) {\r\n            var vm = this;\r\n            vm.chartOptionXAxisData = [];\r\n            vm.chartSeriesData = [];\r\n            data.forEach(items => {\r\n                if (XFieldName in items) {\r\n                    if (items[XFieldName] != null && items[XFieldName] != undefined) {\r\n                        vm.chartOptionXAxisData.push(items[XFieldName])\r\n                        //set graph Values if XField  is Not Null  \r\n                        vm.BindXYFields(items, XFieldName, YFieldName);\r\n                    }\r\n                    else {\r\n                        //set graph Values if XField  is  Null\r\n                        if (items[YFieldName] != null && items[YFieldName] != undefined) {\r\n                            if (typeof XFieldName == \"string\") {\r\n                                vm.chartOptionXAxisData = [...vm.chartOptionXAxisData, \"-\"]\r\n                            }\r\n                            else {\r\n                                vm.chartOptionXAxisData = [...vm.chartOptionXAxisData, 0]\r\n                            }\r\n                            vm.BindXYFields(items, XFieldName, YFieldName);\r\n                        }\r\n\r\n                    }\r\n                }\r\n                else {\r\n                    vm.chartOptionXAxisData.push(\" \")\r\n                    vm.BindXYFields(items, XFieldName, YFieldName);\r\n                }\r\n            });\r\n        },\r\n        //set graph Values if XField  is Not Null  \r\n        BindXYFields: function (items, XFieldName, YFieldName) {\r\n            var vm = this;\r\n            if (YFieldName in items) {\r\n                if (items[YFieldName] != null && items[YFieldName] != undefined) {\r\n                    if (typeof items[YFieldName] == \"string\") {\r\n                        var replaceXCurrencySymbol = items[YFieldName].replace(/[$€£]/g, '')\r\n                        vm.chartSeriesData.push(parseInt(replaceXCurrencySymbol))\r\n                    }\r\n                    else {\r\n                        vm.chartSeriesData.push(items[YFieldName])\r\n                    }\r\n                }\r\n                else {\r\n                    vm.chartSeriesData = [...vm.chartSeriesData, 0]\r\n                }\r\n            }\r\n        },\r\n\r\n        //Genrate Random Color Code\r\n        GenrateRandomColorCode() {\r\n            const randomColor = Math.floor(Math.random() * 16777215).toString(16);\r\n            return \"#\" + randomColor;\r\n        },\r\n\r\n        // Genrate List of random colors\r\n        GenrateRandomColorList() {\r\n            var vm = this;\r\n            while (vm.colourList.length < vm.chartSeriesData.length) {\r\n                let color;\r\n                color = vm.GenrateRandomColorCode();\r\n                let IsExist = vm.colourList.find(x => x == color)\r\n                if (!IsExist) { vm.colourList.push(color); }\r\n            }\r\n        },\r\n        onSubmit: async function (formfields, val) {\r\n            var vm = this;\r\n            await vm.ApplyGraph();\r\n            // vm.SaveDynamicreport(ReportID)            \r\n        },\r\n    }\r\n}\r\n\r\n</script>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./modalGraphOptions.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./modalGraphOptions.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./modalGraphOptions.vue?vue&type=template&id=7d7a6ac5&\"\nimport script from \"./modalGraphOptions.vue?vue&type=script&lang=js&\"\nexport * from \"./modalGraphOptions.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\r\n    <div>\r\n        <div class=\"right-content datareport hr_jobpost\">\r\n            <div class=\"col-md-12 p-0 mb-2\"> \r\n                <div class=\"theme-primary partition p-actions-expand\">\r\n                    <loader :isVisible=\"isLoading\"></loader>\r\n                    <span class=\"p-name text-white\">{{ $t('ReportPreview') }}</span>\r\n                    <span class=\"p-actions float-right mydbsize\">\r\n                        <a class=\"p-action-btn text-white dash\" data-original-title=\"REPORT PREVIEW\" v-on:click=\"PreviewReport\">\r\n                            <em class=\"fa fa-play\"></em><br>{{ $t('ReportPreview') }}\r\n                        </a>\r\n                        <a class=\"p-action-btn text-white dash\" data-original-title=\"RESET\" v-on:click=\"ResetData\">\r\n                            <em class=\"fa fa-repeat\"></em><br>{{ $t('Reset') }}\r\n                        </a>\r\n                        <a class=\"p-action-btn text-white dash\" data-original-title=\"PDF\" v-on:click=\"ExportToPDF\">\r\n                            <em class=\"fa fa-file-pdf-o\"></em><br>{{ $t('ExportToPdf') }}\r\n                        </a>\r\n                        <a class=\"p-action-btn text-white dash\" data-original-title=\"Excel\" v-on:click=\"ExportToExcel\">\r\n                            <em class=\"fa fa-file-excel-o\"></em><br>{{ $t('ExportToExcel') }}\r\n                        </a>\r\n                        <a v-on:click=\"OpenSortingPopup\" class=\"p-action-btn text-white dash\" data-original-title=\"SORT\">\r\n                            <em class=\"fa fa-sort-amount-asc\"></em><br>{{ $t('SORT') }}\r\n                        </a>\r\n                        <a v-on:click=\"OpenGraph\" class=\"p-action-btn text-white dash\" data-original-title=\"GRAPH\">\r\n                            <em class=\"fa fa-pie-chart\"></em><br>{{ $t('Graph') }}\r\n                        </a>\r\n                    </span>\r\n                    <span class=\"collapse-head-btns\">\r\n                        <a href=\"javascript:;\" class=\"collapse-btns\">\r\n                            <em class=\"fa fa-angle-up text-white\"></em>\r\n                        </a>\r\n                    </span>\r\n                </div>\r\n                <div class=\"parentdiv datarepfix2\">\r\n                    <div class=\"verticle-action lft75 rt30\">\r\n                        <span class=\"action-list-box small\" style=\"width:400px\">\r\n                            <span id=\"action-list1\" class=\"text-left p-0 datarep mt-3 w-90 float-left bg_outerdark borderbababa position-relative\" v-if=\"isSortPopup\">\r\n                                <div class=\"float-left col-12\">\r\n                                    <div class=\"container-fluid p-0 mb-3\">\r\n                                    </div>\r\n                                    <div class=\"row px-3 pb-0\" v-for=\"(input, index) in sortColummnarray\" :key=\"`phoneInput-${index}`\">\r\n                                        <div class=\"col-lg-5 pl-0 pr-3\">\r\n                                            <div class=\"form-group\">\r\n                                                <label>{{ $t('SortBy') }}</label>\r\n                                                <select v-model=\"input.sortcolummnId\" class=\"form-control\">\r\n                                                    <option v-for=\"item in Columnlist.filter(x => x.Calculated_Field == false)\"\r\n                                                        :value=\"item.CustomFieldId\" :key=\"item.CustomFieldId\" :disabled=\"(sortColummnarray.filter(x => x.sortcolummnId == item.CustomFieldId)).length > 0\">\r\n                                                        {{ item.DisplayName ? GetLocalizedValue(item.DisplayName) :\r\n                                                            GetLocalizedValue(item.FieldName) }}\r\n                                                    </option>\r\n                                                </select>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-lg-5 pl-0 pr-3\">\r\n                                            <div class=\"form-group\">\r\n                                                <label>{{ $t('OrderBy') }}</label>\r\n                                                <select v-model=\"input.columnOrders\" class=\"form-control\">\r\n                                                    <option>{{ $t('ASC') }}</option>\r\n                                                    <option>{{ $t('DESC') }}</option>\r\n                                                </select>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-lg-2\">\r\n                                            <div class=\"form-group\">\r\n                                                <a v-on:click=\"AddSortingForm(input)\"><em\r\n                                                        class=\"fa fa-plus-circle font-24 text-success mt-3\"></em></a>\r\n                                                <a v-show=\"sortColummnarray[0].sortcolummnId != '' || isValueExistInSort\"\r\n                                                    v-on:click=\"RemoveSortingForm(input)\"><em\r\n                                                        class=\"fa fa-times-circle font-24 text-danger mt-3 ml-1\"></em></a>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"va_lft25 top4\"><em class=\"icon-solid arrow-solid-left text-secondary\"\r\n                                        style=\"font-size: 20pt;\"></em>\r\n                                </div>\r\n                                <button type=\"button\" class=\"close closebtnsmall\" v-on:click=\"close()\">\r\n                                        <em aria-hidden=\"true\" class=\"fa fa-times\"></em>\r\n                                </button>\r\n                            </span>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"col-md-12 p-0 mb-2\">\r\n                <div class=\"tab-pane mb-0\">\r\n                    <div class=\"tab-content fsmtabcontrolMobileView\" id=\"myTabContent\">\r\n                        <div class=\"expand-list\">\r\n                            <a href=\"javascript:;\" class=\"expand-list-btn justify-content-center align-items-center\">\r\n                                <em class=\"icon-solid arrow-solid-left text-white\" style=\"font-size:9pt\"></em>\r\n                            </a>\r\n                        </div>\r\n                        <div v-if=\"showGraphOptions\" class=\"card mb-3 probx\">\r\n                            <div class=\"card-header\">\r\n                                <h2>{{ $t('Graph') }}</h2>\r\n                                <a class=\"btn btn-primary\" v-on:click=\"OpenGraphOptions\">{{ $t('GraphOptions') }} <em\r\n                                        class=\"fa fa-cogs\"></em></a>\r\n                            </div>\r\n                            <div v-if=\"showChart\" class=\"card-body\" id=\"Reportpdf\" style=\"min-height: 245px;\">\r\n                                <div class=\"float-right\"><a class=\"text-center text-danger\" v-on:click=\"ResetGraphData()\">\r\n                                        <span class=\"fa fa-trash-o text-danger\" style=\"font-size:25px;\"></span>\r\n                                    </a></div>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-12 col-lg-12 text-center p-0\">\r\n                                        <div class=\"border bg-light float-left text-left p-0  graphinfo_base_lft\">\r\n                                            <ul class=\"graphinfo\">\r\n                                                <li><label>X-axis:</label>\r\n                                                    {{ GetLocalizedValue(FilterCustomFieldName(XAxisField)) }}</li>\r\n                                                <li><label>Y-axis:</label>\r\n                                                    {{ GetLocalizedValue(FilterCustomFieldName(YAxisField)) }}</li>\r\n                                                <li v-show=\"aggregateFunctionResult != 0\">\r\n                                                    <label># {{ aggregateFunctionType }}:</label>\r\n                                                    {{ aggregateFunctionResult }}\r\n                                                </li>\r\n                                            </ul>\r\n                                        </div>\r\n                                        <div class=\"p-0 m-0 float-left graphinfo_base_rgt\"\r\n                                            v-if=\"chartType == 'line' || chartType == 'bar'\">\r\n                                            <VueApexCharts ref=\"chart\" :type=\"chartType\" height=\"auto\" :options=\"chartOptions\"\r\n                                                :series=\"chartSeries\">\r\n                                            </VueApexCharts>\r\n                                        </div>\r\n                                        <div class=\"p-0 m-0 float-left graphinfo_base_rgt\"\r\n                                            v-if=\"chartType == 'pie' || chartType == 'donut'\">\r\n                                            <VueApexCharts ref=\"chart\" :type=\"chartType\" height=\"auto\" :options=\"chartOptions\"\r\n                                                :series=\"chartSeries\">\r\n                                            </VueApexCharts>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"tab-pane p-0 pb-2 border-0 active\" role=\"tabpanel\" id=\"tab-detail-content\"\r\n                            aria-labelledby=\"tab-detail-content\">\r\n                            <div class=\"listing mt-3\">\r\n                                <div class=\"table-responsive table-fix-header\">\r\n                                    <table class=\"table table-bordered mt-0\" style=\"width:100%\" id=\"Reportpdf\"\r\n                                        aria-label=\"Report Preview Listing\">\r\n                                        <thead class=\"thead-bg\">\r\n                                            <tr>\r\n                                                <th scope=\"col\" v-for=\"(item, index) in previewgroupdata\" :key=\"index\"\r\n                                                    v-if=\"showdata\">\r\n                                                    {{ GetLocalizedValue((item.DisplayName != null && item.DisplayName != '') ?\r\n                                                        item.DisplayName : item.FieldName) }}</th>\r\n                                                <th scope=\"col\" v-for=\"(column, index) in previewcolumn\" :key=\"index\">\r\n                                                    {{ GetLocalizedValue((column.DisplayName != null && column.DisplayName !=\r\n                                                        '') ?\r\n                                                        column.DisplayName : column.FieldName) }}{{ column.ExpresssionFieldName }}\r\n                                                </th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody v-if=\"noRecord\">\r\n                                            <tr style=\"cursor:initial;\">\r\n                                                <td colspan=\"4\">\r\n                                                    <div\r\n                                                        class=\"text-center text-danger d-flex align-items-center justify-content-center norecs\">\r\n                                                        {{ $t(\"NoRecordfound\") }}</div>\r\n                                                </td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                        <tbody v-for=\"(item, index) in previewdata\">\r\n                                            <tr v-for=\"(sitem, sindex) in previewdata[index].data\" v-if=\"showdata\">\r\n                                                <template v-if=\"sindex == 0\">\r\n                                                    <td v-for=\"(gitem, gindex) in previewgroupdata\"\r\n                                                        :class=\"{ 'onlyrtbod': true, '': item.totalRecord == null }\"\r\n                                                        :rowspan=\"item.totalRecord\">\r\n                                                        {{ (item[gitem.DisplayName] != null && item[gitem.DisplayName] != '') ?\r\n                                                            item[gitem.DisplayName] : item[gitem.FieldName] }}\r\n                                                        <!-- {{ (LevelOfGrouping == 2) ?\r\n                                                            (item.data[sindex][gitem.DisplayName] ?\r\n                                                                item.data[sindex][gitem.DisplayName] : '') :\r\n                                                            (item.data[sindex][gitem.FieldName] ?\r\n                                                                item.data[sindex][gitem.FieldName] : '-') }}  -->\r\n                                                        <!-- {{ (LevelOfGrouping == 3) ?\r\n                                                            (item.data[sindex].data[sindex][gitem.DisplayName] ?\r\n                                                                item.data[sindex].data[sindex][gitem.DisplayName] : '') :\r\n                                                            (item.data[sindex].data[sindex][gitem.FieldName] ?\r\n                                                                item.data[sindex].data[sindex][gitem.FieldName] : '-') }} -->\r\n                                                        ({{ (item[gitem.DisplayName] != null && item[gitem.DisplayName] != '' ||\r\n                                                            gitem.FieldName != null && gitem.FieldName != '') ? item.totalRecord\r\n                                                            : '-' }})\r\n                                                    </td>\r\n                                                </template>\r\n                                                <!-- v-if=\"LevelOfGrouping < 2\" -->\r\n                                                <td v-for=\"(column,i) in previewcolumn\" :key=\"i\">\r\n                                                    <span v-html=\"(sitem[column.DisplayName] == true && sitem[column.DisplayName] != 1 || sitem[column.DisplayName] == false && sitem[column.DisplayName] != 0) ?\r\n                                                        (sitem[column.DisplayName] == true ? 'YES' : 'NO') : (sitem[column.FieldName]\r\n                                                        == true ? 'YES' : 'NO') ||\r\n                                                        (sitem[column.DisplayName] != null && sitem[column.DisplayName] != '') ?\r\n                                                        (sitem[column.DisplayName] || sitem[column.DisplayName] == 0 ? sitem[column.DisplayName] : '') :\r\n                                                        (sitem[column.FieldName] || sitem[column.DisplayName] == 0 ? sitem[column.FieldName] : '')\">\r\n                                                    </span>\r\n                                                </td>\r\n                                                <!-- <td v-for=\"column in previewcolumn\" v-if=\"LevelOfGrouping == 2\">\r\n                                                    {{ (sitem.data[0][column.DisplayName] != null &&\r\n                                                        sitem.data[0][column.DisplayName] != '') ?\r\n                                                        (sitem.data[0][column.DisplayName] ? sitem.data[0][column.DisplayName] :\r\n                                                            '-') :\r\n                                                        (sitem.data[0][column.FieldName] ? sitem.data[0][column.FieldName] : '-') }}\r\n                                                </td> -->\r\n                                                <!-- <td v-for=\"column in previewcolumn\" v-if=\"LevelOfGrouping == 3\">\r\n                                                    {{ (sitem.data[0].data[0][column.DisplayName] != null &&\r\n                                                        sitem.data[0].data[0][column.DisplayName] != '') ?\r\n                                                        (sitem.data[0].data[0][column.DisplayName] ?\r\n                                                            sitem.data[0].data[0][column.DisplayName] : '-') :\r\n                                                        (sitem.data[0].data[0][column.FieldName] ?\r\n                                                            sitem.data[0].data[0][column.FieldName] : '-') }}\r\n                                                </td> -->\r\n                                            </tr>\r\n                                            <tr v-if=\"showcoldata\">\r\n                                                <td v-for=\"(column,i) in previewcolumn\" :key=\"i\"> \r\n                                                    <span v-html=\"(item[column.DisplayName] == true && item[column.DisplayName] != 1 || item[column.DisplayName] == false && item[column.DisplayName] != 0) ?\r\n                                                        (item[column.DisplayName] == true ? 'YES' : 'NO') : (item[column.FieldName]\r\n                                                        == true ? 'YES' : 'NO') ||\r\n                                                        (item[column.DisplayName] != null && item[column.DisplayName] != '') ?\r\n                                                        (item[column.DisplayName] || item[column.DisplayName] == 0 ? item[column.DisplayName] : '') :\r\n                                                        (item[column.FieldName] || item[column.DisplayName] == 0 ? item[column.FieldName] : '')\">\r\n                                                    </span>\r\n                                                        {{ item[column.ExpresssionFieldName] }}\r\n                                                </td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"float-right\">\r\n                            <a class=\"btn btn-success my-2 my-sm-0 mr-2\" v-on:click=\"SaveAllReport()\">&emsp13;\r\n                                <span class=\"fa fa-floppy-o\"></span> {{ $t('Save') }}\r\n                            </a>\r\n                            <a class=\"btn btn-danger\" v-on:click=\"CancelAll()\">&emsp13;\r\n                                <span class=\"fa fa-times\"></span> {{ $t('Cancel') }}\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <modalGraphOptions :Columnlist=\"Columnlist\" :showGraphOptions=\"showGraphOptions\" :customreportparameters=\"customreportparameters\" :GraphData=\"GraphData\"\r\n            :sortColummnarray=\"sortColummnarray\" :GraphJson=\"GraphJson\" ref=\"modalGraph\">\r\n        </modalGraphOptions>\r\n    </div>\r\n</template>\r\n<script>\r\nimport ReportPreviewService from \"@/services/DataService\";\r\nimport modalGraphOptions from \"../../../components/Common/Modal/modalGraphOptions.vue\";\r\nimport VueApexCharts from \"vue-apexcharts\";\r\nimport * as pdfFonts from \"pdfmake/build/vfs_fonts.js\"; // <-- vfs_fonts has to be imported before pdfmake\r\nimport pdfMake from 'pdfmake';\r\npdfMake.vfs = pdfFonts.pdfMake.vfs;\r\n\r\nexport default {\r\n    components: {\r\n        VueApexCharts,\r\n        modalGraphOptions,\r\n        pdfMake\r\n\r\n    },\r\n    props: {\r\n        previewdata: {\r\n            type: Array,\r\n        },\r\n        Columnlist: {\r\n            type: Array\r\n        },\r\n        customreportparameters: {\r\n            type: Object\r\n        },\r\n        Grouplist: {\r\n            type: Array\r\n        },\r\n        saveJsonReport: {\r\n            type: Object\r\n        },\r\n        ReportName: {\r\n            type: String\r\n        },\r\n        GraphData: {\r\n            type: Array\r\n        },\r\n        SortingData: {\r\n            type: Array\r\n        },\r\n        GraphJson: {\r\n            type: Array\r\n        },\r\n        editjsondata: {\r\n            type: Boolean\r\n        },\r\n        LevelOfGrouping: {\r\n            type: Number\r\n        },\r\n        PdfJsonReport: {\r\n            type: Object\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            isLoading: false,\r\n            previewcolumn: [],\r\n            previewgroupdata: [],\r\n            noRecord: true,\r\n            showdata: false,\r\n            showcoldata: true,\r\n            showGraphOptions: false,\r\n            showChart: false,\r\n            showmulitGrouping: false,\r\n            //Sorting PopUp\r\n            isSortPopup: false,\r\n            sortColummnarray: [{ sortcolummnId: \"\", columnOrders: \"\" }],\r\n            DynamicFillValue: [],\r\n            GroupValue: [],\r\n            isValueExistInSort: false,\r\n            isGraph:false,\r\n\r\n            //Bind Chart \r\n            chartTypeID: null,\r\n            chartType: \"\",\r\n            chartSeries: [],\r\n            chartOptions: {},\r\n            aggregateFunctionType: null,\r\n            aggregateFunctionResult: null,\r\n            XAxisField: null,\r\n            YAxisfield: null,\r\n            watchvalue: false,\r\n            allReocrdsList: null,\r\n            ExcelData: null,\r\n            BindGraph: false,\r\n\r\n            //Export to PDF\r\n            allReocrdsData: null,\r\n            TableBody: [],\r\n            TableHeader: [],\r\n            pdfContent: null,\r\n            ExcelJsonData: null,\r\n            count: 0,\r\n            isPreviewForPdfExcel: 1,\r\n           \r\n        }\r\n    },\r\n    created() {\r\n        var vm = this;\r\n        if (vm.GraphData != null && vm.GraphData != undefined && vm.GraphData != '' && vm.GraphData.length > 0) {\r\n            vm.showGraphOptions = true;\r\n        }\r\n        vm.EditSortingData();\r\n        if (vm.previewdata != null && vm.previewdata != undefined && vm.previewdata.length > 0) {\r\n            vm.RenderList();\r\n        } if (vm.editjsondata) { vm.PreviewReport(); }\r\n    },\r\n    mounted() {\r\n        var vm = this;\r\n        if (vm.GraphData != null && vm.GraphData != undefined && vm.GraphData != '' && vm.GraphData.length > 0) {\r\n            vm.showGraphOptions = true;\r\n            if (vm.aggregateFunctionType == '') {\r\n                vm.aggregateFunctionType = vm.GraphData[0].AggregateFunction\r\n            }\r\n            if (vm.previewdata != null && vm.previewdata != undefined && vm.previewdata.length > 0) {\r\n                vm.$refs.modalGraph?.ViewReportGraph();\r\n            }\r\n        }\r\n    },\r\n    watch: {\r\n        watchvalue(newval, oldval) {\r\n            var vm = this;\r\n            if (newval != oldval) {\r\n                vm.RenderList();\r\n                vm.watchvalue = false;\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        EditSortingData: function () {\r\n            var vm = this;\r\n            if (vm.SortingData != null && vm.SortingData != undefined && vm.SortingData != '' && vm.SortingData.length > 0) {\r\n                vm.sortColummnarray = [];\r\n                vm.SortingData.forEach((item, index) => {\r\n                    vm.sortColummnarray.push({\r\n                        \"sortcolummnId\": item.CustomFieldId,\r\n                        \"columnOrders\": item.SORTTYPE\r\n                    })\r\n                })\r\n            }\r\n            else {\r\n                vm.sortColummnarray = [{ sortcolummnId: \"\", columnOrders: \"\" }]\r\n            }\r\n        },\r\n        RefreshReport: function () {\r\n            var vm = this;\r\n            vm.showdata = false;\r\n            vm.PreviewReport();\r\n        },\r\n        RenderList: function () {\r\n            var vm = this;\r\n            if (vm.previewdata != null && vm.previewdata != undefined && vm.previewdata.length > 0) {\r\n                vm.previewcolumn = []\r\n                vm.Columnlist.forEach(x => {\r\n                    vm.previewcolumn.push({ ...x });\r\n                })\r\n                vm.Grouplist.forEach(item => {\r\n                    vm.previewcolumn.forEach((gitem, index) => {\r\n                        if (item.DisplayName === gitem.DisplayName || item.FieldName === gitem.FieldName) {\r\n                            vm.previewcolumn.splice(index, 1);\r\n                        }\r\n                    })\r\n                })\r\n                if (vm.previewcolumn != null && vm.previewcolumn != undefined && vm.previewcolumn.length > 0) {\r\n                    if (vm.Grouplist.length > 0) {\r\n                        vm.previewgroupdata = Object.assign([], vm.Grouplist);\r\n                        vm.showdata = true;\r\n                        // if (vm.LevelOfGrouping > 2) {\r\n                        //     vm.showmulitGrouping = true;\r\n                        // }\r\n                        vm.showcoldata = false;\r\n                    }\r\n                    else {\r\n                        vm.showcoldata = true;\r\n                        vm.previewgroupdata = [];\r\n                    }\r\n                    vm.noRecord = false;\r\n                }\r\n            }\r\n            else {\r\n                vm.previewcolumn = [];\r\n                vm.previewgroupdata = [];\r\n                vm.noRecord = true;\r\n            }\r\n        },\r\n        PreviewReport: async function () {\r\n            var vm = this;\r\n            vm.isSortPopup = false;\r\n            vm.BindGraph = false;\r\n            await vm.$parent.PreviewJson(vm.sortColummnarray, vm.BindGraph);\r\n            vm.watchvalue = true\r\n        },\r\n        ResetData: function () {\r\n            var vm = this;\r\n            vm.showdata = false;\r\n            vm.isSortPopup = false;\r\n            vm.sortColummnarray = [{ sortcolummnId: \"\", columnOrders: \"\" }]\r\n            vm.previewcolumn = [];\r\n            vm.showGraphOptions = false;\r\n            vm.showChart = false;\r\n            vm.chartType = null;\r\n            vm.chartTypeID = null;\r\n            vm.aggregateFunctionType = null;\r\n            vm.aggregateFunctionResult = null;\r\n            vm.XAxisField = null;\r\n            vm.YAxisField = null;\r\n            vm.chartSeries = [];\r\n            vm.chartOptions = {};\r\n            vm.$refs.modalGraph?.ResetGraph();\r\n            vm.$parent.ResetPreview(vm.customreportparameters);\r\n            vm.noRecord = true;\r\n        },\r\n        ResetGraphData: function () {\r\n            var vm = this;\r\n            vm.showGraphOptions = false;\r\n            vm.$refs.modalGraph.ResetGraph();\r\n            // vm.$refs.modalGraph.ApplyGraph();\r\n            vm.chartType = \"\"\r\n            vm.chartTypeID = null\r\n            vm.aggregateFunctionType = null\r\n            vm.aggregateFunctionResult = null\r\n            vm.XAxisField = null\r\n            vm.YAxisField = null\r\n            vm.chartSeries = []\r\n            vm.chartOptions = {}\r\n            vm.showChart = false;\r\n            vm.BindGraph = false;\r\n        },\r\n        SaveAllReport: async function () {\r\n            var vm = this;\r\n            if (vm.editjsondata) {\r\n                await vm.$parent.PreviewJson(vm.sortColummnarray);\r\n            }\r\n            var graphArray = {\r\n                \"chartTypeID\": vm.chartTypeID,\r\n                \"XAxisField\": vm.XAxisField,\r\n                \"YAxisField\": vm.YAxisField,\r\n                \"AggregateFunction\": vm.aggregateFunctionType,\r\n                \"AggregateFuncField\": vm.aggregateFunctionResult\r\n            }\r\n            if (graphArray.chartTypeID != null) {\r\n                if (vm.Grouplist.length <= 1) {\r\n                    vm.Grouplist.forEach(item => {\r\n                        vm.saveJsonReport.Info.GROUP.push(item);\r\n                    })\r\n                }\r\n                vm.saveJsonReport.Info.GRAPH.push(graphArray);\r\n            }\r\n            var jsonData = JSON.stringify(vm.saveJsonReport);\r\n            if (jsonData != '[]' && jsonData != undefined && vm.previewdata.length > 0) {\r\n                ReportPreviewService.SaveAllDynamicReport(jsonData).then((response) => {\r\n                    if (response.data[0].Value == 1) {\r\n                        vm.ShowAlert(vm.$t(\"AddedSuccess\", [vm.$t(\"Report\")]), 'success', true, vm.$t('Alert'));\r\n                        this.$router.push({ name: 'CustomReports' });\r\n                    }\r\n                    else if (response.data[0].Value == 2) {\r\n                        vm.ShowAlert(vm.$t(\"UpdatedSuccess\", [vm.$t(\"Report\")]), 'success', true, vm.$t('Alert'));\r\n                        this.$router.push({ name: 'CustomReports' });\r\n                    }\r\n                }).catch((err) => {\r\n                    console.log(err);\r\n                })\r\n            } else {\r\n                vm.ShowAlert(vm.$t(\"No_Record_Found\"), 'failure', true, vm.$t('Alert'));\r\n                vm.isLoading = false;\r\n            }\r\n        },\r\n        OpenSortingPopup: function () {\r\n            var vm = this;\r\n            if (!vm.isSortPopup) {\r\n                vm.isSortPopup = true;\r\n            }\r\n            else {\r\n                vm.isSortPopup = false;\r\n            }\r\n        },\r\n        AddSortingForm: function (value) {\r\n            var vm = this\r\n            // Add Sorting popup dynamically.\r\n            if (vm.sortColummnarray[0].columnOrders != '' && vm.sortColummnarray[0].sortcolummnId != '' && vm.sortColummnarray.length < vm.Columnlist.length) {\r\n                vm.sortColummnarray.push({ sortcolummnId: \"\", columnOrders: \"\" });\r\n            } else {\r\n                vm.ShowAlert(vm.sortColummnarray[0].columnOrders != '' && vm.sortColummnarray[0].sortcolummnId != '' ? vm.$t(\"SortLimitExceed\") : vm.$t(\"AddFieldsFirst\"), 'failure', true, vm.$t('Alert'));\r\n            }\r\n        },\r\n        RemoveSortingForm: function (index) {\r\n            var vm = this;\r\n            if (vm.sortColummnarray.length == 1) {\r\n                vm.sortColummnarray = [{ sortcolummnId: \"\", columnOrders: \"\" }]\r\n            }\r\n            else {\r\n                vm.sortColummnarray.splice(vm.sortColummnarray.indexOf(index), 1);\r\n                vm.isValueExistInSort = true;\r\n            }\r\n            if(vm.sortColummnarray.length == 1){\r\n                vm.isValueExistInSort = false}\r\n        },\r\n        OpenGraph: function () {\r\n            var vm = this;\r\n            vm.isSortPopup = false;\r\n            if (!vm.showGraphOptions) {\r\n                vm.showGraphOptions = true;\r\n            }\r\n            else {\r\n                vm.showGraphOptions = false;\r\n            }\r\n        },\r\n        OpenGraphOptions: function () {\r\n            var vm = this;\r\n            vm.showChart = false;\r\n            vm.isGraph = true;\r\n            $(\"#CustomGraphOptions\").modal('show');\r\n            setTimeout(function () {\r\n                $(\"#CustomGraphOptions\").modal('show');\r\n                setTimeout(function () {\r\n                    vm.SetBootstraptoolTip();\r\n                }, 200);\r\n            }, 1000);\r\n        },\r\n        DrawGraph: function (graphParams, BindGraph) {\r\n            var vm = this;\r\n            if (graphParams.selectedChartTypeID != null && graphParams.selectedChartTypeID != undefined) {\r\n                vm.chartType = graphParams.selectedChartType;\r\n                vm.chartTypeID = graphParams.selectedChartTypeID;\r\n                vm.aggregateFunctionType = graphParams.aggregateFunctionType;\r\n                vm.aggregateFunctionResult = graphParams.aggregateFunctionResult;\r\n                vm.XAxisField = graphParams.selectedChartXAxis;\r\n                vm.YAxisField = graphParams.selectedChartYAxis;\r\n                vm.chartSeries = graphParams.chartseries;\r\n                vm.chartOptions = graphParams.chartoptions;\r\n                vm.showChart = true;\r\n                vm.BindGraph = BindGraph;\r\n            }\r\n            else {\r\n                vm.showChart = false;\r\n            }\r\n\r\n        },\r\n        FilterCustomFieldName(CustomFieldId) {\r\n            var vm = this;\r\n            let CustomFieldName;\r\n            for (let [index] of vm.Columnlist.entries()) {\r\n                if (vm.Columnlist[index].CustomFieldId == CustomFieldId || vm.Columnlist[index].FieldName == CustomFieldId) {\r\n                    if (vm.Columnlist[index].DisplayName != null && vm.Columnlist[index].DisplayName != '') {\r\n                        CustomFieldName = vm.Columnlist[index].DisplayName;\r\n                    }\r\n                    else {\r\n                        CustomFieldName = vm.Columnlist[index].FieldName;\r\n                    }\r\n                }\r\n            }\r\n            return CustomFieldName;\r\n        },\r\n        CancelAll: function () {\r\n            this.$router.push({ name: 'CustomReports' });\r\n        },\r\n        CheckColumnExistInGraph: function (CustomFieldId) {\r\n            var vm = this;\r\n            var expression = true;\r\n            if (vm.XAxisField != CustomFieldId && vm.YAxisField != CustomFieldId) {\r\n                return !expression;\r\n            }\r\n            return expression;\r\n\r\n        },\r\n        GetAllRecordsForPDF: async function (excelvalue) {\r\n            var vm = this;\r\n            vm.count = 0;\r\n            if (vm.previewdata.length > 0) {\r\n                var temp = {\r\n                    \"Info\": {\r\n                        \"REPORTID\": vm.customreportparameters.ReportID,\r\n                        \"REPORTNAME\": vm.ReportName,\r\n                        \"MODULENAME\": vm.customreportparameters.Modulename,\r\n                        \"SUBMODULECODE\": vm.customreportparameters.Submodulecode,\r\n                        \"SUBMODULEID\": vm.customreportparameters.submoduleid,\r\n                        \"PAGESIZE\": vm.PageSize,\r\n                        \"PAGENUMBER\": parseInt(vm.PageNumber),\r\n                        \"IS_PAGED\": 1,\r\n                        \"IsForPreview\": vm.isPreviewForPdfExcel,\r\n                        \"FIELDS\": vm.saveJsonReport.Info.FIELDS.length > 0 ? vm.saveJsonReport.Info.FIELDS : vm.PdfJsonReport.Info.FIELDS,\r\n                        \"FILTERS\": vm.saveJsonReport.Info.FILTERS.length > 0 ? vm.saveJsonReport.Info.FILTERS : vm.PdfJsonReport.Info.FILTERS,\r\n                        \"GROUP\": vm.saveJsonReport.Info.GROUP.length > 0 ? vm.saveJsonReport.Info.GROUP : vm.PdfJsonReport.Info.GROUP,\r\n                        \"SORTING\": vm.saveJsonReport.Info.SORTING.length > 0 ? vm.saveJsonReport.Info.SORTING : vm.PdfJsonReport.Info.SORTING,\r\n                        \"EXPRESSION\": vm.saveJsonReport.Info.EXPRESSION.length > 0 ? vm.saveJsonReport.Info.EXPRESSION : vm.PdfJsonReport.Info.EXPRESSION\r\n\r\n                    }\r\n                }\r\n                var jsondata = JSON.stringify(temp);\r\n                vm.ExcelJsonData = jsondata;\r\n                if (excelvalue == undefined) {\r\n                    await ReportPreviewService.PreviewReport(jsondata).then(async (response) => {\r\n                        if (response.data != null && response.data != undefined) {\r\n                            vm.allReocrdsData = JSON.parse(response.data[0].Value);\r\n                            vm.count = vm.count + 1;\r\n                        }\r\n                    }).catch((err) => {\r\n                        console.log(err);\r\n                    })\r\n                }\r\n            }\r\n        },\r\n        //Export TO PDF functionality \r\n        ExportToPDF: async function () {\r\n            var vm = this;\r\n            vm.isLoading = true;\r\n            await vm.GetAllRecordsForPDF();\r\n            if (vm.count != 0) {\r\n                var graphURI = await vm.GetGraphImageURI();\r\n                var GraphData = {};\r\n                var allRecordslisting = vm.allReocrdsData.ListingData;\r\n                let MetaData = vm.allReocrdsData.MetaData[0];\r\n                let ReportName = vm.ReportName.replace('.','-');\r\n                let pageType = 'A2';\r\n                let pdfDetails;\r\n                let pageOrientation = '';\r\n                let GraphWidth = 300;\r\n\r\n                // Create PDF with  Grouping \r\n                if (MetaData.IsGrouping) {\r\n                    await vm.BindPDFDataForGroup(allRecordslisting);\r\n                }\r\n                // Create PDF without  Grouping \r\n                else {\r\n                    await vm.BindPDFData(allRecordslisting);\r\n                }\r\n\r\n                //Set Page Type \r\n                if (vm.TableHeader.length > 5) {\r\n                    pageType = \"A1\";\r\n                    GraphWidth = 500\r\n                }\r\n                //Set Page  pageOrientation\r\n\r\n                if (vm.TableHeader.length > 10) {\r\n                    pageOrientation = 'landscape';\r\n                }\r\n                //Add graph Data\r\n                if (graphURI != null && graphURI != undefined) {\r\n                    GraphData = {\r\n                        image: graphURI.imgURI,\r\n                        width: 500,\r\n                        alignment: 'center'\r\n                    }\r\n                }\r\n\r\n                pdfDetails = {\r\n                    pageSize: pageType,\r\n                    pageOrientation: pageOrientation,\r\n                    content: [\r\n                        GraphData,\r\n                        // { text: `Report Name = ${ReportName}`, style: 'subheader' },\r\n                        {\r\n                            style: 'table',\r\n                            table: {\r\n                                headerRows: 1,\r\n                                body: vm.TableBody\r\n                            }\r\n                        },\r\n                    ],\r\n                    styles: vm.SetPDFStyle(),\r\n                    defaultStyle: {\r\n                        alignment: 'justify'\r\n                    }\r\n                }\r\n                pdfMake.createPdf(pdfDetails).download(ReportName);\r\n                vm.isLoading = false;\r\n            } else {\r\n                vm.ShowAlert(vm.$t(\"No_Record_Found\"), 'failure', true, vm.$t('Alert'));\r\n                vm.isLoading = false;\r\n            }\r\n        },\r\n\r\n        BindPDFData: function (allRecordslisting) {\r\n            var vm = this;\r\n            vm.TableBody = [];\r\n            vm.TableHeader = [];\r\n            var TableHeader2=[];\r\n            //Add  Column for Table header\r\n            var ColumnList = Object.keys(allRecordslisting[0])\r\n            ColumnList.forEach((item) => {\r\n                if (item != 'ROWNUMBER') {\r\n                    vm.TableHeader.push({ text: vm.$t(item), style: 'tableHeader', alignment: 'center' })\r\n                    TableHeader2.push({ text: item, style: 'tableHeader', alignment: 'center' })\r\n                }\r\n            })\r\n\r\n            vm.TableBody.push(vm.TableHeader);\r\n\r\n            allRecordslisting.forEach((item) => {\r\n                let currentData = [];\r\n                TableHeader2.forEach((heading) => {\r\n                    currentData.push(item[heading.text].replace( /(<([^>]+)>)/ig, ''));\r\n                })\r\n                vm.TableBody.push(currentData);\r\n            })\r\n        },\r\n\r\n        BindPDFDataForGroup: function (allRecordslisting) {\r\n            var vm = this;\r\n            vm.TableBody = [];\r\n            vm.TableHeader = [];\r\n             var TableHeader2=[];\r\n            //Add Grouping Column for Table header\r\n            vm.TableHeader.push({ text: vm.$t(Object.keys(allRecordslisting[0])[0]), style: 'tableHeader', alignment: 'center' })\r\n            TableHeader2.push({ text: Object.keys(allRecordslisting[0])[0], style: 'tableHeader', alignment: 'center' })\r\n            // Add all Column in Table Header \r\n            var columnList = Object.keys(allRecordslisting[0].data[0])\r\n            columnList.forEach((item) => {\r\n                vm.TableHeader.push({ text: vm.$t(item), style: 'tableHeader', alignment: 'center' })\r\n                TableHeader2.push({ text: item, style: 'tableHeader', alignment: 'center' })\r\n            })\r\n\r\n            //Add First header array into Table Body\r\n            vm.TableBody.push(vm.TableHeader);\r\n\r\n            //Create Array for PDF\r\n            allRecordslisting.forEach((item) => {\r\n                item.data.forEach((heading, groupingindex) => {\r\n                    let tableData = [];\r\n                    TableHeader2.forEach((headerelement, headerindex) => {\r\n                        if (groupingindex == 0 && headerindex == 0) {\r\n                            var groupColumn = `${item[headerelement.text].replace( /(<([^>]+)>)/ig, '')} (${item.totalRecord})`\r\n                            tableData.push({ rowSpan: parseInt(item.totalRecord), text: groupColumn })\r\n                        }\r\n                        else if (groupingindex == 1 && headerindex == 0) {\r\n                            tableData.push(\"\")\r\n                        }\r\n                        else {\r\n                            if (heading[headerelement.text] != undefined && heading[headerelement.text] != \"\") {\r\n                                tableData.push(heading[headerelement.text].replace( /(<([^>]+)>)/ig, ''));\r\n                            }\r\n                            else {\r\n                                var tempitem = heading[headerelement.text] = \"-\";\r\n                                tableData.push(tempitem);\r\n                            }\r\n                        }\r\n                    })\r\n                    vm.TableBody.push(tableData)\r\n                })\r\n            })\r\n        },\r\n        SetPDFStyle: function () {\r\n            return {\r\n                subheader: {\r\n                    fontSize: 16,\r\n                    bold: true,\r\n                    margin: [0, 0, 0, 10]\r\n                },\r\n                table: {\r\n                    margin: [0, 5, 0, 15]\r\n                }\r\n            };\r\n        },\r\n        GetGraphImageURI: async function () {\r\n            var vm = this;\r\n            var URI;\r\n            await vm.$refs.chart?.chart.dataURI().then(uri => {\r\n                URI = uri;\r\n            });\r\n            return URI;\r\n        },\r\n        ExportToExcel: async function () {\r\n            var vm = this;\r\n            vm.isLoading = true;\r\n            // var jsonData = JSON.stringify(vm.saveJsonReport.Info.GROUP.length > 0 ? vm.saveJsonReport : vm.PdfJsonReport);\r\n            await vm.GetAllRecordsForPDF('Excel');\r\n            if (vm.ExcelJsonData != null && vm.ExcelJsonData != undefined) {\r\n                var jsonData = vm.ExcelJsonData;\r\n                var params = `reportId=${vm.customreportparameters.ReportID}&pagetype=preview&IsPaged=1`;\r\n                ReportPreviewService.GetExcelReport(params, jsonData).then((response) => {\r\n                    var blob = new Blob([response.data], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;' });\r\n                    var link = document.createElement('a');\r\n                    link.href = window.URL.createObjectURL(blob);\r\n                    const current = new Date();\r\n                    const date = `${current.getDate()}_${current.getMonth()+1}_${current.getFullYear()}`;\r\n                    var fileName = `ReportData-${vm.ReportName.replace('.', '-')}-${date}`;\r\n                    fileName = fileName.split(\" \").join(\"\");\r\n                    link.download = fileName;\r\n                    link.click();\r\n                    vm.isLoading = false\r\n                }).catch((err) => { console.log(err); vm.isLoading = false; })\r\n            } else {\r\n                vm.ShowAlert(vm.$t(\"No_Record_Found\"), 'failure', true, vm.$t('Alert'));\r\n                vm.isLoading = false;\r\n            }\r\n        },\r\n        close() {\r\n            var vm = this;\r\n            vm.isSortPopup = false;\r\n        }\r\n        \r\n        \r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/* .arrow-solid-left::before {\r\n    right: 4px;\r\n    ;\r\n} */\r\n/* \r\n@media (max-width:1440px) {\r\n    .verticle-action.lft75 {\r\n        top: 80px !important;\r\n    }\r\n}\r\n\r\n@media (max-width:1250px) {\r\n    .verticle-action.lft75 {\r\n        right: 50px !important;\r\n    }\r\n\r\n}\r\n\r\n@media (max-width:1180px) {\r\n    .verticle-action.lft75 {\r\n        top: 130px !important;\r\n        right: 70px !important;\r\n    }\r\n\r\n    .arrow-solid-left::before {\r\n        right: 2px;\r\n        top: 350px;\r\n    }\r\n}\r\n\r\n@media (max-width: 1080px) {\r\n    .verticle-action.lft75 {\r\n        right: 0 !important;\r\n    }\r\n\r\n    .arrow-solid-left::before {\r\n        right: 4px;\r\n        top: 170px;\r\n    }\r\n}\r\n\r\n@media (max-width: 992px) {\r\n    .arrow-solid-left::before {\r\n        right: 4px;\r\n        top: 140px;\r\n    }\r\n}\r\n\r\n@media (max-width: 930px) {\r\n    .verticle-action.lft75 {\r\n        top: 180px !important;\r\n    }\r\n\r\n    .arrow-solid-left::before {\r\n        top: 175px !important;\r\n    }\r\n}\r\n\r\n@media (max-width: 830px) {\r\n    .verticle-action.lft75 {\r\n        top: 295px !important;\r\n        right: 0 !important;\r\n    }\r\n\r\n    .arrow-solid-left::before {\r\n        top: 50px !important;\r\n    }\r\n} */\r\n</style>\r\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ReportPreview.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ReportPreview.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ReportPreview.vue?vue&type=template&id=5ab5b642&scoped=true&\"\nimport script from \"./ReportPreview.vue?vue&type=script&lang=js&\"\nexport * from \"./ReportPreview.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ReportPreview.vue?vue&type=style&index=0&id=5ab5b642&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"5ab5b642\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"modal my-popups centre fade\",attrs:{\"id\":\"showcalculatedfield\",\"role\":\"dialog\"}},[_c('div',{staticClass:\"modal-dialog\",attrs:{\"role\":\"document\"}},[_c('div',{staticClass:\"modal-content\"},[_c('div',{staticClass:\"modal-header mheader-user\"},[_c('button',{staticClass:\"close\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.close()}}},[_c('em',{staticClass:\"fa fa-times\",attrs:{\"aria-hidden\":\"true\"}})]),_c('h4',{staticClass:\"modal-title\",attrs:{\"id\":\"myModalLabel\"}},[_vm._v(_vm._s(_vm.$t('customField')))])]),_c('div',{staticClass:\"modal-body\"},[_c('loader',{attrs:{\"is-visible\":_vm.isLoading}}),_c('dynamic-form',{attrs:{\"lang\":\"en\",\"buttons\":_vm.buttons,\"schema\":_vm.FormSchema},on:{\"OnSubmit\":function($event){return _vm.SubmitExpression()}},scopedSlots:_vm._u([{key:\"tgslot-CalculatedUIList\",fn:function({ data }){return [_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-12 p-0 float-left\"},[_c('div',{staticClass:\"col-lg-4 mb-0 float-left px-3\"},[_c('div',{staticClass:\"heading-border mb-4\"},[_c('h5',{staticClass:\"h5\"},[_c('span',{staticClass:\"spngropuname\"},[_vm._v(\" \"+_vm._s(_vm.$t('Functions'))+\" \"),_c('div',{staticClass:\"w3-container w3-border w3-large\"})])])]),_c('div',{staticClass:\"accordion md-accordion left-filter\",attrs:{\"id\":\"accordionEx1\"}},[_c('div',{staticClass:\"card-panel\",staticStyle:{\"border-top\":\"1px solid #c7c7c7\"}},_vm._l((_vm.FunctionsName),function(name,index){return _c('div',{key:index,staticClass:\"card\"},[_c('div',{staticClass:\"card-header\",attrs:{\"role\":\"tab\",\"id\":'MainFunction' + index}},[_c('h5',{staticClass:\"mb-0\"},[_c('a',{class:index == 0 ? '' : 'collapsed',attrs:{\"data-toggle\":\"collapse\",\"data-parent\":\"#accordionEx1\",\"href\":'#FucntionCollapse' + index,\"aria-expanded\":index == 0 ? true : false,\"aria-controls\":'FucntionCollapse' + index}},[_c('em',{staticClass:\"fa fa fa-file-text-o\",attrs:{\"aria-hidden\":\"true\"}}),_c('span',{staticClass:\"font-weight-bold\"},[_vm._v(\" \"+_vm._s(name.FuncType))]),_c('em',{staticClass:\"fa fa-angle-down rotate-icon\",attrs:{\"aria-hidden\":\"true\"}})])])]),_c('div',{class:index == 0 ? 'collapse multi-collapse show' : 'collapse multi-collapse',attrs:{\"id\":'FucntionCollapse' + index,\"role\":\"tabpanel\",\"aria-labelledby\":'MainFunction' + index,\"data-parent\":\"#accordionEx1\"}},[_c('div',{staticClass:\"card-body p-0 customScrollForLeftBar llt\",staticStyle:{\"max-height\":\"300px\"}},[_c('div',{staticClass:\"form-group\"},[_c('ul',{staticClass:\"nav nav-pills flex-column left-tab responivecustomtab lefttabiconfix\",staticStyle:{\"max-height\":\"214px\",\"overflow\":\"auto\",\"display\":\"block\"}},[_vm._l((_vm.Functionskey[index]),function(element){return [_c('li',{staticClass:\"nav-item parent-element\"},[_c('span',{staticClass:\"nav-link left-menu px-4\"},[_c('em',{staticClass:\"fa fa-bullhorn float-left\",attrs:{\"aria-hidden\":\"true\"}}),_c('span',{staticClass:\"text-truncate float-left\",staticStyle:{\"width\":\"55%\"},attrs:{\"data-toggle-tooltip\":element.Keys,\"title\":element.Keys}},[_vm._v(\" \"+_vm._s(element.Keys)+\" \")]),_c('a',{attrs:{\"href\":\"javascript:;\"}},[_c('em',{staticClass:\"fa fa-plus float-right mt-1 text-success pr-0\",attrs:{\"aria-hidden\":\"true\"},on:{\"click\":function($event){return _vm.AddFunctionsfields(element, $event, index)}}})])])])]})],2)])])])])}),0)])]),_c('div',{staticClass:\"col-lg-4 mb-0 float-left px-3\"},[_c('div',{staticClass:\"heading-border\"},[_c('h5',{staticClass:\"h5\"},[_c('span',{staticClass:\"spngropuname\"},[_vm._v(\" \"+_vm._s(_vm.$t('Expression'))+\" \"),_c('a',{staticClass:\"editgroupname d-none\",attrs:{\"title\":\"@Resources.Edit\",\"href\":\"javascript:;\"}},[_c('em',{staticClass:\"fa fa-pencil pl-2 text-success\"})])])])]),_c('div',{staticClass:\"border p-3 mt-4 float-left\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-11 mb-2\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.modelconditionexpression),expression:\"modelconditionexpression\"}],class:_vm.Functionkey == 'Date diff' || _vm.Functionkey == 'Date add' || _vm.Functionkey == 'Date name' || _vm.Functionkey == 'Date part' || _vm.Functionkey == 'If'\n                                                        ? 'form-control' : 'form-control d-none',attrs:{\"type\":\"text\",\"placeholder\":\"Enter Your Conditions\"},domProps:{\"value\":(_vm.modelconditionexpression)},on:{\"input\":function($event){if($event.target.composing)return;_vm.modelconditionexpression=$event.target.value}}}),_c('small',{class:_vm.Functionkey == 'Date diff' || _vm.Functionkey == 'Date add' || _vm.Functionkey == 'Date name' || _vm.Functionkey == 'Date part' || _vm.Functionkey == 'If' ? 'text-danger' : 'd-none'},[_vm._v(_vm._s(_vm.ShowDescriptionForFunction))])]),_c('div',{staticClass:\"col-md-1 p-0 my-1\"},[_c('a',{class:_vm.Functionkey == 'Date diff' || _vm.Functionkey == 'Date add' || _vm.Functionkey == 'Date name' || _vm.Functionkey == 'Date part' || _vm.Functionkey == 'If'\n                                                        ? 'fa fa-play text-success' : 'fa fa-play text-success d-none',on:{\"click\":_vm.AddConditionExpression}})])]),_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.InputValueExpression),expression:\"InputValueExpression\"}],staticClass:\"border background-white float-left w-100 p-3\",staticStyle:{\"min-height\":\"250px\"},attrs:{\"id\":\"txtarea\"},domProps:{\"value\":(_vm.InputValueExpression)},on:{\"keydown\":function($event){return _vm.deleteuserinput($event)},\"mouseup\":function($event){return _vm.GetCursorPoint($event)},\"select\":function($event){return _vm.UserInputSelection($event)},\"input\":function($event){if($event.target.composing)return;_vm.InputValueExpression=$event.target.value}}}),_c('div',{staticClass:\"expressionbx mb-4 bg-grey text-right float-left w-100 py-2 border\"},[_c('a',{staticClass:\"fa fa-keyboard-o\",on:{\"click\":function($event){return _vm.AddSpace($event)}}}),_c('a',{attrs:{\"href\":\"javascript:;\"},on:{\"click\":function($event){return _vm.Addplussign($event)}}},[_vm._v(\"+\")]),_c('a',{attrs:{\"href\":\"javascript:;\"},on:{\"click\":function($event){return _vm.Addsubtractsign($event)}}},[_vm._v(\"-\")]),_c('a',{attrs:{\"href\":\"javascript:;\"},on:{\"click\":function($event){return _vm.Addmultiplysign($event)}}},[_vm._v(\"*\")]),_c('a',{attrs:{\"href\":\"javascript:;\"},on:{\"click\":function($event){return _vm.Adddividesign($event)}}},[_vm._v(\"/\")]),_c('a',{attrs:{\"href\":\"javascript:;\"},on:{\"click\":function($event){return _vm.Addopenbracketsign($event)}}},[_vm._v(\"(\")]),_c('a',{attrs:{\"href\":\"javascript:;\"},on:{\"click\":function($event){return _vm.Addclosebracketsign($event)}}},[_vm._v(\")\")])]),_c('div',{staticClass:\"col-12 p-0 float-left\"},[_c('div',{staticClass:\"row flex-row-reverse\"},[_c('div',{staticClass:\"col-12 p-0 float-left\",attrs:{\"id\":\"verifiedid\"}},[(_vm.verifiedvaluedata == 0)?_c('div',{staticClass:\"alert alert-danger alert-dismissible fade show\",attrs:{\"role\":\"alert\"}},[_vm._v(\" \"+_vm._s(_vm.verifyErrorMsg)),_c('button',{staticClass:\"close\",attrs:{\"type\":\"button\",\"data-dismiss\":\"alert\",\"aria-label\":\"Close\"},on:{\"click\":_vm.closed}},[_c('span',{attrs:{\"aria-hidden\":\"true\"}},[_vm._v(\"×\")])])]):_vm._e(),(_vm.verifiedvaluedata == 1)?_c('div',{staticClass:\"alert alert-success alert-dismissible fade show\",attrs:{\"role\":\"alert\"}},[_vm._v(\" \"+_vm._s(_vm.$t(\"ExpressionVerify\"))),_c('button',{staticClass:\"close\",attrs:{\"type\":\"button\",\"data-dismiss\":\"alert\",\"aria-label\":\"Close\"},on:{\"click\":_vm.closed}},[_c('span',{attrs:{\"aria-hidden\":\"true\"}},[_vm._v(\"×\")])])]):_vm._e()]),_c('div',{staticClass:\"col-lg-12 text-right\"},[_c('a',{staticClass:\"btn btn-success ancsaveuserticket mr-2\",attrs:{\"href\":\"javascript:;\"},on:{\"click\":_vm.VerifyExpression}},[_c('em',{staticClass:\"fa fa-check pr-2\"}),_vm._v(\"Verify\")]),_c('a',{staticClass:\"btn btn-danger ancsaveuserticket\",attrs:{\"href\":\"javascript:;\"},on:{\"click\":_vm.ResetExpression}},[_c('em',{staticClass:\"fa fa-refresh pr-2\"}),_vm._v(\"Reset\")])])])])])]),_c('div',{staticClass:\"col-lg-4 mb-0 float-left px-3\"},[_c('div',{staticClass:\"heading-border mb-4\"},[_c('h5',{staticClass:\"h5\"},[_c('span',{staticClass:\"spngropuname\"},[_vm._v(\" \"+_vm._s(_vm.$t('Columns'))+\" \"),_c('div',{staticClass:\"w3-container w3-border w3-large\"})])])]),_c('div',{staticClass:\"mb-0 d-lg-block p-2 border\"},[_c('div',{staticClass:\"input-group customsearchbox\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.MainSearchmodel),expression:\"MainSearchmodel\"}],staticClass:\"form-control searchcustomfilter border-right-0\",attrs:{\"type\":\"text\",\"maxlength\":\"50\",\"id\":\"searchinput\",\"placeholder\":\"Search by Name\",\"autocomplete\":\"off\"},domProps:{\"value\":(_vm.MainSearchmodel)},on:{\"keyup\":_vm.ListFiltering,\"input\":function($event){if($event.target.composing)return;_vm.MainSearchmodel=$event.target.value}}}),_c('div',{staticClass:\"input-group-append\"},[_c('span',{staticClass:\"input-group-text bg-transparent bg-white border-left-0\"})])])]),_c('div',{staticClass:\"accordion md-accordion left-filter\",attrs:{\"id\":\"accordionEx2\"}},[_c('div',{staticClass:\"card-panel\",staticStyle:{\"border-top\":\"1px solid #c7c7c7\"}},_vm._l((_vm.JsonColumns),function(name,index){return _c('div',{key:index,staticClass:\"card\"},[_c('div',{staticClass:\"card-header\",attrs:{\"role\":\"tab\",\"id\":'MainColumn' + index}},[_c('h5',{staticClass:\"mb-0\"},[_c('a',{class:index == 0 ? '' : 'collapsed',attrs:{\"data-toggle\":\"collapse\",\"data-parent\":\"#accordionEx2\",\"href\":'#ColumnCollapse' + index,\"aria-expanded\":index == 0 ? true : false,\"aria-controls\":'ColumnCollapse' + index}},[_c('em',{staticClass:\"fa fa fa-file-text-o\",attrs:{\"aria-hidden\":\"true\"}}),_c('span',{staticClass:\"font-weight-bold\"},[_vm._v(\" \"+_vm._s(_vm.GetLocalizedValue(name.SubModule)))]),_c('em',{staticClass:\"fa fa-angle-down rotate-icon\",attrs:{\"aria-hidden\":\"true\"}})])])]),_c('div',{class:index == 0 ? 'collapse multi-collapse column-collapse show':'collapse multi-collapse column-collapse',attrs:{\"id\":'ColumnCollapse' + index,\"role\":\"tabpanel\",\"aria-labelledby\":'MainColumn' + index,\"data-parent\":\"#accordionEx2\"}},[_c('div',{staticClass:\"card-body p-0 customScrollForLeftBar llt\",staticStyle:{\"max-height\":\"300px\"}},[_c('div',{staticClass:\"form-group\"},[_c('ul',{staticClass:\"nav nav-pills flex-column left-tab responivecustomtab lefttabiconfix\",staticStyle:{\"max-height\":\"305px\",\"overflow\":\"auto\",\"display\":\"block\"}},[_vm._l((_vm.searchColumnfilter.length == 0 ? _vm.modulelisting[index] : _vm.searchColumnfilter[index]),function(element){return [_c('li',{staticClass:\"nav-item parent-element\"},[_c('span',{staticClass:\"nav-link left-menu px-4\"},[_c('em',{class:element.dttype[0].icon + ' ' + 'float-left',attrs:{\"aria-hidden\":\"true\"}}),_c('span',{staticClass:\"text-truncate float-left\",staticStyle:{\"width\":\"55%\"},attrs:{\"data-toggle-tooltip\":element.FieldName,\"title\":element.FieldName}},[_vm._v(\" \"+_vm._s(_vm.GetLocalizedValue((element.DisplayName != null && element.DisplayName != \"\") ? element.DisplayName : element.FieldName))+\" \")]),_c('a',{attrs:{\"href\":\"javascript:;\"}},[_c('em',{staticClass:\"fa fa-plus float-right mt-1 text-success pr-0\",attrs:{\"aria-hidden\":\"true\"},on:{\"click\":function($event){return _vm.Addfields(element, $event, index)}}})])])])]})],2)])])])])}),0)]),(_vm.SearchNoRecord)?_c('div',{staticClass:\"text-center text-danger d-flex align-items-center justify-content-center norecs pt-2\"},[_vm._v(\" \"+_vm._s(_vm.$t(\"NoRecordfound\")))]):_vm._e()])])])]}}])})],1)])])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<script>\r\nimport ExpressionDataService from \"@/services/DataService\";\r\nexport default {\r\n    props: {\r\n        customreportparameters: {\r\n            type: Object\r\n        },\r\n        ExpDataArray: {\r\n            type: Array\r\n        },\r\n        editexpressionvalue: {\r\n            type: Boolean\r\n        },\r\n        ExpFieldDataArray: {\r\n            type: Array\r\n        },\r\n        Columnlist: {\r\n            type: Object\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            JsonColumns: [],\r\n            modulelisting: [],\r\n            FunctionsName: [],\r\n            Functionskey: [],\r\n            ResponseColumnData: [],\r\n            ResponseFunctionData: [],\r\n            watchvalue: false,\r\n            FieldsValue: '',\r\n            FunctionValue: '',\r\n            AddBracketValue: '',\r\n            SubtractBracketValue: '',\r\n            MultplyBracketValue: '',\r\n            DivideBracketValue: '',\r\n            OpenBracketExpValue: '',\r\n            CloseBracketExpValue: '',\r\n            InputValueExpression: '',\r\n            FieldData: [],\r\n            fieldatavalue: [],\r\n            reqFrom: 'Reporting',\r\n            isLoading: false,\r\n            verifiedvalue: false,\r\n            modelfieldname: '',\r\n            substringvalue: '',\r\n            verifiedvaluedata: null,\r\n            verifyErrorMsg: '',\r\n            InputValueArray: [],\r\n            InputValueExpressionByID: '',\r\n            FunctionValueArray: 'No_Value',\r\n            selecteduserinput: null,\r\n            selecteduserinputbyid: null,\r\n            ExpressionIDvalue: '',\r\n            updateexpresion: true,\r\n            fieldadded: false,\r\n            FieldTableNameValue: '',\r\n            GetCommaSeparatedValue: '',\r\n            countbyfield: 0,\r\n            modelconditionexpression: '',\r\n            conditionexpression: false,\r\n            Functionkey: null,\r\n            ShowDescriptionForFunction: null,\r\n            checkbycondition: 0,\r\n            searchColumnfilter: [],\r\n            MainSearchmodel: '',\r\n            SearchNoRecord: false,\r\n            FormSchema: [\r\n                {\r\n                    layoutType: \"single\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"TextField\",\r\n                            label: this.$t('fieldName'),\r\n                            name: \"fieldName\",\r\n                            value: \"\",\r\n                            placeholder: \"Enter Field Name\",\r\n                            config: {\r\n                                options: [],\r\n                                showAddIcon: false,\r\n                            },\r\n                            validationRules: \"required\",\r\n                        },\r\n                        {\r\n                            astype: \"SlotField\",\r\n                            label: '',\r\n                            name: \"CalculatedUIList\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            config: {\r\n                                options: [],\r\n                                showAddIcon: false,\r\n                                onChange: this.onChangeDropdown\r\n                            },\r\n                            validationRules: \"\",\r\n                        },\r\n                    ]\r\n                }\r\n            ],\r\n            buttons: [\r\n                {\r\n                    type: \"submit\",\r\n                    class: \"btn btn-success mr-2 my-sm-0 disabled\",\r\n                    text: \"<i class='fa fa-save pr-2'></i>Submit\",\r\n                },\r\n                {\r\n                    type: \"button\",\r\n                    class: \"btn btn-primary delete-btn mr-2 my-sm-0\",\r\n                    text: \"<i class='fa fa-times pr-2'></i>Cancel\",\r\n                    onClick:this.CancelExpressionUI\r\n                }\r\n            ]\r\n        }\r\n    },\r\n    created() {\r\n        var vm = this;\r\n        vm.GetColumnList(vm.customreportparameters);\r\n        if (vm.editexpressionvalue == true && vm.ExpDataArray.length > 0) {\r\n            vm.ExpresssionDataValue(vm.ExpDataArray, vm.ExpFieldDataArray);\r\n        }\r\n        vm.GetFunctionList();\r\n    },\r\n    mounted: function () {\r\n        $('#showcalculatedfield').modal({\r\n            backdrop: 'static',\r\n            keyboard: false\r\n        })\r\n    },\r\n    watch: {\r\n        watchvalue(newval){\r\n            var vm = this;\r\n            if (newval) {\r\n                vm.GetColumnList(vm.customreportparameters);\r\n                vm.GetFunctionList();\r\n                vm.watchvalue = false;\r\n                $(\"#Submitbtn\").addClass('disabled');\r\n                if (vm.editexpressionvalue == true && vm.ExpDataArray.length > 0 && vm.updateexpresion == true) {\r\n                    vm.ExpresssionDataValue(vm.ExpDataArray, vm.ExpFieldDataArray);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        close() {\r\n            $(\"#showcalculatedfield\").modal(\"hide\"); $(\"body\").removeClass(\"modal-open\");\r\n            $(\".modal-backdrop\").remove();\r\n            this.$emit('close');\r\n            // this.modelfieldname = '';\r\n            this.FormSchema[0].Data[0].value = '';\r\n            // this.FormSchema[0].Data[0].validationRules = '';\r\n            this.ExpressionIDvalue = '';\r\n            this.ResetExpression();\r\n            //this.$refs.form.setFieldTouched('modelfieldname', false);\r\n        },\r\n        GetColumnList(customreportparameters) {\r\n            var vm = this;\r\n            if (customreportparameters.Modulename != undefined && customreportparameters.Submodulecode != undefined && customreportparameters.ReportName != null) {\r\n                var params = `moduleName=${customreportparameters.Modulename}&subModuleCode=${customreportparameters.Submodulecode}&viewId&reqFrom=${vm.reqFrom}`;\r\n                ExpressionDataService.GetListFields(params).then(response => {\r\n                    vm.JsonColumns = response.data.AVAILABLE_FIELDS[0];\r\n                    vm.JsonColumns.forEach((item) => {\r\n                        vm.modulelisting.push(item.CustomFields);\r\n                    })\r\n                }).catch(err => {\r\n                    console.log(err);\r\n                })\r\n            }\r\n        },\r\n        GetFunctionList() {\r\n            var vm = this;\r\n            ExpressionDataService.GetFunctionList().then(res => {\r\n                vm.FunctionsName = res.data.AVAILABLE_FIELDS[0];\r\n                vm.FunctionsName.forEach((name) => {\r\n                    vm.Functionskey.push(name.Functions);\r\n                })\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n        },\r\n        Addfields(element, event, index) {\r\n            var vm = this;\r\n            if (vm.modelconditionexpression == '') { vm.FieldData.push({ CustomFieldId: element.CustomFieldId, FieldName: element.FieldName }); }\r\n\r\n            if (vm.substringvalue == '') {\r\n                var cursorpos = vm.GetCursorPoint();\r\n                var getdata = vm.SetValueOnCursorPosition(cursorpos);\r\n                if (getdata.length > 1) {\r\n                    var checkindex = vm.InputValueArray.findIndex(x => x.FieldValueData === getdata[0].FieldValueData);\r\n                    if (checkindex > -1) {\r\n                        vm.fieldatavalue.splice(checkindex, 0, {\r\n                            FieldValueData: vm.$t((element.DisplayName != null && element.DisplayName != \"\") ? element.DisplayName : element.FieldName),\r\n                            MatchIndex: vm.$t((element.DisplayName != null && element.DisplayName != \"\") ? element.DisplayName : element.FieldName).length, SameName: 'Field_Added' + cursorpos\r\n                        })\r\n                        vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('')\r\n                        vm.fieldadded = true;\r\n                    }\r\n                } else {\r\n                    vm.fieldatavalue.push({\r\n                        FieldValueData: vm.$t((element.DisplayName != null && element.DisplayName != \"\") ? element.DisplayName : element.FieldName),\r\n                        MatchIndex: vm.$t((element.DisplayName != null && element.DisplayName != \"\") ? element.DisplayName : element.FieldName).length, SameName: 'Field_Added' + cursorpos\r\n                    });\r\n                    vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                    vm.fieldadded = false;\r\n                }\r\n                $(\"#Submitbtn\").addClass('disabled');\r\n            }\r\n            else {\r\n                if (typeof vm.fieldatavalue == 'object') {\r\n                    var convertarr = String(vm.fieldatavalue.map(x => x.FieldValueData));\r\n                    vm.fieldatavalue = convertarr\r\n                }\r\n                if (vm.GetCommaSeparatedValue == \"CommaSeparatedValue\" && vm.countbyfield == 0 && !vm.conditionexpression) {\r\n                    var firstindex = vm.fieldatavalue.indexOf(\",\") + 1;\r\n                    var secondindex = vm.fieldatavalue.indexOf(\")\")\r\n                }\r\n                else if (vm.GetCommaSeparatedValue == \"CommaSeparatedValue\" && vm.countbyfield > 0 && !vm.conditionexpression) {\r\n                    var firstindex = vm.fieldatavalue.indexOf(vm.fieldatavalue.split(\",\")[vm.countbyfield]);\r\n                    var secondindex = vm.fieldatavalue.indexOf(\")\")\r\n                }\r\n                else {\r\n                    var firstindex = vm.fieldatavalue.indexOf(\"(\") + 1;\r\n                    var secondindex = vm.fieldatavalue.indexOf(\")\")\r\n                }\r\n                vm.substringvalue = vm.fieldatavalue.substring(firstindex, secondindex);\r\n                vm.FunctionValueArray = vm.substringvalue;\r\n                if (vm.substringvalue.includes(',')) {\r\n                    var substringarr = vm.substringvalue.split(',')\r\n                    vm.substringvalue = substringarr;\r\n                    if (!vm.conditionexpression && vm.checkbycondition == 0) {\r\n                        vm.FieldsValue = vm.fieldatavalue.replace(vm.substringvalue[0],\r\n                            vm.$t((element.DisplayName != null && element.DisplayName != \"\") ? element.DisplayName : element.FieldName))\r\n                    }\r\n                    else {\r\n                        vm.FieldsValue = vm.fieldatavalue.replace(vm.substringvalue[0], element)\r\n                    }\r\n                    // vm.fieldatavalue = vm.FieldsValue;\r\n                    vm.fieldatavalue = [];\r\n                    vm.fieldatavalue.push({\r\n                        FieldValueData: vm.FieldsValue,\r\n                        MatchIndex: vm.FieldsValue.length, SameName: 'Field_Added' + vm.FieldsValue.length\r\n                    });\r\n                    $(\"#Submitbtn\").addClass('disabled');\r\n                } else {\r\n                    if (!vm.conditionexpression && vm.checkbycondition == 0) {\r\n                        vm.FieldsValue = vm.fieldatavalue.replace(vm.substringvalue,\r\n                            vm.$t((element.DisplayName != null && element.DisplayName != \"\") ? element.DisplayName : element.FieldName))\r\n                    }\r\n                    else {\r\n                        vm.FieldsValue = vm.fieldatavalue.replace(vm.substringvalue, element);\r\n                    }\r\n                    // vm.fieldatavalue = vm.FieldsValue;\r\n                    vm.fieldatavalue = [];\r\n                    vm.fieldatavalue.push({\r\n                        FieldValueData: vm.FieldsValue,\r\n                        MatchIndex: vm.FieldsValue.length, SameName: 'Field_Added' + vm.FieldsValue.length\r\n                    });\r\n                    $(\"#Submitbtn\").addClass('disabled');\r\n\r\n                }\r\n            }\r\n            if (!vm.conditionexpression && vm.checkbycondition == 0) {\r\n                if (element.IsSystemGenerated) {\r\n                    vm.FieldTableNameValue = element.TableName + '.' + element.FieldName;\r\n                }\r\n                else {\r\n                    vm.FieldTableNameValue = element.FieldName;\r\n                }\r\n                // $(event.target).closest(\".parent-element\").remove();\r\n            } else { vm.FieldTableNameValue = element; }\r\n            vm.updatingvalue();\r\n            vm.updatevaluebyid(element, checkindex, getdata, cursorpos);\r\n        },\r\n        AddFunctionsfields(element, event, index) {\r\n            var vm = this;\r\n            if (vm.InputValueExpression == null || vm.InputValueExpression == undefined || vm.InputValueExpression == \"\") {\r\n                if (typeof vm.fieldatavalue == 'string') {\r\n                    var substringarr = vm.fieldatavalue.split(',')\r\n                    vm.fieldatavalue = substringarr;\r\n                }\r\n                vm.fieldatavalue.push({ FieldValueData: element.Value, MatchIndex: element.Value.length, SameName: 'Function_Added' });\r\n                vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                vm.InputValueArray.push({ FieldValueData: element.Value, MatchIndex: element.Value.length, SameName: 'Function_Added' });\r\n                vm.Functionkey = element.Keys;\r\n                vm.DescriptionForFunction();\r\n                if (element.Keys == \"Case\") {\r\n                    vm.substringvalue = ''\r\n                } else { vm.substringvalue = \"Function_Added\"; }\r\n                $(event.target).closest(\".parent-element\").remove();\r\n                vm.updatingvalue();\r\n                vm.updatevaluebyid();\r\n            }\r\n            else {\r\n                vm.ShowAlert(\"You Cannot Select More Than One Function.\", \"Failure\");\r\n            }\r\n\r\n        },\r\n        Addopenbracketsign() {\r\n            var vm = this;\r\n            if (typeof vm.fieldatavalue == 'string') {\r\n                var substringarr = vm.fieldatavalue.split(',')\r\n                vm.fieldatavalue = substringarr;\r\n            }\r\n            var openbracketexpsign = '('\r\n            var openbracket = openbracketexpsign.split('');\r\n            var cursorpos = vm.GetCursorPoint();\r\n            var getdata = vm.SetValueOnCursorPosition(cursorpos);\r\n            if (getdata.length > 1) {\r\n                var checkindex = vm.InputValueArray.findIndex(x => x.FieldValueData === getdata[0].FieldValueData);\r\n                if (checkindex > -1) {\r\n                    vm.fieldatavalue.splice(checkindex, 0, {\r\n                        FieldValueData: openbracket, MatchIndex: openbracket.length, SameName: 'Open_BracketAdded' + cursorpos\r\n                    })\r\n                    vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                    vm.InputValueArray.splice(checkindex, 0, {\r\n                        FieldValueData: openbracket, MatchIndex: openbracket.length, SameName: 'Open_BracketAdded' + cursorpos\r\n                    })\r\n                }\r\n            } else {\r\n                vm.fieldatavalue.push({ FieldValueData: openbracket, MatchIndex: openbracket.length, SameName: 'Open_BracketAdded' + cursorpos })\r\n                vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                vm.InputValueArray.push({ FieldValueData: openbracket, MatchIndex: openbracket.length, SameName: 'Open_BracketAdded' + cursorpos })\r\n            }\r\n            vm.substringvalue = '';\r\n            vm.FunctionValueArray = 'No_Value';\r\n            vm.updatingvalue();\r\n            vm.updatevaluebyid();\r\n        },\r\n        Addclosebracketsign() {\r\n            var vm = this;\r\n            if (typeof vm.fieldatavalue == 'string') {\r\n                var substringarr = vm.fieldatavalue.split(',')\r\n                vm.fieldatavalue = substringarr;\r\n            }\r\n            var closebracketexpsign = ')'\r\n            var closebracket = closebracketexpsign.split('');\r\n            var cursorpos = vm.GetCursorPoint();\r\n            var getdata = vm.SetValueOnCursorPosition(cursorpos);\r\n            if (getdata.length > 1) {\r\n                var checkindex = vm.InputValueArray.findIndex(x => x.FieldValueData === getdata[0].FieldValueData);\r\n                if (checkindex > -1) {\r\n                    vm.fieldatavalue.splice(checkindex, 0, {\r\n                        FieldValueData: closebracket, MatchIndex: closebracket.length, SameName: 'Close_BracketAdded' + cursorpos\r\n                    })\r\n                    vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                    vm.InputValueArray.splice(checkindex, 0, {\r\n                        FieldValueData: closebracket, MatchIndex: closebracket.length, SameName: 'Close_BracketAdded' + cursorpos\r\n                    })\r\n                }\r\n            } else {\r\n                vm.fieldatavalue.push({ FieldValueData: closebracket, MatchIndex: closebracket.length, SameName: 'Close_BracketAdded' + cursorpos })\r\n                vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                vm.InputValueArray.push({ FieldValueData: closebracket, MatchIndex: closebracket.length, SameName: 'Close_BracketAdded' + cursorpos })\r\n            }\r\n            vm.updatingvalue();\r\n            vm.updatevaluebyid();\r\n        },\r\n        Addplussign() {\r\n            var vm = this;\r\n            if (typeof vm.fieldatavalue == 'string') {\r\n                var substringarr = vm.fieldatavalue.split(',')\r\n                vm.fieldatavalue = substringarr;\r\n            }\r\n            var addbracketexpsign = '+';\r\n            var Addsign = addbracketexpsign.split('');\r\n            var cursorpos = vm.GetCursorPoint();\r\n            var getdata = vm.SetValueOnCursorPosition(cursorpos);\r\n            if (getdata.length > 1) {\r\n                var checkindex = vm.InputValueArray.findIndex(x => x.FieldValueData === getdata[0].FieldValueData);\r\n                if (checkindex > -1) {\r\n                    vm.fieldatavalue.splice(checkindex, 0, {\r\n                        FieldValueData: Addsign, MatchIndex: Addsign.length, SameName: 'AddedPlus' + cursorpos\r\n                    })\r\n                    vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                    vm.InputValueArray.splice(checkindex, 0, {\r\n                        FieldValueData: Addsign, MatchIndex: Addsign.length, SameName: 'AddedPlus' + cursorpos\r\n                    })\r\n                }\r\n            } else {\r\n                vm.fieldatavalue.push({ FieldValueData: Addsign, MatchIndex: Addsign.length, SameName: 'AddedPlus' + cursorpos })\r\n                vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                vm.InputValueArray.push({ FieldValueData: Addsign, MatchIndex: Addsign.length, SameName: 'AddedPlus' + cursorpos })\r\n            }\r\n            vm.FunctionValueArray = 'No_Value';\r\n            vm.updatingvalue();\r\n            vm.updatevaluebyid();\r\n        },\r\n        Addsubtractsign() {\r\n            var vm = this;\r\n            if (typeof vm.fieldatavalue == 'string') {\r\n                var substringarr = vm.fieldatavalue.split(',')\r\n                vm.fieldatavalue = substringarr;\r\n            }\r\n            var subtractbracketexpsign = '-';\r\n            var subtractsign = subtractbracketexpsign.split('');\r\n            var cursorpos = vm.GetCursorPoint();\r\n            var getdata = vm.SetValueOnCursorPosition(cursorpos);\r\n            if (getdata.length > 1) {\r\n                var checkindex = vm.InputValueArray.findIndex(x => x.FieldValueData === getdata[0].FieldValueData);\r\n                if (checkindex > -1) {\r\n                    vm.fieldatavalue.splice(checkindex, 0, {\r\n                        FieldValueData: subtractsign, MatchIndex: subtractsign.length, SameName: 'AddedSubtract' + cursorpos\r\n                    })\r\n                    vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                    vm.InputValueArray.splice(checkindex, 0, {\r\n                        FieldValueData: subtractsign, MatchIndex: subtractsign.length, SameName: 'AddedSubtract' + cursorpos\r\n                    })\r\n                }\r\n            } else {\r\n                vm.fieldatavalue.push({ FieldValueData: subtractsign, MatchIndex: subtractsign.length, SameName: 'AddedSubtract' + cursorpos })\r\n                vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                vm.InputValueArray.push({ FieldValueData: subtractsign, MatchIndex: subtractsign.length, SameName: 'AddedSubtract' + cursorpos })\r\n            }\r\n            vm.FunctionValueArray = 'No_Value';\r\n            vm.updatingvalue();\r\n            vm.updatevaluebyid();\r\n        },\r\n        Addmultiplysign() {\r\n            var vm = this;\r\n            if (typeof vm.fieldatavalue == 'string') {\r\n                var substringarr = vm.fieldatavalue.split(',')\r\n                vm.fieldatavalue = substringarr;\r\n            }\r\n            var multiplybracketexpsign = '*';\r\n            var multiplysign = multiplybracketexpsign.split('');\r\n            var cursorpos = vm.GetCursorPoint();\r\n            var getdata = vm.SetValueOnCursorPosition(cursorpos);\r\n            if (getdata.length > 1) {\r\n                var checkindex = vm.InputValueArray.findIndex(x => x.FieldValueData === getdata[0].FieldValueData);\r\n                if (checkindex > -1) {\r\n                    vm.fieldatavalue.splice(checkindex, 0, {\r\n                        FieldValueData: multiplysign, MatchIndex: multiplysign.length, SameName: 'AddedMultiply' + cursorpos\r\n                    })\r\n                    vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                    vm.InputValueArray.splice(checkindex, 0, {\r\n                        FieldValueData: multiplysign, MatchIndex: multiplysign.length, SameName: 'AddedMultiply' + cursorpos\r\n                    })\r\n                }\r\n            } else {\r\n                vm.fieldatavalue.push({ FieldValueData: multiplysign, MatchIndex: multiplysign.length, SameName: 'AddedMultiply' + cursorpos })\r\n                vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                vm.InputValueArray.push({ FieldValueData: multiplysign, MatchIndex: multiplysign.length, SameName: 'AddedMultiply' + cursorpos })\r\n            }\r\n            vm.FunctionValueArray = 'No_Value';\r\n            vm.updatingvalue();\r\n            vm.updatevaluebyid();\r\n        },\r\n        Adddividesign() {\r\n            var vm = this;\r\n            if (typeof vm.fieldatavalue == 'string') {\r\n                var substringarr = vm.fieldatavalue.split(',')\r\n                vm.fieldatavalue = substringarr;\r\n            }\r\n            var dividebracketexpsign = '/';\r\n            var dividesign = dividebracketexpsign.split('');\r\n            var cursorpos = vm.GetCursorPoint();\r\n            var getdata = vm.SetValueOnCursorPosition(cursorpos);\r\n            if (getdata.length > 1) {\r\n                var checkindex = vm.InputValueArray.findIndex(x => x.FieldValueData === getdata[0].FieldValueData);\r\n                if (checkindex > -1) {\r\n                    vm.fieldatavalue.splice(checkindex, 0, {\r\n                        FieldValueData: dividesign, MatchIndex: dividesign.length, SameName: 'AddedDivide' + cursorpos\r\n                    })\r\n                    vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                    vm.InputValueArray.splice(checkindex, 0, {\r\n                        FieldValueData: dividesign, MatchIndex: dividesign.length, SameName: 'AddedDivide' + cursorpos\r\n                    })\r\n                }\r\n            } else {\r\n                vm.fieldatavalue.push({ FieldValueData: dividesign, MatchIndex: dividesign.length, SameName: 'AddedDivide' + cursorpos })\r\n                vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                vm.InputValueArray.push({ FieldValueData: dividesign, MatchIndex: dividesign.length, SameName: 'AddedDivide' + cursorpos })\r\n            }\r\n            vm.FunctionValueArray = 'No_Value';\r\n            vm.updatingvalue();\r\n            vm.updatevaluebyid();\r\n        },\r\n        AddSpace() {\r\n            var vm = this;\r\n            if (typeof vm.fieldatavalue == 'string') {\r\n                var substringarr = vm.fieldatavalue.split(',')\r\n                vm.fieldatavalue = substringarr;\r\n            }\r\n            var spaceaddingexp = ' ';\r\n            var addedspace = spaceaddingexp.split('');\r\n            var addedspacefordb = spaceaddingexp.replaceAll(' ', \"+' '+\");\r\n            var cursorpos = vm.GetCursorPoint();\r\n            var getdata = vm.SetValueOnCursorPosition(cursorpos);\r\n            if (getdata.length > 0) {\r\n                var checkindex = vm.InputValueArray.findIndex(x => x.FieldValueData === getdata[0].FieldValueData);\r\n                if (checkindex > -1) {\r\n                    vm.fieldatavalue.splice(checkindex, 0, {\r\n                        FieldValueData: addedspace, MatchIndex: addedspace.length, SameName: 'addedspace' + cursorpos\r\n                    })\r\n                    vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                    vm.InputValueArray.splice(checkindex, 0, {\r\n                        FieldValueData: addedspacefordb, MatchIndex: addedspace.length, SameName: 'addedspace' + cursorpos\r\n                    })\r\n                    vm.InputValueExpressionByID = vm.InputValueArray.map(x => x.FieldValueData).join('');\r\n                }\r\n            } else {\r\n                vm.fieldatavalue.push({ FieldValueData: addedspace, MatchIndex: addedspace.length, SameName: 'addedspace' + cursorpos })\r\n                vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                vm.InputValueArray.push({ FieldValueData: addedspacefordb, MatchIndex: addedspace.length, SameName: 'addedspace' + cursorpos })\r\n                vm.InputValueExpressionByID = vm.InputValueArray.map(x => x.FieldValueData).join('');\r\n            }\r\n            vm.FunctionValueArray = 'No_Value';\r\n            vm.updatingvalue();\r\n        },\r\n        ResetExpression() {\r\n            var vm = this;\r\n            vm.FieldsValue = '';\r\n            vm.FunctionValue = '';\r\n            vm.AddBracketValue = '';\r\n            vm.SubtractBracketValue = '';\r\n            vm.MultplyBracketValue = '';\r\n            vm.DivideBracketValue = '';\r\n            vm.OpenBracketExpValue = '';\r\n            vm.CloseBracketExpValue = '';\r\n            vm.modulelisting.splice(0);\r\n            vm.Functionskey.splice(0);\r\n            vm.InputValueExpression = '';\r\n            vm.InputValueExpressionByID = '';\r\n            vm.InputValueArray = [];\r\n            vm.FieldData = [];\r\n            vm.fieldatavalue = [];\r\n            vm.watchvalue = true;\r\n            vm.updateexpresion = false;\r\n            vm.verifiedvaluedata = null;\r\n            vm.FunctionValueArray = 'No_Value';\r\n            vm.GetCommaSeparatedValue = '';\r\n            vm.countbyfield = 0;\r\n            vm.modelconditionexpression = '';\r\n            vm.Functionkey = null;\r\n            vm.ShowDescriptionForFunction = null;\r\n            vm.conditionexpression = false;\r\n            vm.checkbycondition = 0;\r\n            vm.substringvalue = '';\r\n        },\r\n        updatevaluebyid(elem, checkindex, getdata, cursorpos) {\r\n            var vm = this;\r\n            if (vm.FunctionValueArray == vm.substringvalue) {\r\n                if (typeof vm.InputValueArray == 'object') {\r\n                    var convertarrid = String(vm.InputValueArray.map(x => x.FieldValueData));\r\n                    vm.InputValueArray = convertarrid\r\n                }\r\n                if (vm.GetCommaSeparatedValue == \"CommaSeparatedValue\" && vm.countbyfield == 0 && !vm.conditionexpression) {\r\n                    var firstindex = vm.InputValueArray.indexOf(\",\") + 1;\r\n                    var secondindex = vm.InputValueArray.indexOf(\")\")\r\n                    vm.countbyfield = vm.countbyfield + 1 + 1;\r\n                }\r\n                else if (vm.GetCommaSeparatedValue == \"CommaSeparatedValue\" && vm.countbyfield > 0 && !vm.conditionexpression) {\r\n                    var firstindex = vm.InputValueArray.indexOf(vm.InputValueArray.split(\",\")[vm.countbyfield]);\r\n                    var secondindex = vm.InputValueArray.indexOf(\")\")\r\n                    vm.countbyfield++;\r\n                }\r\n                else {\r\n                    var firstindex = vm.InputValueArray.indexOf(\"(\") + 1;\r\n                    var secondindex = vm.InputValueArray.indexOf(\")\")\r\n                }\r\n                vm.substringvalue = vm.InputValueArray.substring(firstindex, secondindex);\r\n                if (vm.substringvalue.includes(',')) {\r\n                    var substringarrid = vm.substringvalue.split(',')\r\n                    vm.substringvalue = substringarrid;\r\n                    vm.InputValueExpressionByID = vm.InputValueArray.replace(vm.substringvalue[0], vm.FieldTableNameValue)\r\n                    vm.InputValueArray = [];\r\n                    // vm.InputValueArray = vm.InputValueExpressionByID;\r\n                    vm.InputValueArray.push({\r\n                        FieldValueData: vm.InputValueExpressionByID,\r\n                        MatchIndex: vm.InputValueExpressionByID.length,\r\n                        SameName: 'Field_Added' + vm.InputValueExpressionByID.length,\r\n                        CustomFieldId: elem.CustomFieldId\r\n                    });\r\n                    vm.GetCommaSeparatedValue = \"CommaSeparatedValue\"\r\n                    $(\"#Submitbtn\").addClass('disabled');\r\n                } else {\r\n                    vm.InputValueExpressionByID = vm.InputValueArray.replace(vm.substringvalue, vm.FieldTableNameValue)\r\n                    // vm.InputValueArray = vm.InputValueExpressionByID;\r\n                    vm.InputValueArray = [];\r\n                    vm.InputValueArray.push({\r\n                        FieldValueData: vm.InputValueExpressionByID,\r\n                        MatchIndex: vm.InputValueExpressionByID.length,\r\n                        SameName: 'Field_Added' + vm.InputValueExpressionByID.length,\r\n                        CustomFieldId: elem.CustomFieldId\r\n                    });\r\n                    vm.substringvalue = '';\r\n                    $(\"#Submitbtn\").addClass('disabled');\r\n                }\r\n                vm.modelconditionexpression = '';\r\n                vm.conditionexpression = false;\r\n                vm.checkbycondition = 0;\r\n            }\r\n            else if (elem != undefined) {\r\n                if (vm.fieldadded) {\r\n                    var checkindex = vm.InputValueArray.findIndex(x => x.FieldValueData === getdata[0].FieldValueData);\r\n                    if (checkindex > -1) {\r\n                        vm.InputValueArray.splice(checkindex, 0, {\r\n                            FieldValueData: vm.FieldTableNameValue,\r\n                            MatchIndex: vm.$t((elem.DisplayName != null && elem.DisplayName != \"\") ? elem.DisplayName : elem.FieldName).length,\r\n                            SameName: 'Field_Added' + cursorpos,\r\n                            CustomFieldId: elem.CustomFieldId\r\n                        }\r\n                        )\r\n                        vm.InputValueExpressionByID = vm.InputValueArray.map(x => x.FieldValueData).join('')\r\n                    }\r\n                }\r\n                else {\r\n                    vm.InputValueArray.push({\r\n                        FieldValueData: vm.FieldTableNameValue,\r\n                        MatchIndex: vm.$t((elem.DisplayName != null && elem.DisplayName != \"\") ? elem.DisplayName : elem.FieldName).length,\r\n                        SameName: 'Field_Added' + cursorpos,\r\n                        CustomFieldId: elem.CustomFieldId\r\n                    });\r\n                    vm.InputValueExpressionByID = vm.InputValueArray.map(x => x.FieldValueData).join('')\r\n                }\r\n            }\r\n            else {\r\n                vm.InputValueExpressionByID = vm.InputValueArray.map(x => x.FieldValueData).join('')\r\n            }\r\n        },\r\n        updatingvalue() {\r\n            var vm = this;\r\n            if (typeof vm.InputValueExpression == 'object') {\r\n                var convertstr = String(vm.InputValueExpression)\r\n                vm.InputValueExpression = convertstr;\r\n            }\r\n            else {\r\n                vm.InputValueExpression = vm.FieldsValue;\r\n            }\r\n        },\r\n        deleteuserinput(event) {\r\n            var vm = this;\r\n            const key = event.key;\r\n            if (event.code === 'Space') { vm.AddSpace(); }\r\n            else if (event.keyCode >= 9 && event.keyCode <= 45 || event.keyCode > 90 && event.keyCode <= 93 || event.keyCode >= 112 && event.keyCode <= 167) {\r\n                event.preventDefault();\r\n            }\r\n            else if (key === 'Backspace' || event.keyCode === 8 || event.keyCode === 46) {\r\n                var cursorposition = vm.GetCursorPoint();\r\n                cursorposition = cursorposition - 1;\r\n                let assignindex;\r\n                vm.fieldatavalue.forEach(item => {\r\n                    if (item.MatchIndex < cursorposition) {\r\n                        assignindex = cursorposition - item.MatchIndex;\r\n                        cursorposition = assignindex;\r\n                    }\r\n                    else {\r\n                        if (cursorposition != 0) {\r\n                            let getindexofexp = vm.fieldatavalue.findIndex(x => x.SameName === item.SameName);\r\n                            let getfieldindex = vm.FieldData.findIndex(f => f.CustomFieldId === item.CustomFieldId);\r\n                            if (getindexofexp > -1) {\r\n                                vm.fieldatavalue.splice(getindexofexp, 1);\r\n                                vm.InputValueArray.splice(getindexofexp, 1);\r\n                                if (getfieldindex > -1) {\r\n                                    vm.FieldData.splice(getfieldindex, 1);\r\n                                }\r\n                                if (vm.fieldatavalue.length > 0) {\r\n                                    vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                                } else {\r\n                                    vm.FieldsValue = vm.fieldatavalue.join('');\r\n                                    vm.substringvalue = '';\r\n                                }\r\n                                cursorposition = 0;\r\n                                vm.Functionkey = null;\r\n                            }\r\n                        }\r\n                    }\r\n                })\r\n                vm.updatingvalue();\r\n                vm.updatevaluebyid();\r\n            }\r\n            else {\r\n                var cursorpos = vm.GetCursorPoint();\r\n                var getdata = vm.SetValueOnCursorPosition(cursorpos);\r\n                if (getdata.length > 1) {\r\n                    var checkindex = vm.InputValueArray.findIndex(x => x.FieldValueData === getdata[0].FieldValueData);\r\n                    if (checkindex > -1) {\r\n                        vm.fieldatavalue.splice(checkindex, 0, {\r\n                            FieldValueData: key, MatchIndex: key.length, SameName: 'User-input' + cursorpos\r\n                        })\r\n                        vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                        vm.InputValueArray.splice(checkindex, 0, {\r\n                            FieldValueData: key, MatchIndex: key.length, SameName: 'User-input' + cursorpos\r\n                        })\r\n                    }\r\n                } else {\r\n                    vm.fieldatavalue.push({ FieldValueData: key, MatchIndex: key.length, SameName: 'User-input' + cursorpos });\r\n                    vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                    vm.InputValueArray.push({ FieldValueData: key, MatchIndex: key.length, SameName: 'User-input' + cursorpos });\r\n                }\r\n                vm.updatingvalue();\r\n                vm.updatevaluebyid();\r\n            }\r\n            vm.buttons[0].class = \"btn btn-success mr-2 my-sm-0 disabled\";\r\n            event.preventDefault();\r\n        },\r\n        UserInputSelection(userinput) {\r\n            var vm = this;\r\n            vm.selecteduserinput = userinput.target.selectionStart;\r\n            vm.selecteduserinputbyid = vm.InputValueArray.length;\r\n        },\r\n        ExpresssionDataValue(data, fieldsdata) {\r\n            var vm = this;\r\n            vm.ResetExpression();\r\n            data.forEach(dataitem => {\r\n                vm.ExpressionIDvalue = dataitem.ExpressionID;\r\n                // vm.modelfieldname = dataitem.ExpressionName;\r\n                vm.FormSchema[0].Data[0].value = dataitem.ExpressionName;\r\n                vm.fieldatavalue.push({ FieldValueData: dataitem.ExpressionDisplay, MatchIndex: dataitem.ExpressionDisplay.length, SameName: 'EditedExp' });\r\n                vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                vm.InputValueArray.push({ FieldValueData: dataitem.Expression, MatchIndex: dataitem.Expression.length, SameName: 'EditedExp' })\r\n                vm.InputValueExpressionByID = vm.InputValueArray.map(x => x.FieldValueData).join('')\r\n                vm.updatingvalue();\r\n            })\r\n            fieldsdata.forEach(item => {\r\n                vm.FieldData.push({ CustomFieldId: item.CustomFieldId, FieldName: item.FieldName, ColumnIndex: item.ColumnIndex });\r\n            })\r\n        },\r\n        VerifyExpression() {\r\n            var vm = this;\r\n            var jsondata = {\r\n                \"Info\": {\r\n                    \"Expression\": encodeURIComponent(vm.InputValueExpressionByID),\r\n                    \"MODULENAME\": vm.customreportparameters.Modulename,\r\n                    \"SUBMODULECODE\": vm.customreportparameters.Submodulecode,\r\n                    \"FunctionExpression\": vm.Functionkey,\r\n                    \"FIELDS\": vm.FieldData\r\n                }\r\n            }\r\n            var jsonvalue = `JsonData=${JSON.stringify(jsondata)}`;\r\n            vm.isLoading = true;\r\n            ExpressionDataService.VerifyExpressionFromDB(jsonvalue).then(res => {\r\n                if (res.data.Result == \"True\") {\r\n                    vm.verifiedvaluedata = 1;\r\n                    // $(\"#verifiedid\").removeClass('d-none');\r\n                    // $(\"#Submitbtn\").removeClass('disabled');\r\n                    vm.isLoading = false;\r\n                    vm.buttons[0].class = \"btn btn-success mr-2 my-sm-0\";\r\n                    vm.verifiedvalue = true;\r\n                    // setTimeout(function () {\r\n                    //     $(\"#verifiedid\").addClass('d-none');\r\n                    // }, 3000);\r\n                }\r\n                else {\r\n                    // $(\"#verifiedid\").removeClass('d-none');\r\n                    vm.verifyErrorMsg = res.data.Error\r\n                    vm.verifiedvaluedata = 0;\r\n                    vm.isLoading = false;\r\n                    // setTimeout(function () {\r\n                    //     $(\"#verifiedid\").addClass('d-none');\r\n                    // }, 3000);\r\n                }\r\n            }).catch(err => {\r\n                console.log(err);\r\n            })\r\n        },\r\n        SubmitExpression() {\r\n            var vm = this;\r\n            var InavalidExpression = true;\r\n            if (!vm.editexpressionvalue) {\r\n                var checkeditfieldexist = vm.Columnlist.findIndex(x => x.FieldName === vm.FormSchema[0].Data[0].value);\r\n                if (checkeditfieldexist != -1) {\r\n                    InavalidExpression = false;\r\n                    vm.ShowAlert(vm.$t(\"ExpressionExist\"), 'failure', true, vm.$t('Alert'));\r\n                } else { InavalidExpression = true }\r\n            }\r\n            if (InavalidExpression) {\r\n                if (vm.verifiedvalue && vm.FormSchema[0].Data[0].value != '') {\r\n                    this.$emit('VerifiedExpressionData', {\r\n                        ExpressionID: vm.ExpressionIDvalue,\r\n                        FieldValue: vm.FormSchema[0].Data[0].value,\r\n                        VerifiedExpression: vm.InputValueExpressionByID,\r\n                        ExpressionFieldArray: vm.FieldData,\r\n                        ExpressionDisplay: vm.InputValueExpression,\r\n                        Functionkey: vm.Functionkey\r\n                    })\r\n                    vm.verifiedvalue = false;\r\n                }\r\n            }\r\n        },\r\n        CancelExpressionUI() {\r\n            var vm = this;\r\n            vm.close();\r\n        },\r\n        closed() {\r\n            $(\"#verifiedid\").alert('close');\r\n        },\r\n        GetCursorPoint(e) {\r\n            var vm = this;\r\n            var cursorpos1 = document.getElementById(\"txtarea\");\r\n            cursorpos1.focus();\r\n            var cursorpos = document.getElementById(\"txtarea\").selectionStart;\r\n            cursorpos = cursorpos + 1;\r\n            return cursorpos;\r\n        },\r\n        SetValueOnCursorPosition(cursorpos) {\r\n            var vm = this;\r\n            var returndata = []\r\n            var assignindex;\r\n            vm.InputValueArray.forEach(item => {\r\n                if (item.MatchIndex < cursorpos) {\r\n                    assignindex = cursorpos - item.MatchIndex;\r\n                    cursorpos = assignindex;\r\n                }\r\n                else if (item.MatchIndex > cursorpos || cursorpos == 1) {\r\n                    returndata.push(item)\r\n                }\r\n            })\r\n            return returndata;\r\n        },\r\n        AddConditionExpression() {\r\n            var vm = this;\r\n            vm.conditionexpression = true;\r\n            if (vm.Functionkey == 'Date add' && vm.GetCommaSeparatedValue == 'CommaSeparatedValue') {\r\n                vm.conditionexpression = false;\r\n                vm.checkbycondition = vm.checkbycondition + 1;\r\n            }\r\n            vm.Addfields(vm.modelconditionexpression);\r\n        },\r\n        DescriptionForFunction() {\r\n            var vm = this;\r\n            if (vm.Functionkey == 'Date diff') {\r\n                vm.ShowDescriptionForFunction = 'Interval(Year,Month,Day)';\r\n            }\r\n            else if (vm.Functionkey == 'Date add') {\r\n                vm.ShowDescriptionForFunction = 'Interval(Year,Month,Day) Number(1,2,3,nth.)';\r\n            }\r\n            else if (vm.Functionkey == 'Date name') {\r\n                vm.ShowDescriptionForFunction = 'Interval(Year,Month,Day)';\r\n            }\r\n            else if (vm.Functionkey == 'Date part') {\r\n                vm.ShowDescriptionForFunction = 'Interval(Year,Month,Day)';\r\n            }\r\n            else if (vm.Functionkey == 'If') {\r\n                vm.ShowDescriptionForFunction = 'BooleanExpression,True Value, False Value';\r\n            }\r\n        },\r\n        ListFiltering() {\r\n            var vm = this;\r\n            var filterinput = vm.MainSearchmodel;\r\n            if (filterinput != null && filterinput != \"\") {\r\n                $(\".column-collapse\").addClass(\"show\");\r\n            }\r\n            else {\r\n                $(\".column-collapse\").removeClass(\"show\");\r\n            }\r\n            var searchcol = [];\r\n            var searchfilter = [];\r\n            vm.modulelisting.forEach((item, index) => {\r\n                vm.modulelisting[index].forEach((indexitem) => {\r\n                    searchfilter.push(indexitem);\r\n                    searchcol = searchfilter.filter(searchitem => {\r\n                        var displayMainColname = (searchitem.DisplayName != null) ? searchitem.DisplayName : searchitem.FieldName;\r\n                        return displayMainColname.replace(/\\W/g, \"\").toLowerCase().includes(filterinput.replace(/\\W/g, \"\").toLowerCase());\r\n                    })\r\n                })\r\n                vm.searchColumnfilter[index] = searchcol;\r\n                searchfilter = [];\r\n            })\r\n            let count = 0;\r\n            for (let filteritem in vm.searchColumnfilter) {\r\n                if (vm.searchColumnfilter[filteritem].length > 0) {\r\n                    count++;\r\n                }\r\n            }\r\n            if (count > 0) {\r\n                vm.SearchNoRecord = false\r\n            } else { vm.SearchNoRecord = true; }\r\n            return vm.searchColumnfilter;\r\n        }\r\n    }\r\n}\r\n</script>\r\n<template>\r\n    <div id=\"showcalculatedfield\" role=\"dialog\" class=\"modal my-popups centre fade\" v-cloak>\r\n        <div role=\"document\" class=\"modal-dialog\">\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header mheader-user\">\r\n                    <button type=\"button\" class=\"close\" v-on:click=\"close()\">\r\n                        <em aria-hidden=\"true\" class=\"fa fa-times\"></em>\r\n                    </button>\r\n                    <h4 id=\"myModalLabel\" class=\"modal-title\">{{ $t('customField') }}</h4>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                    <loader :is-visible=\"isLoading\"></loader>\r\n                    <dynamic-form lang=\"en\" :buttons=\"buttons\" :schema=\"FormSchema\" v-on:OnSubmit=\"SubmitExpression()\">\r\n                        <template v-slot:tgslot-CalculatedUIList=\"{ data }\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-12 p-0 float-left\">\r\n                                    <div class=\"col-lg-4 mb-0 float-left px-3\">\r\n                                        <div class=\"heading-border mb-4\">\r\n                                            <h5 class=\"h5\">\r\n                                                <span class=\"spngropuname\">\r\n                                                    {{ $t('Functions') }}\r\n                                                    <div class=\"w3-container w3-border w3-large\"></div>\r\n                                                </span>\r\n                                            </h5>\r\n                                        </div>\r\n                                        <div class=\"accordion md-accordion left-filter\" id=\"accordionEx1\">\r\n                                            <div class=\"card-panel\" style=\"border-top:1px solid #c7c7c7;\">\r\n                                                <div class=\"card\" v-for=\"(name, index) in FunctionsName\" :key=\"index\">\r\n                                                    <div class=\"card-header\" role=\"tab\" :id=\"'MainFunction' + index\">\r\n                                                        <h5 class=\"mb-0\"><a data-toggle=\"collapse\"\r\n                                                                data-parent=\"#accordionEx1\"\r\n                                                                :href=\"'#FucntionCollapse' + index\" :aria-expanded=\"index == 0 ? true : false\"\r\n                                                                :aria-controls=\"'FucntionCollapse' + index\" :class=\"index == 0 ? '' : 'collapsed'\"><em\r\n                                                                    class=\"fa fa fa-file-text-o\"\r\n                                                                    aria-hidden=\"true\"></em><span class=\"font-weight-bold\">\r\n                                                                    {{ name.FuncType }}</span><em\r\n                                                                    class=\"fa fa-angle-down rotate-icon\"\r\n                                                                    aria-hidden=\"true\"></em></a>\r\n                                                        </h5>\r\n                                                    </div>\r\n                                                    <div :id=\"'FucntionCollapse' + index\" :class=\"index == 0 ? 'collapse multi-collapse show' : 'collapse multi-collapse'\"\r\n                                                        role=\"tabpanel\" :aria-labelledby=\"'MainFunction' + index\"\r\n                                                        data-parent=\"#accordionEx1\">\r\n                                                        <div class=\"card-body p-0 customScrollForLeftBar llt\"\r\n                                                            style=\"max-height:300px;\">\r\n                                                            <div class=\"form-group\">\r\n                                                                <ul class=\"nav nav-pills flex-column left-tab responivecustomtab lefttabiconfix\"\r\n                                                                    style=\"max-height: 214px; overflow: auto; display: block;\">\r\n                                                                    <template v-for=\"element in Functionskey[index]\">\r\n                                                                        <li class=\"nav-item parent-element\">\r\n                                                                            <span class=\"nav-link left-menu px-4 \">\r\n                                                                                <em class=\"fa fa-bullhorn float-left\"\r\n                                                                                    aria-hidden=\"true\"></em>\r\n                                                                                <span class=\"text-truncate float-left\"\r\n                                                                                    style=\"width: 55%;\"\r\n                                                                                    :data-toggle-tooltip=\"element.Keys\"\r\n                                                                                    :title=\"element.Keys\">\r\n                                                                                    {{ element.Keys }}\r\n                                                                                </span>\r\n                                                                                <a href=\"javascript:;\"><em\r\n                                                                                        class=\"fa fa-plus float-right mt-1 text-success pr-0\"\r\n                                                                                        aria-hidden=\"true\"\r\n                                                                                        @click=\"AddFunctionsfields(element, $event, index)\"></em></a>\r\n                                                                            </span>\r\n                                                                        </li>\r\n                                                                    </template>\r\n                                                                </ul>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-lg-4 mb-0 float-left px-3\">\r\n                                        <div class=\"heading-border\">\r\n                                            <h5 class=\"h5\">\r\n                                                <span class=\"spngropuname\">\r\n                                                    {{ $t('Expression') }}\r\n                                                    <a title=\"@Resources.Edit\" href=\"javascript:;\"\r\n                                                        class=\"editgroupname d-none\"><em\r\n                                                            class=\"fa fa-pencil pl-2 text-success\"></em></a>\r\n                                                </span>\r\n                                            </h5>\r\n                                        </div>\r\n                                        <div class=\"border p-3 mt-4 float-left\">\r\n                                            <div class=\"row\">\r\n                                                <div class=\"col-md-11 mb-2\">\r\n                                                    <input :class=\"Functionkey == 'Date diff' || Functionkey == 'Date add' || Functionkey == 'Date name' || Functionkey == 'Date part' || Functionkey == 'If'\r\n                                                        ? 'form-control' : 'form-control d-none'\" type=\"text\"\r\n                                                        v-model=\"modelconditionexpression\"\r\n                                                        placeholder=\"Enter Your Conditions\" />\r\n                                                    <small\r\n                                                        :class=\"Functionkey == 'Date diff' || Functionkey == 'Date add' || Functionkey == 'Date name' || Functionkey == 'Date part' || Functionkey == 'If' ? 'text-danger' : 'd-none'\">{{\r\n                                                            ShowDescriptionForFunction }}</small>\r\n                                                </div>\r\n                                                <div class=\"col-md-1 p-0 my-1\">\r\n                                                    <a :class=\"Functionkey == 'Date diff' || Functionkey == 'Date add' || Functionkey == 'Date name' || Functionkey == 'Date part' || Functionkey == 'If'\r\n                                                        ? 'fa fa-play text-success' : 'fa fa-play text-success d-none'\"\r\n                                                        @click=\"AddConditionExpression\"></a>\r\n                                                </div>\r\n                                            </div>\r\n                                            <textarea class=\"border background-white float-left w-100 p-3\" id=\"txtarea\"\r\n                                                style=\"min-height: 250px;\" v-model=\"InputValueExpression\"\r\n                                                @keydown=\"deleteuserinput($event)\" @mouseup=\"GetCursorPoint($event)\"\r\n                                                v-on:select=\"UserInputSelection($event)\"></textarea>\r\n                                            <div class=\"expressionbx mb-4 bg-grey text-right float-left w-100 py-2 border\">\r\n                                                <a class=\"fa fa-keyboard-o\" v-on:click=\"AddSpace($event)\"></a>\r\n                                                <a href=\"javascript:;\" v-on:click=\"Addplussign($event)\">+</a>\r\n                                                <a href=\"javascript:;\" v-on:click=\"Addsubtractsign($event)\">-</a>\r\n                                                <a href=\"javascript:;\" v-on:click=\"Addmultiplysign($event)\">*</a>\r\n                                                <a href=\"javascript:;\" v-on:click=\"Adddividesign($event)\">/</a>\r\n                                                <a href=\"javascript:;\" v-on:click=\"Addopenbracketsign($event)\">(</a>\r\n                                                <a href=\"javascript:;\" v-on:click=\"Addclosebracketsign($event)\">)</a>\r\n                                            </div>\r\n\r\n                                            <div class=\"col-12 p-0 float-left\">\r\n                                                <div class=\"row flex-row-reverse\">\r\n                                                    <div class=\"col-12 p-0 float-left\" id=\"verifiedid\">\r\n                                                        <div class=\"alert alert-danger alert-dismissible fade show\"\r\n                                                            role=\"alert\" v-if=\"verifiedvaluedata == 0\">\r\n                                                            {{ verifyErrorMsg }}<button type=\"button\" class=\"close\"\r\n                                                                data-dismiss=\"alert\" @click=\"closed\" aria-label=\"Close\">\r\n                                                                <span aria-hidden=\"true\">×</span>\r\n                                                            </button>\r\n                                                        </div>\r\n                                                        <div class=\"alert alert-success alert-dismissible fade show\"\r\n                                                            role=\"alert\" v-if=\"verifiedvaluedata == 1\">\r\n\r\n                                                            {{ $t(\"ExpressionVerify\") }}<button type=\"button\" class=\"close\"\r\n                                                                data-dismiss=\"alert\" @click=\"closed\" aria-label=\"Close\">\r\n                                                                <span aria-hidden=\"true\">×</span>\r\n                                                            </button>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"col-lg-12 text-right\">\r\n                                                        <a href=\"javascript:;\"\r\n                                                            class=\"btn btn-success ancsaveuserticket mr-2\"\r\n                                                            v-on:click=\"VerifyExpression\">\r\n                                                            <em class=\"fa fa-check pr-2\"></em>Verify</a>\r\n                                                        <a href=\"javascript:;\" class=\"btn btn-danger ancsaveuserticket\"\r\n                                                            v-on:click=\"ResetExpression\">\r\n                                                            <em class=\"fa fa-refresh pr-2\"></em>Reset</a>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-lg-4 mb-0 float-left px-3\">\r\n                                        <div class=\"heading-border mb-4\">\r\n                                            <h5 class=\"h5\">\r\n                                                <span class=\"spngropuname\">\r\n                                                    {{ $t('Columns') }}\r\n                                                    <div class=\"w3-container w3-border w3-large\"></div>\r\n                                                </span>\r\n                                            </h5>\r\n                                        </div>\r\n                                        <div class=\"mb-0 d-lg-block p-2 border\">\r\n                                            <div class=\"input-group customsearchbox\">\r\n                                                <input type=\"text\" maxlength=\"50\" v-on:keyup=\"ListFiltering\"\r\n                                                    id=\"searchinput\" v-model=\"MainSearchmodel\" placeholder=\"Search by Name\"\r\n                                                    class=\"form-control searchcustomfilter border-right-0\"\r\n                                                    autocomplete=\"off\">\r\n                                                <div class=\"input-group-append\">\r\n                                                    <span class=\"input-group-text bg-transparent bg-white border-left-0\">\r\n                                                    </span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"accordion md-accordion left-filter\" id=\"accordionEx2\">\r\n                                            <div class=\"card-panel\" style=\"border-top:1px solid #c7c7c7;\">\r\n                                                <div class=\"card\" v-for=\"(name, index) in JsonColumns\" :key=\"index\">\r\n                                                    <div class=\"card-header\" role=\"tab\" :id=\"'MainColumn' + index\">\r\n                                                        <h5 class=\"mb-0\"><a data-toggle=\"collapse\"\r\n                                                                data-parent=\"#accordionEx2\" :href=\"'#ColumnCollapse' + index\"\r\n                                                                :aria-expanded=\"index == 0 ? true : false\"\r\n                                                                :aria-controls=\"'ColumnCollapse' + index\" :class=\"index == 0 ? '' : 'collapsed'\"><em\r\n                                                                    class=\"fa fa fa-file-text-o\"\r\n                                                                    aria-hidden=\"true\"></em><span class=\"font-weight-bold\">\r\n                                                                    {{ GetLocalizedValue(name.SubModule) }}</span><em\r\n                                                                    class=\"fa fa-angle-down rotate-icon\"\r\n                                                                    aria-hidden=\"true\"></em></a>\r\n                                                        </h5>\r\n                                                    </div>\r\n                                                    <div :id=\"'ColumnCollapse' + index\"\r\n                                                        :class=\"index == 0 ? 'collapse multi-collapse column-collapse show':'collapse multi-collapse column-collapse'\" role=\"tabpanel\"\r\n                                                        :aria-labelledby=\"'MainColumn' + index\" data-parent=\"#accordionEx2\">\r\n                                                        <div class=\"card-body p-0 customScrollForLeftBar llt\"\r\n                                                            style=\"max-height:300px;\">\r\n                                                            <div class=\"form-group\">\r\n                                                                <ul class=\"nav nav-pills flex-column left-tab responivecustomtab lefttabiconfix\"\r\n                                                                    style=\"max-height: 305px; overflow: auto; display: block;\">\r\n                                                                    <template\r\n                                                                        v-for=\"element in searchColumnfilter.length == 0 ? modulelisting[index] : searchColumnfilter[index]\">\r\n                                                                        <li class=\"nav-item parent-element\">\r\n                                                                            <span class=\"nav-link left-menu px-4 \">\r\n                                                                                <em :class=\"element.dttype[0].icon + ' ' + 'float-left'\"\r\n                                                                                    aria-hidden=\"true\"></em>\r\n                                                                                <span class=\"text-truncate float-left\"\r\n                                                                                    style=\"width: 55%;\"\r\n                                                                                    :data-toggle-tooltip=\"element.FieldName\"\r\n                                                                                    :title=\"element.FieldName\">\r\n                                                                                    {{\r\n                                                                                        GetLocalizedValue((element.DisplayName\r\n                                                                                            !=\r\n                                                                                            null &&\r\n                                                                                            element.DisplayName != \"\") ?\r\n                                                                                            element.DisplayName : element.FieldName)\r\n                                                                                    }}\r\n                                                                                </span>\r\n                                                                                <a href=\"javascript:;\"><em\r\n                                                                                        class=\"fa fa-plus float-right mt-1 text-success pr-0\"\r\n                                                                                        aria-hidden=\"true\"\r\n                                                                                        @click=\"Addfields(element, $event, index)\"></em></a>\r\n                                                                            </span>\r\n                                                                        </li>\r\n                                                                    </template>\r\n                                                                </ul>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div v-if=\"SearchNoRecord\"\r\n                                            class=\"text-center text-danger d-flex align-items-center justify-content-center norecs pt-2\">\r\n                                            {{\r\n                                                $t(\"NoRecordfound\") }}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        \r\n                    \r\n                    <!-- <Form v-slot=\"{ values, meta }\" ref=\"form\">\r\n                        <div class=\"col-12 mt-0 mb-4 p-0\">\r\n                            <div class=\"form-group\">\r\n                                <label>{{ $t('fieldName') }}<span class=\"text-danger\">*</span></label>\r\n                                <Field name=\"modelfieldname\" :rules=\"{ 'required': true }\" label=\"Field Name\"\r\n                                    v-slot=\"{ field, errorMessage, meta }\" v-model=\"modelfieldname\">\r\n                                    <input v-bind=\"field\" placeholder=\"Enter Field Name\"\r\n                                        :class=\"{ 'form-control': true, 'is-invalid': meta.touched && !meta.valid }\"\r\n                                        type=\"text\" maxlength=\"50\" />\r\n                                    <span name=\"modelfieldname\" v-if=\"meta.touched && !meta.valid\"\r\n                                        class=\"invalid-feedback d-block\">{{\r\n                                            errorMessage\r\n                                        }}</span>\r\n                                </Field>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </Form> -->\r\n                    <!-- <div class=\"row\">\r\n                        <div class=\"col-12 p-0 float-left\">\r\n                            <div class=\"col-lg-4 mb-0 float-left px-3\">\r\n                                <div class=\"heading-border mb-4\">\r\n                                    <h5 class=\"h5\">\r\n                                        <span class=\"spngropuname\">\r\n                                            {{ $t('Functions') }}\r\n                                            <div class=\"w3-container w3-border w3-large\"></div>\r\n                                        </span>\r\n                                    </h5>\r\n                                </div>\r\n                                <div class=\"accordion md-accordion left-filter\" id=\"accordionEx\">\r\n                                    <div class=\"card-panel\" style=\"border-top:1px solid #c7c7c7;\">\r\n                                        <div class=\"card\" v-for=\"(name, index) in FunctionsName\" :key=\"index\">\r\n                                            <div class=\"card-header\" role=\"tab\" :id=\"'MainFunction' + index\">\r\n                                                <h5 class=\"mb-0\"><a data-toggle=\"collapse\" data-parent=\"#accordionEx\"\r\n                                                        :href=\"'#FucntionCollapse' + index\" aria-expanded=\"false\"\r\n                                                        :aria-controls=\"'FucntionCollapse' + index\" class=\"\"><em\r\n                                                            class=\"fa fa fa-file-text-o\" aria-hidden=\"true\"></em><span\r\n                                                            class=\"font-weight-bold\">\r\n                                                            {{ name.FuncType }}</span><em\r\n                                                            class=\"fa fa-angle-down rotate-icon\"\r\n                                                            aria-hidden=\"true\"></em></a>\r\n                                                </h5>\r\n                                            </div>\r\n                                            <div :id=\"'FucntionCollapse' + index\" class=\"collapse multi-collapse\"\r\n                                                role=\"tabpanel\" :aria-labelledby=\"'MainFunction' + index\"\r\n                                                data-parent=\"#accordionEx\">\r\n                                                <div class=\"card-body p-0 customScrollForLeftBar llt\"\r\n                                                    style=\"max-height:300px;\">\r\n                                                    <div class=\"form-group\">\r\n                                                        <ul class=\"nav nav-pills flex-column left-tab responivecustomtab lefttabiconfix\"\r\n                                                            style=\"max-height: 214px; overflow: auto; display: block;\">\r\n                                                            <template v-for=\"element in Functionskey[index]\">\r\n                                                                <li class=\"nav-item parent-element\">\r\n                                                                    <span class=\"nav-link left-menu px-4 \">\r\n                                                                        <em class=\"fa fa-bullhorn float-left\"\r\n                                                                            aria-hidden=\"true\"></em>\r\n                                                                        <span class=\"text-truncate float-left\"\r\n                                                                            style=\"width: 55%;\"\r\n                                                                            :data-toggle-tooltip=\"element.Keys\"\r\n                                                                            :title=\"element.Keys\">\r\n                                                                            {{ element.Keys }}\r\n                                                                        </span>\r\n                                                                        <a href=\"#\"><em\r\n                                                                                class=\"fa fa-plus float-right mt-1 text-success pr-0\"\r\n                                                                                aria-hidden=\"true\"\r\n                                                                                @click=\"AddFunctionsfields(element, $event, index)\"></em></a>\r\n                                                                    </span>\r\n                                                                </li>\r\n                                                            </template>\r\n                                                        </ul>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-lg-4 mb-0 float-left px-3\">\r\n                                <div class=\"heading-border\">\r\n                                    <h5 class=\"h5\">\r\n                                        <span class=\"spngropuname\">\r\n                                            {{ $t('Expression') }}\r\n                                            <a title=\"@Resources.Edit\" href=\"javascript:;\" class=\"editgroupname d-none\"><em\r\n                                                    class=\"fa fa-pencil pl-2 text-success\"></em></a>\r\n                                        </span>\r\n                                    </h5>\r\n                                </div>\r\n                                <div class=\"border p-3 mt-4 float-left\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-md-11 mb-2\">\r\n                                            <input :class=\"Functionkey == 'Datediff' || Functionkey == 'Dateadd' || Functionkey == 'Datename' || Functionkey == 'Datepart' || Functionkey == 'If'\r\n                                                ? 'form-control' : 'form-control d-none'\" type=\"text\"\r\n                                                v-model=\"modelconditionexpression\" placeholder=\"Enter Your Conditions\" />\r\n                                            <small :class=\"Functionkey == 'Datediff' || Functionkey == 'Dateadd' || Functionkey == 'Datename' || Functionkey == 'Datepart' || Functionkey == 'If' ? 'text-danger': 'd-none'\">{{ ShowDescriptionForFunction }}</small>\r\n                                        </div>\r\n                                        <div class=\"col-md-1 p-0 my-1\">\r\n                                            <a :class=\"Functionkey == 'Datediff' || Functionkey == 'Dateadd' || Functionkey == 'Datename' || Functionkey == 'Datepart' || Functionkey == 'If'\r\n                                                ? 'fa fa-play text-success' : 'fa fa-play text-success d-none'\"\r\n                                                @click=\"AddConditionExpression\"></a>\r\n                                        </div>\r\n                                    </div>\r\n                                    <textarea class=\"border background-white float-left w-100 p-3\" id=\"txtarea\"\r\n                                        style=\"min-height: 250px;\" v-model=\"InputValueExpression\"\r\n                                        @keydown=\"deleteuserinput($event)\" @mouseup=\"GetCursorPoint($event)\"\r\n                                        v-on:select=\"UserInputSelection($event)\"></textarea>\r\n                                    <div class=\"expressionbx mb-4 bg-grey text-right float-left w-100 py-2 border\">\r\n                                        <a class=\"fa fa-keyboard-o\" v-on:click=\"AddSpace($event)\"></a>\r\n                                        <a href=\"#\" v-on:click=\"Addplussign($event)\">+</a>\r\n                                        <a href=\"#\" v-on:click=\"Addsubtractsign($event)\">-</a>\r\n                                        <a href=\"#\" v-on:click=\"Addmultiplysign($event)\">*</a>\r\n                                        <a href=\"#\" v-on:click=\"Adddividesign($event)\">/</a>\r\n                                        <a href=\"#\" v-on:click=\"Addopenbracketsign($event)\">(</a>\r\n                                        <a href=\"#\" v-on:click=\"Addclosebracketsign($event)\">)</a>\r\n                                    </div>\r\n\r\n                                    <div class=\"col-12 p-0 float-left\">\r\n                                        <div class=\"row flex-row-reverse\">\r\n                                            <div class=\"col-12 p-0 float-left\" id=\"verifiedid\">\r\n                                                <div class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\"\r\n                                                    v-if=\"verifiedvaluedata == 0\">\r\n                                                    {{ verifyErrorMsg }}<button type=\"button\" class=\"close\"\r\n                                                        data-dismiss=\"alert\" @click=\"closed\" aria-label=\"Close\">\r\n                                                        <span aria-hidden=\"true\">×</span>\r\n                                                    </button>\r\n                                                </div>\r\n                                                <div class=\"alert alert-success alert-dismissible fade show\" role=\"alert\"\r\n                                                    v-if=\"verifiedvaluedata == 1\">\r\n\r\n                                                    {{ $t(\"ExpressionVerify\") }}<button type=\"button\" class=\"close\"\r\n                                                        data-dismiss=\"alert\" @click=\"closed\" aria-label=\"Close\">\r\n                                                        <span aria-hidden=\"true\">×</span>\r\n                                                    </button>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-lg-12 text-right\">\r\n                                                <a href=\"javascript:;\" class=\"btn btn-success ancsaveuserticket mr-2\"\r\n                                                    v-on:click=\"VerifyExpression\">\r\n                                                    <em class=\"fa fa-check pr-2\"></em>Verify</a>\r\n                                                <a href=\"javascript:;\" class=\"btn btn-danger ancsaveuserticket\"\r\n                                                    v-on:click=\"ResetExpression\">\r\n                                                    <em class=\"fa fa-refresh pr-2\"></em>Reset</a>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-lg-4 mb-0 float-left px-3\">\r\n                                <div class=\"heading-border mb-4\">\r\n                                    <h5 class=\"h5\">\r\n                                        <span class=\"spngropuname\">\r\n                                            {{ $t('Columns') }}\r\n                                            <div class=\"w3-container w3-border w3-large\"></div>\r\n                                        </span>\r\n                                    </h5>\r\n                                </div>\r\n                                <div class=\"mb-0 d-lg-block p-2 border\">\r\n                                    <div class=\"input-group customsearchbox\">\r\n                                        <input type=\"text\" maxlength=\"50\" v-on:keyup=\"ListFiltering\" id=\"searchinput\"\r\n                                            v-model=\"MainSearchmodel\" placeholder=\"Search by Name\"\r\n                                            class=\"form-control searchcustomfilter border-right-0\" autocomplete=\"off\">\r\n                                        <div class=\"input-group-append\">\r\n                                            <span class=\"input-group-text bg-transparent bg-white border-left-0\">\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"accordion md-accordion left-filter\" id=\"accordionEx\">\r\n                                    <div class=\"card-panel\" style=\"border-top:1px solid #c7c7c7;\">\r\n                                        <div class=\"card\" v-for=\"(name, index) in JsonColumns\" :key=\"index\">\r\n                                            <div class=\"card-header\" role=\"tab\" :id=\"'MainColumn' + index\">\r\n                                                <h5 class=\"mb-0\"><a data-toggle=\"collapse\" data-parent=\"#accordionEx\"\r\n                                                        :href=\"'#ColumnCollapse' + index\" aria-expanded=\"false\"\r\n                                                        :aria-controls=\"'ColumnCollapse' + index\" class=\"\"><em\r\n                                                            class=\"fa fa fa-file-text-o\" aria-hidden=\"true\"></em><span\r\n                                                            class=\"font-weight-bold\">\r\n                                                            {{ GetLocalizedValue(name.SubModule) }}</span><em\r\n                                                            class=\"fa fa-angle-down rotate-icon\"\r\n                                                            aria-hidden=\"true\"></em></a>\r\n                                                </h5>\r\n                                            </div>\r\n                                            <div :id=\"'ColumnCollapse' + index\" class=\"collapse multi-collapse column-collapse\"\r\n                                                role=\"tabpanel\" :aria-labelledby=\"'MainColumn' + index\"\r\n                                                data-parent=\"#accordionEx\">\r\n                                                <div class=\"card-body p-0 customScrollForLeftBar llt\"\r\n                                                    style=\"max-height:300px;\">\r\n                                                    <div class=\"form-group\">\r\n                                                        <ul class=\"nav nav-pills flex-column left-tab responivecustomtab lefttabiconfix\"\r\n                                                            style=\"max-height: 305px; overflow: auto; display: block;\">\r\n                                                            <template\r\n                                                                v-for=\"element in searchColumnfilter.length == 0 ? modulelisting[index] : searchColumnfilter[index]\" >\r\n                                                                <li class=\"nav-item parent-element\">\r\n                                                                    <span class=\"nav-link left-menu px-4 \">\r\n                                                                        <em :class=\"element.dttype[0].icon + ' ' + 'float-left'\"\r\n                                                                            aria-hidden=\"true\"></em>\r\n                                                                        <span class=\"text-truncate float-left\"\r\n                                                                            style=\"width: 55%;\"\r\n                                                                            :data-toggle-tooltip=\"element.FieldName\"\r\n                                                                            :title=\"element.FieldName\">\r\n                                                                            {{ GetLocalizedValue((element.DisplayName !=\r\n                                                                                null &&\r\n                                                                                element.DisplayName != \"\") ?\r\n                                                                                element.DisplayName : element.FieldName) }}\r\n                                                                        </span>\r\n                                                                        <a href=\"#\"><em\r\n                                                                                class=\"fa fa-plus float-right mt-1 text-success pr-0\"\r\n                                                                                aria-hidden=\"true\"\r\n                                                                                @click=\"Addfields(element, $event, index)\"></em></a>\r\n                                                                    </span>\r\n                                                                </li>\r\n                                                            </template>\r\n                                                        </ul>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div v-if=\"SearchNoRecord\"\r\n                                    class=\"text-center text-danger d-flex align-items-center justify-content-center norecs pt-2\">\r\n                                    {{\r\n                                        $t(\"NoRecordfound\") }}</div>\r\n                            </div>\r\n                        </div>\r\n                    </div> -->\r\n                        <!-- <div class=\"col-12 mt-3\">\r\n                            <div class=\"row flex-row-reverse\">\r\n                                <div class=\"col-lg-6 text-right\">\r\n                                        <button class=\"btn btn-success mr-2 my-sm-0 disabled\" id=\"Submitbtn\"\r\n                                            v-on:click=\"SubmitExpression\">\r\n                                            <span class=\"fa fa-floppy-o pl-2 pr-2\"></span>{{ $t(\"Submit\") }}\r\n                                        </button>\r\n                                        <button class=\"btn btn-primary delete-btn mr-2 my-sm-0\" v-on:click=\"CancelExpressionUI\">\r\n                                        <span class=\"fa fa-times pl-2 pr-2\"></span>{{ $t(\"Cancel\") }}\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div> -->\r\n                </template>\r\n                </dynamic-form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div></template>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./modalCalculatedFieldUI.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./modalCalculatedFieldUI.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./modalCalculatedFieldUI.vue?vue&type=template&id=74c044b2&\"\nimport script from \"./modalCalculatedFieldUI.vue?vue&type=script&lang=js&\"\nexport * from \"./modalCalculatedFieldUI.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<script>\r\nimport DataReportService from \"@/services/DataService\";\r\nimport draggable from \"vuedraggable\";\r\nimport ReportPreview from '../Add_Report/ReportPreview.vue';\r\nimport CalculatedUI from \"../../../components/Common/Modal/modalCalculatedFieldUI.vue\";\r\n\r\nexport default {\r\n    components: {\r\n        draggable, ReportPreview, CalculatedUI\r\n    },\r\n    data() {\r\n        return {\r\n            isLoading: false,\r\n            modulelisting: [],\r\n            modulelistingforfilter: [],\r\n            showModuleListForField: true,\r\n            showModuleListForFilter: false,\r\n            reqFrom: 'Reporting',\r\n            submodulecode: null,\r\n            modulename: null,\r\n            maindiv: \"col-6 pl-0 float-left\",\r\n            expandcollapsediv: \"bottom_filter_button\",\r\n            showdiv: \"mb-0 d-none\",\r\n            fielddata: [],\r\n            Grouplist: [],\r\n            Columnlist: [],\r\n            Filterlist: [],\r\n            viewId: null,\r\n            ReportName: null,\r\n            fieldpan: 'col-6 p-0 float-left',\r\n            modulelistingmodel: null,\r\n            customreportparameters: null,\r\n            tempreportid: null,\r\n            saveclass: \"card d-none\",\r\n            editclass: \"card\",\r\n            savereportname: null,\r\n            Showsettingsview: false,\r\n            showdiv1: false,\r\n            dateformate: [],\r\n            GetOperator: [],\r\n            customField: null,\r\n            dragcount: 1,\r\n            templates: ['Match Any Value', 'Match All Value'],\r\n            category: 'Match All Value',\r\n            ReportPreviewListing: [],\r\n            previewdata: [],\r\n            itemclass: 'd-none',\r\n            Groupsearchmodel: '',\r\n            ColumnSearchmodel: '',\r\n            MainSearchmodel: '',\r\n            //filtergroup: [],\r\n            submodulename: [],\r\n            submodulecodename: [],\r\n            test1: [],\r\n            PageNumber: 1,\r\n            PAGESIZE: 10,\r\n            selectvalue: '',\r\n            selecteddatatype: '',\r\n            texttypevalue1: false,\r\n            numbertypevalue1: false,\r\n            datetypevalue1: false,\r\n            datetypevalue2: false,\r\n            timetypevalue: false,\r\n            timetypevalue2: false,\r\n            multiselectvalue: false,\r\n            numbertypevalue2: false,\r\n            texttypevalue2: false,\r\n            savedOperatorName: null,\r\n            drag: false,\r\n            GetDateFromDB: [],\r\n            modeldisplayname: null,\r\n            modeldateformat: '',\r\n            modeldecimalplaces: null,\r\n            modeluseseparator: null,\r\n            modelusecurrency: null,\r\n            FilterCount: 1,\r\n            valueTypeText: '',\r\n            valueTypeNumber: '',\r\n            valueTypeNumber2: '',\r\n            valueTypeFirstdate: '',\r\n            valueTypeSeconddate: '',\r\n            Displaymultiplevalue: '',\r\n            displayvalue2: '',\r\n            ValueDisplaytext: '',\r\n            ValueDisplaytext2: '',\r\n            ValueDisplaynumber: '',\r\n            ValueDisplaynumber2: '',\r\n            ValueDisplaydate: '',\r\n            ValueDisplaydate2: '',\r\n            ValueDisplayTime: '',\r\n            ValueDisplayTime2: '',\r\n            selectedvalue: '',\r\n            RequestFilterJosn: [],\r\n            CurrentOperatorSelected: null,\r\n            filtertype: null,\r\n            operator_id: null,\r\n            mode: 'tags',\r\n            dropdwonvalues: [],\r\n            options: [],\r\n            searchable: true,\r\n            createOption: true,\r\n            SelectedoperatorMappedDatatype: '',\r\n            commaSepratedSelectedValues: '',\r\n            selectedOPValue: '',\r\n            GraphJson: [],\r\n            sortingData: null,\r\n            graphData: null,\r\n            showReportPreview: false,\r\n            editjsondata: false,\r\n            valueKey: '',\r\n            valuekey2: '',\r\n            FirstOperand: '',\r\n            FirstOperandValue1: '',\r\n            SecondOperand: '',\r\n            SecondOperandValue1: '',\r\n            Datatype: '',\r\n            operator: '',\r\n            DisplayName: '',\r\n            showcalculatedUI: false,\r\n            CheckExpressionFeild: false,\r\n            ExpressionArray: [],\r\n            ExpressionFieldsArray: [],\r\n            saveJsonReport: [],\r\n            editexpressionvalue: false,\r\n            CalculatedUIEnabled: false,\r\n            searchColumnfilter: [],\r\n            LevelOfGrouping: null,\r\n            ExpFieldDataArray: [],\r\n            ExpDataArray: [],\r\n            setvalue: 0,\r\n            ChartGroupingArray: [],\r\n            GroupingArray: [],\r\n            PdfJsonReport: [],\r\n            FilterActiveForMandatory: false,\r\n            SearchNoRecord: false,\r\n            IsMandatoryforFilterAfterReset: false,\r\n            ArrayforFilterpopup: [],\r\n            modelFilterDDLValue: '',\r\n            DDLForFilter: false,\r\n            selctRuleForFilter: '',\r\n            IsForPreview: 1,\r\n            IsDDLValueInFilter: false,\r\n            GetSubModuleList: [],\r\n            showRowLevelFunction:false\r\n        }\r\n    },\r\n    created: async function () {\r\n        var vm = this;\r\n        $(\".fade\").addClass(\"show\");\r\n        if (this.$route.params.Modulename != undefined) {\r\n            vm.customreportparameters = this.$route.params;\r\n            vm.storeParameters();\r\n        } else { vm.GetStoredParameters(); }\r\n        await vm.GetList(vm.customreportparameters);\r\n        if (vm.customreportparameters.ReportID != null || vm.customreportparameters.ReportID != undefined) {\r\n            await vm.GetReportDetailsByReportId();\r\n            if (vm.IsDDLValueInFilter) {\r\n                setTimeout(function () {\r\n                    vm.showReportPreview = true;\r\n                }, 1000)\r\n            } else { vm.showReportPreview = true; }\r\n        }\r\n        vm.filterRulechange();\r\n    },\r\n    computed: {\r\n        filtergroup() {\r\n            var vm = this;\r\n            return vm.Columnlist.filter(item => {\r\n                var displayname = (item.DisplayName != null) ? item.DisplayName : item.FieldName;\r\n                return displayname.replace(/\\W/g, \"\").toLowerCase().includes(vm.Groupsearchmodel.replace(/\\W/g, \"\").toLowerCase());\r\n            })\r\n        },\r\n        filterColumngroup() {\r\n            var vm = this;\r\n            var searchColumn = [];\r\n            var searchfilter = [];\r\n            var GetSubModuleName = null;\r\n            vm.modulelisting.forEach((item, index) => {\r\n                vm.modulelisting[index].forEach((indexitem) => {\r\n                    searchfilter.push(indexitem);\r\n                    searchColumn = searchfilter.filter(searchitem => {\r\n                        var displaycolname = (searchitem.DisplayName != null) ? searchitem.DisplayName : searchitem.FieldName;\r\n                        return displaycolname.replace(/\\W/g, \"\").toLowerCase().includes(vm.ColumnSearchmodel.replace(/\\W/g, \"\").toLowerCase());\r\n                    })\r\n                    searchColumn.forEach(SearchItem => {\r\n                        GetSubModuleName = vm.modulelisting[index].find(x => x.CustomFieldId === SearchItem.CustomFieldId)\r\n                        if (GetSubModuleName != undefined) {\r\n                            GetSubModuleName.MainFieldname = vm.submodulename[index];\r\n                        }\r\n                    })\r\n                })\r\n            })\r\n            return searchColumn;\r\n        }\r\n    },\r\n    methods: {\r\n        storeParameters() {\r\n            var vm = this;\r\n            localStorage.setItem(\"SavedParameters\", JSON.stringify(vm.customreportparameters));\r\n        },\r\n        GetStoredParameters() {\r\n            var vm = this;\r\n            vm.customreportparameters = JSON.parse(localStorage.getItem(\"SavedParameters\"));\r\n        },\r\n        async GetFilterSelectDDL(CustomFieldId) {\r\n            var vm = this;\r\n            vm.options = [];\r\n            var Getddldata = [];\r\n            // vm.isLoading = false;\r\n            // if (vm.operator_id == 10 || vm.operator_id == 27) {\r\n            //     vm.isLoading = true;\r\n            // }\r\n            vm.isLoading = true;\r\n            await DataReportService.GetFilterDDLselectvalue(CustomFieldId).then(response => {\r\n                if (response.data.length > 0) {\r\n                    // vm.options = response.data.map(item => {\r\n                    //     return item.name != undefined ? item.name : item[FieldName]\r\n                    // });\r\n                    Getddldata = response.data;\r\n                    Getddldata.forEach(ddlitem => {\r\n                        vm.options.push({\r\n                            value: ddlitem.value,\r\n                            label: ddlitem.name\r\n                        })\r\n                    })\r\n                    vm.isLoading = false;\r\n                } else { vm.isLoading = false; }\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n        },\r\n        async GetReportDetailsByReportId() {\r\n            var vm = this;\r\n            vm.isLoading = true;\r\n            var params = `ReportId=${vm.customreportparameters.ReportID}&IsPaged=1`;\r\n            await DataReportService.GetReportDetailsbyId(params).then(async response => {\r\n                var checkfields = [];\r\n                if (response.data != null && response.data != undefined && response.data != '') {\r\n                    checkfields = response.data.JSON_To_Create_ReportListing[0].Info.FIELDS;\r\n                }\r\n                if (response.data != null && response.data != undefined && response.data != '' && checkfields.length != 0) {\r\n                    vm.BindFeilds(response.data.JSON_To_Create_ReportListing[0].Info.FIELDS);\r\n                    await vm.BindFilters(response.data.JSON_To_Create_ReportListing[0].Info.FILTERS);\r\n                    vm.BindGROUP(response.data.JSON_To_Create_ReportListing[0].Info.GROUP);\r\n                    vm.sortingData = response.data.JSON_To_Create_ReportListing[0].Info.SORTING\r\n                    vm.graphData = response.data.JSON_To_Create_ReportListing[0].Info.GRAPH;\r\n                    vm.ExpressionArray = response.data.JSON_To_Create_ReportListing[0].Info.EXPRESSION;\r\n                    vm.ExpressionFieldsArray = response.data.JSON_To_Create_ReportListing[0].Info.EXPRESSIONFIELDSARRAY;\r\n                    vm.editexpressionvalue = true;\r\n                    if (response.data.ReportListing == 1) {\r\n                        vm.editjsondata = true;\r\n                        vm.saveJsonReport = response.data.JSON_To_Create_ReportListing[0];\r\n                        vm.PdfJsonReport = response.data.JSON_To_Create_ReportListing[0];\r\n                    }\r\n                } else {\r\n                    if (checkfields.length == 0) {\r\n                        vm.CheckIsMandartoryForFilter();\r\n                    }\r\n                    vm.isLoading = false;\r\n                }\r\n            }).catch(err => {\r\n                console.log(err);\r\n            })\r\n        },\r\n        BindFeilds(FIELDS) {\r\n            var vm = this;\r\n            FIELDS.forEach((item) => {\r\n                vm.Columnlist.push(item);\r\n                vm.modulelisting.forEach((mitem, index) => {\r\n                    let indexFound = vm.modulelisting[index].findIndex(element => { return element.CustomFieldId === item.CustomFieldId })\r\n                    if (indexFound != -1) {\r\n                        vm.modulelisting[index].splice(indexFound, 1);\r\n                    }\r\n                })\r\n            })\r\n            if (vm.Columnlist.length > 0) {\r\n                vm.CalculatedUIEnabled = true;\r\n            }\r\n        },\r\n        bindpouupvaluefordatetime(item) {\r\n            var vm = this;\r\n            if (item.ColumnFieldDataCode == 'datetime' || item.ColumnFieldDataCode == 'date') {\r\n                if (item.operator_display_name == 'Between') {\r\n                    vm.valueKey = 'valueTypeFirstdate'\r\n                    vm.valuekey2 = 'valueTypeSeconddate'\r\n                }\r\n                else {\r\n                    vm.valueKey = 'valueTypeFirstdate'\r\n                }\r\n            }\r\n            if (item.ColumnFieldDataCode == 'time') {\r\n                if (item.operator_display_name == 'Between') {\r\n                    vm.valueKey = 'ValueDisplayFirstTime'\r\n                    vm.valuekey2 = 'ValueDisplaySecondTime'\r\n                }\r\n                else {\r\n                    vm.valueKey = 'ValueDisplayFirstTime'\r\n                }\r\n            }\r\n        },\r\n        bindfilterdata(FILTERS) {\r\n            var vm = this;\r\n            vm.Filterlist = FILTERS.map((item, index) => {\r\n                var GetDDLValueinEdit = '';\r\n                var GetDDLTempVal = '';\r\n                if (item.ColumnFieldDataCode == 'select' && item.PickListOption == 'Lookup') {\r\n                    var GetDDLValueinEditArr = [];\r\n                    if (item.OperatorExpression.includes('IN') || item.OperatorExpression.includes('NOT IN')) {\r\n                        var GetDDLValueinEditMulti = [];\r\n                        GetDDLValueinEditArr = item.Value1.split(',');\r\n                        GetDDLValueinEditArr.forEach(DDLEditItem => {\r\n                            GetDDLValueinEdit = vm.options.find(i => i.value === DDLEditItem)\r\n                            GetDDLValueinEditMulti.push(GetDDLValueinEdit.label);\r\n                        })\r\n                        GetDDLTempVal = GetDDLValueinEditMulti?.join();\r\n                        vm.valueKey = 'Displaymultiplevalue';\r\n                    }\r\n                    else {\r\n                        GetDDLValueinEdit = vm.options.find(i => i.value === item.Value1);\r\n                        GetDDLTempVal = GetDDLValueinEdit?.label;\r\n                        vm.valueKey = 'DropDownValue';\r\n                    }\r\n                }\r\n                else if (item.ColumnFieldDataCode == 'decimal' || item.ColumnFieldDataCode == 'bigint' || item.ColumnFieldDataCode == 'int') {\r\n                    if (item.operator_display_name == 'Between') {\r\n                        vm.valueKey = 'valueTypeNumber';\r\n                        vm.valuekey2 = 'valueTypeNumber2';\r\n                    }\r\n                    else {\r\n                        vm.valueKey = 'valueTypeNumber';\r\n                    }\r\n                }\r\n                else if (item.ColumnFieldDataCode == 'string') {\r\n                    if (item.OperatorExpression.includes('IN') || item.OperatorExpression.includes('NOT IN')) {\r\n                        vm.valueKey = 'valueTypeText';\r\n                        vm.valuekey2 = 'valueTypeText2';\r\n                    } else { vm.valueKey = 'valueTypeText' };\r\n                }\r\n                vm.bindpouupvaluefordatetime(item);\r\n                let moduleIndex = vm.modulelistingforfilter.findIndex(moduleItem => {\r\n                    return moduleItem.find(field => {\r\n                        return field.CustomFieldId == item.CustomFieldId\r\n                    })\r\n                })\r\n                let indexFound = vm.modulelistingforfilter[moduleIndex].findIndex(field => { return field.CustomFieldId == item.CustomFieldId })\r\n                let returnObject = {}\r\n                if (indexFound != -1) {\r\n                    returnObject = {\r\n                        FieldName: vm.modulelistingforfilter[moduleIndex][indexFound].FieldName,\r\n                        CustomFieldId: item.CustomFieldId,\r\n                        ModuleIndex: moduleIndex,\r\n                        ActualDataType: item.ActualDataType,\r\n                        FilterCount: index + 1,\r\n                        FilterTypeAndorOr: vm.filtertype,\r\n                        OPERATOR_ID: item.OPERATOR_ID,\r\n                        OperatorDisplayName: item.operator_display_name,\r\n                        IsMandatoryforFilter: item.IsMandatoryforFilter,\r\n                        FieldIcons: item.FieldIcons,\r\n                        DisplayName: item.DisplayName,\r\n                        ColumnFieldDataCode: item.ColumnFieldDataCode,\r\n                        PickListOption: item.PickListOption,\r\n                        Calculated_Field: false\r\n                    }\r\n                    returnObject[vm.valuekey2] = item.Value2;\r\n                    returnObject[vm.valueKey] = GetDDLTempVal == '' ? item.Value1.replace(/\"|'/g, '') : GetDDLTempVal;\r\n                    vm.modulelistingforfilter[moduleIndex].splice(indexFound, 1);\r\n                }\r\n                return returnObject;\r\n            })\r\n        },\r\n        CheckforIncludeDataMatchesForFilter() {\r\n            var vm = this;\r\n            if (vm.filtertype == 'AND') {\r\n                vm.category = 'Match All Value';\r\n            } else {\r\n                vm.category = 'Match Any Value'\r\n            }\r\n        },\r\n        BindFilters: async function (FILTERS) {\r\n            var vm = this;\r\n            if (FILTERS.length > 0) {\r\n                FILTERS.map(async (item, index) => {\r\n                    if (item.ColumnFieldDataCode == 'select' && item.PickListOption == 'Lookup') {\r\n                        vm.IsDDLValueInFilter = true;\r\n                        await vm.GetFilterSelectDDL(item.CustomFieldId);\r\n                    }\r\n                })\r\n                if (vm.IsDDLValueInFilter) {\r\n                    setTimeout(function () {\r\n                        vm.filtertype = FILTERS[0].FilterTypeAndorOr;\r\n                        vm.CheckforIncludeDataMatchesForFilter();\r\n                        vm.bindfilterdata(FILTERS);\r\n                        vm.RequestFilterJosn = FILTERS.map((item, index) => {\r\n                            let indexFound = vm.Filterlist.findIndex(field => { return field.CustomFieldId == item.CustomFieldId })\r\n                            let returnObject = {}\r\n                            if (indexFound != -1) {\r\n                                returnObject = {\r\n                                    CustomFieldId: item.CustomFieldId,\r\n                                    FieldName: vm.Filterlist[indexFound].FieldName,\r\n                                    ActualDataType: item.ActualDataType,\r\n                                    FilterCount: index + 1,\r\n                                    OperatorExpression: item.OperatorExpression,\r\n                                    FilterTypeAndorOr: item.FilterTypeAndorOr,\r\n                                    OPERATOR_ID: item.OPERATOR_ID,\r\n                                    Value1: item.Value1,\r\n                                    Value2: item.Value2,\r\n                                    ColumnFieldDataCode: item.ColumnFieldDataCode,\r\n                                    PickListOption: item.PickListOption\r\n                                }\r\n                            }\r\n                            return returnObject;\r\n                        })\r\n                    }, 1000)\r\n                }\r\n                else {\r\n                    vm.filtertype = FILTERS[0].FilterTypeAndorOr;\r\n                    vm.CheckforIncludeDataMatchesForFilter();\r\n                    vm.bindfilterdata(FILTERS);\r\n                    vm.RequestFilterJosn = FILTERS.map((item, index) => {\r\n                        let indexFound = vm.Filterlist.findIndex(field => { return field.CustomFieldId == item.CustomFieldId })\r\n                        let returnObject = {}\r\n                        if (indexFound != -1) {\r\n                            returnObject = {\r\n                                CustomFieldId: item.CustomFieldId,\r\n                                FieldName: vm.Filterlist[indexFound].FieldName,\r\n                                ActualDataType: item.ActualDataType,\r\n                                FilterCount: index + 1,\r\n                                OperatorExpression: item.OperatorExpression,\r\n                                FilterTypeAndorOr: item.FilterTypeAndorOr,\r\n                                OPERATOR_ID: item.OPERATOR_ID,\r\n                                Value1: item.Value1,\r\n                                Value2: item.Value2,\r\n                                ColumnFieldDataCode: item.ColumnFieldDataCode,\r\n                                PickListOption: item.PickListOption\r\n                            }\r\n                        }\r\n                        return returnObject;\r\n                    })\r\n                }\r\n            }\r\n        },\r\n        BindGROUP(GROUP) {\r\n            var vm = this;\r\n            vm.Grouplist = [];\r\n            GROUP.forEach((item) => {\r\n                vm.Grouplist.push(item);\r\n            })\r\n        },\r\n        openSetting: function (element, event) {\r\n            var vm = this;\r\n            if (element.Calculated_Field) {\r\n                vm.showcalculatedUI = true;\r\n                vm.editexpressionvalue = true;\r\n                if (vm.ExpressionFieldsArray.length > 0 || vm.ExpressionArray.length > 0) {\r\n                    let expIndex = -1;\r\n                    vm.ExpDataArray = [];\r\n                    vm.ExpFieldDataArray = [];\r\n                    for (var i = 0; i <= vm.ExpressionArray.length; i++) {\r\n                        if (vm.ExpressionArray[i].ColumnIndex === element.ModuleIndex) {\r\n                            vm.ExpDataArray.push(vm.ExpressionArray.find(x => x.ColumnIndex === element.ModuleIndex))\r\n                            break;\r\n                        }\r\n                    }\r\n                    vm.ExpressionFieldsArray.forEach(item => {\r\n                        var temparr = [];\r\n                        temparr.push(item);\r\n                        var checkexpfieldvalue = temparr.find(x => x.ColumnIndex === element.ModuleIndex);\r\n                        if (checkexpfieldvalue != undefined) {\r\n                            vm.ExpFieldDataArray.push(checkexpfieldvalue);\r\n                        }\r\n                    })\r\n                }\r\n                $(\"#showcalculatedfield\").modal(\"show\");\r\n                setTimeout(function () {\r\n                    $(\"#showcalculatedfield\").modal('show');\r\n                    setTimeout(function () {\r\n                        vm.SetBootstraptoolTip();\r\n                    }, 200);\r\n                }, 1000);\r\n                if (vm.editexpressionvalue) {\r\n                    vm.$refs.Calculated?.ExpresssionDataValue(vm.ExpDataArray, vm.ExpFieldDataArray);\r\n                }\r\n            } else {\r\n                vm.modeldisplayname = vm.GetLocalizedValue(element.DisplayName != null && element.DisplayName != '' ? element.DisplayName : element.FieldName);\r\n                vm.modeldateformat = element.DateFormat;\r\n                vm.modeldecimalplaces = element.DecimalPlace;\r\n                vm.modeluseseparator = element.IsUseSeprator;\r\n                vm.modelusecurrency = element.IsCurrencySymbol;\r\n                $(\".setting-div-box\").width('0px');\r\n                $(event.target).closest(\".parentdiv\").find(\".setting-div-box\").width('500px');\r\n                vm.GetDateFromDetail();\r\n            }\r\n        },\r\n        CloseSetting: function (event) {\r\n            var vm = this;\r\n            vm.modeldisplayname = null;\r\n            vm.modeldateformat = '';\r\n            vm.modeldecimalplaces = null;\r\n            vm.modeluseseparator = null;\r\n            vm.modelusecurrency = null;\r\n            $(event.target).closest(\".setting-div-box\").width('0px');\r\n        },\r\n        ClosePopFilter: function () {\r\n            var vm = this;\r\n            $(\".filter-list-box\").width('0px').css(\"overflow\", \"hidden\");\r\n            vm.texttypevalue1 = false;\r\n            vm.numbertypevalue1 = false;\r\n            vm.datetypevalue1 = false;\r\n            vm.datetypevalue2 = false;\r\n            vm.multiselectvalue = false;\r\n            vm.numbertypevalue2 = false;\r\n            vm.texttypevalue2 = false;\r\n            vm.DDLForFilter = false;\r\n            vm.timetypevalue = false;\r\n            vm.timetypevalue2 = false;\r\n            vm.ValueDisplaytext = '';\r\n            vm.ValueDisplaytext2 = '';\r\n            vm.ValueDisplaynumber = '';\r\n            vm.ValueDisplaynumber2 = '';\r\n            vm.ValueDisplaydate = '';\r\n            vm.ValueDisplaydate2 = '';\r\n            vm.ValueDisplayTime = '';\r\n            vm.ValueDisplayTime2 = '';\r\n            vm.Displaymultiplevalue = '';\r\n            vm.dropdwonvalues = [];\r\n            vm.modelFilterDDLValue = '';\r\n            vm.SecondOperand = '';\r\n            vm.SecondOperandValue1 = '';\r\n        },\r\n        CheckFeildOrFilter() {\r\n            var vm = this;\r\n            let isFieldsActive = vm.$refs.FIELDS.active\r\n            if (isFieldsActive) {\r\n                return 'FIELD'\r\n            }\r\n            else {\r\n                return 'Filters';\r\n            }\r\n        },\r\n        GetList: async function (customreportparameters) {\r\n            var vm = this;\r\n            if (customreportparameters.Modulename != undefined && customreportparameters.Submodulecode != undefined && customreportparameters.ReportName != null) {\r\n                var params = `moduleName=${customreportparameters.Modulename}&subModuleCode=${customreportparameters.Submodulecode}&viewId&reqFrom=${vm.reqFrom}`;\r\n                await DataReportService.GetListFields(params).then(response => {\r\n                    vm.submodulecodename = response.data.AVAILABLE_FIELDS[0];\r\n                    vm.submodulecodename.forEach((item) => {\r\n                        vm.submodulename.push(item.SubModule);\r\n                        vm.modulelisting.push([...item.CustomFields.sort(function(a, b){if(a.DisplayName < b.DisplayName) { return -1; }if(a.DisplayName > b.DisplayName) { return 1; }return 0; })]);\r\n                        vm.modulelistingforfilter.push([...item.CustomFields.sort(function(a, b){if(a.DisplayName < b.DisplayName) { return -1; }if(a.DisplayName > b.DisplayName) { return 1; }return 0; })]);\r\n                        vm.GetSubModuleList.push([...item.CustomFields]);\r\n                    })\r\n                    if (customreportparameters.NewReportInserted == \"Save\" && customreportparameters.ReportID != undefined || vm.IsMandatoryforFilterAfterReset) {\r\n                        vm.CheckIsMandartoryForFilter();\r\n                    }\r\n                    setTimeout(function () {\r\n                        vm.SetScrolbar('dark-thick', '', 'customScrollForLeftBar')\r\n                    }, 1000);\r\n                }).catch(err => { console.log(err); })\r\n                vm.submodulecode = customreportparameters.Submodulecode;\r\n                vm.ReportName = customreportparameters.ReportName;\r\n            }\r\n        },\r\n        CheckIsMandartoryForFilter: function () {\r\n            var vm = this;\r\n            vm.modulelisting.forEach((Fields, index) => {\r\n                vm.modulelisting[index].forEach(Fieldsitem => {\r\n                    if (Fieldsitem.IsMandatoryforFilter) {\r\n                        var CheckFields = vm.modulelisting[index].find(x => x.CustomFieldId === Fieldsitem.CustomFieldId)\r\n                        if (CheckFields.ActualDataType == \"datetime\") {\r\n                            vm.FilterActiveForMandatory = true;\r\n                            vm.SelectedoperatorMappedDatatype = CheckFields.dttype[0].DataTypeCode;\r\n                            // vm.ValueDisplaydate = moment(moment().subtract(30, 'days')).format(\"YYYY-MM-DD\");\r\n                            var date = new Date(); // Now\r\n                            date.setDate(date.getDate() - 30); // Set now - 30 days as the new date\r\n                            vm.ValueDisplaydate = date;\r\n                            vm.savedOperatorName = \"Greater Than\";\r\n                            vm.CurrentOperatorSelected = '>';\r\n                            vm.operator_id = 1;\r\n                            vm.AddFilter(CheckFields, index);\r\n                            vm.applySetting(CheckFields.CustomFieldId);\r\n                        }\r\n                    }\r\n                })\r\n            })\r\n        },\r\n        collapsedclick: function () {\r\n            var vm = this\r\n            vm.maindiv = \"col-6 pl-0 float-left d-none\";\r\n            vm.showdiv = \"mb-0\";\r\n            vm.fieldpan = 'col-6 p-0 float-left leftpancollapse col-11'\r\n        },\r\n        expandclick: function () {\r\n            var vm = this\r\n            vm.maindiv = \"col-6 pl-0 float-left \";\r\n            vm.showdiv = \"mb-0 d-none\";\r\n            vm.fieldpan = 'col-6 p-0 float-left';\r\n        },\r\n        editreport: function () {\r\n            var vm = this;\r\n            vm.editclass = \"card d-none\";\r\n            vm.saveclass = \"card\";\r\n            var params = `&Report_id=${vm.customreportparameters.ReportID}`;\r\n            DataReportService.Editdyanmicreport(params).then(response => {\r\n                vm.savereportname = response.data.ReportName;\r\n            }).catch(err => { console.log(err); })\r\n        },\r\n        savereport: function () {\r\n            var vm = this;\r\n            vm.editclass = \"card\";\r\n            vm.saveclass = \"card d-none\";\r\n            var params = `ReportName=${vm.savereportname}&Report_Id=${vm.customreportparameters.ReportID}&Folder_Id=${vm.customreportparameters.Folder_Id}&Module_Id=${vm.customreportparameters.Module_Id}&Sub_Module_Id=${vm.customreportparameters.Sub_Module_Id}&Ref_Code=${vm.customreportparameters.Submodulecode}&Version=${vm.customreportparameters.Version}`;\r\n            DataReportService.AddDynamicreport(params).then(response => {\r\n                if (response.data[0].Status == 'Update') {\r\n                    vm.ShowAlert(vm.$t(\"UpdatedSuccess\", [vm.$t(\"ReportName\")]), 'success', true, vm.$t('Alert'));\r\n                    vm.ReportName = vm.savereportname;\r\n                } else if (response.data[0].Status == 'Exists') {\r\n                    vm.savereportname = null;\r\n                    vm.ShowAlert(vm.$t(\"AlreadyExists\", [vm.$t(\"ReportName\")]), 'failure', true, vm.$t('Alert'));\r\n                } else {\r\n                    vm.savereportname = null;\r\n                    vm.ShowAlert(vm.$t(\"SaveError\", [vm.$t(\"ReportName\")]), 'failure', true, vm.$t('Alert'));\r\n                }\r\n            }).catch(err => { console.log(err); })\r\n        },\r\n        PreviewJson: async function (sortColummnarray, BindGraph, GraphDataValue) {\r\n            var vm = this;\r\n            var sortingArray = [];\r\n            vm.isLoading = true;\r\n            let CheckSameNameExist = vm.MatchIfSameNameExist();\r\n            if (!CheckSameNameExist) {\r\n                let CheckValidSorting = vm.CheckForValidSorting(sortColummnarray);\r\n                if (CheckValidSorting == 0) {\r\n                    for (var i in sortColummnarray) {\r\n                        if (sortColummnarray[i].sortcolummnId != undefined && sortColummnarray[i].sortcolummnId != \"\") {\r\n                            sortingArray.push(\r\n                                { \"CustomFieldId\": sortColummnarray[i].sortcolummnId, \"SORTTYPE\": sortColummnarray[i].columnOrders, \"SortIndex\": parseInt(i), \"Calculated_Field\": \"\" }\r\n                            )\r\n                            vm.Columnlist.forEach(arritem => {\r\n                                var elem = sortingArray.find(x => x.CustomFieldId === arritem.CustomFieldId || x.CustomFieldId === arritem.FieldName)\r\n                                if (elem != undefined) {\r\n                                    elem.Calculated_Field = arritem.Calculated_Field;\r\n                                }\r\n                            })\r\n                        }\r\n                    }\r\n                    var temp;\r\n                    if (BindGraph) {\r\n                        vm.ChartGroupingArray = [];\r\n                        vm.GroupingArray = [];\r\n                        if (GraphDataValue != undefined && GraphDataValue != '') {\r\n                            var findvaluefromcolumnlistxaxis = vm.Columnlist.find(x => x.CustomFieldId === GraphDataValue.XAxisField || x.FieldName === GraphDataValue.XAxisField);\r\n                            var findvaluefromcolumnlistyaxis = vm.Columnlist.find(x => x.CustomFieldId === GraphDataValue.YAxisField || x.FieldName === GraphDataValue.YAxisField);\r\n                            vm.ChartGroupingArray.push({\r\n                                XCustomFieldId: findvaluefromcolumnlistxaxis.CustomFieldId, XFieldName: findvaluefromcolumnlistxaxis.FieldName,\r\n                                YCustomFieldId: findvaluefromcolumnlistyaxis.CustomFieldId, YFieldName: findvaluefromcolumnlistyaxis.FieldName, AggregateFunctionType: GraphDataValue.AggregateFunctionType\r\n                            });\r\n                        }\r\n                        temp = {\r\n                            \"Info\": {\r\n                                \"REPORTID\": vm.customreportparameters.ReportID,\r\n                                \"REPORTNAME\": vm.ReportName,\r\n                                \"MODULENAME\": vm.customreportparameters.Modulename,\r\n                                \"SUBMODULECODE\": vm.customreportparameters.Submodulecode,\r\n                                \"SUBMODULEID\": vm.customreportparameters.submoduleid,\r\n                                \"PAGESIZE\": 10,\r\n                                \"PAGENUMBER\": 1,\r\n                                \"IS_PAGED\": 1,\r\n                                \"IsForPreview\": vm.IsForPreview,\r\n                                \"FIELDS\": vm.Columnlist,\r\n                                \"FILTERS\": vm.RequestFilterJosn,\r\n                                \"GROUP\": [],\r\n                                \"CHARTGROUPARRAY\": vm.ChartGroupingArray,\r\n                                \"SORTING\": sortingArray,\r\n                                \"GRAPH\": [],\r\n                                \"EXPRESSION\": vm.ExpressionArray,\r\n                                \"EXPRESSIONFIELDSARRAY\": vm.ExpressionFieldsArray\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        temp = {\r\n                            \"Info\": {\r\n                                \"REPORTID\": vm.customreportparameters.ReportID,\r\n                                \"REPORTNAME\": vm.ReportName,\r\n                                \"MODULENAME\": vm.customreportparameters.Modulename,\r\n                                \"SUBMODULECODE\": vm.customreportparameters.Submodulecode,\r\n                                \"SUBMODULEID\": vm.customreportparameters.submoduleid,\r\n                                \"PAGESIZE\": 10,\r\n                                \"PAGENUMBER\": 1,\r\n                                \"IS_PAGED\": 1,\r\n                                \"IsForPreview\": vm.IsForPreview,\r\n                                \"FIELDS\": vm.Columnlist,\r\n                                \"FILTERS\": vm.RequestFilterJosn,\r\n                                \"GROUP\": vm.Grouplist,\r\n                                \"CHARTGROUPARRAY\": [],\r\n                                \"SORTING\": sortingArray,\r\n                                \"GRAPH\": [],\r\n                                \"EXPRESSION\": vm.ExpressionArray,\r\n                                \"EXPRESSIONFIELDSARRAY\": vm.ExpressionFieldsArray\r\n                            }\r\n                        }\r\n                    }\r\n                    vm.showReportPreview = true;\r\n                    vm.saveJsonReport = temp;\r\n                    var jsondata = JSON.stringify(temp);\r\n                    await DataReportService.PreviewReport(jsondata).then((response) => {\r\n                        var checkdata = [];\r\n                        checkdata = JSON.parse(response.data[0].Value).ListingData;\r\n                        if (checkdata != null && checkdata != undefined && checkdata.length > 0) {\r\n                            if (BindGraph) {\r\n                                vm.GraphJson = JSON.parse(response.data[0].Value);\r\n                                if (!BindGraph) {\r\n                                    vm.previewdata = JSON.parse(response.data[0].Value).ListingData;\r\n                                }\r\n                            }\r\n                            else {\r\n                                vm.PdfJsonReport = temp;\r\n                                vm.previewdata = JSON.parse(response.data[0].Value).ListingData;\r\n                                vm.LevelOfGrouping = JSON.parse(response.data[0].Value).MetaData[0].LevelOfGrouping;\r\n                            }\r\n                            vm.isLoading = false;\r\n                        } else {\r\n                            vm.ShowAlert(vm.$t(\"No_Record_Found\"), 'failure', true, vm.$t('Alert'));\r\n                            vm.isLoading = false;\r\n                            vm.previewdata = [];\r\n                        }\r\n                    }).catch((err) => {\r\n                        console.log(\"Data not Found\");\r\n                        vm.previewdata = [];\r\n                        vm.ShowAlert(vm.$t(\"No_Record_Found\"), 'failure', true, vm.$t('Alert'));\r\n                        vm.isLoading = false;\r\n                    })\r\n                } else {\r\n                    vm.ShowAlert(vm.$t(\"InvalidSorting\"), 'failure', true, vm.$t('Alert'));\r\n                    vm.isLoading = false;\r\n                }\r\n            } else {\r\n                vm.ShowAlert('Same Display Name ' + ' \"' + CheckSameNameExist + '\" ' + ' is Exist Mutiple Times Please Change', 'failure', true, vm.$t('Alert'));\r\n                vm.isLoading = false;\r\n            }\r\n        },\r\n        Addfields: function (element, event, index, MainFieldname) {\r\n            var vm = this;\r\n            let isFieldActive = vm.$refs.FIELDS.active;\r\n            var ColumnDisplayOrder;\r\n            if (vm.Columnlist.length < 20) {\r\n                if (isFieldActive) {\r\n                    if (vm.Columnlist.length < 1) {\r\n                        ColumnDisplayOrder = vm.Columnlist.length\r\n                    }\r\n                    else {\r\n                        const getlastarrayvalue = vm.Columnlist[vm.Columnlist.length - 1];\r\n                        ColumnDisplayOrder = getlastarrayvalue.Display_Order + 1;\r\n                    }\r\n                    if (element.hasOwnProperty(\"dttype\")) {\r\n                        const checkAlredyExist = vm.Columnlist.findIndex(object => object.CustomFieldId === element.CustomFieldId);\r\n                        if (checkAlredyExist === -1) {\r\n                            vm.Columnlist.push({\r\n                                CustomFieldId: element.CustomFieldId, DisplayName: element.DisplayName, FieldName: element.FieldName, ModuleIndex: index, ColumnFieldDataCode: element.dttype[0].DataTypeCode, Display_Order: ColumnDisplayOrder, Calculated_Field: false, MainFieldname: MainFieldname\r\n                                , FieldIcons: element.dttype[0].icon\r\n                            });\r\n                            if (event.removed == undefined) {\r\n                                vm.modulelisting[index].splice(vm.modulelisting[index].indexOf(element), 1);\r\n                            }\r\n                        }\r\n                    } else {\r\n                        const checkAlredyExist = vm.Columnlist.findIndex(object => object.CustomFieldId == element.CustomFieldId);\r\n                        if (checkAlredyExist === -1) {\r\n                            vm.Columnlist.push({\r\n                                CustomFieldId: element.CustomFieldId, DisplayName: element.DisplayName, FieldName: element.FieldName, ModuleIndex: index, ColumnFieldDataCode: element.ColumnFieldDataCode, Display_Order: ColumnDisplayOrder, Calculated_Field: false, MainFieldname: MainFieldname\r\n                                , FieldIcons: element.FieldIcons\r\n                            });\r\n                            if (event.removed == undefined) {\r\n                                vm.modulelisting[index].splice(vm.modulelisting[index].indexOf(element), 1);\r\n                            }\r\n                            // $(event.target).closest(\".parent-element\").remove();\r\n                        }\r\n\r\n                    }\r\n                }\r\n            } else {\r\n                vm.ShowAlert(vm.$t(\"AddCustomFields\"), 'failure', true, vm.$t('Alert'));\r\n            }\r\n            vm.CalculatedUIEnabled = true;\r\n            vm.searchColumnfilter = []\r\n            vm.MainSearchmodel = '';\r\n        },\r\n        SaveSelectedData: function (element, event) {\r\n            var vm = this;\r\n            var elem = vm.Columnlist.find(x => x.CustomFieldId == element.CustomFieldId);\r\n            elem.DisplayName = vm.modeldisplayname;\r\n            elem.DateFormat = vm.modeldateformat;\r\n            elem.DecimalPlace = vm.modeldecimalplaces;\r\n            elem.IsUseSeprator = vm.modeluseseparator;\r\n            elem.IsCurrencySymbol = vm.modelusecurrency;\r\n            if (vm.Grouplist.find(x => x.CustomFieldId === elem.CustomFieldId)) {\r\n                vm.Grouplist = [];\r\n                vm.Grouplist.push(elem);\r\n            }\r\n            vm.CloseSetting(event);\r\n        },\r\n        DeleteColumnFields: function (element, event) {\r\n            var vm = this;\r\n            let IsGraphColumn = vm.$refs.reportdata.CheckColumnExistInGraph(element.CustomFieldId)\r\n            if (!IsGraphColumn) {\r\n                if (!element.Calculated_Field) {\r\n                    let tagIndex = vm.Columnlist.findIndex(x => x.CustomFieldId == element.CustomFieldId);\r\n                    if (tagIndex > -1) {\r\n                        vm.Columnlist.splice(tagIndex, 1);\r\n                        vm.searchColumnfilter = [];\r\n                        $(\".setting-div-box\").width('0px');\r\n                    }\r\n                }\r\n                let tagIndex1 = vm.Grouplist.findIndex(x => x.CustomFieldId == element.CustomFieldId);\r\n                if (tagIndex1 > -1) {\r\n                    vm.Grouplist.splice(tagIndex1, 1);\r\n                }\r\n                if (vm.Columnlist.length == 0) {\r\n                    vm.previewdata = [];\r\n                    vm.CalculatedUIEnabled = false;\r\n                }\r\n                if (!element.Calculated_Field) {\r\n                    vm.modulelisting[element.ModuleIndex].push({\r\n                        CustomFieldId: element.CustomFieldId, DisplayName: element.DisplayName, FieldName: element.FieldName, ColumnFieldDataCode: element.ColumnFieldDataCode, Display_Order: element.Display_Order, Calculated_Field: false, MainFieldname: element.MainFieldname\r\n                        , FieldIcons: element.FieldIcons\r\n                    });\r\n                }\r\n                vm.Groupsearchmodel = '';\r\n                if (element.Calculated_Field) {\r\n                    if (vm.ExpressionFieldsArray.length > 0 || vm.ExpressionArray.length > 0) {\r\n                        let expIndex = -1;\r\n                        let calctagIndex = vm.Columnlist.findIndex(x => x.ModuleIndex == element.ModuleIndex);\r\n                        if (calctagIndex > -1) {\r\n                            vm.Columnlist.splice(calctagIndex, 1);\r\n                            vm.searchColumnfilter = [];\r\n                        }\r\n                        for (var i = 0; i <= vm.ExpressionArray.length; i++) {\r\n                            if (vm.ExpressionArray[i].ColumnIndex === element.ModuleIndex) {\r\n                                vm.ExpressionArray.splice(i, 1);\r\n                                break;\r\n                            }\r\n                        }\r\n                        vm.ExpressionFieldsArray.forEach(item => {\r\n                            var checkindex = vm.ExpressionFieldsArray.findIndex(x => x.ColumnIndex === element.ModuleIndex)\r\n                            if (checkindex > -1) {\r\n                                vm.ExpressionFieldsArray.splice(checkindex, 1);\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n                if (vm.sortingData != null && vm.sortingData.length > 0) {\r\n                    let sortindex = vm.sortingData.findIndex(x => x.CustomFieldId === element.CustomFieldId)\r\n                    if (sortindex > -1) {\r\n                        vm.sortingData.splice(sortindex, 1);\r\n                        vm.$refs.reportdata?.EditSortingData();\r\n                    }\r\n                }\r\n            }else{\r\n                vm.ShowAlert(vm.$t(\"GraphFields\"), 'warning', true, vm.$t('Alert'));\r\n            }\r\n        },\r\n        DeleteGroupFields: function (element, event) {\r\n            var vm = this;\r\n            let tagIndex = vm.Grouplist.findIndex(x => x.CustomFieldId == element.CustomFieldId);\r\n            if (tagIndex > -1) {\r\n                vm.Grouplist.splice(tagIndex, 1);\r\n            }\r\n            vm.Groupsearchmodel = '';\r\n            if (vm.previewdata != null && vm.previewdata != undefined && vm.previewdata.length > 0) {\r\n                vm.$refs.reportdata?.RefreshReport();\r\n            }\r\n        },\r\n        AddFilter: function (element, index) {\r\n            var vm = this;\r\n            vm.filterRulechange();\r\n            let isFilterActive = vm.$refs.Filters.active != false ? vm.$refs.Filters.active : vm.FilterActiveForMandatory;\r\n            if (vm.Filterlist.length < 20) {\r\n                if (isFilterActive) {\r\n                    const checkAlredyExist = vm.Filterlist.findIndex(object => object.CustomFieldId === element.CustomFieldId);\r\n                    if (checkAlredyExist === -1) {\r\n                        if (vm.category == 'Match All Value') {\r\n                            vm.filtertype = 'AND'\r\n                        }\r\n                        else {\r\n                            vm.filtertype = 'OR'\r\n                        }\r\n                        vm.Filterlist.push({\r\n                            CustomFieldId: element.CustomFieldId,\r\n                            ModuleIndex: index,\r\n                            FieldName: element.FieldName,\r\n                            DisplayName: element.DisplayName,\r\n                            ActualDataType: element.ActualDataType,\r\n                            ColumnFieldDataCode: element.ColumnFieldDataCode != undefined ? element.ColumnFieldDataCode : element.dttype[0].DataTypeCode,\r\n                            PickListOption: element.PickListOption != undefined ? element.PickListOption : element.picklist_options,\r\n                            FilterCount: vm.getCountValue(),\r\n                            FilterTypeAndorOr: vm.filtertype,\r\n                            IsMandatoryforFilter: element.IsMandatoryforFilter,\r\n                            FieldIcons: element.FieldIcons != undefined ? element.FieldIcons : element.dttype[0].icon,\r\n                            OPERATOR_ID: ((typeof (element.OPERATOR_ID) === 'undefined') ? null : element.OPERATOR_ID),\r\n                            valueTypeText: ((typeof (element.result) === 'undefined') ? null : element.result),\r\n                            Calculated_Field: false\r\n                        });\r\n                    }\r\n                    if (event.removed == undefined) {\r\n                        vm.modulelistingforfilter[index].splice(vm.modulelistingforfilter[index].indexOf(element), 1);\r\n                    }\r\n                    vm.FilterActiveForMandatory = false;\r\n                }\r\n            }\r\n            else {\r\n                vm.ShowAlert(vm.$t(\"AddCustomFilter\"), 'failure', true, vm.$t('Alert'));\r\n            }\r\n            vm.searchColumnfilter = []\r\n            vm.MainSearchmodel = '';\r\n            // vm.ClosePopFilter();\r\n        },\r\n        DeleteFilterFields: function (element, event) {\r\n            var vm = this;\r\n            if (!element.IsMandatoryforFilter) {\r\n                let tagIndex = vm.Filterlist.findIndex(x => x.CustomFieldId == element.CustomFieldId);\r\n                if (tagIndex > -1) {\r\n                    vm.Filterlist.splice(tagIndex, 1);\r\n                }\r\n                let tagIndex1 = vm.Filterlist.findIndex(x => x.CustomFieldId == element.CustomFieldId);\r\n                if (tagIndex1 > -1) {\r\n                    vm.Filterlist.splice(tagIndex1, 1);\r\n                }\r\n                vm.dragcount = vm.dragcount - 1\r\n                vm.modulelistingforfilter[element.ModuleIndex].push({\r\n                    CustomFieldId: element.CustomFieldId, FieldName: element.FieldName, DisplayName: element.DisplayName, ActualDataType: element.ActualDataType,\r\n                    FieldIcons: element.FieldIcons, ColumnFieldDataCode: element.ColumnFieldDataCode, PickListOption: element.PickListOption, FilterType: element.filtertype\r\n                });\r\n                let tagIndex2 = vm.RequestFilterJosn.findIndex(item => item.CustomFieldId === element.CustomFieldId);\r\n                if (tagIndex2 != -1) {\r\n                    vm.RequestFilterJosn.splice(tagIndex, 1);\r\n                }\r\n                vm.ClosePopFilter();\r\n            }\r\n        },\r\n        openrulespop: function (element, event) {\r\n            var vm = this;\r\n            if(element.selectedOPValue == undefined){\r\n                element.OPERATOR_ID = '';\r\n            }\r\n            element.selectedOPValue = '';\r\n            $(\".filter-list-box\").width('0px').css(\"overflow\", \"hidden\");\r\n            $(event.target).closest(\".parentdiv\").find(\".filter-list-box\").width('500px').css(\"overflow\", \"visible\");\r\n            vm.GetOperatordata(element);\r\n            vm.texttypevalue1 = false;\r\n            vm.numbertypevalue1 = false;\r\n            vm.datetypevalue1 = false;\r\n            vm.datetypevalue2 = false;\r\n            vm.multiselectvalue = false;\r\n            vm.numbertypevalue2 = false;\r\n            vm.texttypevalue2 = false;\r\n            vm.DDLForFilter = false;\r\n            vm.timetypevalue = false;\r\n            vm.timetypevalue2 = false;\r\n            vm.dropdwonvalues = [];\r\n            vm.ValueDisplaytext = '';\r\n            vm.ValueDisplaytext2 = '';\r\n            vm.ValueDisplaynumber = '';\r\n            vm.ValueDisplaynumber2 = '';\r\n            vm.ValueDisplaydate = '';\r\n            vm.ValueDisplaydate2 = '';\r\n            vm.Displaymultiplevalue = '';\r\n            vm.modelFilterDDLValue = '';\r\n            vm.ValueDisplayTime = '';\r\n            vm.ValueDisplayTime2 = '';\r\n        },\r\n        getCountValue: function () {\r\n            return this.dragcount++;\r\n        },\r\n        dragover: function (event) {\r\n            let count = 1;\r\n            $(\".draggable-list .filter-div\").each(function (index) {\r\n                count = index + 1;\r\n                $(this).find(\".filter-count-div\").html(count);\r\n            });\r\n            this.dragcount = count;\r\n        },\r\n        GroupSearching: function () {\r\n            this.itemclass = '';\r\n        },\r\n        selectfiltervalue: function (data) {\r\n            var vm = this;\r\n            if (vm.Grouplist.length < 1) {\r\n                vm.Grouplist.push(data);\r\n                vm.itemclass = 'd-none';\r\n                vm.Groupsearchmodel = '';\r\n            }\r\n        },\r\n        selectfilterColumnvalue: function (data) {\r\n            var vm = this\r\n            const index = vm.Columnlist.findIndex(object => object.CustomFieldId === data.CustomFieldId);\r\n            if (index === -1) {\r\n                vm.modulelisting.forEach((mitem, mindex) => {\r\n                    vm.modulelisting[mindex].forEach(inneritem => {\r\n                        const validindex = vm.modulelisting[mindex].findIndex(x => x.CustomFieldId === data.CustomFieldId);\r\n                        if (validindex != -1) {\r\n                            vm.Addfields(data, '', mindex, vm.submodulename[mindex]);\r\n                            vm.itemclass = 'd-none';\r\n                        }\r\n                    })\r\n                })\r\n            }\r\n            vm.ColumnSearchmodel = '';\r\n        },\r\n        ResetPreview: function (customreportparameters) {\r\n            var vm = this;\r\n            vm.modulelisting.splice(0);\r\n            vm.Columnlist.splice(0);\r\n            vm.Columnlist = [];\r\n            vm.Grouplist.splice(0);\r\n            vm.Groupsearchmodel = '';\r\n            vm.previewdata.splice(0);\r\n            vm.RequestFilterJosn = [];\r\n            vm.Filterlist = [];\r\n            vm.ExpressionArray = [];\r\n            vm.ExpressionFieldsArray = [];\r\n            vm.saveJsonReport = [];\r\n            vm.setvalue = 0;\r\n            vm.modulelistingforfilter.splice(0);\r\n            vm.CalculatedUIEnabled = false;\r\n            vm.ChartGroupingArray = [];\r\n            vm.GroupingArray = [];\r\n            vm.MainSearchmodel = '';\r\n            vm.IsMandatoryforFilterAfterReset = true;\r\n            vm.SearchNoRecord = false;\r\n            vm.searchColumnfilter = [];\r\n            vm.GetList(customreportparameters);\r\n        },\r\n        GetDateFromDetail: function () {\r\n            var vm = this;\r\n            DataReportService.GetDateDetails().then((response) => {\r\n                vm.GetDateFromDB = response.data;\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            })\r\n        },\r\n        resetoldvalueinfilteroperator(element, IsBinding) {\r\n            var vm = this;\r\n            if (element.selectedOPValue != '' && IsBinding != '') {\r\n                vm.dropdwonvalues = [];\r\n                vm.ValueDisplaytext = '';\r\n                vm.ValueDisplaytext2 = '';\r\n                vm.ValueDisplaynumber = '';\r\n                vm.ValueDisplaynumber2 = '';\r\n                vm.ValueDisplaydate = '';\r\n                vm.ValueDisplaydate2 = '';\r\n                vm.Displaymultiplevalue = '';\r\n                vm.ValueDisplayTime = '';\r\n                vm.ValueDisplayTime2 = '';\r\n                vm.modelFilterDDLValue = '';\r\n            }\r\n        },\r\n        checkvalue: function (operatorname, element, OperatorExpression, operatorid, IsBinding) {\r\n            var vm = this;\r\n            if (element.ColumnFieldDataCode === 'select' && element.PickListOption === 'Lookup') {\r\n                vm.GetFilterSelectDDL(element.CustomFieldId, element.FieldName);\r\n            }\r\n            setTimeout(function () {\r\n                vm.savedOperatorName = \"\";\r\n                vm.SelectedoperatorMappedDatatype = element.ColumnFieldDataCode;\r\n                vm.CurrentOperatorSelected = OperatorExpression;\r\n                vm.savedOperatorName = operatorname;\r\n                vm.operator_id = operatorid;\r\n                if (element.ColumnFieldDataCode == 'string') {\r\n                    if (operatorname == 'Between') {\r\n                        vm.texttypevalue1 = true;\r\n                        vm.texttypevalue2 = true;\r\n                    } else if (operatorname == 'Is Empty' || operatorname == 'Is Not Empty') {\r\n                        vm.texttypevalue1 = false;\r\n                        vm.texttypevalue2 = false;\r\n                    }\r\n                    else {\r\n                        vm.texttypevalue1 = true;\r\n                        vm.texttypevalue2 = false;\r\n                    }\r\n                }\r\n                if (element.ColumnFieldDataCode == 'decimal' || element.ColumnFieldDataCode == 'int' || element.ColumnFieldDataCode == 'bigint') {\r\n                    if (operatorname == 'Between') {\r\n                        vm.numbertypevalue1 = true;\r\n                        vm.numbertypevalue2 = true;\r\n                    } else if (operatorname == 'Is Empty' || operatorname == 'Is Not Empty') {\r\n                        vm.numbertypevalue1 = false;\r\n                        vm.numbertypevalue2 = false;\r\n                    }\r\n                    else {\r\n                        vm.numbertypevalue1 = true;\r\n                        vm.numbertypevalue2 = false;\r\n                    }\r\n                }\r\n                if (element.ColumnFieldDataCode === 'select' && element.PickListOption === 'Lookup') {\r\n                    if (operatorname == 'Is Empty' || operatorname == 'Is Not Empty') {\r\n                        vm.DDLForFilter = false;\r\n                        vm.multiselectvalue = false;\r\n                        vm.texttypevalue1 = false;\r\n                        vm.texttypevalue2 = false;\r\n                    }\r\n                    else if (OperatorExpression == 'IN' || OperatorExpression == 'NOT IN') {\r\n                        vm.multiselectvalue = true;\r\n                        vm.DDLForFilter = false;\r\n                    } else {\r\n                        vm.DDLForFilter = true;\r\n                        vm.multiselectvalue = false;\r\n                        vm.texttypevalue1 = false;\r\n                        vm.texttypevalue2 = false;\r\n                    }\r\n                }\r\n                if (element.ColumnFieldDataCode === 'date') {\r\n                    if (operatorname == 'Between') {\r\n                        vm.datetypevalue1 = true;\r\n                        vm.datetypevalue2 = true;\r\n                    } else if (operatorname == 'Is Empty' || operatorname == 'Is Not Empty' || operatorname == 'Is Off Day' || operatorname == 'Is Week End') {\r\n                        vm.datetypevalue1 = false;\r\n                        vm.datetypevalue2 = false;\r\n                    }\r\n                    else {\r\n                        vm.datetypevalue1 = true;\r\n                        vm.datetypevalue2 = false;\r\n                    }\r\n                }\r\n\r\n                if (element.ColumnFieldDataCode === 'time') {\r\n                    if (operatorname == 'Between') {\r\n                        vm.timetypevalue = true;\r\n                        vm.timetypevalue2 = true;\r\n                    } else if (operatorname == 'Is Empty' || operatorname == 'Is Not Empty' || operatorname == 'Is Off Day' || operatorname == 'Is Week End') {\r\n                        vm.timetypevalue = false;\r\n                        vm.timetypevalue2 = false;\r\n                    }\r\n                    else {\r\n                        vm.timetypevalue = true;\r\n                        vm.timetypevalue2 = false;\r\n                    }\r\n                }\r\n\r\n                if (IsBinding != undefined) {\r\n                    if (operatorid != undefined && operatorname != undefined) {\r\n                        vm.dropdwonvalues = [];\r\n                        vm.ValueDisplaytext = '';\r\n                        vm.ValueDisplaytext2 = '';\r\n                        vm.ValueDisplaynumber = '';\r\n                        vm.ValueDisplaynumber2 = '';\r\n                        vm.ValueDisplaydate = '';\r\n                        vm.ValueDisplaydate2 = '';\r\n                        vm.modelFilterDDLValue = '';\r\n                        vm.ValueDisplayTime = '';\r\n                        vm.ValueDisplayTime2 = '';\r\n                        if (element.OPERATOR_ID == operatorid) {\r\n                            vm.FillFiltervalue(operatorid, element);\r\n                        }\r\n                        element = [];\r\n                    }\r\n                }\r\n                else {\r\n                    var checksameoperator = vm.Filterlist.find(x => x.OPERATOR_ID === operatorid);\r\n                    if (checksameoperator != -1) {\r\n                        vm.resetoldvalueinfilteroperator(element, IsBinding)\r\n                    }\r\n                }\r\n            }, 1000);\r\n        },\r\n        GetOperatordata: function (element) {\r\n            var vm = this;\r\n            var CustomFieldId = element.CustomFieldId;\r\n            var params = `dataType=${element.ColumnFieldDataCode}&customField=${CustomFieldId}`;\r\n            DataReportService.GetDataOperator(params).then(response => {\r\n                vm.GetOperator = response.data.DATA;\r\n                vm.BindOperatorValues(CustomFieldId, element);\r\n                if (element.OPERATOR_ID > 0) {\r\n                    var checkIfExists = vm.GetOperator.filter((x) => {\r\n                        return x.OPERATOR_ID == element.OPERATOR_ID\r\n                    });\r\n                    if (checkIfExists.length > 0) {\r\n                        var IsBinding = true;\r\n                        vm.isBinding = IsBinding;\r\n                        vm.checkvalue(checkIfExists[0].OPERATOR_DISPLAY_NAME, element, checkIfExists[0].OPERATOR_EXPRESSION, element.OPERATOR_ID, checkIfExists[0].MP[0].OPERATION_DATA_TYPE, IsBinding)\r\n                    }\r\n                }\r\n            })\r\n        },\r\n        popupvaluebind(Index, data) {\r\n            var vm = this;\r\n            if (data.ColumnFieldDataCode == 'string') {\r\n                if (data.OperatorDisplayName == 'Equal to one of multiple possible values' || data.OperatorDisplayName == 'Not Equal to one of multiple possible values') {\r\n                    vm.texttypevalue1 = true;\r\n                    vm.ValueDisplaytext = this.Filterlist[Index].valueTypeText.split(',');\r\n                    //  vm.value5 = true;\r\n                    // vm.dropdwonvalues = this.Filterlist[Index].Displaymultiplevalue.split(',');\r\n                }\r\n                else {\r\n                    vm.texttypevalue1 = true;\r\n                    vm.ValueDisplaytext = this.Filterlist[Index].valueTypeText;\r\n                }\r\n            }\r\n            if (data.ColumnFieldDataCode == 'select') {\r\n                if (data.OperatorDisplayName == 'Equal to one of multiple possible values' || data.OperatorDisplayName == 'Not Equal to one of multiple possible values') {\r\n                    vm.multiselectvalue = true;\r\n                    vm.commaSepratedSelectedValues = this.Filterlist[Index].Displaymultiplevalue.split(',');\r\n                }\r\n                else {\r\n                    vm.DDLForFilter = true;\r\n                    var GetFilterddlvalue = vm.options.find(x => x.label === data.DropDownValue);\r\n                    vm.modelFilterDDLValue = GetFilterddlvalue?.value;\r\n                }\r\n            }\r\n            if (data.ColumnFieldDataCode == 'date') {\r\n                if (vm.DisplayName == 'Between') {\r\n                    vm.datetypevalue1 = true;\r\n                    vm.datetypevalue2 = true;\r\n                    vm.ValueDisplaydate = this.Filterlist[Index].valueTypeFirstdate;\r\n                    vm.ValueDisplaydate2 = this.Filterlist[Index].valueTypeSeconddate;\r\n                }\r\n                else {\r\n                    vm.datetypevalue1 = true;\r\n                    vm.ValueDisplaydate = this.Filterlist[Index].valueTypeFirstdate;\r\n                }\r\n            }\r\n            if (data.ColumnFieldDataCode == 'time') {\r\n                if (vm.DisplayName == 'Between') {\r\n                    vm.timetypevalue = true;\r\n                    vm.timetypevalue2 = true;\r\n                    vm.ValueDisplayTime = this.Filterlist[Index].ValueDisplayFirstTime;\r\n                    vm.ValueDisplayTime2 = this.Filterlist[Index].ValueDisplaySecondTime;\r\n                }\r\n                else {\r\n                    vm.timetypevalue = true;\r\n                    vm.ValueDisplayTime = this.Filterlist[Index].ValueDisplayFirstTime;\r\n                }\r\n            }\r\n        },\r\n        BindOperatorValues(CustomFieldId, element) {\r\n            var vm = this;\r\n            vm.isBinding = false;\r\n            var Index = this.Filterlist.findIndex(element => element.CustomFieldId == CustomFieldId)\r\n            vm.DisplayName = this.Filterlist[Index].OperatorDisplayName;\r\n            if (vm.DisplayName != null && vm.DisplayName != undefined && vm.DisplayName != '') {\r\n                vm.operator = this.GetOperator.find(item => item.OPERATOR_DISPLAY_NAME == vm.DisplayName)\r\n                vm.Filterlist[Index]['selectedOPValue'] = vm.operator.OPERATOR_ID;\r\n                vm.Datatype = vm.operator.MP[0].OPERATION_DATA_TYPE;\r\n                vm.popupvaluebind(Index, element);\r\n                if (element.ColumnFieldDataCode == 'decimal' || element.ColumnFieldDataCode == 'int') {\r\n                    if (vm.DisplayName == 'Between') {\r\n                        vm.numbertypevalue1 = true;\r\n                        vm.numbertypevalue2 = true;\r\n                        vm.ValueDisplaynumber = this.Filterlist[Index].valueTypeNumber;\r\n                        vm.ValueDisplaynumber2 = this.Filterlist[Index].valueTypeNumber2;\r\n                    }\r\n                    else {\r\n                        vm.numbertypevalue1 = true;\r\n                        vm.ValueDisplaynumber = this.Filterlist[Index].valueTypeNumber;\r\n                    }\r\n                }\r\n            } else {\r\n                vm.selectedOPValue = '';\r\n            }\r\n        },\r\n        FilterJosnRquest(elem) {\r\n            var vm = this;\r\n            if ((elem.OperatorDisplayName == 'Not Match a character pattern' || elem.OperatorDisplayName == 'Match a character pattern') && vm.ValueDisplaytext == '') {\r\n                vm.ShowAlert(vm.$t(\"Please enter some value in the text field\"), 'warning', true, vm.$t('Alert'));\r\n                return false;\r\n            }\r\n            if (vm.SelectedoperatorMappedDatatype == 'string') {\r\n                if (vm.CurrentOperatorSelected == 'IN' || vm.CurrentOperatorSelected == 'NOT IN') {\r\n                    vm.FirstOperand = vm.ValueDisplaytext\r\n                    vm.FirstOperandValue1 = vm.ValueDisplaytext2;\r\n\r\n                    if (elem.OperatorDisplayName == 'Equal to one of multiple possible values' || elem.OperatorDisplayName == 'Not Equal to one of multiple possible values') {\r\n                        let Commaseprated = vm.ValueDisplaytext.split(',')\r\n\r\n\r\n                        vm.FirstOperandValue1 = Commaseprated;\r\n                    }\r\n                }\r\n                else {\r\n                    vm.FirstOperand = '\\'' + vm.ValueDisplaytext + '\\'';\r\n                    vm.FirstOperandValue1 = vm.ValueDisplaytext;\r\n                }\r\n            }\r\n\r\n            else if (vm.SelectedoperatorMappedDatatype == 'decimal' || vm.SelectedoperatorMappedDatatype == 'int' || vm.SelectedoperatorMappedDatatype == 'bigint') {\r\n                if (elem.OperatorDisplayName == 'Between') {\r\n                    vm.FirstOperand = '\\'' + elem.valueTypeNumber + '\\'';\r\n                    vm.FirstOperandValue1 = elem.valueTypeNumber;\r\n                    vm.SecondOperand = '\\'' + elem.valueTypeNumber2 + '\\'';\r\n                    vm.SecondOperandValue1 = elem.valueTypeNumber2;\r\n                }\r\n                else {\r\n                    vm.FirstOperand = '\\'' + elem.valueTypeNumber + '\\'';\r\n                    vm.FirstOperandValue1 = elem.valueTypeNumber;\r\n                }\r\n            }\r\n            let operatoerExpressionResult = vm.ConvertOperatorToExpression(vm.CurrentOperatorSelected, vm.FirstOperand, vm.SecondOperand);\r\n            const checkAlredyExist = vm.RequestFilterJosn.findIndex(item => item.CustomFieldId === elem.CustomFieldId);\r\n            if (checkAlredyExist == -1) {\r\n                vm.RequestFilterJosn.push({\r\n                    CustomFieldId: elem.CustomFieldId,\r\n                    FieldName: elem.FieldName,\r\n                    ActualDataType: vm.SelectedoperatorMappedDatatype,\r\n                    FilterCount: elem.FilterCount,\r\n                    OperatorExpression: operatoerExpressionResult,\r\n                    OPERATOR_ID: vm.operator_id,\r\n                    Value1: vm.FirstOperandValue1,\r\n                    Value2: vm.SecondOperandValue1,\r\n                    IsMandatoryforFilter: elem.IsMandatoryforFilter,\r\n                    FieldIcons: elem.FieldIcons,\r\n                    DisplayName: elem.DisplayName,\r\n                    FilterTypeAndorOr: elem.FilterTypeAndorOr,\r\n                    PickListOption: elem.PickListOption,\r\n                    ColumnFieldDataCode: elem.ColumnFieldDataCode,\r\n                })\r\n            }\r\n            else {\r\n                let element = vm.RequestFilterJosn.find(item => item.CustomFieldId === elem.CustomFieldId);\r\n                element.OperatorExpression = operatoerExpressionResult;\r\n                element.PickListOption = elem.PickListOption;\r\n                element.ColumnFieldDataCode = elem.ColumnFieldDataCode;\r\n                element.OPERATOR_ID = vm.operator_id;\r\n                element.Value1 = vm.FirstOperandValue1;\r\n                element.Value2 = vm.SecondOperandValue1;\r\n                element.IsMandatoryforFilter = elem.IsMandatoryforFilter;\r\n            }\r\n            vm.ClosePopFilter();\r\n        },\r\n        FillFiltervalue: function (id, element) {\r\n            var vm = this;\r\n            vm.ArrayforFilterpopup.push(element);\r\n            var checkIfExists = vm.ArrayforFilterpopup.findIndex((x) => {\r\n                return x.OPERATOR_ID == id\r\n            });\r\n            if (checkIfExists > -1) {\r\n                var filtervalueexist = vm.RequestFilterJosn.find(x => x.OPERATOR_ID == id && x.CustomFieldId === element.CustomFieldId)\r\n                if (element.ColumnFieldDataCode == 'string') {\r\n                    vm.ValueDisplaytext = filtervalueexist?.Value1;\r\n                    // vm.ValueDisplaytext = element.valueTypeText\r\n                    vm.ValueDisplaytext2 = filtervalueexist?.Value2;\r\n                }\r\n                else if (element.ColumnFieldDataCode == 'decimal' || element.ColumnFieldDataCode == 'int' || element.ColumnFieldDataCode == 'bigint') {\r\n                    vm.ValueDisplaynumber = filtervalueexist?.Value1;\r\n                    vm.ValueDisplaynumber2 = filtervalueexist?.Value2;\r\n                }\r\n                else if (element.ColumnFieldDataCode === 'date') {\r\n                    vm.ValueDisplaydate = filtervalueexist?.Value1;\r\n                    // vm.ValueDisplaydate = element.valueTypeFirstdate;\r\n                    vm.ValueDisplaydate2 = filtervalueexist?.Value2;\r\n                }\r\n                else if (element.ColumnFieldDataCode === 'time') {\r\n                    vm.ValueDisplayTime = filtervalueexist?.Value1;\r\n                    // vm.ValueDisplayTime = element.ValueDisplayFirstTime;\r\n                    vm.ValueDisplayTime2 = filtervalueexist?.Value2;\r\n                }\r\n                else if (element.ColumnFieldDataCode === 'select' && element.PickListOption === 'Lookup') {\r\n                    if (vm.CurrentOperatorSelected == 'IN' || vm.CurrentOperatorSelected == 'NOT IN') {\r\n                        var multiddl = filtervalueexist?.Value1.replace(/\"|'/g, '');\r\n                        vm.dropdwonvalues = multiddl?.split(',');\r\n                    } else {\r\n                        vm.modelFilterDDLValue = filtervalueexist?.Value1;\r\n                    }\r\n                }\r\n            }\r\n            vm.filterRulechange()\r\n        },\r\n        applySetting: function (CustomFieldId) {\r\n            var vm = this;\r\n            var isBetweenTrue = false\r\n            if (vm.savedOperatorName == 'Between') {\r\n                if (vm.ValueDisplaytext != '' && vm.ValueDisplaytext2 != '' || (vm.ValueDisplaynumber != '' || vm.ValueDisplaynumber == '0') && vm.ValueDisplaynumber2 != ''\r\n                    || vm.ValueDisplaydate != '' && vm.ValueDisplaydate2 != '' || vm.ValueDisplayTime != '' && vm.ValueDisplayTime2 != '') {\r\n                    isBetweenTrue = true;\r\n                }\r\n            } else if (vm.ValueDisplaytext != '' || vm.ValueDisplaytext2 != '' || vm.ValueDisplaynumber != '' || vm.ValueDisplaynumber == '0' ||\r\n                vm.ValueDisplaynumber2 != '' || vm.ValueDisplaydate != '' || vm.ValueDisplaydate2 != '' || vm.ValueDisplayTime != '' || vm.ValueDisplayTime2 != '' ||\r\n                vm.dropdwonvalues.length > 0 || vm.modelFilterDDLValue != '' || vm.savedOperatorName == 'Is Empty' || vm.savedOperatorName == 'Is Not Empty'\r\n                || vm.savedOperatorName == 'Is Off Day' || vm.savedOperatorName == 'Is Week End') {\r\n                isBetweenTrue = true\r\n            }\r\n            setTimeout(function () {\r\n                if (isBetweenTrue) {\r\n                    var Multiddlvalue = [];\r\n                    // if(vm.ValueDisplaytext==\"\" && vm.ValueDisplaytext2==\"\"){\r\n                    //     vm.ShowAlert(\"Please fill this value.\", \"warning\")\r\n                    //     return false;\r\n                    // }\r\n                    vm.dropdwonvalues.forEach(ddlvalues => {\r\n                        const isddlvalueexist = vm.options.find(j => j.value === ddlvalues)\r\n                        if (isddlvalueexist != -1 && isddlvalueexist != undefined) {\r\n                            Multiddlvalue.push(isddlvalueexist.label);\r\n                        }\r\n                    })\r\n                    if (vm.dropdwonvalues != '') {\r\n                        vm.commaSepratedSelectedValues = vm.dropdwonvalues?.join();\r\n                        vm.modelFilterDDLValue = '';\r\n                    }\r\n                    var GetDDLValue = '';\r\n                    if (vm.modelFilterDDLValue != '') {\r\n                        GetDDLValue = vm.options.find(i => i.value === vm.modelFilterDDLValue)\r\n                    }\r\n                    var elem = vm.Filterlist.find(x => x.CustomFieldId == CustomFieldId);\r\n                    elem.OperatorDisplayName = vm.savedOperatorName;\r\n                    elem.valueTypeText = vm.ValueDisplaytext;\r\n                    elem.valueTypeText2 = vm.ValueDisplaytext2;\r\n                    elem.valueTypeNumber = vm.ValueDisplaynumber;\r\n                    elem.valueTypeNumber2 = vm.ValueDisplaynumber2;\r\n                    elem.valueTypeFirstdate = vm.$options.filters.formatDate(vm.ValueDisplaydate);\r\n                    elem.valueTypeSeconddate = vm.$options.filters.formatDate(vm.ValueDisplaydate2);\r\n                    elem.ValueDisplayFirstTime = vm.ValueDisplayTime;\r\n                    elem.ValueDisplaySecondTime = vm.ValueDisplayTime2;\r\n                    elem.Displaymultiplevalue = Multiddlvalue?.join();\r\n                    elem.DropDownValue = GetDDLValue?.label;\r\n                    // elem.DropDownValue = GetDDLValue;\r\n                    elem.OPERATOR_ID = vm.operator_id;\r\n                    if (vm.SelectedoperatorMappedDatatype == 'select') {\r\n                        if (vm.CurrentOperatorSelected == 'IN' || vm.CurrentOperatorSelected == 'NOT IN') {\r\n                            //multi select  IN(\"'1','2','3'\") in Filter Case\r\n                            let valArray = vm.commaSepratedSelectedValues.split(\".\");\r\n                            let commsplitedVal = valArray.join(\",\")\r\n                            vm.FirstOperand = '\\'' + commsplitedVal.split(',').join('\\',\\'') + '\\'';\r\n                            let CommaSepratedStringValues = vm.FirstOperand;\r\n                            vm.FirstOperandValue1 = CommaSepratedStringValues;\r\n                        }\r\n                        else {\r\n                            vm.FirstOperand = '\\'' + vm.modelFilterDDLValue + '\\'';\r\n                            vm.FirstOperandValue1 = vm.modelFilterDDLValue;\r\n                        }\r\n                    }\r\n                    else if (vm.SelectedoperatorMappedDatatype == 'date') {\r\n                        if (elem.OperatorDisplayName == 'Between') {\r\n                            vm.FirstOperand = '\\'' + elem.valueTypeFirstdate + '\\'';\r\n                            vm.FirstOperandValue1 = elem.valueTypeFirstdate;\r\n                            vm.SecondOperand = '\\'' + elem.valueTypeSeconddate + '\\'';\r\n                            vm.SecondOperandValue1 = elem.valueTypeSeconddate;\r\n                        } else {\r\n                            vm.FirstOperand = '\\'' + elem.valueTypeFirstdate + '\\'';\r\n                            vm.FirstOperandValue1 = elem.valueTypeFirstdate;\r\n                        }\r\n                    } else if (vm.SelectedoperatorMappedDatatype == 'time') {\r\n                        if (elem.OperatorDisplayName == 'Between') {\r\n                            vm.FirstOperand = '\\'' + elem.ValueDisplayFirstTime + '\\'';\r\n                            vm.FirstOperandValue1 = elem.ValueDisplayFirstTime;\r\n                            vm.SecondOperand = '\\'' + elem.ValueDisplaySecondTime + '\\'';\r\n                            vm.SecondOperandValue1 = elem.ValueDisplaySecondTime;\r\n                        } else {\r\n                            vm.FirstOperand = '\\'' + elem.ValueDisplayFirstTime + '\\'';\r\n                            vm.FirstOperandValue1 = elem.ValueDisplayFirstTime;\r\n                        }\r\n                    }\r\n                    vm.FilterJosnRquest(elem);\r\n                } else {\r\n                    vm.ShowAlert(\"Cannot Add Empty Filter\", \"failure\");\r\n                }\r\n            }, 500)\r\n            //vm.ClosePopFilter();\r\n        },\r\n        FilterTabClicked() {\r\n            var vm = this;\r\n            vm.showModuleListForFilter = true;\r\n            vm.showModuleListForField = false;\r\n            vm.MainSearchmodel = '';\r\n            vm.searchColumnfilter = [];\r\n\r\n        },\r\n        FieldTabClicked() {\r\n            var vm = this;\r\n            vm.showModuleListForFilter = false;\r\n            vm.showModuleListForField = true;\r\n            vm.MainSearchmodel = '';\r\n            vm.searchColumnfilter = [];\r\n        },\r\n        openActionIcon: function (e) {\r\n            var vm = this;\r\n            vm.showRowLevelFunction=true;\r\n            // e.target.nextSibling.removeAttribute('style');\r\n            // e.target.nextSibling.setAttribute('style', 'width:240px;');\r\n            // e.target.nextSibling.style.display = 'block';\r\n        },\r\n        closeActionIcon: function (e) {\r\n            var vm = this;\r\n            vm.showRowLevelFunction=false;\r\n        },\r\n        OpenCalculatedUI: function () {\r\n            var vm = this;\r\n            vm.showcalculatedUI = true;\r\n            vm.editexpressionvalue = false;\r\n            vm.showRowLevelFunction=false;\r\n            $(\"#showcalculatedfield\").modal(\"show\");\r\n            setTimeout(function () {\r\n                $(\"#showcalculatedfield\").modal('show');\r\n                setTimeout(function () {\r\n                    vm.SetBootstraptoolTip();\r\n                }, 200);\r\n            }, 1000);\r\n        },\r\n        VerifiedExpressionColumnValue({ ExpressionID, FieldValue, VerifiedExpression, ExpressionFieldArray, ExpressionDisplay, Functionkey }) {\r\n            var vm = this;\r\n            const checkAlredyExist = vm.Columnlist.findIndex(object => object.CustomFieldId === ExpressionID);\r\n            const checkFieldVlaueExist = vm.Columnlist.findIndex(obj => obj.FieldName === FieldValue);\r\n            var ExpressionDisplayOrder;\r\n            if (checkAlredyExist === -1 || checkFieldVlaueExist === -1) {\r\n                var checkExpExist = '';\r\n                var indexvalue = '';\r\n                var count = 0;\r\n                vm.Columnlist.forEach(CheckItem => {\r\n                    if (CheckItem.Calculated_Field || count != 0) {\r\n                        vm.setvalue = 1;\r\n                        count++;\r\n                    } else { vm.setvalue = 0; }\r\n                })\r\n                if (vm.setvalue == 1) {\r\n                    vm.Columnlist.forEach(item => {\r\n                        if (item.Calculated_Field) {\r\n                            var tempdata = [];\r\n                            tempdata.push(item);\r\n                            var checkExpvalue = tempdata.find(x => x.ModuleIndex);\r\n                            checkExpExist = checkExpvalue.ModuleIndex;\r\n                        }\r\n                    })\r\n                    indexvalue = parseInt(checkExpExist) + 1;\r\n                }\r\n                else {\r\n                    const getlastarrayvalue = vm.Columnlist[vm.Columnlist.length - 1];\r\n                    indexvalue = getlastarrayvalue.ModuleIndex + 2;\r\n                    vm.setvalue = 1;\r\n                }\r\n                if (vm.Columnlist.length < 1) {\r\n                    ExpressionDisplayOrder = vm.Columnlist.length\r\n                }\r\n                else {\r\n                    const getlastarrayvalue = vm.Columnlist[vm.Columnlist.length - 1];\r\n                    ExpressionDisplayOrder = getlastarrayvalue.Display_Order + 1;\r\n                }\r\n                vm.Columnlist.push({\r\n                    CustomFieldId: '', FieldName: FieldValue, DisplayName: FieldValue, DateFormat: null,\r\n                    DateFormatId: null,\r\n                    DecimalPlace: null,\r\n                    IsUseSeprator: null,\r\n                    IsCurrencySymbol: null,\r\n                    ColumnFieldDataCode: \"string\",\r\n                    Display_Order: ExpressionDisplayOrder,\r\n                    ModuleIndex: indexvalue,\r\n                    Calculated_Field: true,\r\n                    ExpressionDisplay: ExpressionDisplay\r\n                });\r\n                if (VerifiedExpression != \"\") {\r\n                    vm.ExpressionArray.push(\r\n                        {\r\n                            \"ExpressionID\": ExpressionID, \"Expression\": VerifiedExpression, \"ExpressionName\": FieldValue, \"ExpressionDisplay\": ExpressionDisplay, \"ColumnIndex\": indexvalue,\r\n                            \"REPORTID\": vm.customreportparameters.ReportID,\r\n                            \"FunctionKeys\": Functionkey\r\n                        }\r\n                    )\r\n                    var dataele = vm.Columnlist.find(x => x.FieldName === FieldValue);\r\n                    dataele.ModuleIndex = indexvalue;\r\n                    if (vm.ExpressionFieldsArray == undefined) {\r\n                        vm.ExpressionFieldsArray = [];\r\n                    }\r\n                    ExpressionFieldArray.forEach(Arrayitem => {\r\n                        vm.ExpressionFieldsArray.push({ CustomFieldId: Arrayitem.CustomFieldId, FieldName: Arrayitem.FieldName, ColumnIndex: indexvalue });\r\n                    })\r\n                }\r\n            }\r\n            else {\r\n                const getindexvalue = vm.Columnlist.findIndex(x => x.FieldName === FieldValue);\r\n                const getlastarrayvalue = vm.Columnlist[getindexvalue - 1];\r\n                const indexvalue = getlastarrayvalue.ModuleIndex + 1;\r\n                const getlastarrayvalueorder = vm.Columnlist[vm.Columnlist.length - 1];\r\n                ExpressionDisplayOrder = getlastarrayvalueorder.Display_Order + 1;\r\n                var elem = vm.Columnlist.find(x => x.FieldName == FieldValue);\r\n                elem.CustomFieldId = ExpressionID;\r\n                elem.FieldName = FieldValue;\r\n                elem.DisplayName = FieldValue;\r\n                elem.DateFormat = null;\r\n                elem.DateFormatId = null;\r\n                elem.DecimalPlace = null;\r\n                elem.IsUseSeprator = null;\r\n                elem.IsCurrencySymbol = null;\r\n                elem.ColumnFieldDataCode = \"string\";\r\n                elem.Display_Order = ExpressionDisplayOrder;\r\n                elem.ModuleIndex = vm.Columnlist[getindexvalue].ModuleIndex;\r\n                elem.Calculated_Field = true,\r\n                    elem.ExpressionDisplay = ExpressionDisplay;\r\n\r\n\r\n                if (VerifiedExpression != \"\") {\r\n                    var verifyelem = vm.ExpressionArray.find(vobject => vobject.ExpressionName === FieldValue)\r\n                    verifyelem.ExpressionID = ExpressionID;\r\n                    verifyelem.Expression = VerifiedExpression;\r\n                    verifyelem.ExpressionName = FieldValue;\r\n                    verifyelem.ExpressionDisplay = ExpressionDisplay;\r\n                    verifyelem.ColumnIndex = vm.Columnlist[getindexvalue].ModuleIndex;\r\n                    verifyelem.REPORTID = vm.customreportparameters.ReportID;\r\n                    verifyelem.FunctionKeys = Functionkey;\r\n\r\n                    ExpressionFieldArray.forEach(Arrayitem => {\r\n                        var fieldexp = vm.ExpressionFieldsArray.find(fobject => fobject.ColumnIndex === verifyelem.ColumnIndex)\r\n                        fieldexp.CustomFieldId = Arrayitem.CustomFieldId;\r\n                        fieldexp.FieldName = Arrayitem.FieldName;\r\n                        fieldexp.ColumnIndex = vm.Columnlist[getindexvalue].ModuleIndex;\r\n                    })\r\n                }\r\n            }\r\n            vm.$refs.Calculated?.close();\r\n        },\r\n        ListFiltering: function () {\r\n            var vm = this;\r\n            let isFieldActive = vm.$refs.FIELDS.active;\r\n            var input = document.getElementById('searchinput');\r\n\r\n            var filterinput = input.value.toUpperCase();\r\n            if (filterinput != null && filterinput != \"\") {\r\n                $(\".multi-collapse\").addClass(\"show\");\r\n            }\r\n            else {\r\n                $(\".multi-collapse\").removeClass(\"show\");\r\n            }\r\n            var searchcol = [];\r\n            var searchfilter = [];\r\n            if (isFieldActive) {\r\n                vm.modulelisting.forEach((item, index) => {\r\n                    vm.modulelisting[index].forEach((indexitem) => {\r\n                        searchfilter.push(indexitem);\r\n                        searchcol = searchfilter.filter(searchitem => {\r\n                            var displayMainColname = (searchitem.DisplayName != null) ? searchitem.DisplayName : searchitem.FieldName;\r\n                            return displayMainColname.replace(/\\W/g, \"\").toLowerCase().includes(filterinput.replace(/\\W/g, \"\").toLowerCase());\r\n                        })\r\n                    })\r\n                    vm.searchColumnfilter[index] = searchcol;\r\n                    searchfilter = [];\r\n                    searchcol = [];\r\n                })\r\n                let count = 0;\r\n                for (let filteritem in vm.searchColumnfilter) {\r\n                    if (vm.searchColumnfilter[filteritem].length > 0) {\r\n                        count++;\r\n                    }\r\n                }\r\n                if (count > 0) {\r\n                    vm.SearchNoRecord = false\r\n                } else { vm.SearchNoRecord = true; }\r\n                return vm.searchColumnfilter;\r\n            }\r\n            else {\r\n                vm.modulelistingforfilter.forEach((item, index) => {\r\n                    vm.modulelistingforfilter[index].forEach((indexitem) => {\r\n                        searchfilter.push(indexitem);\r\n                        searchcol = searchfilter.filter(searchitem => {\r\n                            var displayMainColname = (searchitem.DisplayName != null) ? searchitem.DisplayName : searchitem.FieldName;\r\n                            return displayMainColname.replace(/\\W/g, \"\").toLowerCase().includes(filterinput.replace(/\\W/g, \"\").toLowerCase());\r\n                        })\r\n                    })\r\n                    vm.searchColumnfilter[index] = searchcol;\r\n                    searchfilter = [];\r\n                    searchcol = [];\r\n                })\r\n                let count = 0;\r\n                for (let filteritem in vm.searchColumnfilter) {\r\n                    if (vm.searchColumnfilter[filteritem].length > 0) {\r\n                        count++;\r\n                    }\r\n                }\r\n                if (count > 0) {\r\n                    vm.SearchNoRecord = false\r\n                } else { vm.SearchNoRecord = true; }\r\n                return vm.searchColumnfilter;\r\n            }\r\n        },\r\n        checkMove(e) {\r\n            var vm = this;\r\n            var getindex = 0;\r\n            if (e.related.id == 'TargetDivID') {\r\n                if(!vm.showModuleListForFilter){\r\n                    if(vm.Columnlist.length < 20 || e.dragged.id === e.related.id){\r\n                        return true;}\r\n                    else{\r\n                        vm.ShowAlert(vm.$t(\"AddCustomFields\"), 'failure', true, vm.$t('Alert'));\r\n                        return false;\r\n                    }\r\n                }\r\n                else{\r\n                    if(vm.Filterlist.length < 20){\r\n                        return true;}\r\n                    else{\r\n                        vm.ShowAlert(vm.$t(\"AddCustomFilter\"), 'failure', true, vm.$t('Alert'));\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n            else if (!e.draggedContext.element.Calculated_Field && e.draggedContext.element.Calculated_Field != undefined) {\r\n                vm.modulelisting.forEach((i, index) => {\r\n                    vm.GetSubModuleList[index].forEach(j => {\r\n                        if (e.relatedContext.list.length == 0) {\r\n                            if (j.CustomFieldId === e.draggedContext.element.CustomFieldId) {\r\n                                getindex = index;\r\n                            }\r\n                        }\r\n                        else if (j.CustomFieldId === e.relatedContext.element.CustomFieldId) {\r\n                            getindex = index;\r\n                        }\r\n                    })\r\n                })\r\n                if (getindex === e.draggedContext.element.ModuleIndex) {\r\n                    return true;\r\n                } else {\r\n                    return false;\r\n                }\r\n            }\r\n            else {\r\n                return false;\r\n            } \r\n        },\r\n        onDragEnd: function (e, x) {\r\n            if (e.item.id == 'StopDragfield') {\r\n                return true;\r\n            }\r\n            else {\r\n                e.preventDefault();\r\n                return false;\r\n            }\r\n        },\r\n        ColumnListDisplayOrder: function (e) {\r\n            var vm = this;\r\n            vm.Columnlist.forEach((Colitem, Colindex) => {\r\n                Colitem.Display_Order = Colindex + 1;\r\n            })\r\n        },\r\n        GetDraggedItem(event, index, MainFieldname) {\r\n            var vm = this;\r\n            if (event.removed != undefined) {\r\n                if (MainFieldname != undefined) {\r\n                    let GetAddedFieldFromDrag = vm.Columnlist.findIndex(AddedField => AddedField.CustomFieldId === event.removed.element.CustomFieldId);\r\n                    let GetAddedFieldFromModuleListing = vm.modulelisting[index].findIndex(ModuleListField => ModuleListField.CustomFieldId === event.removed.element.CustomFieldId);\r\n                    if (GetAddedFieldFromModuleListing != -1) {\r\n                        vm.modulelisting[index].splice(vm.modulelisting[index].indexOf(event.removed.element), 1);\r\n                    }\r\n                    if (GetAddedFieldFromDrag != -1) {\r\n                        vm.Columnlist.splice(GetAddedFieldFromDrag, 1);\r\n                        vm.Addfields(event.removed.element, event, index, MainFieldname);\r\n                    }\r\n                } else {\r\n                    let GetAddedFieldFromDrag = vm.Filterlist.findIndex(AddedField => AddedField.CustomFieldId === event.removed.element.CustomFieldId);\r\n                    let GetAddedFieldFromModuleListing = vm.modulelistingforfilter[index].findIndex(ModuleListField => ModuleListField.CustomFieldId === event.removed.element.CustomFieldId);\r\n                    if (GetAddedFieldFromModuleListing != -1) {\r\n                        vm.modulelistingforfilter[index].splice(vm.modulelistingforfilter[index].indexOf(event.removed.element), 1);\r\n                    }\r\n                    if (GetAddedFieldFromDrag != -1) {\r\n                        vm.Filterlist.splice(GetAddedFieldFromDrag, 1);\r\n                        vm.AddFilter(event.removed.element, index);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        MatchIfSameNameExist() {\r\n            var vm = this;\r\n            for (let i = 0; i < vm.Columnlist.length; i++) {\r\n                for (let j = 0; j < i; j++) {\r\n                    if (vm.Columnlist[i].CustomFieldId != vm.Columnlist[j].CustomFieldId && vm.Columnlist[i].DisplayName == vm.Columnlist[j].DisplayName) {\r\n                        return vm.Columnlist[i].DisplayName;\r\n                    }\r\n                }\r\n            }\r\n            return false;\r\n        },\r\n        filterRulechange() {\r\n            var vm = this;\r\n            vm.filtertype = '';\r\n            if (vm.category == 'Match All Value') {\r\n                vm.Filterlist.forEach(Fitem => {\r\n                    Fitem.FilterTypeAndorOr = 'AND'\r\n                })\r\n                if (vm.RequestFilterJosn.length > 0) {\r\n                    vm.RequestFilterJosn.forEach(RFitem => {\r\n                        RFitem.FilterTypeAndorOr = 'AND'\r\n                    })\r\n                }\r\n                vm.filtertype = 'AND'\r\n            }\r\n            else {\r\n                vm.Filterlist.forEach(Fitem => {\r\n                    Fitem.FilterTypeAndorOr = 'OR'\r\n                })\r\n                if (vm.RequestFilterJosn.length > 0) {\r\n                    vm.RequestFilterJosn.forEach(RFitem => {\r\n                        RFitem.FilterTypeAndorOr = 'OR'\r\n                    })\r\n                }\r\n                vm.filtertype = 'OR'\r\n            }\r\n        },\r\n        CheckForValidSorting(sortColummnarray) {\r\n            var vm = this;\r\n            var count = 0;\r\n            sortColummnarray.forEach(sortitem => {\r\n                if (sortitem.sortcolummnId != '' && sortitem.columnOrders == '' || sortitem.sortcolummnId == '' && sortitem.columnOrders != '' || sortitem.sortcolummnId == undefined || sortitem.columnOrders == undefined) {\r\n                    count = 1;\r\n                }\r\n            })\r\n            return count;\r\n        },\r\n        PreventValues(event) {\r\n            var vm = this;\r\n            var ekey = event.keyCode;\r\n            if (ekey == 69 || ekey == 107 || ekey == 109) { event.preventDefault(); }\r\n        },\r\n        TruncateStr: function (str, len) {\r\n            var convertstring = '' + str;\r\n            if (convertstring != null)\r\n                if (convertstring.length <= len) return str;\r\n                else return convertstring.substring(0, len) + \"...\";\r\n        }\r\n    }\r\n}\r\n\r\n\r\n</script>\r\n<template>\r\n    <section class=\"page-action\">\r\n        <div class=\"left-menu-tab datareport\">\r\n            <div :class=\"maindiv\">\r\n                <loader :isVisible=\"isLoading\"></loader>\r\n                <div class=\"accordion md-accordion left-filter\" id=\"accordionEx\" role=\"tablist\" aria-multiselectable=\"true\">\r\n                    <div :class=\"editclass\">\r\n                        <div class=\"card-header filter-head p-0\" role=\"tab\" id=\"headingOne1\">\r\n                            <h5 class=\"mb-0 px-2\">{{ ReportName }}\r\n                                <span class=\"expand_all_filters\">\r\n                                    <span id=\"SearchData\"><a :title=\"$t('EditReportName')\" v-on:click=\"editreport()\"\r\n                                            data-toggle-tooltip=\"tooltip\" class=\"collapsed\"> <em aria-hidden=\"true\"\r\n                                                class=\"fa fa-pencil\" style=\"font-size:20px;\"></em></a></span>\r\n                                    <span>\r\n                                        <a title=\"Collapse\" v-on:click=\"collapsedclick()\" data-toggle-tooltip=\"tooltip\"\r\n                                            class=\"collapsed\"><em aria-hidden=\"true\"\r\n                                                class=\"fa fa-angle-double-left mt-1\"></em>\r\n                                        </a>\r\n                                    </span>\r\n                                </span>\r\n                            </h5>\r\n                        </div>\r\n                    </div>\r\n                    <div :class=\"saveclass\">\r\n                        <div class=\"card-header filter-head p-0\" role=\"tab\" id=\"headingOne1\">\r\n                            <h5 class=\"mb-0 pl-2 mt-1\"><input type=\"text\" style=\"width:83%\" class=\"form-control p-1\"\r\n                                    v-model=\"savereportname\" />\r\n                                <span class=\"expand_all_filters\">\r\n                                    <span id=\"SearchData\">\r\n                                        <a :title=\"$t('Save')\" v-on:click=\"savereport()\" data-toggle-tooltip=\"tooltip\"\r\n                                            class=\"collapsed\"><em aria-hidden=\"true\" class=\"fa fa-floppy-o mt-1\"></em>\r\n                                        </a>\r\n                                    </span>\r\n                                </span>\r\n                            </h5>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"card-panel\">\r\n                        <div class=\"mb-0 d-lg-block p-2 border\">\r\n                            <div class=\"input-group customsearchbox\">\r\n                                <input type=\"text\" maxlength=\"50\" v-on:keyup=\"ListFiltering\" id=\"searchinput\"\r\n                                    v-model=\"MainSearchmodel\" placeholder=\"Search by Name\"\r\n                                    class=\"form-control searchcustomfilter border-right-0\" autocomplete=\"off\">\r\n                                <div class=\"input-group-append\">\r\n                                    <span class=\"input-group-text bg-transparent bg-white border-left-0\">\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"card\" style=\"border-bottom:1px solid #929292;\"\r\n                            v-for=\"(name, index) in submodulecodename\" :key=\"index\">\r\n                            <div class=\"card-header pl-0\" role=\"tab\" :id=\"'headingOnee' + index\">\r\n                                <h5 class=\"mb-0\"><a data-toggle=\"collapse\" data-parent=\"#accordionEx\"\r\n                                        href=\"javascript:;\" :aria-expanded=\"index == 0 ? true : false\" :data-target=\"'#collapseOne' + index\"\r\n                                        :aria-controls=\"'collapseOne' + index\" :class=\"index == 0 ? '' : 'collapsed'\"><em\r\n                                            class=\"fa fa fa-file-text-o\" aria-hidden=\"true\"></em><span\r\n                                            class=\"font-weight-bold\">\r\n                                            {{ name.SubModule }}</span><em class=\"fa fa-angle-down rotate-icon\"\r\n                                            aria-hidden=\"true\"></em></a><a class=\"tab-Search-btn\"><em class=\"fa fa-search\"\r\n                                            aria-hidden=\"true\"></em></a>\r\n                                </h5>\r\n                            </div>\r\n                            <div\r\n                            :class=\"modulelisting.length == 0 ? 'd-none' : modulelisting[index].length == 0 && !showModuleListForFilter ||\r\n                            modulelistingforfilter[index].length == 0 && showModuleListForFilter ? 'text-center text-danger d-flex align-items-center justify-content-center norecs pt-2' : 'd-none'\"> {{\r\n                                $t(\"NoFieldAvailable\") }}</div>\r\n                            <div :id=\"'collapseOne' + index\" :class=\"index == 0 ? 'collapse multi-collapse show':'collapse multi-collapse'\" role=\"tabpanel\"\r\n                                :aria-labelledby=\"'headingOnee' + index\" data-parent=\"#accordionEx\">\r\n                                <PerfectScrollbar>\r\n                                    <div class=\"card-body p-0 customScrollForLeftBar llt\" style=\"max-height:300px;\">\r\n                                        <div class=\"form-group\">\r\n                                            <ul class=\"nav nav-pills flex-column left-tab responivecustomtab lefttabiconfix\">\r\n                                                <draggable v-model=\"modulelistingmodel\" class=\"draggable-list\"\r\n                                                    v-if=\"showModuleListForField\"\r\n                                                    :list=\"searchColumnfilter.length == 0 ? modulelisting[index] : searchColumnfilter[index]\"\r\n                                                    group=\"my-groupForFields\" @start=\"drag = true\" @end=\"onDragEnd\"\r\n                                                    @change=\"GetDraggedItem($event, index, name.SubModule)\" :move=\"checkMove\"\r\n                                                    item-key=\"CustomFieldId\">\r\n                                                    <li class=\"nav-item parent-element\"  id=\"StopDragfield\" v-for=\"(element,elementIndex) in (searchColumnfilter.length == 0 ? modulelisting[index] : searchColumnfilter[index])\" :key=\"elementIndex\">\r\n                                                        <span class=\"nav-link left-menu px-3 \">\r\n                                                            <em :class=\"element.FieldIcons != undefined ? element.FieldIcons + ' ' + 'float-left' : \r\n                                                            element.dttype[0].icon != null ? element.dttype[0].icon + ' ' + 'float-left' : 'float-left'\"\r\n                                                                aria-hidden=\"true\"></em>\r\n                                                            <span class=\"text-truncate float-left\" style=\"width: 55%;\"\r\n                                                                :data-toggle-tooltip=\"GetLocalizedValue(element.FieldName,\r\n                                                                    element.DisplayName)\"\r\n                                                                :title=\"GetLocalizedValue(element.FieldName, element.DisplayName)\">\r\n                                                                {{ GetLocalizedValue(element.FieldName, element.DisplayName)\r\n                                                                }}\r\n                                                            </span>\r\n                                                            <a href=\"javascript:;\">\r\n                                                                <em class=\"fa fa-plus float-right mt-1 text-success pr-0\"\r\n                                                                    aria-hidden=\"true\"\r\n                                                                    v-on:click=\"Addfields(element, $event, index, name.SubModule)\">\r\n                                                                </em>\r\n                                                            </a>\r\n                                                        </span>\r\n                                                    </li>\r\n                                                    <!-- <template #item=\"{ element }\">\r\n                                                        <li class=\"nav-item parent-element\" id=\"StopDragfield\">\r\n                                                            <span class=\"nav-link left-menu px-3 \">\r\n                                                                <em :class=\"element.FieldIcons != undefined ? element.FieldIcons + ' ' + 'float-left' : element.dttype[0].icon + ' ' + 'float-left'\"\r\n                                                                    aria-hidden=\"true\"></em>\r\n                                                                <span class=\"text-truncate float-left\" style=\"width: 55%;\"\r\n                                                                    :data-toggle-tooltip=\"GetLocalizedValue(element.FieldName,\r\n                                                                        element.DisplayName)\"\r\n                                                                    :title=\"GetLocalizedValue(element.FieldName, element.DisplayName)\">\r\n                                                                    {{ GetLocalizedValue(element.FieldName, element.DisplayName)\r\n                                                                    }}\r\n                                                                </span>\r\n                                                                <a href=\"#\">\r\n                                                                    <em class=\"fa fa-plus float-right mt-1 text-success pr-0\"\r\n                                                                        aria-hidden=\"true\"\r\n                                                                        v-on:click=\"Addfields(element, $event, index, name.SubModule)\">\r\n                                                                    </em>\r\n                                                                </a>\r\n                                                            </span>\r\n                                                        </li>\r\n                                                    </template> -->\r\n                                                </draggable>\r\n\r\n                                                <!-- Module List for Filter -->\r\n                                                <draggable v-model=\"modulelistingmodel\" class=\"draggable-list\"\r\n                                                    v-if=\"showModuleListForFilter\"\r\n                                                    :list=\"searchColumnfilter.length == 0 ? modulelistingforfilter[index] : searchColumnfilter[index]\"\r\n                                                    group=\"my-groupForFilter\" @start=\"drag = true\" @end=\"onDragEnd\"\r\n                                                    :move=\"checkMove\" item-key=\"CustomFieldId\"\r\n                                                    @change=\"GetDraggedItem($event, index)\">\r\n                                                    <!-- <template #item=\"{ element }\"> -->\r\n                                                        <li class=\"nav-item parent-element\" id=\"StopDragfield\" v-for=\"(element,elemIndex) in searchColumnfilter.length == 0 ? modulelistingforfilter[index] : searchColumnfilter[index]\" :key=\"elemIndex\">\r\n                                                            <span class=\"nav-link left-menu px-3 \">\r\n                                                                <em :class=\"element.FieldIcons != undefined ? element.FieldIcons + ' ' + 'float-left' : \r\n                                                                element.dttype[0].icon != null ? element.dttype[0].icon + ' ' + 'float-left' : 'float-left'\"\r\n                                                                    aria-hidden=\"true\">\r\n                                                                </em>\r\n                                                                <span class=\"text-truncate float-left\" style=\"width: 55%;\"\r\n                                                                    :data-toggle-tooltip=\"element.FieldName\"\r\n                                                                    :title=\"GetLocalizedValue(element.FieldName, element.DisplayName)\">\r\n                                                                    {{\r\n                                                                        GetLocalizedValue(element.FieldName,\r\n                                                                            element.DisplayName)\r\n                                                                    }}\r\n                                                                </span>\r\n                                                                <a href=\"javascript:;\">\r\n                                                                    <em class=\"fa fa-sliders float-right mt-1 text-primary pr-0\"\r\n                                                                        aria-hidden=\"true\" v-on:click=\"AddFilter(element, index)\">\r\n                                                                    </em>\r\n                                                                </a>\r\n                                                            </span>\r\n                                                        </li>\r\n                                                    <!-- </template> -->\r\n                                                </draggable>\r\n                                            </ul>\r\n                                        </div>\r\n                                    </div>\r\n                                </PerfectScrollbar>\r\n                            </div>\r\n                        </div>\r\n                        <div v-if=\"SearchNoRecord\"\r\n                            class=\"text-center text-danger d-flex align-items-center justify-content-center norecs pt-2\"> {{\r\n                                $t(\"NoRecordfound\") }}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div :class=\"showdiv\" v-on:click=\"expandclick()\" style=\"float: left;width: 50px;\">\r\n                <span class=\"expand_all_filters\" style=\"position:absolute;left:0;\">\r\n                    <span>\r\n                        <a title=\"Expand\" data-toggle-tooltip=\"tooltip\" class=\"collapsed\">\r\n                            <em aria-hidden=\"true\" class=\"fa fa-angle-double-right mt-1\">\r\n                            </em>\r\n                        </a>\r\n                    </span>\r\n                </span>\r\n            </div>\r\n            <div :class=\"fieldpan\">\r\n                <div class=\"tab-style w-100\">\r\n                    <div class=\"tab_container\" role=\"tabpanel\">\r\n                        <div class=\"tab-content\">\r\n                            <b-tabs pills>\r\n                                <b-tab title=\"FIELDS\" class=\"fields\" :active=\"showModuleListForField\" ref=\"FIELDS\"\r\n                                    v-on:click=\"FieldTabClicked\">\r\n                                    <div class=\"col-12 p-0 float-left\">\r\n                                        <h6 class=\"mb-1\">{{ $t('Groups') }}</h6>\r\n                                        <input placeholder=\"Add Group\" class=\"form-control\" v-on:keypress=\"GroupSearching\"\r\n                                            v-model=\"Groupsearchmodel\" />\r\n                                        <div v-if=\"Groupsearchmodel != ''\" v-bind:class=\"itemclass\" class=\"autosuggestion\">\r\n                                            <div v-for=\"(item, i) in filtergroup\" :key=\"i\">\r\n                                                <div>\r\n                                                    <div v-on:click=\"selectfiltervalue(item)\">\r\n                                                        {{ GetLocalizedValue(item.FieldName, item.DisplayName) }} : {{\r\n                                                            item.MainFieldname }}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div v-if=\"filtergroup.length == 0\"\r\n                                                class=\"text-center text-danger d-flex align-items-center justify-content-center norecs pt-2\">\r\n                                                {{ $t(\"NoRecordfound\") }}\r\n                                            </div>\r\n                                        </div>\r\n                                        <br />\r\n                                        <draggable v-model=\"Grouplist\" class=\"draggable-list \" :list=\"Grouplist\"\r\n                                             group=\"my-groupGrouplist\" @start=\"drag = true\"\r\n                                             @end=\"drag = false\" item-key=\"CustomFieldId\">\r\n                                            <!-- <template #item=\"{ element }\" > -->\r\n                                                <div class=\"list-item\" v-for=\"(element,index) in Grouplist\" :key=\"index\">\r\n                                                    <span class=\"text-truncate float-left\"\r\n                                                        :data-toggle-tooltip=\"element.FieldName\" :title=\"element.FieldName\"\r\n                                                        style=\"width:200px;\">\r\n                                                        {{ GetLocalizedValue(element.FieldName, element.DisplayName) }}\r\n                                                    </span>\r\n                                                    <a><em class=\"fa fa-trash-o text-danger\" aria-hidden=\"true\"\r\n                                                            v-on:click=\"DeleteGroupFields(element, $event, index)\">\r\n                                                        </em>\r\n                                                    </a>\r\n                                                </div>\r\n                                            <!-- </template> -->\r\n                                        </draggable>\r\n                                    </div>\r\n                                    <hr />\r\n                                    <div class=\"col-12 p-0 float-left\">\r\n                                        <h6 class=\"mb-1\">{{ $t('COLUMNS') }}</h6>\r\n                                        <div class=\"verticle-action\" style=\"top:-3px;\">\r\n                                            <em id=\"btnpopup\"\r\n                                                :class=\"CalculatedUIEnabled == true ? 'fa fa-ellipsis-v action_icon' : 'fa fa-ellipsis-v action_icon disabled'\"\r\n                                                v-on:click=\"openActionIcon($event)\" aria-hidden=\"true\"></em>\r\n                                            <span class=\"action-list-box\" style=\"width: 240px; display:block;\" v-if=\"showRowLevelFunction\">\r\n                                                <span class=\"list-actions fsm-list\" id=\"action-list\" style=\"padding-left:0\">\r\n                                                    <a class=\"update actions-onclick\" v-on:click=\"OpenCalculatedUI\"><span\r\n                                                            class=\"text\">{{\r\n                                                                $t('CalcultedUIName') }}</span></a>\r\n                                                    <em class=\"fa fa-times close close-action\"\r\n                                                        v-on:click=\"closeActionIcon($event)\" aria-hidden=\"true\"></em>\r\n                                                </span>\r\n                                            </span>\r\n                                        </div>\r\n                                        <input placeholder=\"Add Column\" class=\"form-control\" v-on:keypress=\"GroupSearching\"\r\n                                            v-model=\"ColumnSearchmodel\" />\r\n                                        <div v-if=\"ColumnSearchmodel != ''\" v-bind:class=\"itemclass\" class=\"autosuggestion\"\r\n                                            style=\"z-index: 9999;\">\r\n                                            <div v-for=\"(item,indx) in filterColumngroup\" :key=\"indx\">\r\n                                                <div>\r\n                                                    <div v-on:click=\"selectfilterColumnvalue(item)\">\r\n                                                        {{ GetLocalizedValue(item.FieldName, item.DisplayName) }} : {{\r\n                                                            item.MainFieldname }}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div v-if=\"filterColumngroup.length == 0\"\r\n                                                class=\"text-center text-danger d-flex align-items-center justify-content-center norecs pt-2\">\r\n                                                {{ $t(\"NoRecordfound\") }}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"dashed_bod_drag text-center mt-2\">\r\n                                            <h6 class=\"p-2 m-0\">Drag Fields Here </h6>\r\n                                            <draggable v-model=\"Columnlist\" class=\"draggable-list\" :list=\"Columnlist\"\r\n                                                group=\"my-groupForFields\" @start=\"drag = true\" @end=\"ColumnListDisplayOrder\"\r\n                                                id=\"TargetDivID\" :move=\"checkMove\" item-key=\"CustomFieldId\">\r\n                                                    <div class=\"list-item parent-element\" id=\"TargetDivID\" v-for=\"(element,indx) in Columnlist\" :key=\"indx\">\r\n                                                        <span v-if=\"element.Calculated_Field == true\"\r\n                                                            style=\"font-size: 22px;float:left; margin-right: 10px;\">f<sub\r\n                                                                style=\"font-size: 12px;\">x</sub></span><span\r\n                                                            class=\"text-truncate float-left\"\r\n                                                            :data-toggle-tooltip=\"element.FieldName\"\r\n                                                            :title=\"GetLocalizedValue(element.FieldName, element.DisplayName)\"\r\n                                                            style=\"width:200px;\">\r\n                                                            {{ GetLocalizedValue(element.FieldName, element.DisplayName)\r\n                                                            }} {{ element.ExpresssionFieldName }}\r\n                                                        </span>\r\n                                                        <a aria-hidden=\"true\"\r\n                                                            v-on:click=\"DeleteColumnFields(element, $event)\"><em\r\n                                                                class=\"fa fa-trash-o text-danger\"></em></a>\r\n                                                        <div class=\"parentdiv datarepfix\">\r\n                                                            <a aria-hidden=\"true\" v-on:click=\"openSetting(element, $event)\"><em\r\n                                                                    class=\"fa fa-cog action_icon_cv\"></em></a>\r\n                                                            <div>\r\n                                                                <div class=\"verticle-action rt25\">\r\n                                                                    <span class=\"action-list-box small setting-div-box\">\r\n                                                                        <span id=\"action-list\"\r\n                                                                            class=\"list-actions text-left p-0 datarep ml-3\"\r\n                                                                            style=\"width:480px;\">\r\n                                                                            <div class=\"float-left col-12 p-0\">\r\n                                                                                <div class=\"container-fluid p-0 mb-3\">\r\n                                                                                    <div class=\"row\">\r\n                                                                                        <div class=\"col-md-12\">\r\n                                                                                            <div\r\n                                                                                                class=\"theme-primary partition-full\">\r\n                                                                                                <span\r\n                                                                                                    class=\"p-name text-white mt-2\">\r\n                                                                                                    {{ $t('Setting') }}\r\n                                                                                                </span>\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                                <div class=\"col-12 float-left\">\r\n                                                                                    <div class=\"col-12 p-0 float-left\">\r\n                                                                                        <div class=\"form-group\">\r\n                                                                                            <label>{{\r\n                                                                                                $t('DisplayName')\r\n                                                                                            }}</label>\r\n                                                                                            <input class=\"form-control\"\r\n                                                                                                v-model=\"modeldisplayname\"\r\n                                                                                                maxlength=\"20\" />\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                    <div class=\"col-12 p-0 float-left\">\r\n                                                                                        <div\r\n                                                                                            :class=\"element.ColumnFieldDataCode == 'date' ? '' : 'form-group d-none'\">\r\n                                                                                            <label>{{\r\n                                                                                                $t('DateFormat')\r\n                                                                                            }}:</label>\r\n                                                                                            <select\r\n                                                                                                class=\"form-control textnormal\"\r\n                                                                                                v-model=\"modeldateformat\">\r\n                                                                                                <option value=\"\" disabled>\r\n                                                                                                    Select\r\n                                                                                                </option>\r\n                                                                                                <option v-for=\"(dateformat,dateIndex) in GetDateFromDB\" :key=\"dateIndex\">\r\n                                                                                                    {{GetLocalizedValue(dateformat.dateFormat) }}\r\n                                                                                                </option>\r\n                                                                                            </select>\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                    <div class=\"col-12 p-0 float-left\">\r\n                                                                                        <div\r\n                                                                                            :class=\"element.ColumnFieldDataCode == 'decimal' ? '' : 'form-group d-none'\">\r\n                                                                                            <label>{{\r\n                                                                                                $t('DecimalPlaces')\r\n                                                                                            }}</label>\r\n                                                                                            <input type=\"number\"\r\n                                                                                                class=\"form-control\"\r\n                                                                                                v-model=\"modeldecimalplaces\" />\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                    <div class=\"col-12 p-0 float-left\"\r\n                                                                                        style=\"margin-top: 10px;\">\r\n                                                                                        <div\r\n                                                                                            :class=\"element.ColumnFieldDataCode == 'decimal' ? '' : 'form-group d-none'\">\r\n                                                                                            <input type=\"checkbox\"\r\n                                                                                                v-model=\"modeluseseparator\"\r\n                                                                                                id=\"useseparator\" />&nbsp;\r\n                                                                                            <label for=\"User\">{{\r\n                                                                                                $t('UseSeparator')\r\n                                                                                            }}</label><br>\r\n                                                                                            <input type=\"checkbox\"\r\n                                                                                                v-model=\"modelusecurrency\" />\r\n                                                                                            <label style=\"padding: 6px;\"\r\n                                                                                                for=\"Role\">{{\r\n                                                                                                    $t('UseCurrency')\r\n                                                                                                }}</label>\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                    <div class=\"col-12 p-0 float-left mb-3\">\r\n                                                                                        <div class=\"row flex-row-reverse\">\r\n                                                                                            <div\r\n                                                                                                class=\"col-lg-6 text-right\">\r\n                                                                                                <a class=\"btn btn-success ancsaveuserticket text-white\"\r\n                                                                                                    id=\"btnSaveTicket\"\r\n                                                                                                    title=\"\"\r\n                                                                                                    data-toggle-tooltip=\"tooltip\"\r\n                                                                                                    data-original-title=\"Click here to submit ticket\"\r\n                                                                                                    v-on:click=\"SaveSelectedData(element, $event)\">\r\n                                                                                                    <span\r\n                                                                                                        class=\"fa fa-floppy-o\"></span>\r\n                                                                                                    {{ $t('Save') }}\r\n                                                                                                </a>\r\n                                                                                            </div>\r\n\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                            <em aria-hidden=\"true\"\r\n                                                                                class=\"fa fa-times close close-action_cv\"\r\n                                                                                v-on:click=\"CloseSetting($event)\"></em>\r\n                                                                            <div class=\"va_rt25\"><em\r\n                                                                                    class=\"icon-solid arrow-solid-left text-dark\"\r\n                                                                                    style=\"font-size: 20pt;\"></em>\r\n                                                                            </div>\r\n                                                                        </span>\r\n                                                                    </span>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div class=\"float-left text-left w-100 font-12\">{{\r\n                                                            element.MainFieldname }}</div>\r\n                                                    </div>\r\n                                                \r\n                                            </draggable>\r\n                                        </div>\r\n                                    </div>\r\n                                </b-tab>\r\n                                <b-tab title=\"Filters\" :active=\"showModuleListForFilter\" ref=\"Filters\"\r\n                                    v-on:click=\"FilterTabClicked\">\r\n                                    <div class=\"col-12 p-0 float-left\">\r\n                                        <h6>include data if it matches</h6>\r\n                                        <select class=\"form-control\" name=\"template\" v-model=\"category\"\r\n                                            v-on:change=\"filterRulechange\">\r\n                                            <option v-for=\"(template,tempIndex) in templates\" :key=\"tempIndex\"\r\n                                                :selected=\"template == category ? 'selected' : ''\" :value=\"template\">\r\n                                                {{ template }}\r\n                                            </option>\r\n                                        </select>\r\n                                        <h6 class=\"mt-3\">Filter rules</h6>\r\n                                        <div class=\"form-control\">\r\n                                            <span ml-1 v-if=\"category == 'Match All Value'\" v-for=\"(item,itmIndex) in Filterlist\" :key=\"itmIndex\">\r\n                                                {{ (Filterlist.indexOf(item) + 1) }}\r\n                                                <span v-if=\"Filterlist.length > (Filterlist.indexOf(item) + 1)\"\r\n                                                    style=\"margin-right:3px;\"> {{ filtertype }}</span>\r\n                                            </span>\r\n                                            <span v-if=\"category != 'Match All Value'\" v-for=\"(item,itemIndex) in Filterlist\" :key=\"itemIndex\">\r\n                                                {{ (Filterlist.indexOf(item) + 1) }}\r\n                                                <span v-if=\"Filterlist.length > (Filterlist.indexOf(item) + 1)\"\r\n                                                    style=\"margin-right:3px;\">{{ filtertype }}</span>\r\n                                            </span>\r\n                                        </div>\r\n                                        <draggable v-model=\"Filterlist\" class=\"draggable-list\" :list=\"Filterlist\"\r\n                                            group=\"my-groupForFilter\" @start=\"drag = true\" @end=\"drag = false\"\r\n                                            @dragenter=\"dragover($event)\" @dragleave=\"dragover($event)\"\r\n                                            @drop=\"dragover($event)\" :move=\"checkMove\" item-key=\"CustomFieldId\" id=\"TargetDivID\">\r\n                                            <!-- <template #item=\"{ element }\"> -->\r\n                                                <div class=\"list-item row filter-div\" @dragover=\"dragover($event)\"\r\n                                                    id=\"TargetDivID\" v-for=\"(element,eleIndex) in Filterlist\" :key=\"eleIndex\">\r\n                                                    <div class=\"counter_num px-1 py-2 filter-count-div\">\r\n                                                        {{ (Filterlist.indexOf(element) + 1) }}\r\n                                                    </div>\r\n                                                    <div style=\"width:77%;\">\r\n                                                        <div class=\"px-1 py-0 width120 text-truncate float-left font-14\">\r\n                                                            <span v-if=\"element.Calculated_Field == true\"\r\n                                                                style=\"font-size: 22px;float:left; margin-right: 10px;\">f<sub\r\n                                                                    style=\"font-size: 12px;\">x</sub></span><span\r\n                                                                class=\"text-truncate float-left\"\r\n                                                                :data-toggle-tooltip=\"element.FieldName\"\r\n                                                                :title=\"GetLocalizedValue(element.FieldName, element.DisplayName)\"\r\n                                                                style=\"width:110px;\">\r\n                                                                {{ GetLocalizedValue(element.FieldName, element.DisplayName)\r\n                                                                }}{{ element.ExpresssionFieldName }}\r\n                                                            </span>\r\n                                                        </div>\r\n                                                        <div\r\n                                                            class=\"px-1 py-0 text-primary width80 text-truncate float-left font-14\">\r\n                                                            {{ element.OperatorDisplayName }}\r\n                                                        </div>\r\n                                                        <div class=\"px-1 py-0 hh text-truncate float-left font-12 w-100\">\r\n                                                            {{ element.valueTypeText }}\r\n                                                            {{ element.valueTypeNumber }} {{ element.valueTypeNumber2 != '' ? '-' : '' }}\r\n                                                            {{ element.valueTypeNumber2 }}\r\n                                                            {{ element.valueTypeFirstdate }} {{ element.valueTypeSeconddate != '' ? '-' : '' }}\r\n                                                            {{ element.valueTypeSeconddate }}\r\n                                                            {{ element.ValueDisplayFirstTime }} {{ element.ValueDisplaySecondTime != '' ? '-' : '' }}\r\n                                                            {{ element.ValueDisplaySecondTime }}\r\n                                                            {{ element.Displaymultiplevalue }}\r\n                                                            {{ element.DropDownValue }}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"parentdiv datarepfix filters\">\r\n                                                        <a aria-hidden=\"true\"\r\n                                                            v-on:click=\"DeleteFilterFields(element, $event)\"><em\r\n                                                                :class=\"!element.IsMandatoryforFilter ? 'fa fa-trash-o text-danger' : 'fa fa-trash-o text-danger d-none'\"></em></a>\r\n                                                        <a aria-hidden=\"true\" v-on:click=\"openrulespop(element, $event)\"><em\r\n                                                                class=\"fa fa-cog action_icon_cv\"></em></a>\r\n                                                        <div>\r\n                                                            <div class=\"verticle-action rt25 rt502\">\r\n                                                                <span class=\"action-list-box small filter-list-box\">\r\n                                                                    <span id=\"action-list\"\r\n                                                                        class=\"list-actions text-left p-0 datarep ml-3\"\r\n                                                                        style=\"width:480px;\">\r\n                                                                        <div class=\"float-left col-12 p-0\">\r\n                                                                            <div class=\"container-fluid p-0 mb-3\">\r\n                                                                                <div class=\"row\">\r\n                                                                                    <div class=\"col-md-12\">\r\n                                                                                        <div\r\n                                                                                            class=\"theme-primary partition-full\">\r\n                                                                                            <span\r\n                                                                                                class=\"p-name text-white mt-2\">\r\n                                                                                                {{ $t('Setting') }}\r\n                                                                                            </span>\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                            <div class=\"col-12 float-left\">\r\n                                                                                <div class=\"col-12 p-0 float-left\">\r\n                                                                                    <div class=\"form-group\"\r\n                                                                                        v-for=\"(item,itmInx) in GetOperator\" :key=\"itmInx\">\r\n                                                                                        <input type=\"radio\" class=\"radio\"\r\n                                                                                            v-model=\"element.selectedOPValue\"\r\n                                                                                            :name=\"'radiobtn' + (Filterlist.indexOf(element) + 1)\"\r\n                                                                                            :value=\"item.OPERATOR_ID\"\r\n                                                                                            v-on:click=\"checkvalue(item.OPERATOR_DISPLAY_NAME, element, item.OPERATOR_EXPRESSION, item.OPERATOR_ID, item.MP[0].OPERATION_DATA_TYPE)\">\r\n                                                                                        <label class=\"ml-2\">\r\n                                                                                            {{\r\n                                                                                                item.OPERATOR_DISPLAY_NAME\r\n                                                                                            }}\r\n                                                                                        </label>\r\n                                                                                        <br />\r\n                                                                                    </div>\r\n                                                                                    <input type=\"text\" id=\"inpttxt\"\r\n                                                                                        class=\"form-control\"\r\n                                                                                        v-model=\"ValueDisplaytext\"\r\n                                                                                        v-if=\"texttypevalue1\" />\r\n                                                                                    <input type=\"text\" id=\"inpttxt2\"\r\n                                                                                        class=\"form-control\"\r\n                                                                                        v-model=\"ValueDisplaytext2\"\r\n                                                                                        v-if=\"texttypevalue2\" />\r\n                                                                                    <input type=\"number\" id=\"inpttxtbtw\"\r\n                                                                                        class=\"form-control\"\r\n                                                                                        v-if=\"numbertypevalue1\"\r\n                                                                                        v-model=\"ValueDisplaynumber\"\r\n                                                                                        v-on:keydown=\"PreventValues($event)\" />\r\n                                                                                    <br>\r\n                                                                                    <input type=\"number\" id=\"inpttxtbtw\"\r\n                                                                                        :class=\"{ 'form-control': true, 'is-invalid': ((ValueDisplaynumber2 < ValueDisplaynumber) && (ValueDisplaynumber2 != '' || ValueDisplaynumber2 == '0')) }\"\r\n                                                                                        v-if=\"numbertypevalue2\"\r\n                                                                                        v-model=\"ValueDisplaynumber2\"\r\n                                                                                        v-on:keydown=\"PreventValues($event)\" />\r\n                                                                                    <span\r\n                                                                                        v-if=\"((ValueDisplaynumber2 < ValueDisplaynumber) && (ValueDisplaynumber2 != '' || ValueDisplaynumber2 == '0'))\"\r\n                                                                                        class=\"invalid-feedback\">Second\r\n                                                                                        value should be greater than first\r\n                                                                                        value.</span>\r\n                                                                                    <input type=\"date\" id=\"inpttxtdate1\"\r\n                                                                                        class=\"form-control\"\r\n                                                                                        v-if=\"datetypevalue1\"\r\n                                                                                        v-model=\"ValueDisplaydate\"\r\n                                                                                        max=\"9999-12-31\" />\r\n                                                                                    <input type=\"date\" id=\"inpttxtdate2\"\r\n                                                                                        :class=\"{ 'form-control': true, 'disabled': ValueDisplaydate == '' }\"\r\n                                                                                        v-if=\"datetypevalue2\"\r\n                                                                                        v-model=\"ValueDisplaydate2\"\r\n                                                                                        :min=\"ValueDisplaydate\"\r\n                                                                                        max=\"9999-12-31\" />\r\n\r\n                                                                                    <input type=\"time\" id=\"inpttxttime1\"\r\n                                                                                        class=\"form-control\"\r\n                                                                                        v-if=\"timetypevalue\"\r\n                                                                                        v-model=\"ValueDisplayTime\" />\r\n                                                                                    <input type=\"time\" id=\"inpttxttime2\"\r\n                                                                                        :class=\"{ 'form-control': true, 'disabled': ValueDisplayTime == '' }\"\r\n                                                                                        v-if=\"timetypevalue2\"\r\n                                                                                        :min=\"ValueDisplayTime\"\r\n                                                                                        v-model=\"ValueDisplayTime2\" />\r\n\r\n                                                                                    <select class=\"form-control\"\r\n                                                                                        v-model=\"modelFilterDDLValue\"\r\n                                                                                        v-if=\"DDLForFilter\">\r\n                                                                                        <option disabled>Select </option>\r\n                                                                                        <option v-for=\"DDLitem in options\"\r\n                                                                                            :key=\"DDLitem.value\"\r\n                                                                                            :value=\"DDLitem.value\"\r\n                                                                                            :title=\"DDLitem.label\">\r\n                                                                                            {{ TruncateStr(DDLitem.label,\r\n                                                                                                50)\r\n                                                                                            }}</option>\r\n                                                                                    </select>\r\n                                                                                    <div v-if=\"multiselectvalue\">\r\n                                                                                        <!-- <Multiselect\r\n                                                                                            v-model=\"dropdwonvalues\"\r\n                                                                                            class=\"form-control\" mode=\"tags\"\r\n                                                                                            :searchable=\"true\"\r\n                                                                                            :taggable=\"false\"\r\n                                                                                            :close-on-select=\"false\"\r\n                                                                                            :options=\"options\" /> -->\r\n                                                                                        <Multiselect\r\n                                                                                            v-model=\"dropdwonvalues\"\r\n                                                                                            :multiple=\"true\" label=\"label\"\r\n                                                                                            track-by=\"label\"\r\n                                                                                            placeholder=\"Select\"\r\n                                                                                            class=\"form-control\"\r\n                                                                                            :searchable=\"true\"\r\n                                                                                            mode=\"multiple\"\r\n                                                                                            :hideSelected=\"false\"\r\n                                                                                            :close-on-select=\"false\"\r\n                                                                                            :options=\"options\">\r\n                                                                                            <template\r\n                                                                                                v-slot:multiplelabel=\"{ values }\">\r\n                                                                                                <div class=\"multiselect-multiple-label\"\r\n                                                                                                    v-if=\"values && values.length > 0\">\r\n                                                                                                    <div class=\"multiselect-tags\"\r\n                                                                                                        data-tags=\"\">\r\n                                                                                                        <span\r\n                                                                                                            class=\"multiselect-tag\"\r\n                                                                                                            tabindex=\"-1\"\r\n                                                                                                            :aria-label=\"values[0].label\">{{\r\n                                                                                                                TruncateStr(values[0].label,\r\n                                                                                                                    18)\r\n                                                                                                            }}\r\n                                                                                                            <span\r\n                                                                                                                class=\"multiselect-tag-remove\">\r\n                                                                                                                <span\r\n                                                                                                                    class=\"multiselect-tag-remove-icon\"></span>\r\n                                                                                                            </span>\r\n                                                                                                        </span>\r\n                                                                                                    </div>\r\n                                                                                                    <span\r\n                                                                                                        v-if=\"values && values.length > 1\">\r\n                                                                                                        {{ values.length }}\r\n                                                                                                        options selected\r\n                                                                                                    </span>\r\n                                                                                                </div>\r\n                                                                                            </template>\r\n                                                                                        </Multiselect>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                                <div\r\n                                                                                    class=\"col-12 p-0 float-left mb-3 mt-3\">\r\n                                                                                    <div class=\"row flex-row-reverse\">\r\n                                                                                        <div class=\"col-lg-6 text-right\">\r\n                                                                                            <a :class=\"{ 'btn btn-primary ancsaveuserticket text-white': true, 'disabled': (ValueDisplaynumber2 < ValueDisplaynumber && numbertypevalue2) }\"\r\n                                                                                                id=\"btnSaveTicket\" title=\"\"\r\n                                                                                                data-toggle-tooltip=\"tooltip\"\r\n                                                                                                v-on:click=\"applySetting(element.CustomFieldId)\"\r\n                                                                                                data-original-title=\"Click here to submit ticket\"><em\r\n                                                                                                    :class=\"{ 'fa fa-save text-white': true, 'disabled': (ValueDisplaynumber2 < ValueDisplaynumber && numbertypevalue2) }\"></em>Apply</a>\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                        <em aria-hidden=\"true\"\r\n                                                                            class=\"fa fa-times close close-action_cv\"\r\n                                                                            v-on:click=\"ClosePopFilter()\"></em>\r\n                                                                        <div class=\"va_rt25\"><em\r\n                                                                                class=\"icon-solid arrow-solid-left text-dark\"\r\n                                                                                style=\"font-size: 20pt;\"></em></div>\r\n                                                                    </span>\r\n                                                                </span>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            <!-- </template> -->\r\n                                        </draggable>\r\n                                    </div>\r\n                                    <hr />\r\n                                </b-tab>\r\n                            </b-tabs>\r\n                            <div role=\"tabpanel\" id=\"tab-em-groups\" class=\"tab-pane\">\r\n                                <div class=\"col-sm-12 col-md-12 col-lg-12 col-xl-12 p-0\">\r\n                                    <div class=\"listing\">\r\n                                        <div class=\"table-responsive\"></div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <ReportPreview v-if=\"showReportPreview\" :previewdata=\"previewdata\" :customreportparameters=\"customreportparameters\"\r\n            :Columnlist=\"Columnlist\" :Grouplist=\"Grouplist\" ref=\"reportdata\" :saveJsonReport=\"saveJsonReport\"\r\n            :PdfJsonReport=\"PdfJsonReport\" :editjsondata=\"editjsondata\" :ReportName=\"ReportName\" :GraphData=\"graphData\"\r\n            :SortingData=\"sortingData\" :GraphJson=\"GraphJson\" :LevelOfGrouping=\"LevelOfGrouping\">\r\n        </ReportPreview>\r\n        <CalculatedUI :customreportparameters=\"customreportparameters\" v-if=\"showcalculatedUI\" :Columnlist=\"Columnlist\"\r\n            :ExpFieldDataArray=\"ExpFieldDataArray\" :editexpressionvalue=\"editexpressionvalue\" :ExpDataArray=\"ExpDataArray\"\r\n            v-on:close=\"showcalculatedUI = false\" @VerifiedExpressionData=\"VerifiedExpressionColumnValue\" ref=\"Calculated\">\r\n        </CalculatedUI>\r\n    </section>\r\n</template>\r\n<style scoped>\r\n.mCSB_inside>.mCSB_container {\r\n    margin-right: 30px;\r\n}\r\n\r\n.width80 {\r\n    width: 80px;\r\n}\r\n\r\n.width120 {\r\n    width: 110px;\r\n}\r\n\r\n.invalid-feedback {\r\n    white-space: normal;\r\n    font-size: 110%;\r\n}\r\n</style>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Datareport.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Datareport.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Datareport.vue?vue&type=template&id=58e431ef&scoped=true&\"\nimport script from \"./Datareport.vue?vue&type=script&lang=js&\"\nexport * from \"./Datareport.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Datareport.vue?vue&type=style&index=0&id=58e431ef&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"58e431ef\",\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../../node_modules/vue-style-loader/index.js??ref--7-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ReportPreview.vue?vue&type=style&index=0&id=5ab5b642&prod&scoped=true&lang=css&\""],"sourceRoot":""}