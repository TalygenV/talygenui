{"version":3,"sources":["webpack:///./src/views/Reporting/Add_Report/Datareport.vue?b3eb","webpack:///./src/views/Reporting/Add_Report/Datareport.vue?794c","webpack:///./src/views/Reporting/Add_Report/Datareport.vue?1666","webpack:///./src/views/Reporting/Add_Report/ReportPreview.vue?a685","webpack:///./src/views/Reporting/Add_Report/ReportPreview.vue?ac35","webpack:///./src/views/Reporting/Add_Report/Datareport.vue","webpack:///./src/views/Reporting/Add_Report/ReportPreview.vue","webpack:///./src/components/Common/Modal/modalGraphOptions.vue","webpack:///src/components/Common/Modal/modalGraphOptions.vue","webpack:///./src/components/Common/Modal/modalGraphOptions.vue?56c9","webpack:///./src/components/Common/Modal/modalGraphOptions.vue?b0e7","webpack:///src/views/Reporting/Add_Report/ReportPreview.vue","webpack:///./src/views/Reporting/Add_Report/ReportPreview.vue?68c7","webpack:///./src/views/Reporting/Add_Report/ReportPreview.vue?f7d0","webpack:///./src/components/Common/Modal/modalCalculatedFieldUI.vue","webpack:///src/components/Common/Modal/modalCalculatedFieldUI.vue","webpack:///./src/components/Common/Modal/modalCalculatedFieldUI.vue?4a2d","webpack:///./src/components/Common/Modal/modalCalculatedFieldUI.vue?db08","webpack:///src/views/Reporting/Add_Report/Datareport.vue","webpack:///./src/views/Reporting/Add_Report/Datareport.vue?0d46","webpack:///./src/views/Reporting/Add_Report/Datareport.vue?fb43","webpack:///./src/views/Reporting/Add_Report/ReportPreview.vue?ffa7"],"names":["___CSS_LOADER_API_IMPORT___","exports","push","module","i","content","__esModule","default","locals","add","render","_vm","this","_c","_self","staticClass","class","maindiv","attrs","isLoading","editclass","_v","_s","ReportName","$t","on","$event","editreport","staticStyle","collapsedclick","saveclass","directives","name","rawName","value","savereportname","expression","length","domProps","target","composing","savereport","MainSearchmodel","ListFiltering","SelectAllSearch","_m","_l","submodulecodename","index","key","GetLocalizedValue","SubModule","modulelisting","showModuleListForFilter","modulelistingforfilter","showModuleListForField","searchColumnfilter","checkMove","drag","onDragEnd","GetDraggedItem","model","modulelistingmodel","callback","$$v","element","elementIndex","undefined","FieldIcons","dttype","icon","FieldName","DisplayName","Addfields","_e","elemIndex","AddFilter","SearchNoRecord","showdiv","expandclick","fieldpan","ref","FieldTabClicked","Groupsearchmodel","Grouplist","GroupSearching","itemclass","filtergroup","item","selectfiltervalue","MainFieldname","DeleteGroupFields","CalculatedUIEnabled","openActionIcon","showRowLevelFunction","OpenCalculatedUI","closeActionIcon","ColumnSearchmodel","filterColumngroup","indx","selectfilterColumnvalue","Columnlist","ColumnListDisplayOrder","Calculated_Field","ExpresssionFieldName","DeleteColumnFields","openSetting","modeldisplayname","preventDefault","PreventDecimal","ColumnFieldDataCode","modeldateformat","$$selectedVal","Array","prototype","filter","call","options","o","selected","map","val","_value","multiple","GetDateFromDB","dateformat","dateIndex","dateFormat","modeldecimalplaces","modeluseseparator","isArray","_i","$$a","$$el","$$c","checked","$$i","concat","slice","modelusecurrency","ApplySaveSelectedData","CloseSetting","FilterTabClicked","category","filterRulechange","templates","template","tempIndex","Filterlist","itmIndex","indexOf","filtertype","itemIndex","dragover","eleIndex","OperatorDisplayName","valueTypeText","valueTypeNumber","valueTypeNumber2","$options","filters","formatDate","valueTypeFirstdate","valueTypeSeconddate","ValueDisplayFirstTime","ValueDisplaySecondTime","Displaymultiplevalue","DropDownValue","DateRangeValue","DeleteFilterFields","IsMandatoryforFilter","openrulespop","GetOperator","itmInx","selectedOPValue","OPERATOR_ID","_q","checkvalue","OPERATOR_DISPLAY_NAME","OPERATOR_EXPRESSION","MP","OPERATION_DATA_TYPE","$set","texttypevalue1","ValueDisplaytext","texttypevalue2","ValueDisplaytext2","numbertypevalue1","ValueDisplaynumber","PreventValues","numbertypevalue2","ValueDisplaynumber2","parseFloat","datetypevalue1","ValueDisplaydate","datetypevalue2","ValueDisplaydate2","Date","parse","DDLForDateRange","modeldaterange","DateRangeData","DDLitem","date_range_name","date_range_value","TruncateStr","timetypevalue","ValueDisplayTime","timetypevalue2","ValueDisplayTime2","DDLForFilter","modelFilterDDLValue","multiselectvalue","FormSchema","applySetting","CustomFieldId","ClosePopFilter","showReportPreview","previewdata","customreportparameters","saveJsonReport","PdfJsonReport","editjsondata","graphData","sortingArray","GraphJson","LevelOfGrouping","showcalculatedUI","ExpFieldDataArray","editexpressionvalue","ExpDataArray","AlreadyExistExpression","VerifiedExpressionColumnValue","staticRenderFns","PreviewReport","ResetData","ExportToPDF","ExportToExcel","OpenSortingPopup","OpenGraph","isSortPopup","sortColummnarray","input","sortcolummnId","x","columnOrders","AddSortingForm","isValueExistInSort","RemoveSortingForm","close","showGraphOptions","OpenGraphOptions","showChart","ResetGraphData","FilterCustomFieldName","XAxisField","YAxisField","aggregateFunctionResult","aggregateFunctionType","chartType","chartOptions","chartSeries","previewgroupdata","showdata","previewcolumn","column","noRecord","data","sitem","sindex","gitem","gindex","totalRecord","showcoldata","SaveAllReport","CancelAll","GraphData","CloseGraphOptions","onSubmit","scopedSlots","_u","fn","chartTypes","id","selectedChartTypeID","chart_Type","error","Data","ViewReportGraph","PreviewChart","selectedChartType","chartseries","resultMsg","ApplyGraph","components","VueApexCharts","props","type","Object","reportTitle","selectedChartXAxis","selectedChartYAxis","colourList","chartOptionXAxisData","chartSeriesData","GroupingGraphData","BindGraph","isChartData","isGraphLoadedAlready","graphParams","layoutType","astype","label","placeholder","config","showAddIcon","validationRules","disabled","onChange","onChangeDropdown","onChangeXYAxisDropdown","visibility","GetRadioValue","created","vm","GetChartTypes","GetColumnList","chartTypeID","AggregateFuncField","CheckFieldType","watch","methods","$","modal","removeClass","remove","$refs","refGraphForm","validateForm","reset","$parent","GraphServices","then","response","forEach","dataset","ResetGraph","GraphDataValue","AggregateFunction","findvaluefromcolumnlistxaxis","find","parseInt","findvaluefromcolumnlistyaxis","requiedFieldfordrawGraph","PreviewJson","MetaData","IsGrouping","SetGroupingGraphData","toLowerCase","SetGraphValues","FilterColumnlist","CustomFieldName","CalculatingAggregateFuncResult","DrawGraph","ShowAlert","ListingData","setGraphArray","XaxisField","yAxisField","keys","mainindex","pushitem","GData","validate","valid","isHorizontal","chart","toolbar","export","svg","filename","png","csv","headerCategory","tooltip","enabled","formatter","xaxis","categories","title","text","labels","trim","rotate","yaxis","toLocaleString","plotOptions","bar","borderRadius","horizontal","dataLabels","colors","functionType","tempval","sum","toFixed","aggregatecount","total","count","Math","min","apply","Number","max","ColumnFieldType","CheckFieldTypeX","entries","XFieldName","YFieldName","items","BindXYFields","replaceXCurrencySymbol","replace","GenrateRandomColorCode","randomColor","floor","random","toString","GenrateRandomColorList","color","IsExist","formfields","component","pdfMake","vfs","pdfFonts","modalGraphOptions","String","SortingData","Boolean","showmulitGrouping","DynamicFillValue","GroupValue","isGraph","YAxisfield","watchvalue","allReocrdsList","ExcelData","SavedGraphData","allReocrdsData","TableBody","TableHeader","pdfContent","ExcelJsonData","isPreviewForPdfExcel","EditSortingData","RenderList","mounted","_vm$$refs$modalGraph","modalGraph","newval","oldval","SORTTYPE","RefreshReport","splice","assign","_vm$$refs$modalGraph2","ResetPreview","graphArray","Info","GROUP","GRAPH","jsonData","JSON","stringify","ReportPreviewService","SaveAllDynamicReport","Value","$router","catch","err","console","log","sortindex","findIndex","setTimeout","SetBootstraptoolTip","chartoptions","CheckColumnExistInGraph","GetAllRecordsForPDF","excelvalue","temp","ReportID","Modulename","Submodulecode","submoduleid","PageSize","PageNumber","FIELDS","FILTERS","SORTING","EXPRESSION","jsondata","graphURI","GetGraphImageURI","allRecordslisting","pdfDetails","pageType","pageOrientation","GraphWidth","BindPDFDataForGroup","BindPDFData","image","imgURI","width","alignment","pageSize","style","table","headerRows","body","styles","SetPDFStyle","defaultStyle","createPdf","download","TableHeader2","ColumnList","currentData","heading","pdfdata","columnList","groupingindex","tableData","headerelement","headerindex","pdfgroupdata","groupColumn","rowSpan","pdfwithoutgroupdata","tempitem","subheader","fontSize","bold","margin","_vm$$refs$chart","URI","dataURI","uri","params","GetExcelReport","blob","Blob","link","document","createElement","href","window","URL","createObjectURL","current","date","getDate","getMonth","getFullYear","fileName","split","join","click","buttons","SubmitExpression","FunctionsName","FuncType","Functionskey","Keys","AddFunctionsfields","modelconditionexpression","Functionkey","ShowDescriptionForFunction","AddConditionExpression","InputValueExpression","deleteuserinput","GetCursorPoint","UserInputSelection","AddSpace","Addplussign","Addsubtractsign","Addmultiplysign","Adddividesign","Addopenbracketsign","Addclosebracketsign","verifiedvaluedata","closed","VerifyExpression","ResetExpression","JsonColumns","typeL","ResponseColumnData","ResponseFunctionData","FieldsValue","FunctionValue","AddBracketValue","SubtractBracketValue","MultplyBracketValue","DivideBracketValue","OpenBracketExpValue","CloseBracketExpValue","FieldData","fieldatavalue","reqFrom","verifiedvalue","modelfieldname","substringvalue","verifyErrorMsg","InputValueArray","InputValueExpressionByID","FunctionValueArray","selecteduserinput","selecteduserinputbyid","ExpressionIDvalue","updateexpresion","fieldadded","FieldTableNameValue","GetCommaSeparatedValue","countbyfield","conditionexpression","checkbycondition","GetSelectedValue","onClick","CancelExpressionUI","ExpresssionDataValue","GetFunctionList","backdrop","keyboard","addClass","$emit","ExpressionDataService","GetListFields","AVAILABLE_FIELDS","CustomFields","res","Functions","event","cursorpos","getdata","SetValueOnCursorPosition","checkindex","FieldValueData","MatchIndex","SameName","convertarr","firstindex","secondindex","substring","includes","substringarr","IsSystemGenerated","TableName","updatingvalue","updatevaluebyid","DescriptionForFunction","closest","openbracketexpsign","openbracket","closebracketexpsign","closebracket","addbracketexpsign","Addsign","subtractbracketexpsign","subtractsign","multiplybracketexpsign","multiplysign","dividebracketexpsign","dividesign","spaceaddingexp","addedspace","addedspacefordb","replaceAll","elem","convertarrid","substringarrid","convertstr","code","keyCode","cursorposition","assignindex","getindexofexp","getfieldindex","f","userinput","selectionStart","fieldsdata","dataitem","ExpressionID","ExpressionName","ExpressionDisplay","Expression","ColumnIndex","encodeURIComponent","jsonvalue","VerifyExpressionFromDB","Result","InavalidExpression","checkeditfieldexist","FieldValue","VerifiedExpression","ExpressionFieldArray","IsEdit","IsExpExist","alert","e","cursorpos1","getElementById","focus","returndata","getSelection","filterinput","searchcol","searchfilter","indexitem","searchitem","displayMainColname","filteritem","draggable","ReportPreview","CalculatedUI","submodulecode","modulename","expandcollapsediv","fielddata","viewId","tempreportid","Showsettingsview","showdiv1","dateformate","customField","dragcount","ReportPreviewListing","submodulename","test1","PAGESIZE","selectvalue","selecteddatatype","savedOperatorName","FilterCount","displayvalue2","selectedvalue","RequestFilterJosn","CurrentOperatorSelected","operator_id","mode","dropdwonvalues","searchable","createOption","SelectedoperatorMappedDatatype","commaSepratedSelectedValues","valueKey","valuekey2","FirstOperand","FirstOperandValue1","SecondOperand","SecondOperandValue1","Datatype","operator","CheckExpressionFeild","ExpressionArray","ExpressionFieldsArray","setvalue","ChartGroupingArray","GroupingArray","FilterActiveForMandatory","IsMandatoryforFilterAfterReset","ArrayforFilterpopup","selctRuleForFilter","IsForPreview","IsDDLValueInFilter","GetSubModuleList","sortingresetvalue","ColumnlistArray","$route","storeParameters","GetStoredParameters","GetList","GetReportDetailsByReportId","computed","displayname","searchColumn","GetSubModuleName","displaycolname","SearchItem","localStorage","setItem","getItem","Getddldata","DataReportService","GetFilterDDLselectvalue","ddlitem","GetDateRangeFilterDDL","GetReportDetailsbyId","checkfields","JSON_To_Create_ReportListing","BindFeilds","BindFilters","BindGROUP","EXPRESSIONFIELDSARRAY","ReportListing","CheckIsMandartoryForFilter","mitem","indexFound","bindpouupvaluefordatetime","operator_display_name","bindfilterdata","GetDDLValueinEdit","GetDDLTempVal","PickListOption","GetDDLValueinEditArr","OperatorExpression","GetDDLValueinEditMulti","Value1","DDLEditItem","_GetDDLValueinEdit","moduleIndex","moduleItem","field","returnObject","ModuleIndex","ActualDataType","FilterTypeAndorOr","Value2","CheckforIncludeDataMatchesForFilter","GetFilterSelectDDL","checkforvalue","temparr","checkexpfieldvalue","_vm$$refs$Calculated","Calculated","DateFormat","DecimalPlace","IsUseSeprator","IsCurrencySymbol","GetDateFromDetail","css","CheckFeildOrFilter","isFieldsActive","active","sort","FirstValue","SecondValue","localeCompare","NewReportInserted","SetScrolbar","Fields","Fieldsitem","CheckFields","DataTypeCode","moment","subtract","format","Editdyanmicreport","Folder_Id","Module_Id","Sub_Module_Id","Version","AddDynamicreport","Status","CheckSameNameExist","MatchIfSameNameExist","CheckValidSorting","CheckForValidSorting","arritem","XCustomFieldId","YCustomFieldId","AggregateFunctionType","checkdata","reportdata","isFieldActive","ColumnDisplayOrder","getlastarrayvalue","Display_Order","hasOwnProperty","checkAlredyExist","object","removed","SaveSelectedData","GetChangedNameID","mindex","iitem","IsGraphColumn","tagIndex","tagIndex1","calctagIndex","_vm$$refs$reportdata","getsortvalue","_vm$$refs$reportdata2","isFilterActive","Filters","picklist_options","getCountValue","FilterType","tagIndex2","GetOperatordata","each","html","inneritem","validindex","GetDateDetails","resetoldvalueinfilteroperator","IsBinding","operatorname","operatorid","FillFiltervalue","checksameoperator","GetDataOperator","DATA","BindOperatorValues","checkIfExists","isBinding","popupvaluebind","Index","GetFilterddlvalue","FilterJosnRquest","Commaseprated","operatoerExpressionResult","ConvertOperatorToExpression","filtervalueexist","multiddl","fillmultiselect","dditem","ifexist","j","fillvalues","isBetweenTrue","multiitem","_GetDDLValue","_vm$dropdwonvalues","Multiddlvalue","ddlvalues","isddlvalueexist","GetDDLValue","valueTypeText2","valArray","commsplitedVal","CommaSepratedStringValues","_vm$$refs$Calculated2","checkFieldVlaueExist","ExpressionDisplayOrder","colelem","DateFormatId","verifyelem","vobject","REPORTID","FunctionKeys","Arrayitem","fieldexp","fobject","checkExpExist","indexvalue","CheckItem","tempdata","checkExpvalue","dataele","getindex","related","dragged","draggedContext","relatedContext","list","Colitem","Colindex","GetAddedFieldFromDrag","AddedField","GetAddedFieldFromModuleListing","ModuleListField","Fitem","RFitem","sortitem","ekey","str","len","convertstring"],"mappings":"kHAAA,W,uBCCA,IAAIA,EAA8B,EAAQ,QAC1CC,EAAUD,GAA4B,GAEtCC,EAAQC,KAAK,CAACC,EAAOC,EAAI,oNAAqN,KAE9OD,EAAOF,QAAUA,G,qBCHjB,IAAII,EAAU,EAAQ,QACnBA,EAAQC,aAAYD,EAAUA,EAAQE,SACnB,kBAAZF,IAAsBA,EAAU,CAAC,CAACF,EAAOC,EAAIC,EAAS,MAC7DA,EAAQG,SAAQL,EAAOF,QAAUI,EAAQG,QAE5C,IAAIC,EAAM,EAAQ,QAAqEF,QAC1EE,EAAI,WAAYJ,GAAS,EAAM,CAAC,WAAY,EAAM,YAAa,K,qBCN5E,IAAIA,EAAU,EAAQ,QACnBA,EAAQC,aAAYD,EAAUA,EAAQE,SACnB,kBAAZF,IAAsBA,EAAU,CAAC,CAACF,EAAOC,EAAIC,EAAS,MAC7DA,EAAQG,SAAQL,EAAOF,QAAUI,EAAQG,QAE5C,IAAIC,EAAM,EAAQ,QAAqEF,QAC1EE,EAAI,WAAYJ,GAAS,EAAM,CAAC,WAAY,EAAM,YAAa,K,kCCT5E,W,2CCAA,IAAIK,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,UAAU,CAACE,YAAY,eAAe,CAACF,EAAG,MAAM,CAACE,YAAY,4BAA4B,CAACF,EAAG,MAAM,CAACG,MAAML,EAAIM,SAAS,CAACJ,EAAG,SAAS,CAACK,MAAM,CAAC,UAAYP,EAAIQ,aAAaN,EAAG,MAAM,CAACE,YAAY,qCAAqCG,MAAM,CAAC,GAAK,cAAc,KAAO,UAAU,uBAAuB,SAAS,CAACL,EAAG,MAAM,CAACG,MAAML,EAAIS,WAAW,CAACP,EAAG,MAAM,CAACE,YAAY,8BAA8BG,MAAM,CAAC,KAAO,MAAM,GAAK,gBAAgB,CAACL,EAAG,KAAK,CAACE,YAAY,aAAa,CAACJ,EAAIU,GAAGV,EAAIW,GAAGX,EAAIY,YAAY,KAAKV,EAAG,OAAO,CAACE,YAAY,sBAAsB,CAACF,EAAG,OAAO,CAACK,MAAM,CAAC,GAAK,eAAe,CAACL,EAAG,IAAI,CAACE,YAAY,YAAYG,MAAM,CAAC,MAAQP,EAAIa,GAAG,kBAAkB,sBAAsB,WAAWC,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOf,EAAIgB,gBAAgB,CAACd,EAAG,KAAK,CAACE,YAAY,eAAea,YAAY,CAAC,YAAY,QAAQV,MAAM,CAAC,cAAc,cAAcL,EAAG,OAAO,CAACA,EAAG,IAAI,CAACE,YAAY,YAAYG,MAAM,CAAC,MAAQ,WAAW,sBAAsB,WAAWO,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOf,EAAIkB,oBAAoB,CAAChB,EAAG,KAAK,CAACE,YAAY,+BAA+BG,MAAM,CAAC,cAAc,sBAAsBL,EAAG,MAAM,CAACG,MAAML,EAAImB,WAAW,CAACjB,EAAG,MAAM,CAACE,YAAY,8BAA8BG,MAAM,CAAC,KAAO,MAAM,GAAK,gBAAgB,CAACL,EAAG,KAAK,CAACE,YAAY,kBAAkB,CAACF,EAAG,QAAQ,CAACkB,WAAW,CAAC,CAACC,KAAK,QAAQC,QAAQ,UAAUC,MAAOvB,EAAIwB,eAAgBC,WAAW,mBAAmBpB,MAAM,CAAC,oBAAmB,EAAK,aAAcL,EAAIwB,eAAeE,OAAQ,KAAKT,YAAY,CAAC,MAAQ,OAAOV,MAAM,CAAC,KAAO,QAAQoB,SAAS,CAAC,MAAS3B,EAAIwB,gBAAiBV,GAAG,CAAC,MAAQ,SAASC,GAAWA,EAAOa,OAAOC,YAAiB7B,EAAIwB,eAAeT,EAAOa,OAAOL,WAAUrB,EAAG,OAAO,CAACE,YAAY,sBAAsB,CAACF,EAAG,OAAO,CAACK,MAAM,CAAC,GAAK,eAAe,CAACL,EAAG,IAAI,CAACE,YAAY,YAAYG,MAAM,CAAC,MAAQP,EAAIa,GAAG,QAAQ,sBAAsB,WAAWC,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOf,EAAI8B,gBAAgB,CAAC5B,EAAG,KAAK,CAACE,YAAY,sBAAsBG,MAAM,CAAC,cAAc,sBAAsBL,EAAG,MAAM,CAACE,YAAY,cAAc,CAACF,EAAG,MAAM,CAACE,YAAY,8BAA8B,CAACF,EAAG,MAAM,CAACE,YAAY,+BAA+B,CAACF,EAAG,QAAQ,CAACkB,WAAW,CAAC,CAACC,KAAK,QAAQC,QAAQ,UAAUC,MAAOvB,EAAI+B,gBAAiBN,WAAW,oBAAoBrB,YAAY,iDAAiDG,MAAM,CAAC,KAAO,OAAO,UAAY,KAAK,GAAK,cAAc,YAAc,iBAAiB,aAAe,OAAOoB,SAAS,CAAC,MAAS3B,EAAI+B,iBAAkBjB,GAAG,CAAC,QAAUd,EAAIgC,cAAc,MAAQhC,EAAIgC,cAAc,QAAUhC,EAAIiC,gBAAgB,WAAajC,EAAIiC,gBAAgB,MAAQ,SAASlB,GAAWA,EAAOa,OAAOC,YAAiB7B,EAAI+B,gBAAgBhB,EAAOa,OAAOL,WAAUvB,EAAIkC,GAAG,OAAOlC,EAAImC,GAAInC,EAAIoC,mBAAmB,SAASf,EAAKgB,GAAO,OAAOnC,EAAG,MAAM,CAACoC,IAAID,EAAMjC,YAAY,OAAOa,YAAY,CAAC,gBAAgB,sBAAsB,CAACf,EAAG,MAAM,CAACE,YAAY,mBAAmBG,MAAM,CAAC,KAAO,MAAM,GAAK,cAAgB8B,IAAQ,CAACnC,EAAG,KAAK,CAACE,YAAY,QAAQ,CAACF,EAAG,IAAI,CAACG,MAAe,GAATgC,EAAa,GAAK,YAAY9B,MAAM,CAAC,cAAc,WAAW,cAAc,eAAe,KAAO,eAAe,gBAAyB,GAAT8B,EAA0B,cAAc,eAAiBA,EAAM,gBAAgB,cAAgBA,IAAQ,CAACnC,EAAG,KAAK,CAACE,YAAY,uBAAuBG,MAAM,CAAC,cAAc,UAAUL,EAAG,OAAO,CAACE,YAAY,oBAAoB,CAACJ,EAAIU,GAAG,IAAIV,EAAIW,GAAGX,EAAIuC,kBAAkBlB,EAAKmB,eAAetC,EAAG,KAAK,CAACE,YAAY,+BAA+BG,MAAM,CAAC,cAAc,YAAYP,EAAIkC,GAAG,GAAE,OAAUhC,EAAG,MAAM,CAACG,MAAkC,GAA5BL,EAAIyC,cAAcf,OAAc,SAA8C,GAAnC1B,EAAIyC,cAAcJ,GAAOX,SAAgB1B,EAAI0C,yBAChhH,GAA5C1C,EAAI2C,uBAAuBN,GAAOX,QAAe1B,EAAI0C,wBAA0B,uFAAyF,UAAU,CAAC1C,EAAIU,GAAG,IAAIV,EAAIW,GAAGX,EAAIa,GAAG,wBAAwBX,EAAG,MAAM,CAACG,MAAe,GAATgC,EAAa,+BAA+B,0BAA0B9B,MAAM,CAAC,GAAK,cAAgB8B,EAAM,KAAO,WAAW,kBAAkB,cAAgBA,EAAM,cAAc,iBAAiB,CAACnC,EAAG,mBAAmB,CAACA,EAAG,MAAM,CAACE,YAAY,2CAA2Ca,YAAY,CAAC,aAAa,UAAU,CAACf,EAAG,MAAM,CAACE,YAAY,cAAc,CAACF,EAAG,KAAK,CAACE,YAAY,wEAAwE,CAAEJ,EAAI4C,uBAAwB1C,EAAG,YAAY,CAACE,YAAY,iBAAiBG,MAAM,CAAC,KAAwC,GAAjCP,EAAI6C,mBAAmBnB,OAAc1B,EAAIyC,cAAcJ,GAASrC,EAAI6C,mBAAmBR,GAAO,MAAQ,oBAAoB,KAAOrC,EAAI8C,UAAU,WAAW,iBAAiBhC,GAAG,CAAC,MAAQ,SAASC,GAAQf,EAAI+C,MAAO,GAAM,IAAM/C,EAAIgD,UAAU,OAAS,SAASjC,GAAQ,OAAOf,EAAIiD,eAAelC,EAAQsB,EAAOhB,EAAKmB,aAAaU,MAAM,CAAC3B,MAAOvB,EAAImD,mBAAoBC,SAAS,SAAUC,GAAMrD,EAAImD,mBAAmBE,GAAK5B,WAAW,uBAAuBzB,EAAImC,GAAsC,GAAjCnC,EAAI6C,mBAAmBnB,OAAc1B,EAAIyC,cAAcJ,GAASrC,EAAI6C,mBAAmBR,IAAS,SAASiB,EAAQC,GAAc,OAAOrD,EAAG,KAAK,CAACoC,IAAIiB,EAAanD,YAAY,0BAA0BG,MAAM,CAAC,GAAK,kBAAkB,CAACL,EAAG,OAAO,CAACE,YAAY,2BAA2B,CAACF,EAAG,KAAK,CAACG,WAA4BmD,GAAtBF,EAAQG,WAA0BH,EAAQG,WAARH,cACr+C,MAA1BA,EAAQI,OAAO,GAAGC,KAAeL,EAAQI,OAAO,GAAGC,KAAlBL,cAA8C,aAAa/C,MAAM,CAAC,cAAc,UAAUL,EAAG,OAAO,CAACE,YAAY,2BAA2Ba,YAAY,CAAC,MAAQ,OAAOV,MAAM,CAAC,sBAAsBP,EAAIuC,kBAAkBe,EAAQM,UAC5PN,EAAQO,aAAa,MAAQ7D,EAAIuC,kBAAkBe,EAAQM,UAAWN,EAAQO,eAAe,CAAC7D,EAAIU,GAAG,IAAIV,EAAIW,GAAGX,EAAIuC,kBAAkBe,EAAQM,UAAWN,EAAQO,cAAc,OAAO3D,EAAG,IAAI,CAACK,MAAM,CAAC,KAAO,iBAAiB,CAACL,EAAG,KAAK,CAACE,YAAY,gDAAgDG,MAAM,CAAC,cAAc,QAAQO,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOf,EAAI8D,UAAUR,EAASvC,EAAQsB,EAAOhB,EAAKmB,wBAAuB,GAAGxC,EAAI+D,KAAM/D,EAAI0C,wBAAyBxC,EAAG,YAAY,CAACE,YAAY,iBAAiBG,MAAM,CAAC,KAAwC,GAAjCP,EAAI6C,mBAAmBnB,OAAc1B,EAAI2C,uBAAuBN,GAASrC,EAAI6C,mBAAmBR,GAAO,MAAQ,oBAAoB,KAAOrC,EAAI8C,UAAU,WAAW,iBAAiBhC,GAAG,CAAC,MAAQ,SAASC,GAAQf,EAAI+C,MAAO,GAAM,IAAM/C,EAAIgD,UAAU,OAAS,SAASjC,GAAQ,OAAOf,EAAIiD,eAAelC,EAAQsB,KAASa,MAAM,CAAC3B,MAAOvB,EAAImD,mBAAoBC,SAAS,SAAUC,GAAMrD,EAAImD,mBAAmBE,GAAK5B,WAAW,uBAAuBzB,EAAImC,GAAqC,GAAjCnC,EAAI6C,mBAAmBnB,OAAc1B,EAAI2C,uBAAuBN,GAASrC,EAAI6C,mBAAmBR,IAAQ,SAASiB,EAAQU,GAAW,OAAO9D,EAAG,KAAK,CAACoC,IAAI0B,EAAU5D,YAAY,0BAA0BG,MAAM,CAAC,GAAK,kBAAkB,CAACL,EAAG,OAAO,CAACE,YAAY,2BAA2B,CAACF,EAAG,KAAK,CAACG,WAA4BmD,GAAtBF,EAAQG,WAA0BH,EAAQG,WAARH,cAChwC,MAA1BA,EAAQI,OAAO,GAAGC,KAAeL,EAAQI,OAAO,GAAGC,KAAlBL,cAA8C,aAAa/C,MAAM,CAAC,cAAc,UAAUL,EAAG,OAAO,CAACE,YAAY,2BAA2Ba,YAAY,CAAC,MAAQ,OAAOV,MAAM,CAAC,sBAAsB+C,EAAQM,UAAU,MAAQ5D,EAAIuC,kBAAkBe,EAAQM,UAAWN,EAAQO,eAAe,CAAC7D,EAAIU,GAAG,IAAIV,EAAIW,GAAGX,EAAIuC,kBAAkBe,EAAQM,UAAWN,EAAQO,cAAc,OAAO3D,EAAG,IAAI,CAACK,MAAM,CAAC,KAAO,iBAAiB,CAACL,EAAG,KAAK,CAACE,YAAY,mDAAmDG,MAAM,CAAC,cAAc,QAAQO,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOf,EAAIiE,UAAUX,EAASjB,gBAAmB,GAAGrC,EAAI+D,MAAM,UAAU,QAAQ/D,EAAIkE,eAAgBhE,EAAG,MAAM,CAACE,YAAY,wFAAwF,CAACJ,EAAIU,GAAG,IAAIV,EAAIW,GAAGX,EAAIa,GAAG,qBAAqBb,EAAI+D,MAAM,MAAM,GAAG7D,EAAG,MAAM,CAACG,MAAML,EAAImE,QAAQlD,YAAY,CAAC,MAAQ,OAAO,MAAQ,QAAQH,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOf,EAAIoE,iBAAiB,CAACpE,EAAIkC,GAAG,KAAKhC,EAAG,MAAM,CAACG,MAAML,EAAIqE,UAAU,CAACnE,EAAG,MAAM,CAACE,YAAY,mBAAmB,CAACF,EAAG,MAAM,CAACE,YAAY,gBAAgBG,MAAM,CAAC,KAAO,aAAa,CAACL,EAAG,MAAM,CAACE,YAAY,eAAe,CAACF,EAAG,SAAS,CAACK,MAAM,CAAC,MAAQ,KAAK,CAACL,EAAG,QAAQ,CAACoE,IAAI,SAASlE,YAAY,SAASG,MAAM,CAAC,MAAQ,SAAS,OAASP,EAAI4C,wBAAwB9B,GAAG,CAAC,MAAQd,EAAIuE,kBAAkB,CAACrE,EAAG,MAAM,CAACE,YAAY,yBAAyB,CAACF,EAAG,KAAK,CAACE,YAAY,QAAQ,CAACJ,EAAIU,GAAGV,EAAIW,GAAGX,EAAIa,GAAG,cAAcX,EAAG,QAAQ,CAACkB,WAAW,CAAC,CAACC,KAAK,QAAQC,QAAQ,UAAUC,MAAOvB,EAAIwE,iBAAkB/C,WAAW,qBAAqBpB,MAA8B,GAAxBL,EAAIyE,UAAU/C,OAAc,eAAiB,wBAAwBnB,MAAM,CAAC,YAAc,aAAaoB,SAAS,CAAC,MAAS3B,EAAIwE,kBAAmB1D,GAAG,CAAC,SAAWd,EAAI0E,eAAe,MAAQ,SAAS3D,GAAWA,EAAOa,OAAOC,YAAiB7B,EAAIwE,iBAAiBzD,EAAOa,OAAOL,WAAmC,IAAxBvB,EAAIwE,iBAAwBtE,EAAG,MAAM,CAACE,YAAY,iBAAiBC,MAAML,EAAI2E,WAAW,CAAC3E,EAAImC,GAAInC,EAAI4E,aAAa,SAASC,EAAKpF,GAAG,OAAOS,EAAG,MAAM,CAACoC,IAAI7C,GAAG,CAACS,EAAG,MAAM,CAACA,EAAG,MAAM,CAACY,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOf,EAAI8E,kBAAkBD,MAAS,CAAC7E,EAAIU,GAAG,IAAIV,EAAIW,GAAGX,EAAIuC,kBAAkBsC,EAAKjB,UAAWiB,EAAKhB,cAAc,MAAM7D,EAAIW,GAAGkE,EAAKE,eAAe,cAAwC,GAA1B/E,EAAI4E,YAAYlD,OAAaxB,EAAG,MAAM,CAACE,YAAY,wFAAwF,CAACJ,EAAIU,GAAG,IAAIV,EAAIW,GAAGX,EAAIa,GAAG,kBAAkB,OAAOb,EAAI+D,MAAM,GAAG/D,EAAI+D,KAAK7D,EAAG,MAAMA,EAAG,YAAY,CAACE,YAAY,iBAAiBG,MAAM,CAAC,KAAOP,EAAIyE,UAAU,MAAQ,oBAAoB,WAAW,iBAAiB3D,GAAG,CAAC,MAAQ,SAASC,GAAQf,EAAI+C,MAAO,GAAM,IAAM,SAAShC,GAAQf,EAAI+C,MAAO,IAAQG,MAAM,CAAC3B,MAAOvB,EAAIyE,UAAWrB,SAAS,SAAUC,GAAMrD,EAAIyE,UAAUpB,GAAK5B,WAAW,cAAczB,EAAImC,GAAInC,EAAIyE,WAAW,SAASnB,EAAQjB,GAAO,OAAOnC,EAAG,MAAM,CAACoC,IAAID,EAAMjC,YAAY,aAAa,CAACF,EAAG,OAAO,CAACE,YAAY,2BAA2Ba,YAAY,CAAC,MAAQ,SAASV,MAAM,CAAC,sBAAsB+C,EAAQM,UAAU,MAAQN,EAAQM,YAAY,CAAC5D,EAAIU,GAAG,IAAIV,EAAIW,GAAGX,EAAIuC,kBAAkBe,EAAQM,UAAWN,EAAQO,cAAc,OAAO3D,EAAG,IAAI,CAACA,EAAG,KAAK,CAACE,YAAY,4BAA4BG,MAAM,CAAC,cAAc,QAAQO,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOf,EAAIgF,kBAAkB1B,EAASvC,EAAQsB,cAAiB,IAAI,GAAGnC,EAAG,MAAMA,EAAG,MAAM,CAACE,YAAY,yBAAyB,CAACF,EAAG,KAAK,CAACE,YAAY,QAAQ,CAACJ,EAAIU,GAAGV,EAAIW,GAAGX,EAAIa,GAAG,eAAeX,EAAG,MAAM,CAACE,YAAY,kBAAkBa,YAAY,CAAC,IAAM,SAAS,CAACf,EAAG,KAAK,CAACG,MAAiC,GAA3BL,EAAIiF,oBAA8B,+BAAiC,wCAAwC1E,MAAM,CAAC,GAAK,WAAW,cAAc,QAAQO,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOf,EAAIkF,eAAenE,OAAaf,EAAImF,qBAAsBjF,EAAG,OAAO,CAACE,YAAY,kBAAkBa,YAAY,CAAC,MAAQ,QAAQ,QAAU,UAAU,CAACf,EAAG,OAAO,CAACE,YAAY,wBAAwBa,YAAY,CAAC,eAAe,KAAKV,MAAM,CAAC,GAAK,gBAAgB,CAACL,EAAG,IAAI,CAACE,YAAY,yBAAyBU,GAAG,CAAC,MAAQd,EAAIoF,mBAAmB,CAAClF,EAAG,OAAO,CAACE,YAAY,QAAQ,CAACJ,EAAIU,GAAGV,EAAIW,GAAGX,EAAIa,GAAG,yBAAyBX,EAAG,KAAK,CAACE,YAAY,iCAAiCG,MAAM,CAAC,cAAc,QAAQO,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOf,EAAIqF,gBAAgBtE,WAAgBf,EAAI+D,OAAO7D,EAAG,QAAQ,CAACkB,WAAW,CAAC,CAACC,KAAK,QAAQC,QAAQ,UAAUC,MAAOvB,EAAIsF,kBAAmB7D,WAAW,sBAAsBrB,YAAY,eAAeG,MAAM,CAAC,YAAc,cAAcoB,SAAS,CAAC,MAAS3B,EAAIsF,mBAAoBxE,GAAG,CAAC,SAAWd,EAAI0E,eAAe,MAAQ,SAAS3D,GAAWA,EAAOa,OAAOC,YAAiB7B,EAAIsF,kBAAkBvE,EAAOa,OAAOL,WAAoC,IAAzBvB,EAAIsF,kBAAyBpF,EAAG,MAAM,CAACE,YAAY,iBAAiBC,MAAML,EAAI2E,UAAU1D,YAAY,CAAC,UAAU,SAAS,CAACjB,EAAImC,GAAInC,EAAIuF,mBAAmB,SAASV,EAAKW,GAAM,OAAOtF,EAAG,MAAM,CAACoC,IAAIkD,GAAM,CAACtF,EAAG,MAAM,CAACA,EAAG,MAAM,CAACY,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOf,EAAIyF,wBAAwBZ,MAAS,CAAC7E,EAAIU,GAAG,IAAIV,EAAIW,GAAGX,EAAIuC,kBAAkBsC,EAAKjB,UAAWiB,EAAKhB,cAAc,MAAM7D,EAAIW,GAAGkE,EAAKE,eAAe,cAA8C,GAAhC/E,EAAIuF,kBAAkB7D,OAAaxB,EAAG,MAAM,CAACE,YAAY,wFAAwF,CAACJ,EAAIU,GAAG,IAAIV,EAAIW,GAAGX,EAAIa,GAAG,kBAAkB,OAAOb,EAAI+D,MAAM,GAAG/D,EAAI+D,KAAK7D,EAAG,MAAM,CAACE,YAAY,oCAAoC,CAACF,EAAG,KAAK,CAACE,YAAY,WAAW,CAACJ,EAAIU,GAAG,uBAAuBR,EAAG,YAAY,CAACE,YAAY,iBAAiBG,MAAM,CAAC,KAAOP,EAAI0F,WAAW,MAAQ,oBAAoB,GAAK,cAAc,KAAO1F,EAAI8C,UAAU,WAAW,iBAAiBhC,GAAG,CAAC,MAAQ,SAASC,GAAQf,EAAI+C,MAAO,GAAM,IAAM/C,EAAI2F,wBAAwBzC,MAAM,CAAC3B,MAAOvB,EAAI0F,WAAYtC,SAAS,SAAUC,GAAMrD,EAAI0F,WAAWrC,GAAK5B,WAAW,eAAezB,EAAImC,GAAInC,EAAI0F,YAAY,SAASpC,EAAQkC,GAAM,OAAOtF,EAAG,MAAM,CAACoC,IAAIkD,EAAKpF,YAAY,2BAA2BG,MAAM,CAAC,GAAK,gBAAgB,CAA8B,GAA5B+C,EAAQsC,iBAA0B1F,EAAG,OAAO,CAACe,YAAY,CAAC,YAAY,OAAO,MAAQ,OAAO,eAAe,SAAS,CAACjB,EAAIU,GAAG,KAAKR,EAAG,MAAM,CAACe,YAAY,CAAC,YAAY,SAAS,CAACjB,EAAIU,GAAG,SAASV,EAAI+D,KAAK7D,EAAG,OAAO,CAACE,YAAY,2BAA2Ba,YAAY,CAAC,MAAQ,SAASV,MAAM,CAAC,sBAAsB+C,EAAQM,UAAU,MAAQ5D,EAAIuC,kBAAkBe,EAAQM,UAAWN,EAAQO,eAAe,CAAC7D,EAAIU,GAAG,IAAIV,EAAIW,GAAGX,EAAIuC,kBAAkBe,EAAQM,UAAWN,EAAQO,cAAc,IAAI7D,EAAIW,GAAG2C,EAAQuC,sBAAsB,OAAO3F,EAAG,MAAM,CAACE,YAAY,gCAAgC,CAACF,EAAG,IAAI,CAACK,MAAM,CAAC,cAAc,QAAQO,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOf,EAAI8F,mBAAmBxC,EAASvC,MAAW,CAACb,EAAG,KAAK,CAACE,YAAY,gCAAgCF,EAAG,IAAI,CAACK,MAAM,CAAC,cAAc,QAAQO,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOf,EAAI+F,YAAYzC,EAASvC,MAAW,CAACb,EAAG,KAAK,CAACE,YAAY,+BAA+BF,EAAG,MAAM,CAACA,EAAG,MAAM,CAACE,YAAY,8BAA8B,CAACF,EAAG,OAAO,CAACE,YAAY,yCAAyC,CAACF,EAAG,OAAO,CAACE,YAAY,0CAA0Ca,YAAY,CAAC,MAAQ,SAASV,MAAM,CAAC,GAAK,gBAAgB,CAACL,EAAG,MAAM,CAACE,YAAY,yBAAyB,CAACF,EAAG,MAAM,CAACE,YAAY,4BAA4B,CAACF,EAAG,MAAM,CAACE,YAAY,OAAO,CAACF,EAAG,MAAM,CAACE,YAAY,aAAa,CAACF,EAAG,MAAM,CAACE,YAAY,gCAAgC,CAACF,EAAG,OAAO,CAACE,YAAY,0BAA0B,CAACJ,EAAIU,GAAG,IAAIV,EAAIW,GAAGX,EAAIa,GAAG,YAAY,eAAeX,EAAG,MAAM,CAACE,YAAY,qBAAqB,CAACF,EAAG,MAAM,CAACE,YAAY,yBAAyB,CAACF,EAAG,MAAM,CAACE,YAAY,cAAc,CAACF,EAAG,QAAQ,CAACF,EAAIU,GAAGV,EAAIW,GAAGX,EAAIa,GAAG,mBAAmBX,EAAG,QAAQ,CAACkB,WAAW,CAAC,CAACC,KAAK,QAAQC,QAAQ,UAAUC,MAAOvB,EAAIgG,iBAAkBvE,WAAW,qBAAqBrB,YAAY,eAAeG,MAAM,CAAC,UAAY,MAAMoB,SAAS,CAAC,MAAS3B,EAAIgG,kBAAmBlF,GAAG,CAAC,MAAQ,SAASC,GAAQA,EAAOkF,kBAAmB,QAAU,SAASlF,GAAQ,OAAOf,EAAIkG,eAAenF,IAAS,MAAQ,SAASA,GAAWA,EAAOa,OAAOC,YAAiB7B,EAAIgG,iBAAiBjF,EAAOa,OAAOL,eAAcrB,EAAG,MAAM,CAACE,YAAY,yBAAyB,CAACF,EAAG,MAAM,CAACG,MAAqC,QAA/BiD,EAAQ6C,oBAAgC,GAAK,qBAAqB,CAACjG,EAAG,QAAQ,CAACF,EAAIU,GAAGV,EAAIW,GAAGX,EAAIa,GAAG,eAAe,OAAOX,EAAG,SAAS,CAACkB,WAAW,CAAC,CAACC,KAAK,QAAQC,QAAQ,UAAUC,MAAOvB,EAAIoG,gBAAiB3E,WAAW,oBAAoBrB,YAAY,0BAA0BU,GAAG,CAAC,OAAS,SAASC,GAAQ,IAAIsF,EAAgBC,MAAMC,UAAUC,OAAOC,KAAK1F,EAAOa,OAAO8E,SAAQ,SAASC,GAAG,OAAOA,EAAEC,YAAWC,KAAI,SAASF,GAAG,IAAIG,EAAM,WAAYH,EAAIA,EAAEI,OAASJ,EAAEpF,MAAM,OAAOuF,KAAO9G,EAAIoG,gBAAgBrF,EAAOa,OAAOoF,SAAWX,EAAgBA,EAAc,MAAM,CAACnG,EAAG,SAAS,CAACK,MAAM,CAAC,MAAQ,GAAG,SAAW,KAAK,CAACP,EAAIU,GAAG,cAAcV,EAAImC,GAAInC,EAAIiH,eAAe,SAASC,EAAWC,GAAW,OAAOjH,EAAG,SAAS,CAACoC,IAAI6E,GAAW,CAACnH,EAAIU,GAAG,IAAIV,EAAIW,GAAGX,EAAIuC,kBAAkB2E,EAAWE,aAAa,WAAU,OAAOlH,EAAG,MAAM,CAACE,YAAY,yBAAyB,CAACF,EAAG,MAAM,CAACG,MAAqC,WAA/BiD,EAAQ6C,oBAAmC,GAAK,qBAAqB,CAACjG,EAAG,QAAQ,CAACF,EAAIU,GAAGV,EAAIW,GAAGX,EAAIa,GAAG,qBAAqBX,EAAG,QAAQ,CAACkB,WAAW,CAAC,CAACC,KAAK,QAAQC,QAAQ,UAAUC,MAAOvB,EAAIqH,mBAAoB5F,WAAW,uBAAuBrB,YAAY,eAAeG,MAAM,CAAC,KAAO,UAAUoB,SAAS,CAAC,MAAS3B,EAAIqH,oBAAqBvG,GAAG,CAAC,MAAQ,SAASC,GAAWA,EAAOa,OAAOC,YAAiB7B,EAAIqH,mBAAmBtG,EAAOa,OAAOL,eAAcrB,EAAG,MAAM,CAACE,YAAY,wBAAwBa,YAAY,CAAC,aAAa,SAAS,CAACf,EAAG,MAAM,CAACG,MAAqC,WAA/BiD,EAAQ6C,oBAAmC,GAAK,qBAAqB,CAACjG,EAAG,QAAQ,CAACkB,WAAW,CAAC,CAACC,KAAK,QAAQC,QAAQ,UAAUC,MAAOvB,EAAIsH,kBAAmB7F,WAAW,sBAAsBlB,MAAM,CAAC,KAAO,WAAW,GAAK,gBAAgBoB,SAAS,CAAC,QAAU2E,MAAMiB,QAAQvH,EAAIsH,mBAAmBtH,EAAIwH,GAAGxH,EAAIsH,kBAAkB,OAAO,EAAGtH,EAAIsH,mBAAoBxG,GAAG,CAAC,OAAS,SAASC,GAAQ,IAAI0G,EAAIzH,EAAIsH,kBAAkBI,EAAK3G,EAAOa,OAAO+F,IAAID,EAAKE,QAAuB,GAAGtB,MAAMiB,QAAQE,GAAK,CAAC,IAAIpE,EAAI,KAAKwE,EAAI7H,EAAIwH,GAAGC,EAAIpE,GAAQqE,EAAKE,QAASC,EAAI,IAAI7H,EAAIsH,kBAAkBG,EAAIK,OAAO,CAACzE,KAAYwE,GAAK,IAAI7H,EAAIsH,kBAAkBG,EAAIM,MAAM,EAAEF,GAAKC,OAAOL,EAAIM,MAAMF,EAAI,UAAW7H,EAAIsH,kBAAkBK,MAAS3H,EAAIU,GAAG,MAAMR,EAAG,QAAQ,CAACK,MAAM,CAAC,IAAM,SAAS,CAACP,EAAIU,GAAGV,EAAIW,GAAGX,EAAIa,GAAG,oBAAoBX,EAAG,MAAMA,EAAG,QAAQ,CAACkB,WAAW,CAAC,CAACC,KAAK,QAAQC,QAAQ,UAAUC,MAAOvB,EAAIgI,iBAAkBvG,WAAW,qBAAqBlB,MAAM,CAAC,KAAO,YAAYoB,SAAS,CAAC,QAAU2E,MAAMiB,QAAQvH,EAAIgI,kBAAkBhI,EAAIwH,GAAGxH,EAAIgI,iBAAiB,OAAO,EAAGhI,EAAIgI,kBAAmBlH,GAAG,CAAC,OAAS,SAASC,GAAQ,IAAI0G,EAAIzH,EAAIgI,iBAAiBN,EAAK3G,EAAOa,OAAO+F,IAAID,EAAKE,QAAuB,GAAGtB,MAAMiB,QAAQE,GAAK,CAAC,IAAIpE,EAAI,KAAKwE,EAAI7H,EAAIwH,GAAGC,EAAIpE,GAAQqE,EAAKE,QAASC,EAAI,IAAI7H,EAAIgI,iBAAiBP,EAAIK,OAAO,CAACzE,KAAYwE,GAAK,IAAI7H,EAAIgI,iBAAiBP,EAAIM,MAAM,EAAEF,GAAKC,OAAOL,EAAIM,MAAMF,EAAI,UAAW7H,EAAIgI,iBAAiBL,MAASzH,EAAG,QAAQ,CAACe,YAAY,CAAC,QAAU,OAAOV,MAAM,CAAC,IAAM,SAAS,CAACP,EAAIU,GAAGV,EAAIW,GAAGX,EAAIa,GAAG,uBAAuBX,EAAG,MAAM,CAACE,YAAY,8BAA8B,CAACF,EAAG,MAAM,CAACE,YAAY,wBAAwB,CAACF,EAAG,MAAM,CAACE,YAAY,uBAAuB,CAACF,EAAG,IAAI,CAACE,YAAY,+CAA+CG,MAAM,CAAC,GAAK,gBAAgB,MAAQ,GAAG,sBAAsB,UAAU,sBAAsB,+BAA+BO,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOf,EAAIiI,sBAAsB3E,EAASvC,MAAW,CAACb,EAAG,OAAO,CAACE,YAAY,mBAAmBJ,EAAIU,GAAG,IAAIV,EAAIW,GAAGX,EAAIa,GAAG,SAAS,iBAAiBX,EAAG,KAAK,CAACE,YAAY,oCAAoCG,MAAM,CAAC,cAAc,QAAQO,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOf,EAAIkI,aAAanH,OAAYb,EAAG,MAAM,CAACE,YAAY,WAAW,CAACF,EAAG,KAAK,CAACE,YAAY,wCAAwCa,YAAY,CAAC,YAAY,sBAAsBf,EAAG,MAAM,CAACE,YAAY,sCAAsC,CAACJ,EAAIU,GAAGV,EAAIW,GAAG2C,EAAQyB,uBAAsB,IAAI,OAAO7E,EAAG,QAAQ,CAACoE,IAAI,UAAU/D,MAAM,CAAC,MAAQ,UAAU,OAASP,EAAI0C,yBAAyB5B,GAAG,CAAC,MAAQd,EAAImI,mBAAmB,CAACjI,EAAG,MAAM,CAACE,YAAY,yBAAyB,CAACF,EAAG,KAAK,CAACF,EAAIU,GAAG,gCAAgCR,EAAG,SAAS,CAACkB,WAAW,CAAC,CAACC,KAAK,QAAQC,QAAQ,UAAUC,MAAOvB,EAAIoI,SAAU3G,WAAW,aAAarB,YAAY,eAAeG,MAAM,CAAC,KAAO,YAAYO,GAAG,CAAC,OAAS,CAAC,SAASC,GAAQ,IAAIsF,EAAgBC,MAAMC,UAAUC,OAAOC,KAAK1F,EAAOa,OAAO8E,SAAQ,SAASC,GAAG,OAAOA,EAAEC,YAAWC,KAAI,SAASF,GAAG,IAAIG,EAAM,WAAYH,EAAIA,EAAEI,OAASJ,EAAEpF,MAAM,OAAOuF,KAAO9G,EAAIoI,SAASrH,EAAOa,OAAOoF,SAAWX,EAAgBA,EAAc,IAAIrG,EAAIqI,oBAAoBrI,EAAImC,GAAInC,EAAIsI,WAAW,SAASC,EAASC,GAAW,OAAOtI,EAAG,SAAS,CAACoC,IAAIkG,EAAU7G,SAAS,CAAC,SAAW4G,GAAYvI,EAAIoI,SAAW,WAAa,GAAG,MAAQG,IAAW,CAACvI,EAAIU,GAAG,IAAIV,EAAIW,GAAG4H,GAAU,UAAS,GAAGrI,EAAG,KAAK,CAACE,YAAY,QAAQ,CAACJ,EAAIU,GAAG,kBAAkBR,EAAG,MAAM,CAACE,YAAY,gBAAgB,CAACJ,EAAImC,GAAInC,EAAIyI,YAAY,SAAS5D,EAAK6D,GAAU,MAAwB,mBAAhB1I,EAAIoI,SAA+BlI,EAAG,OAAO,CAACoC,IAAIoG,EAASnI,MAAM,CAAC,OAAO,KAAK,CAACP,EAAIU,GAAG,IAAIV,EAAIW,GAAIX,EAAIyI,WAAWE,QAAQ9D,GAAQ,GAAI,KAAM7E,EAAIyI,WAAW/G,OAAU1B,EAAIyI,WAAWE,QAAQ9D,GAAQ,EAAI3E,EAAG,OAAO,CAACe,YAAY,CAAC,eAAe,QAAQ,CAACjB,EAAIU,GAAG,IAAIV,EAAIW,GAAGX,EAAI4I,eAAe5I,EAAI+D,OAAO/D,EAAI+D,QAAO/D,EAAImC,GAAInC,EAAIyI,YAAY,SAAS5D,EAAKgE,GAAW,MAAwB,mBAAhB7I,EAAIoI,SAA+BlI,EAAG,OAAO,CAACoC,IAAIuG,GAAW,CAAC7I,EAAIU,GAAG,IAAIV,EAAIW,GAAIX,EAAIyI,WAAWE,QAAQ9D,GAAQ,GAAI,KAAM7E,EAAIyI,WAAW/G,OAAU1B,EAAIyI,WAAWE,QAAQ9D,GAAQ,EAAI3E,EAAG,OAAO,CAACe,YAAY,CAAC,eAAe,QAAQ,CAACjB,EAAIU,GAAGV,EAAIW,GAAGX,EAAI4I,eAAe5I,EAAI+D,OAAO/D,EAAI+D,SAAQ,GAAG7D,EAAG,YAAY,CAACE,YAAY,iBAAiBG,MAAM,CAAC,KAAOP,EAAIyI,WAAW,MAAQ,oBAAoB,KAAOzI,EAAI8C,UAAU,WAAW,gBAAgB,GAAK,eAAehC,GAAG,CAAC,MAAQ,SAASC,GAAQf,EAAI+C,MAAO,GAAM,IAAM/C,EAAI2F,uBAAuB,UAAY,SAAS5E,GAAQ,OAAOf,EAAI8I,SAAS/H,IAAS,UAAY,SAASA,GAAQ,OAAOf,EAAI8I,SAAS/H,IAAS,KAAO,SAASA,GAAQ,OAAOf,EAAI8I,SAAS/H,KAAUmC,MAAM,CAAC3B,MAAOvB,EAAIyI,WAAYrF,SAAS,SAAUC,GAAMrD,EAAIyI,WAAWpF,GAAK5B,WAAW,eAAezB,EAAImC,GAAInC,EAAIyI,YAAY,SAASnF,EAAQyF,GAAU,OAAO7I,EAAG,MAAM,CAACoC,IAAIyG,EAAS3I,YAAY,2BAA2BG,MAAM,CAAC,GAAK,eAAeO,GAAG,CAAC,SAAW,SAASC,GAAQ,OAAOf,EAAI8I,SAAS/H,MAAW,CAACb,EAAG,MAAM,CAACE,YAAY,0CAA0C,CAACJ,EAAIU,GAAG,IAAIV,EAAIW,GAAIX,EAAIyI,WAAWE,QAAQrF,GAAW,GAAI,OAAOpD,EAAG,MAAM,CAACe,YAAY,CAAC,MAAQ,QAAQ,CAACf,EAAG,MAAM,CAACE,YAAY,uDAAuD,CAA8B,GAA5BkD,EAAQsC,iBAA0B1F,EAAG,OAAO,CAACe,YAAY,CAAC,YAAY,OAAO,MAAQ,OAAO,eAAe,SAAS,CAACjB,EAAIU,GAAG,KAAKR,EAAG,MAAM,CAACe,YAAY,CAAC,YAAY,SAAS,CAACjB,EAAIU,GAAG,SAASV,EAAI+D,KAAK7D,EAAG,OAAO,CAACE,YAAY,2BAA2Ba,YAAY,CAAC,MAAQ,SAASV,MAAM,CAAC,sBAAsB+C,EAAQM,UAAU,MAAQ5D,EAAIuC,kBAAkBe,EAAQM,UAAWN,EAAQO,eAAe,CAAC7D,EAAIU,GAAG,IAAIV,EAAIW,GAAGX,EAAIuC,kBAAkBe,EAAQM,UAAWN,EAAQO,cAAc7D,EAAIW,GAAG2C,EAAQuC,sBAAsB,SAAS3F,EAAG,MAAM,CAACE,YAAY,mEAAmE,CAACJ,EAAIU,GAAG,IAAIV,EAAIW,GAAG2C,EAAQ0F,qBAAqB,OAAO9I,EAAG,MAAM,CAACE,YAAY,uDAAuD,CAACJ,EAAIU,GAAG,IAAIV,EAAIW,GAAG2C,EAAQ2F,eAAe,IAAIjJ,EAAIW,GAAG2C,EAAQ4F,iBAAiB,IAAIlJ,EAAIW,GAAG2C,EAAQ6F,kBAAkB,IAAInJ,EAAIW,GAAGX,EAAIoJ,SAASC,QAAQC,WAAWhG,EAAQiG,qBAAqB,IAAIvJ,EAAIW,GAAGX,EAAIoJ,SAASC,QAAQC,WAAWhG,EAAQkG,sBAAsB,IAAIxJ,EAAIW,GAAG2C,EAAQmG,uBAAuB,IAAIzJ,EAAIW,GAAG2C,EAAQoG,wBAAwB,IAAI1J,EAAIW,GAAG2C,EAAQqG,sBAAsB,IAAI3J,EAAIW,GAAG2C,EAAQsG,eAAe,IAAI5J,EAAIW,GAAGX,EAAIa,GAAGyC,EAAQuG,iBAAiB,SAAS3J,EAAG,MAAM,CAACE,YAAY,gCAAgC,CAACF,EAAG,IAAI,CAACK,MAAM,CAAC,cAAc,QAAQO,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOf,EAAI8J,mBAAmBxG,EAASvC,MAAW,CAACb,EAAG,KAAK,CAACG,MAAOiD,EAAQyG,qBAAqD,mCAA9B,gCAAqE7J,EAAG,IAAI,CAACK,MAAM,CAAC,cAAc,QAAQO,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOf,EAAIgK,aAAa1G,EAASvC,MAAW,CAACb,EAAG,KAAK,CAACE,YAAY,+BAA+BF,EAAG,MAAM,CAACA,EAAG,MAAM,CAACE,YAAY,8BAA8B,CAACF,EAAG,OAAO,CAACE,YAAY,yCAAyC,CAACF,EAAG,OAAO,CAACE,YAAY,0CAA0Ca,YAAY,CAAC,MAAQ,SAASV,MAAM,CAAC,GAAK,gBAAgB,CAACL,EAAG,MAAM,CAACE,YAAY,yBAAyB,CAACF,EAAG,MAAM,CAACE,YAAY,4BAA4B,CAACF,EAAG,MAAM,CAACE,YAAY,OAAO,CAACF,EAAG,MAAM,CAACE,YAAY,aAAa,CAACF,EAAG,MAAM,CAACE,YAAY,gCAAgC,CAACF,EAAG,OAAO,CAACE,YAAY,0BAA0B,CAACJ,EAAIU,GAAG,IAAIV,EAAIW,GAAGX,EAAIa,GAAG,YAAY,eAAeX,EAAG,MAAM,CAACE,YAAY,qBAAqB,CAACF,EAAG,MAAM,CAACE,YAAY,yBAAyB,CAACJ,EAAImC,GAAInC,EAAIiK,aAAa,SAASpF,EAAKqF,GAAQ,OAAOhK,EAAG,MAAM,CAACoC,IAAI4H,EAAO9J,YAAY,cAAc,CAACF,EAAG,QAAQ,CAACkB,WAAW,CAAC,CAACC,KAAK,QAAQC,QAAQ,UAAUC,MAAO+B,EAAQ6G,gBAAiB1I,WAAW,4BAA4BrB,YAAY,QAAQG,MAAM,CAAC,KAAO,QAAQ,KAAO,YAAcP,EAAIyI,WAAWE,QAAQrF,GAAW,IAAI3B,SAAS,CAAC,MAAQkD,EAAKuF,YAAY,QAAUpK,EAAIqK,GAAG/G,EAAQ6G,gBAAgBtF,EAAKuF,cAActJ,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOf,EAAIsK,WAAWzF,EAAK0F,sBAAuBjH,EAASuB,EAAK2F,oBAAqB3F,EAAKuF,YAAavF,EAAK4F,GAAG,GAAGC,sBAAsB,OAAS,SAAS3J,GAAQ,OAAOf,EAAI2K,KAAKrH,EAAS,kBAAmBuB,EAAKuF,iBAAiBlK,EAAG,QAAQ,CAACE,YAAY,QAAQ,CAACJ,EAAIU,GAAG,IAAIV,EAAIW,GAAGkE,EAAK0F,uBAAuB,OAAOrK,EAAG,WAAWF,EAAI4K,eAAgB1K,EAAG,QAAQ,CAACkB,WAAW,CAAC,CAACC,KAAK,QAAQC,QAAQ,UAAUC,MAAOvB,EAAI6K,iBAAkBpJ,WAAW,qBAAqBrB,YAAY,eAAeG,MAAM,CAAC,KAAO,OAAO,GAAK,WAAWoB,SAAS,CAAC,MAAS3B,EAAI6K,kBAAmB/J,GAAG,CAAC,MAAQ,SAASC,GAAWA,EAAOa,OAAOC,YAAiB7B,EAAI6K,iBAAiB9J,EAAOa,OAAOL,WAAUvB,EAAI+D,KAAM/D,EAAI8K,eAAgB5K,EAAG,QAAQ,CAACkB,WAAW,CAAC,CAACC,KAAK,QAAQC,QAAQ,UAAUC,MAAOvB,EAAI+K,kBAAmBtJ,WAAW,sBAAsBrB,YAAY,eAAeG,MAAM,CAAC,KAAO,OAAO,GAAK,YAAYoB,SAAS,CAAC,MAAS3B,EAAI+K,mBAAoBjK,GAAG,CAAC,MAAQ,SAASC,GAAWA,EAAOa,OAAOC,YAAiB7B,EAAI+K,kBAAkBhK,EAAOa,OAAOL,WAAUvB,EAAI+D,KAAM/D,EAAIgL,iBAAkB9K,EAAG,QAAQ,CAACkB,WAAW,CAAC,CAACC,KAAK,QAAQC,QAAQ,UAAUC,MAAOvB,EAAIiL,mBAAoBxJ,WAAW,uBAAuBpB,MAAM,CAAC,gBAAe,EAAK,aAC5nkB,OAA/BiD,EAAQ6C,oBAA+BnG,EAAIiL,mBAAmBvJ,OAAS,EAAI1B,EAAIiL,mBAAmBvJ,OAAS,IAAInB,MAAM,CAAC,KAAO,SAAS,GAAK,aAAa,WAA4C,OAA/B+C,EAAQ6C,oBAA+B,0CAA2C,4CAA4CxE,SAAS,CAAC,MAAS3B,EAAIiL,oBAAqBnK,GAAG,CAAC,QAAU,SAASC,GAAQ,OAAOf,EAAIkL,cAAcnK,IAAS,MAAQ,SAASA,GAAWA,EAAOa,OAAOC,YAAiB7B,EAAIiL,mBAAmBlK,EAAOa,OAAOL,WAAUvB,EAAI+D,KAAK7D,EAAG,MAAOF,EAAImL,iBAAkBjL,EAAG,QAAQ,CAACkB,WAAW,CAAC,CAACC,KAAK,QAAQC,QAAQ,UAAUC,MAAOvB,EAAIoL,oBAAqB3J,WAAW,wBAAwBpB,MAAM,CAAE,gBAAgB,EAAM,aAA6C,OAA/BiD,EAAQ6C,qBAAiCkF,WAAWrL,EAAIoL,qBAAuBC,WAAWrL,EAAIiL,qBACxyBI,WAAWrL,EAAIoL,sBAAwBC,WAAWrL,EAAIiL,qBAAuBjL,EAAIoL,oBAAoB1J,OAAS,KAAkC,IAA3B1B,EAAIoL,qBAAwD,KAA3BpL,EAAIoL,sBACxJC,WAAWrL,EAAIoL,qBAAuBC,WAAWrL,EAAIiL,qBAAuBI,WAAWrL,EAAIoL,sBAAwBC,WAAWrL,EAAIiL,qBACpIjL,EAAIoL,oBAAoB1J,OAAS,MAAmC,IAA3B1B,EAAIoL,qBAAwD,KAA3BpL,EAAIoL,sBAA+B7K,MAAM,CAAC,KAAO,SAAS,GAAK,aAAa,WAA4C,OAA/B+C,EAAQ6C,oBAA+B,0CAA2C,4CAA4CxE,SAAS,CAAC,MAAS3B,EAAIoL,qBAAsBtK,GAAG,CAAC,QAAU,SAASC,GAAQ,OAAOf,EAAIkL,cAAcnK,IAAS,MAAQ,SAASA,GAAWA,EAAOa,OAAOC,YAAiB7B,EAAIoL,oBAAoBrK,EAAOa,OAAOL,WAAUvB,EAAI+D,OAAQsH,WAAWrL,EAAIoL,qBAAuBC,WAAWrL,EAAIiL,qBAAuBI,WAAWrL,EAAIoL,sBAAwBC,WAAWrL,EAAIiL,sBAC5mB,IAA3BjL,EAAIoL,qBAAwD,KAA3BpL,EAAIoL,oBAAuIpL,EAAI+D,KAA7G7D,EAAG,OAAO,CAACE,YAAY,oBAAoB,CAACJ,EAAIU,GAAG,sDAA+F,OAA/B4C,EAAQ6C,oBAA8BjG,EAAG,OAAO,CAACG,MAAML,EAAIiL,mBAAmBvJ,OAAS,IAAM1B,EAAIoL,oBAAoB1J,OAAS,GAAK,mBAAmB,UAAU,CAAC1B,EAAIU,GAAG,qCAAqCV,EAAI+D,KAAqC,OAA/BT,EAAQ6C,oBAA8BjG,EAAG,OAAO,CAACG,MAAML,EAAIiL,mBAAmBvJ,OAAS,GAAK1B,EAAIoL,oBAAoB1J,OAAS,EAAI,mBAAmB,UAAU,CAAC1B,EAAIU,GAAG,qCAAqCV,EAAI+D,KAAM/D,EAAIsL,eAAgBpL,EAAG,QAAQ,CAACkB,WAAW,CAAC,CAACC,KAAK,QAAQC,QAAQ,UAAUC,MAAOvB,EAAIuL,iBAAkB9J,WAAW,qBAAqBrB,YAAY,eAAeG,MAAM,CAAC,KAAO,OAAO,GAAK,eAAe,IAAM,cAAcoB,SAAS,CAAC,MAAS3B,EAAIuL,kBAAmBzK,GAAG,CAAC,MAAQ,SAASC,GAAWA,EAAOa,OAAOC,YAAiB7B,EAAIuL,iBAAiBxK,EAAOa,OAAOL,WAAUvB,EAAI+D,KAAM/D,EAAIwL,eAAgBtL,EAAG,QAAQ,CAACkB,WAAW,CAAC,CAACC,KAAK,QAAQC,QAAQ,UAAUC,MAAOvB,EAAIyL,kBAAmBhK,WAAW,sBAAsBpB,MAAM,CAAE,gBAAgB,EAAM,SAAoC,IAAxBL,EAAIuL,iBAAuB,cAAgBG,KAAKC,MAAM3L,EAAIyL,mBAAqBC,KAAKC,MAAM3L,EAAIuL,mBACpvCG,KAAKC,MAAM3L,EAAIyL,oBAAsBC,KAAKC,MAAM3L,EAAIuL,oBAA+C,IAAzBvL,EAAIyL,mBAA2BlL,MAAM,CAAC,KAAO,OAAO,GAAK,eAAe,IAAMP,EAAIuL,iBAAiB,IAAM,cAAc5J,SAAS,CAAC,MAAS3B,EAAIyL,mBAAoB3K,GAAG,CAAC,MAAQ,SAASC,GAAWA,EAAOa,OAAOC,YAAiB7B,EAAIyL,kBAAkB1K,EAAOa,OAAOL,WAAUvB,EAAI+D,MAAQ2H,KAAKC,MAAM3L,EAAIyL,mBAAqBC,KAAKC,MAAM3L,EAAIuL,mBACxZG,KAAKC,MAAM3L,EAAIyL,oBAAsBC,KAAKC,MAAM3L,EAAIuL,oBAA+C,IAAzBvL,EAAIyL,kBAA0BvL,EAAG,OAAO,CAACE,YAAY,oBAAoB,CAACJ,EAAIU,GAAG,sDAAsDV,EAAI+D,KAAM/D,EAAI4L,gBAAiB1L,EAAG,SAAS,CAACkB,WAAW,CAAC,CAACC,KAAK,QAAQC,QAAQ,UAAUC,MAAOvB,EAAI6L,eAAgBpK,WAAW,mBAAmBrB,YAAY,eAAeU,GAAG,CAAC,OAAS,SAASC,GAAQ,IAAIsF,EAAgBC,MAAMC,UAAUC,OAAOC,KAAK1F,EAAOa,OAAO8E,SAAQ,SAASC,GAAG,OAAOA,EAAEC,YAAWC,KAAI,SAASF,GAAG,IAAIG,EAAM,WAAYH,EAAIA,EAAEI,OAASJ,EAAEpF,MAAM,OAAOuF,KAAO9G,EAAI6L,eAAe9K,EAAOa,OAAOoF,SAAWX,EAAgBA,EAAc,MAAM,CAACnG,EAAG,SAAS,CAACK,MAAM,CAAC,SAAW,KAAK,CAACP,EAAIU,GAAG,aAAaV,EAAImC,GAAInC,EAAI8L,eAAe,SAASC,GAAS,OAAO7L,EAAG,SAAS,CAACoC,IAAIyJ,EAAQC,gBAAgBzL,MAAM,CAAC,MAAQwL,EAAQE,kBAAkBtK,SAAS,CAAC,MAAQoK,EAAQC,kBAAkB,CAAChM,EAAIU,GAAG,IAAIV,EAAIW,GAAGX,EAAIkM,YAAYH,EAAQE,iBAAkB,YAAW,GAAGjM,EAAI+D,KAAM/D,EAAImM,cAAejM,EAAG,QAAQ,CAACkB,WAAW,CAAC,CAACC,KAAK,QAAQC,QAAQ,UAAUC,MAAOvB,EAAIoM,iBAAkB3K,WAAW,qBAAqBrB,YAAY,eAAeG,MAAM,CAAC,KAAO,OAAO,GAAK,eAAe,MAAQP,EAAIoM,iBAAiB,KAAO,KAAKzK,SAAS,CAAC,MAAS3B,EAAIoM,kBAAmBtL,GAAG,CAAC,MAAQ,SAASC,GAAWA,EAAOa,OAAOC,YAAiB7B,EAAIoM,iBAAiBrL,EAAOa,OAAOL,WAAUvB,EAAI+D,KAAM/D,EAAIqM,eAAgBnM,EAAG,QAAQ,CAACkB,WAAW,CAAC,CAACC,KAAK,QAAQC,QAAQ,UAAUC,MAAOvB,EAAIsM,kBAAmB7K,WAAW,sBAAsBpB,MAAM,CAAE,gBAAgB,EAAM,SAAoC,IAAxBL,EAAIoM,kBAAyB7L,MAAM,CAAC,KAAO,OAAO,GAAK,eAAe,IAAMP,EAAIoM,iBAAiB,MAAQpM,EAAIsM,kBAAkB,KAAO,KAAK3K,SAAS,CAAC,MAAS3B,EAAIsM,mBAAoBxL,GAAG,CAAC,MAAQ,SAASC,GAAWA,EAAOa,OAAOC,YAAiB7B,EAAIsM,kBAAkBvL,EAAOa,OAAOL,WAAUvB,EAAI+D,KAAM/D,EAAIuM,aAAcrM,EAAG,SAAS,CAACkB,WAAW,CAAC,CAACC,KAAK,QAAQC,QAAQ,UAAUC,MAAOvB,EAAIwM,oBAAqB/K,WAAW,wBAAwBrB,YAAY,eAAeU,GAAG,CAAC,OAAS,SAASC,GAAQ,IAAIsF,EAAgBC,MAAMC,UAAUC,OAAOC,KAAK1F,EAAOa,OAAO8E,SAAQ,SAASC,GAAG,OAAOA,EAAEC,YAAWC,KAAI,SAASF,GAAG,IAAIG,EAAM,WAAYH,EAAIA,EAAEI,OAASJ,EAAEpF,MAAM,OAAOuF,KAAO9G,EAAIwM,oBAAoBzL,EAAOa,OAAOoF,SAAWX,EAAgBA,EAAc,MAAM,CAACnG,EAAG,SAAS,CAACK,MAAM,CAAC,SAAW,KAAK,CAACP,EAAIU,GAAG,aAAaV,EAAImC,GAAInC,EAAI0G,SAAS,SAASqF,GAAS,OAAO7L,EAAG,SAAS,CAACoC,IAAIyJ,EAAQxK,MAAMhB,MAAM,CAAC,MAAQwL,EAAQ1K,MAAMM,SAAS,CAAC,MAAQoK,EAAQxK,QAAQ,CAACvB,EAAIU,GAAG,IAAIV,EAAIW,GAAGX,EAAIkM,YAAYH,EAAQ1K,KAAM,YAAW,GAAGrB,EAAI+D,KAAM/D,EAAIyM,iBAAkBvM,EAAG,MAAM,CAACA,EAAG,eAAe,CAACK,MAAM,CAAC,KAAO,KAAK,SAAU,EAAM,OAASP,EAAI0M,eAAe,GAAG1M,EAAI+D,MAAM,GAAG7D,EAAG,MAAM,CAACE,YAAY,mCAAmC,CAACF,EAAG,MAAM,CAACE,YAAY,wBAAwB,CAACF,EAAG,MAAM,CAACE,YAAY,uBAAuB,CAACF,EAAG,IAAI,CAACG,MAAM,CAAE,gDAAgD,EAAM,UAA4C,OAA/BiD,EAAQ6C,oBAC55FkF,WAAWrL,EAAIoL,qBAAuBC,WAAWrL,EAAIiL,qBAAuBI,WAAWrL,EAAIoL,sBAAwBC,WAAWrL,EAAIiL,qBAClIjL,EAAIiL,mBAAmBvJ,OAAS,GAAK1B,EAAIoL,oBAAoB1J,OAAS,GAAK1B,EAAImL,iBAC/EE,WAAWrL,EAAIoL,qBAAuBC,WAAWrL,EAAIiL,qBAAuBI,WAAWrL,EAAIoL,sBAAwBC,WAAWrL,EAAIiL,qBAClIjL,EAAIiL,mBAAmBvJ,OAAS,IAAM1B,EAAIoL,oBAAoB1J,OAAS,IAAM1B,EAAImL,mBAChFO,KAAKC,MAAM3L,EAAIyL,mBAAqBC,KAAKC,MAAM3L,EAAIuL,mBAAqBG,KAAKC,MAAM3L,EAAIyL,oBAAsBC,KAAKC,MAAM3L,EAAIuL,mBAAqBvL,EAAIwL,gBAAkBjL,MAAM,CAAC,GAAK,gBAAgB,MAAQ,GAAG,sBAAsB,UAAU,sBAAsB,+BAA+BO,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOf,EAAI2M,aAAarJ,EAAQsJ,kBAAkB,CAAC1M,EAAG,KAAK,CAACG,MAAM,CAAE,yBAAyB,EAAM,UAA4C,OAA/BiD,EAAQ6C,oBACrbkF,WAAWrL,EAAIoL,qBAAuBC,WAAWrL,EAAIiL,qBAAuBI,WAAWrL,EAAIoL,sBAAwBC,WAAWrL,EAAIiL,qBAClIjL,EAAIiL,mBAAmBvJ,OAAS,GAAK1B,EAAIoL,oBAAoB1J,OAAS,GAAK1B,EAAImL,iBAC/EE,WAAWrL,EAAIoL,qBAAuBC,WAAWrL,EAAIiL,qBAAuBI,WAAWrL,EAAIoL,sBAAwBC,WAAWrL,EAAIiL,qBAClIjL,EAAIiL,mBAAmBvJ,OAAS,IAAM1B,EAAIoL,oBAAoB1J,OAAS,IAAM1B,EAAImL,mBAChFO,KAAKC,MAAM3L,EAAIyL,mBAAqBC,KAAKC,MAAM3L,EAAIuL,mBAAqBG,KAAKC,MAAM3L,EAAIyL,oBAAsBC,KAAKC,MAAM3L,EAAIuL,mBAAqBvL,EAAIwL,kBAAmBxL,EAAIU,GAAG,qBAAqBR,EAAG,KAAK,CAACE,YAAY,oCAAoCG,MAAM,CAAC,cAAc,QAAQO,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOf,EAAI6M,qBAAqB3M,EAAG,MAAM,CAACE,YAAY,WAAW,CAACF,EAAG,KAAK,CAACE,YAAY,wCAAwCa,YAAY,CAAC,YAAY,2BAA0B,IAAI,GAAGf,EAAG,SAAS,GAAGF,EAAIkC,GAAG,IAAI,WAAYlC,EAAI8M,kBAAmB5M,EAAG,gBAAgB,CAACoE,IAAI,aAAa/D,MAAM,CAAC,YAAcP,EAAI+M,YAAY,uBAAyB/M,EAAIgN,uBAAuB,WAAahN,EAAI0F,WAAW,UAAY1F,EAAIyE,UAAU,eAAiBzE,EAAIiN,eAAe,cAAgBjN,EAAIkN,cAAc,aAAelN,EAAImN,aAAa,WAAanN,EAAIY,WAAW,UAAYZ,EAAIoN,UAAU,YAAcpN,EAAIqN,aAAa,UAAYrN,EAAIsN,UAAU,gBAAkBtN,EAAIuN,mBAAmBvN,EAAI+D,KAAM/D,EAAIwN,iBAAkBtN,EAAG,eAAe,CAACoE,IAAI,aAAa/D,MAAM,CAAC,uBAAyBP,EAAIgN,uBAAuB,WAAahN,EAAI0F,WAAW,kBAAoB1F,EAAIyN,kBAAkB,oBAAsBzN,EAAI0N,oBAAoB,aAAe1N,EAAI2N,aAAa,uBAAyB3N,EAAI4N,wBAAwB9M,GAAG,CAAC,MAAQ,SAASC,GAAQf,EAAIwN,kBAAmB,GAAO,uBAAyBxN,EAAI6N,iCAAiC7N,EAAI+D,MAAM,IAE1gD+J,EAAkB,CAAC,WAAY,IAAI9N,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACE,YAAY,sBAAsB,CAACF,EAAG,OAAO,CAACE,YAAY,8DACzI,WAAY,IAAIJ,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,IAAI,CAACE,YAAY,kBAAkB,CAACF,EAAG,KAAK,CAACE,YAAY,eAAeG,MAAM,CAAC,cAAc,aAChJ,WAAY,IAAIP,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,OAAO,CAACE,YAAY,qBAAqBa,YAAY,CAAC,SAAW,WAAW,KAAO,MAAM,CAACf,EAAG,OAAO,CAACA,EAAG,IAAI,CAACE,YAAY,YAAYG,MAAM,CAAC,MAAQ,SAAS,sBAAsB,YAAY,CAACL,EAAG,KAAK,CAACE,YAAY,gCAAgCG,MAAM,CAAC,cAAc,iBAC7T,WAAY,IAAIP,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACE,YAAY,WAAWG,MAAM,CAAC,KAAO,WAAW,GAAK,kBAAkB,CAACL,EAAG,MAAM,CAACE,YAAY,+CAA+C,CAACF,EAAG,MAAM,CAACE,YAAY,WAAW,CAACF,EAAG,MAAM,CAACE,YAAY,6B,uDC1B9PL,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACA,EAAG,MAAM,CAACE,YAAY,uCAAuC,CAACF,EAAG,MAAM,CAACE,YAAY,sBAAsB,CAACF,EAAG,MAAM,CAACE,YAAY,6DAA6D,CAACF,EAAG,SAAS,CAACK,MAAM,CAAC,UAAYP,EAAIQ,aAAaN,EAAG,OAAO,CAACE,YAAY,qBAAqB,CAACJ,EAAIU,GAAGV,EAAIW,GAAGX,EAAIa,GAAG,qBAAqBX,EAAG,OAAO,CAACE,YAAY,kCAAkC,CAACF,EAAG,IAAI,CAACE,YAAY,+BAA+BG,MAAM,CAAC,sBAAsB,kBAAkBO,GAAG,CAAC,MAAQd,EAAI+N,gBAAgB,CAAC7N,EAAG,KAAK,CAACE,YAAY,eAAeF,EAAG,MAAMF,EAAIU,GAAGV,EAAIW,GAAGX,EAAIa,GAAG,kBAAkB,OAAOX,EAAG,IAAI,CAACE,YAAY,+BAA+BG,MAAM,CAAC,sBAAsB,SAASO,GAAG,CAAC,MAAQd,EAAIgO,YAAY,CAAC9N,EAAG,KAAK,CAACE,YAAY,iBAAiBF,EAAG,MAAMF,EAAIU,GAAGV,EAAIW,GAAGX,EAAIa,GAAG,UAAU,OAAOX,EAAG,IAAI,CAACE,YAAY,+BAA+BG,MAAM,CAAC,sBAAsB,OAAOO,GAAG,CAAC,MAAQd,EAAIiO,cAAc,CAAC/N,EAAG,KAAK,CAACE,YAAY,qBAAqBF,EAAG,MAAMF,EAAIU,GAAGV,EAAIW,GAAGX,EAAIa,GAAG,gBAAgB,OAAOX,EAAG,IAAI,CAACE,YAAY,+BAA+BG,MAAM,CAAC,sBAAsB,SAASO,GAAG,CAAC,MAAQd,EAAIkO,gBAAgB,CAAChO,EAAG,KAAK,CAACE,YAAY,uBAAuBF,EAAG,MAAMF,EAAIU,GAAGV,EAAIW,GAAGX,EAAIa,GAAG,kBAAkB,OAAOX,EAAG,IAAI,CAACE,YAAY,+BAA+BG,MAAM,CAAC,sBAAsB,QAAQO,GAAG,CAAC,MAAQd,EAAImO,mBAAmB,CAACjO,EAAG,KAAK,CAACE,YAAY,0BAA0BF,EAAG,MAAMF,EAAIU,GAAGV,EAAIW,GAAGX,EAAIa,GAAG,SAAS,OAAOX,EAAG,IAAI,CAACE,YAAY,+BAA+BG,MAAM,CAAC,sBAAsB,SAASO,GAAG,CAAC,MAAQd,EAAIoO,YAAY,CAAClO,EAAG,KAAK,CAACE,YAAY,oBAAoBF,EAAG,MAAMF,EAAIU,GAAGV,EAAIW,GAAGX,EAAIa,GAAG,UAAU,OAAOX,EAAG,MAAM,CAACE,YAAY,yBAAyB,CAACF,EAAG,MAAM,CAACE,YAAY,8BAA8B,CAACF,EAAG,OAAO,CAACE,YAAY,wBAAwBa,YAAY,CAAC,MAAQ,UAAU,CAAEjB,EAAIqO,YAAanO,EAAG,OAAO,CAACE,YAAY,yFAAyFG,MAAM,CAAC,GAAK,iBAAiB,CAACL,EAAG,MAAM,CAACE,YAAY,qBAAqB,CAACF,EAAG,MAAM,CAACE,YAAY,6BAA6BJ,EAAImC,GAAInC,EAAIsO,kBAAkB,SAASC,EAAMlM,GAAO,OAAOnC,EAAG,MAAM,CAACoC,IAAK,cAAaD,EAAQjC,YAAY,iBAAiB,CAACF,EAAG,MAAM,CAACE,YAAY,sBAAsB,CAACF,EAAG,MAAM,CAACE,YAAY,cAAc,CAACF,EAAG,QAAQ,CAACF,EAAIU,GAAGV,EAAIW,GAAGX,EAAIa,GAAG,cAAcX,EAAG,SAAS,CAACkB,WAAW,CAAC,CAACC,KAAK,QAAQC,QAAQ,UAAUC,MAAOgN,EAAMC,cAAe/M,WAAW,wBAAwBrB,YAAY,eAAeU,GAAG,CAAC,OAAS,SAASC,GAAQ,IAAIsF,EAAgBC,MAAMC,UAAUC,OAAOC,KAAK1F,EAAOa,OAAO8E,SAAQ,SAASC,GAAG,OAAOA,EAAEC,YAAWC,KAAI,SAASF,GAAG,IAAIG,EAAM,WAAYH,EAAIA,EAAEI,OAASJ,EAAEpF,MAAM,OAAOuF,KAAO9G,EAAI2K,KAAK4D,EAAO,gBAAiBxN,EAAOa,OAAOoF,SAAWX,EAAgBA,EAAc,OAAOrG,EAAImC,GAAInC,EAAI0F,WAAWc,OAAOiI,GAA2B,GAAtBA,EAAE7I,mBAA4B,SAASf,GAAM,OAAO3E,EAAG,SAAS,CAACoC,IAAIuC,EAAK+H,cAAcrM,MAAM,CAAC,SAAYP,EAAIsO,iBAAiB9H,OAAOiI,GAAKA,EAAED,eAAiB3J,EAAK+H,eAAgBlL,OAAS,GAAGC,SAAS,CAAC,MAAQkD,EAAK+H,gBAAgB,CAAC5M,EAAIU,GAAG,IAAIV,EAAIW,GAAGkE,EAAKhB,YAAc7D,EAAIuC,kBAAkBsC,EAAKhB,aAAe7D,EAAIuC,kBAAkBsC,EAAKjB,YAAY,UAAS,OAAO1D,EAAG,MAAM,CAACE,YAAY,sBAAsB,CAACF,EAAG,MAAM,CAACE,YAAY,cAAc,CAACF,EAAG,QAAQ,CAACF,EAAIU,GAAGV,EAAIW,GAAGX,EAAIa,GAAG,eAAeX,EAAG,SAAS,CAACkB,WAAW,CAAC,CAACC,KAAK,QAAQC,QAAQ,UAAUC,MAAOgN,EAAMG,aAAcjN,WAAW,uBAAuBrB,YAAY,eAAeU,GAAG,CAAC,OAAS,SAASC,GAAQ,IAAIsF,EAAgBC,MAAMC,UAAUC,OAAOC,KAAK1F,EAAOa,OAAO8E,SAAQ,SAASC,GAAG,OAAOA,EAAEC,YAAWC,KAAI,SAASF,GAAG,IAAIG,EAAM,WAAYH,EAAIA,EAAEI,OAASJ,EAAEpF,MAAM,OAAOuF,KAAO9G,EAAI2K,KAAK4D,EAAO,eAAgBxN,EAAOa,OAAOoF,SAAWX,EAAgBA,EAAc,OAAO,CAACnG,EAAG,SAAS,CAACF,EAAIU,GAAGV,EAAIW,GAAGX,EAAIa,GAAG,WAAWX,EAAG,SAAS,CAACF,EAAIU,GAAGV,EAAIW,GAAGX,EAAIa,GAAG,kBAAkBX,EAAG,MAAM,CAACE,YAAY,YAAY,CAACF,EAAG,MAAM,CAACE,YAAY,cAAc,CAACF,EAAG,IAAI,CAACY,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOf,EAAI2O,eAAeJ,MAAU,CAACrO,EAAG,KAAK,CAACE,YAAY,kDAAkDF,EAAG,IAAI,CAACkB,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,MAAgD,IAAzCvB,EAAIsO,iBAAiB,GAAGE,eAAuBxO,EAAI4O,mBAAoBnN,WAAW,kEAAkEX,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOf,EAAI6O,kBAAkBN,MAAU,CAACrO,EAAG,KAAK,CAACE,YAAY,iEAAgE,GAAGJ,EAAIkC,GAAG,GAAGhC,EAAG,SAAS,CAACE,YAAY,sBAAsBG,MAAM,CAAC,KAAO,UAAUO,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOf,EAAI8O,WAAW,CAAC5O,EAAG,KAAK,CAACE,YAAY,cAAcG,MAAM,CAAC,cAAc,cAAcP,EAAI+D,aAAa/D,EAAIkC,GAAG,IAAI,KAAKhC,EAAG,MAAM,CAACE,YAAY,sBAAsB,CAACF,EAAG,MAAM,CAACE,YAAY,iBAAiB,CAACF,EAAG,MAAM,CAACE,YAAY,sCAAsCG,MAAM,CAAC,GAAK,iBAAiB,CAACP,EAAIkC,GAAG,GAAIlC,EAAI+O,iBAAkB7O,EAAG,MAAM,CAACE,YAAY,mBAAmB,CAACF,EAAG,MAAM,CAACE,YAAY,eAAe,CAACF,EAAG,KAAK,CAACF,EAAIU,GAAGV,EAAIW,GAAGX,EAAIa,GAAG,aAAaX,EAAG,IAAI,CAACE,YAAY,kBAAkBU,GAAG,CAAC,MAAQd,EAAIgP,mBAAmB,CAAChP,EAAIU,GAAGV,EAAIW,GAAGX,EAAIa,GAAG,iBAAiB,KAAKX,EAAG,KAAK,CAACE,YAAY,mBAAoBJ,EAAIiP,UAAW/O,EAAG,MAAM,CAACE,YAAY,YAAYa,YAAY,CAAC,aAAa,SAASV,MAAM,CAAC,GAAK,cAAc,CAACL,EAAG,MAAM,CAACE,YAAY,eAAe,CAACF,EAAG,IAAI,CAACE,YAAY,0BAA0BU,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOf,EAAIkP,oBAAoB,CAAChP,EAAG,OAAO,CAACE,YAAY,4BAA4Ba,YAAY,CAAC,YAAY,cAAcf,EAAG,MAAM,CAACE,YAAY,OAAO,CAACF,EAAG,MAAM,CAACE,YAAY,uCAAuC,CAACF,EAAG,MAAM,CAACE,YAAY,+DAA+D,CAACF,EAAG,KAAK,CAACE,YAAY,aAAa,CAACF,EAAG,KAAK,CAACA,EAAG,QAAQ,CAACF,EAAIU,GAAG,aAAaV,EAAIU,GAAG,IAAIV,EAAIW,GAAGX,EAAIuC,kBAAkBvC,EAAImP,sBAAsBnP,EAAIoP,iBAAiBlP,EAAG,KAAK,CAACA,EAAG,QAAQ,CAACF,EAAIU,GAAG,aAAaV,EAAIU,GAAG,IAAIV,EAAIW,GAAGX,EAAIuC,kBAAkBvC,EAAImP,sBAAsBnP,EAAIqP,iBAAiBnP,EAAG,KAAK,CAACkB,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,MAAsC,GAA/BvB,EAAIsP,wBAA8B7N,WAAW,kCAAkC,CAACvB,EAAG,QAAQ,CAACF,EAAIU,GAAG,KAAKV,EAAIW,GAAGX,EAAIuP,uBAAuB,OAAOvP,EAAIU,GAAG,IAAIV,EAAIW,GAAGX,EAAIsP,yBAAyB,WAA6B,QAAjBtP,EAAIwP,WAAwC,OAAjBxP,EAAIwP,UAAoBtP,EAAG,MAAM,CAACE,YAAY,yCAAyC,CAACF,EAAG,gBAAgB,CAACoE,IAAI,QAAQ/D,MAAM,CAAC,KAAOP,EAAIwP,UAAU,OAAS,OAAO,QAAUxP,EAAIyP,aAAa,OAASzP,EAAI0P,gBAAgB,GAAG1P,EAAI+D,KAAuB,OAAjB/D,EAAIwP,WAAuC,SAAjBxP,EAAIwP,UAAsBtP,EAAG,MAAM,CAACE,YAAY,yCAAyC,CAACF,EAAG,gBAAgB,CAACoE,IAAI,QAAQ/D,MAAM,CAAC,KAAOP,EAAIwP,UAAU,OAAS,OAAO,QAAUxP,EAAIyP,aAAa,OAASzP,EAAI0P,gBAAgB,GAAG1P,EAAI+D,WAAW/D,EAAI+D,OAAO/D,EAAI+D,KAAK7D,EAAG,MAAM,CAACE,YAAY,oCAAoCG,MAAM,CAAC,KAAO,WAAW,GAAK,qBAAqB,kBAAkB,uBAAuB,CAACL,EAAG,MAAM,CAACE,YAAY,gBAAgB,CAACF,EAAG,MAAM,CAACE,YAAY,qCAAqC,CAACF,EAAG,QAAQ,CAACE,YAAY,4BAA4Ba,YAAY,CAAC,MAAQ,QAAQV,MAAM,CAAC,GAAK,YAAY,aAAa,2BAA2B,CAACL,EAAG,QAAQ,CAACE,YAAY,YAAY,CAACF,EAAG,KAAK,CAACF,EAAImC,GAAInC,EAAI2P,kBAAkB,SAAS9K,EAAKxC,GAAO,OAAQrC,EAAI4P,SAAU1P,EAAG,KAAK,CAACoC,IAAID,EAAM9B,MAAM,CAAC,MAAQ,QAAQ,CAACP,EAAIU,GAAG,IAAIV,EAAIW,GAAGX,EAAIuC,kBAAuC,MAApBsC,EAAKhB,aAA2C,IAApBgB,EAAKhB,YAAqBgB,EAAKhB,YAAcgB,EAAKjB,eAAe5D,EAAI+D,QAAO/D,EAAImC,GAAInC,EAAI6P,eAAe,SAASC,EAAOzN,GAAO,OAAOnC,EAAG,KAAK,CAACoC,IAAID,EAAM9B,MAAM,CAAC,MAAQ,QAAQ,CAACP,EAAIU,GAAG,IAAIV,EAAIW,GAAGX,EAAIuC,kBAAyC,MAAtBuN,EAAOjM,aAA6C,IAAtBiM,EAAOjM,YAAqBiM,EAAOjM,YAAciM,EAAOlM,YAAY5D,EAAIW,GAAGmP,EAAOjK,sBAAsB,WAAU,KAAM7F,EAAI+P,SAAU7P,EAAG,QAAQ,CAACA,EAAG,KAAK,CAACe,YAAY,CAAC,OAAS,YAAY,CAACf,EAAG,KAAK,CAACK,MAAM,CAAC,QAAU,MAAM,CAACL,EAAG,MAAM,CAACE,YAAY,mFAAmF,CAACJ,EAAIU,GAAG,IAAIV,EAAIW,GAAGX,EAAIa,GAAG,2BAA2Bb,EAAI+D,KAAK/D,EAAImC,GAAInC,EAAI+M,aAAa,SAASlI,EAAKxC,GAAO,OAAOnC,EAAG,QAAQ,CAACF,EAAImC,GAAInC,EAAI+M,YAAY1K,GAAO2N,MAAM,SAASC,EAAMC,GAAQ,OAAQlQ,EAAI4P,SAAU1P,EAAG,KAAK,CAAY,GAAVgQ,EAAalQ,EAAImC,GAAInC,EAAI2P,kBAAkB,SAASQ,EAAMC,GAAQ,OAAOlQ,EAAG,KAAK,CAACG,MAAM,CAAE,WAAa,EAAM,GAAwB,MAApBwE,EAAKwL,aAAsB9P,MAAM,CAAC,QAAUsE,EAAKwL,cAAc,CAACrQ,EAAIU,GAAG,IAAIV,EAAIW,GAA+B,MAA3BkE,EAAKsL,EAAMtM,cAAmD,IAA3BgB,EAAKsL,EAAMtM,aAAmD,QAA7BsM,EAAMhK,oBAAgCnG,EAAIoJ,SAASC,QAAQC,WAAWzE,EAAKsL,EAAMtM,cAAgBgB,EAAKsL,EAAMtM,aAA4C,QAA7BsM,EAAMhK,oBAAgCnG,EAAIoJ,SAASC,QAAQC,WAAWzE,EAAKsL,EAAMvM,YAAciB,EAAKsL,EAAMvM,YAAY,KAAK5D,EAAIU,GAAG,KAAKV,EAAIW,GAA+B,MAA3BkE,EAAKsL,EAAMtM,cAAmD,IAA3BgB,EAAKsL,EAAMtM,cAAyC,MAAnBsM,EAAMvM,WAAwC,IAAnBuM,EAAMvM,UAAmBiB,EAAKwL,YAAc,KAAK,WAAUrQ,EAAI+D,KAAK/D,EAAImC,GAAInC,EAAI6P,eAAe,SAASC,EAAOrQ,GAAG,OAAOS,EAAG,KAAK,CAACoC,IAAI7C,GAAG,CAACS,EAAG,OAAO,CAACyB,SAAS,CAAC,UAAY3B,EAAIW,GAAiC,GAA7BsP,EAAMH,EAAOjM,cAAqD,GAA7BoM,EAAMH,EAAOjM,cAAkD,GAA7BoM,EAAMH,EAAOjM,cAAsD,GAA7BoM,EAAMH,EAAOjM,aAC77R,GAA7BoM,EAAMH,EAAOjM,aAAuB,MAAQ,KAC1C,GADmDoM,EAAMH,EAAOlM,YACjD,MACY,MAA7BqM,EAAMH,EAAOjM,cAAqD,IAA7BoM,EAAMH,EAAOjM,aAClDoM,EAAMH,EAAOjM,cAA6C,GAA7BoM,EAAMH,EAAOjM,aAAkD,QAA9BiM,EAAO3J,oBACtEnG,EAAIoJ,SAASC,QAAQC,WAAW2G,EAAMH,EAAOjM,cAAgBoM,EAAMH,EAAOjM,aAAe,GACxFoM,EAAMH,EAAOlM,YAA2C,GAA7BqM,EAAMH,EAAOjM,aAAkD,QAA9BiM,EAAO3J,oBACpEnG,EAAIoJ,SAASC,QAAQC,WAAW2G,EAAMH,EAAOlM,YAAcqM,EAAMH,EAAOlM,WAAa,aAAa,GAAG5D,EAAI+D,QAAQ/D,EAAIsQ,YAAapQ,EAAG,KAAKF,EAAImC,GAAInC,EAAI6P,eAAe,SAASC,EAAOrQ,GAAG,OAAOS,EAAG,KAAK,CAACoC,IAAI7C,GAAG,CAACS,EAAG,OAAO,CAACyB,SAAS,CAAC,UAAY3B,EAAIW,GAAgC,GAA5BkE,EAAKiL,EAAOjM,cAAoD,GAA5BgB,EAAKiL,EAAOjM,cAAiD,GAA5BgB,EAAKiL,EAAOjM,cAAqD,GAA5BgB,EAAKiL,EAAOjM,aAClV,GAA5BgB,EAAKiL,EAAOjM,aAAuB,MAAQ,KACzC,GADkDgB,EAAKiL,EAAOlM,YAC/C,MACW,MAA5BiB,EAAKiL,EAAOjM,cAAoD,IAA5BgB,EAAKiL,EAAOjM,aAChDgB,EAAKiL,EAAOjM,cAA4C,GAA5BgB,EAAKiL,EAAOjM,aAAkD,QAA9BiM,EAAO3J,oBACpEnG,EAAIoJ,SAASC,QAAQC,WAAWzE,EAAKiL,EAAOjM,cAAgBgB,EAAKiL,EAAOjM,aAAe,GACtFgB,EAAKiL,EAAOlM,YAA0C,GAA5BiB,EAAKiL,EAAOjM,aAAkD,QAA9BiM,EAAO3J,oBAClEnG,EAAIoJ,SAASC,QAAQC,WAAWzE,EAAKiL,EAAOlM,YAAciB,EAAKiL,EAAOlM,WAAa,OAAQ5D,EAAIU,GAAG,IAAIV,EAAIW,GAAGkE,EAAKiL,EAAOjK,uBAAuB,UAAS,GAAG7F,EAAI+D,MAAM,OAAM,SAAS7D,EAAG,MAAM,CAACE,YAAY,eAAe,CAACF,EAAG,IAAI,CAACE,YAAY,oCAAoCU,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOf,EAAIuQ,mBAAmB,CAACvQ,EAAIU,GAAG,MAAMR,EAAG,OAAO,CAACE,YAAY,mBAAmBJ,EAAIU,GAAG,IAAIV,EAAIW,GAAGX,EAAIa,GAAG,SAAS,OAAOX,EAAG,IAAI,CAACE,YAAY,iBAAiBU,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOf,EAAIwQ,eAAe,CAACxQ,EAAIU,GAAG,MAAMR,EAAG,OAAO,CAACE,YAAY,gBAAgBJ,EAAIU,GAAG,IAAIV,EAAIW,GAAGX,EAAIa,GAAG,WAAW,iBAAiBX,EAAG,oBAAoB,CAACoE,IAAI,aAAa/D,MAAM,CAAC,WAAaP,EAAI0F,WAAW,iBAAmB1F,EAAI+O,iBAAiB,uBAAyB/O,EAAIgN,uBAAuB,UAAYhN,EAAIyQ,UAAU,iBAAmBzQ,EAAIsO,iBAAiB,UAAYtO,EAAIsN,cAAc,IAE76BQ,EAAkB,CAAC,WAAY,IAAI9N,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACE,YAAY,iBAAiB,CAACF,EAAG,KAAK,CAACE,YAAY,6CAA6Ca,YAAY,CAAC,YAAY,aACxM,WAAY,IAAIjB,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,OAAO,CAACE,YAAY,sBAAsB,CAACF,EAAG,IAAI,CAACE,YAAY,gBAAgBG,MAAM,CAAC,KAAO,iBAAiB,CAACL,EAAG,KAAK,CAACE,YAAY,mCACvL,WAAY,IAAIJ,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACE,YAAY,eAAe,CAACF,EAAG,IAAI,CAACE,YAAY,4DAA4DG,MAAM,CAAC,KAAO,iBAAiB,CAACL,EAAG,KAAK,CAACE,YAAY,yCAAyCa,YAAY,CAAC,YAAY,eClB3RlB,G,8BAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACE,YAAY,6BAA6BG,MAAM,CAAC,GAAK,qBAAqB,KAAO,SAAS,gBAAgB,SAAS,gBAAgB,UAAU,CAACL,EAAG,MAAM,CAACE,YAAY,uBAAuBG,MAAM,CAAC,KAAO,aAAa,CAACL,EAAG,MAAM,CAACE,YAAY,iBAAiB,CAACF,EAAG,MAAM,CAACE,YAAY,6BAA6B,CAACF,EAAG,SAAS,CAACE,YAAY,QAAQG,MAAM,CAAC,KAAO,UAAUO,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOf,EAAI0Q,uBAAuB,CAACxQ,EAAG,KAAK,CAACE,YAAY,cAAcG,MAAM,CAAC,cAAc,YAAYL,EAAG,KAAK,CAACE,YAAY,cAAcG,MAAM,CAAC,GAAK,iBAAiB,CAACP,EAAIU,GAAGV,EAAIW,GAAGX,EAAIa,GAAG,oBAAoBX,EAAG,OAAO,CAACE,YAAY,cAAc,CAACF,EAAG,IAAI,CAACE,YAAY,eAAeG,MAAM,CAAC,cAAc,WAAW,KAAO,eAAe,KAAO,SAAS,gBAAgB,QAAQ,gBAAgB,oBAAoB,CAACP,EAAIU,GAAGV,EAAIW,GAAGX,EAAIa,GAAG,oBAAoBX,EAAG,MAAM,CAACE,YAAY,yCAAyCG,MAAM,CAAC,GAAK,oBAAoB,CAACL,EAAG,MAAM,CAACE,YAAY,sBAAsBG,MAAM,CAAC,GAAK,qCAAqC,CAACL,EAAG,MAAM,CAACE,YAAY,MAAMuB,SAAS,CAAC,UAAY3B,EAAIW,GAAGX,EAAIa,GAAG,uCAAuCX,EAAG,MAAM,CAACE,YAAY,kBAAkB,CAACF,EAAG,SAAS,CAACK,MAAM,CAAC,aAAaP,EAAIQ,aAAaN,EAAG,MAAM,CAACE,YAAY,+BAA+B,CAACF,EAAG,MAAM,CAACE,YAAY,OAAO,CAACF,EAAG,MAAM,CAACE,YAAY,YAAY,CAACF,EAAG,eAAe,CAACoE,IAAI,eAAe/D,MAAM,CAAC,KAAO,KAAK,SAAU,EAAM,OAASP,EAAI0M,YAAY5L,GAAG,CAAC,SAAWd,EAAI2Q,UAAUC,YAAY5Q,EAAI6Q,GAAG,CAAC,CAACvO,IAAI,mBAAmBwO,GAAG,UAAS,KAAEd,IAAQ,MAAO,CAAC9P,EAAG,MAAM,CAACE,YAAY,qCAAqCJ,EAAImC,GAAInC,EAAI+Q,YAAY,SAASlM,EAAKxC,GAAO,OAAOnC,EAAG,MAAM,CAACoC,IAAID,EAAMjC,YAAY,kCAAkCG,MAAM,CAAC,cAAc,YAAY,CAACL,EAAG,QAAQ,CAACG,MAAM,CAAE,gBAAgB,EAAM,OAAWwE,EAAKmM,IAAMhR,EAAIiR,qBAAuB1Q,MAAM,CAAC,IAAM,eAAiB8B,IAAQ,CAACnC,EAAG,QAAQ,CAACkB,WAAW,CAAC,CAACC,KAAK,QAAQC,QAAQ,UAAUC,MAAOvB,EAAIiR,oBAAqBxP,WAAW,wBAAwBlB,MAAM,CAAC,KAAO,QAAQ,KAAO,eAAe,GAAK,eAAiB8B,GAAOV,SAAS,CAAC,MAAQkD,EAAKmM,GAAG,QAAUhR,EAAIqK,GAAGrK,EAAIiR,oBAAoBpM,EAAKmM,KAAKlQ,GAAG,CAAC,OAAS,SAASC,GAAQf,EAAIiR,oBAAoBpM,EAAKmM,OAAO9Q,EAAG,OAAO,CAACE,YAAY,gBAAgB,CAACF,EAAG,KAAK,CAACG,MAAM,CAAoB,OAAnBwE,EAAKqM,WAAsB,iCAAmC,GACnzE,OAAnBrM,EAAKqM,WAAsB,iCAAmC,GAC3C,QAAnBrM,EAAKqM,WAAuB,kCAAoC,GAC7C,kBAAnBrM,EAAKqM,WAAiC,4BAA8B,GACjD,SAAnBrM,EAAKqM,WAAwB,sCAAwC,IAAI3Q,MAAM,CAAC,cAAc,mBAAkB,GAAkB,IAAdyP,EAAKmB,MAAajR,EAAG,OAAO,CAACE,YAAY,4BAA4B,CAACJ,EAAIU,GAAGV,EAAIW,GAAGqP,EAAKmB,UAAUnR,EAAI+D,aAAa,GAAG7D,EAAG,MAAM,CAACE,YAAY,YAAY,CAACF,EAAG,MAAM,CAACE,YAAY,uBAAuB,CAACF,EAAG,MAAM,CAACE,YAAY,kBAAkB,CAACF,EAAG,KAAK,CAACE,YAAY,MAAM,CAACF,EAAG,OAAO,CAACF,EAAIU,GAAGV,EAAIW,GAAGX,EAAIa,GAAG,mBAAmBX,EAAG,OAAO,CAACE,YAAY,qCAAqC,CAACJ,EAAIU,GAAGV,EAAIW,GAAGX,EAAI0M,WAAW,GAAG0E,KAAK,GAAG7P,OAAO,OAAOrB,EAAG,SAAS,CAACE,YAAY,oBAAoBG,MAAM,CAAC,KAAO,gBAAgBO,GAAG,CAAC,MAAQd,EAAIqR,kBAAkB,CAACrR,EAAIU,GAAG,IAAIV,EAAIW,GAAGX,EAAIa,GAAG,eAAe,SAAUb,EAAIsR,aAAcpR,EAAG,MAAM,CAACE,YAAY,qDAAqD,CAACF,EAAG,gBAAgB,CAACK,MAAM,CAAC,KAAOP,EAAIuR,kBAAkB,QAAUvR,EAAIyP,aAAa,OAASzP,EAAIwR,eAA+C,GAA/BxR,EAAIsP,wBAA8BpP,EAAG,MAAM,CAACG,MAA+B,OAAzBL,EAAIuR,mBAAuD,SAAzBvR,EAAIuR,kBAA+B,sBAAwB,eAAe,CAACrR,EAAG,IAAI,CAACK,MAAM,CAAC,KAAO,iBAAiB,CAACP,EAAIU,GAAGV,EAAIW,GAAGX,EAAIyR,WAAW,MAAMzR,EAAIW,GAAGX,EAAIsP,8BAA8BtP,EAAI+D,MAAM,GAAG/D,EAAI+D,WAAW7D,EAAG,MAAM,CAACE,YAAY,8BAA8B,CAACF,EAAG,MAAM,CAACE,YAAY,wBAAwB,CAACF,EAAG,MAAM,CAACE,YAAY,uBAAuB,CAACF,EAAG,SAAS,CAACE,YAAY,oCAAoCU,GAAG,CAAC,MAAQd,EAAI0R,aAAa,CAACxR,EAAG,KAAK,CAACE,YAAY,qBAAqBJ,EAAIU,GAAGV,EAAIW,GAAGX,EAAIa,GAAG,sBAAsB,WAEtjDiN,EAAkB,G,qBCqRP,GACf6D,WAAA,CACAC,mBAEAC,MAAA,CACAnM,WAAA,CACAoM,KAAAxL,OAEA0G,uBAAA,CACA8E,KAAAC,QAEAtB,UAAA,CACAqB,KAAAxL,OAEAgH,UAAA,CACAwE,KAAAC,QAEAzD,iBAAA,CACAwD,KAAAxL,QAGA0J,OACA,OACAxP,WAAA,EACAwR,YAAA,GACAjB,WAAA,KAGAE,oBAAA,KACAgB,mBAAA,GACAC,mBAAA,GACAZ,cAAA,EACA/B,sBAAA,QACAD,wBAAA,EAEAkC,YAAA,GACA/B,aAAA,GACA0C,WAAA,sGAEAC,qBAAA,GACAC,gBAAA,GACAd,kBAAA,GACAE,UAAA,GACAa,kBAAA,GACAC,WAAA,EACAC,aAAA,EACAC,sBAAA,EACAC,YAAA,GACAhG,WAAA,CACA,CACAiG,WAAA,SACAvB,KAAA,CACA,CACAwB,OAAA,YACAC,MAAA,KAAAhS,GAAA,eACAQ,KAAA,cACAE,MAAA,GACAuR,YAAA,oBACAC,OAAA,CACArM,QAAA,GACAsM,aAAA,GAEAC,gBAAA,GACAC,UAAA,GAEA,CACAN,OAAA,YACAC,MAAA,KAAAhS,GAAA,cACAQ,KAAA,YACAE,MAAA,GACAuR,YAAA,GACAC,OAAA,CACArM,QAAA,GACAsM,aAAA,EACAG,SAAA,KAAAC,kBAEAH,gBAAA,YAEA,CACAL,OAAA,cACAC,MAAA,KAAAhS,GAAA,SACAQ,KAAA,QACAE,MAAA,GACAuR,YAAA,uBACAC,OAAA,CACArM,QAAA,GACAsM,aAAA,EACAG,SAAA,KAAAE,wBAEAJ,gBAAA,YAEA,CACAL,OAAA,cACAC,MAAA,KAAAhS,GAAA,SACAQ,KAAA,QACAE,MAAA,GACAuR,YAAA,GAEAC,OAAA,CACArM,QAAA,GACAsM,aAAA,EACAG,SAAA,KAAAE,wBAEAJ,gBAAA,YAEA,CACAL,OAAA,aACAC,MAAA,KAAAhS,GAAA,UACAQ,KAAA,SACAE,MAAA,GACAuR,YAAA,GACAQ,YAAA,EACAP,OAAA,CACArM,QAAA,EACAnF,MAAA,MACAF,KAAA,OAEA,CACAE,MAAA,MACAF,KAAA,WAEA,CACAE,MAAA,MACAF,KAAA,OACA,CACAE,MAAA,MACAF,KAAA,OACA,CACAE,MAAA,QACAF,KAAA,UAEA2R,aAAA,EACAG,SAAA,KAAAI,eAEAN,gBAAA,IAEA,CACAL,OAAA,aACAC,MAAA,KAAAhS,GAAA,UACAQ,KAAA,SACAE,MAAA,QACAuR,YAAA,GACAQ,YAAA,EACAP,OAAA,CACArM,QAAA,EACAnF,MAAA,QACAF,KAAA,UAEA2R,aAAA,GAEAC,gBAAA,SAcAO,QAAA,iBACA,IAAAC,EAAA,WACAA,EAAAC,gBACAD,EAAAE,gBACAF,EAAA/G,WAAA,GAAA0E,KAAA,GAAA7P,MAAAkS,EAAAzG,uBAAApM,WACA,MAAA6S,EAAAhD,gBAAAjN,GAAAiQ,EAAAhD,WAAA,IAAAgD,EAAAhD,WAAAgD,EAAAhD,UAAA/O,OAAA,IACA+R,EAAAxC,oBAAAwC,EAAAhD,UAAA,GAAAmD,YACAH,EAAAlE,sBAAAkE,EAAAhD,UAAA,GAAAoD,mBACAJ,EAAAxB,mBAAAwB,EAAAhD,UAAA,GAAArB,WACAqE,EAAA/G,WAAA,GAAA0E,KAAA,GAAA7P,MAAAkS,EAAAhD,UAAA,GAAArB,WACAqE,EAAAvB,mBAAAuB,EAAAhD,UAAA,GAAApB,WACAoE,EAAA/G,WAAA,GAAA0E,KAAA,GAAA7P,MAAAkS,EAAAhD,UAAA,GAAApB,iBACAoE,EAAAK,eAAAL,EAAAvB,0BACAuB,EAAApC,wBACAoC,EAAA/B,eAGAqC,MAAA,CACArO,aACA,IAAA+N,EAAA,KACAA,EAAAE,kBAGAK,QAAA,CAEAtD,kBAAA,WACA,IAAA+C,EAAA,KACAQ,EAAA,uBAAAC,MAAA,QACAD,EAAA,QAAAE,YAAA,cACAF,EAAA,mBAAAG,SACAX,EAAAY,MAAAC,aAAAC,aAAAC,QACA,MAAAf,EAAAf,YAAAzB,qBAAA,IAAAwC,EAAAf,YAAAnB,mBAAA,IAAAkC,EAAAf,YAAAT,oBAAA,IAAAwB,EAAAf,YAAAR,qBACAuB,EAAAgB,QAAAxF,WAAA,IAKA,sBACA,IAAAwE,EAAA,WACAiB,OAAAhB,gBAAAiB,KAAAC,IACAnB,EAAA1C,WAAA6D,EAAA5E,QAKA2D,gBACA,IAAAF,EAAA,KACAA,EAAA/G,WAAA,GAAA0E,KAAA,GAAA2B,OAAArM,QAAA,GACA+M,EAAA/G,WAAA,GAAA0E,KAAA,GAAA2B,OAAArM,QAAA,GACA+M,EAAA/N,WAAAmP,QAAAhQ,IACA4O,EAAA/G,WAAA,GAAA0E,KAAA,GAAA2B,OAAArM,QAAAnH,KAAA,CACAgC,MAAAsD,EAAA+H,cACAvL,KAAA,IAAAwD,EAAAhB,YAAA4P,EAAA5S,GAAAgE,EAAAhB,aAAA4P,EAAAQ,EAAApP,EAAAjB,aAEA6P,EAAA/G,WAAA,GAAA0E,KAAA,GAAA2B,OAAArM,QAAAnH,KAAA,CACAgC,MAAAsD,EAAA+H,cACAvL,KAAA,IAAAwD,EAAAhB,YAAA4P,EAAA5S,GAAAgE,EAAAhB,aAAA4P,EAAAQ,EAAApP,EAAAjB,gBAMAyP,uBAAA5E,EAAAuB,GACA,IAAAyD,EAAA,KACA,SAAAzD,EAAA3O,MACAoS,EAAAxB,mBAAAjC,EAAAzO,MACAkS,EAAA/G,WAAA,GAAA0E,KAAA,GAAA2B,OAAArM,QAAA,GACA+M,EAAA/N,WAAAmP,QAAAhQ,IACAA,EAAA+H,eAAA6G,EAAAxB,oBACAwB,EAAA/G,WAAA,GAAA0E,KAAA,GAAA2B,OAAArM,QAAAnH,KAAA,CACAgC,MAAAsD,EAAA+H,cACAvL,KAAA,IAAAwD,EAAAhB,YAAA4P,EAAA5S,GAAAgE,EAAAhB,aAAA4P,EAAAQ,EAAApP,EAAAjB,aAGA6P,EAAAxB,qBAAAwB,EAAAvB,qBACAuB,EAAAvB,mBAAA,GACAuB,EAAA/G,WAAA,GAAA0E,KAAA,GAAA7P,MAAA,QAKAkS,EAAAvB,mBAAAlC,EAAAzO,MACAkS,EAAAK,eAAAL,EAAAvB,sBAKAqB,cAAA9E,EAAAuB,GACA,IAAAyD,EAAA,KACAA,EAAAlE,sBAAAd,EAAA7M,OAAAkT,QAAAvT,OAGAwT,aACA,IAAAtB,EAAA,KACAA,EAAAxB,mBAAA,GACAwB,EAAAvB,mBAAA,GAGAuB,EAAAjC,YAAA,GACAiC,EAAAhE,aAAA,GACAgE,EAAAxC,oBAAA,KACAwC,EAAAlC,kBAAA,GACAkC,EAAAnE,wBAAA,EACAmE,EAAAlE,sBAAA,QACAkE,EAAAhC,UAAA,GACAgC,EAAAf,YAAA,GACAe,EAAA/G,WAAA,GAAA0E,KAAA,GAAA7P,MAAA,GACAkS,EAAA/G,WAAA,GAAA0E,KAAA,GAAA7P,MAAA,GACAkS,EAAA/G,WAAA,GAAA0E,KAAA,GAAA7P,MAAA,QACAkS,EAAA/G,WAAA,GAAA0E,KAAA,GAAA7P,MAAA,QACAkS,EAAA/G,WAAA,GAAA0E,KAAA,GAAAkC,YAAA,EACAG,EAAA/G,WAAA,GAAA0E,KAAA,GAAAkC,YAAA,EACAG,EAAAY,MAAAC,aAAAC,aAAAC,QACAf,EAAAnC,cAAA,GAIA,wBACA,IAAAmC,EAAA,KACAA,EAAAhC,UAAAgC,EAAAlE,sBACAkE,EAAAnC,cAAA,EACAmC,EAAAlB,WAAA,EACA,IAAAyC,EAAA,KAUA,IATA,MAAAvB,EAAAlE,uBAAA,IAAAkE,EAAAlE,uBAAA,MAAAkE,EAAAhD,WAAA,GAAAgD,EAAAjB,cACAiB,EAAAhD,UAAA/O,OAAA,IACA+R,EAAAhC,UAAAgC,EAAAhD,UAAA,GAAAwE,kBACAxB,EAAAlE,sBAAAkE,EAAAhC,UACAgC,EAAAvB,mBAAAuB,EAAAhD,UAAA,GAAApB,WACAoE,EAAAxB,mBAAAwB,EAAAhD,UAAA,GAAArB,WACAqE,EAAA/G,WAAA,GAAA0E,KAAA,GAAA7P,MAAAkS,EAAAhD,UAAA,GAAAwE,mBAGA,MAAAxB,EAAAxC,qBAAA,IAAAwC,EAAAxB,oBAAA,IAAAwB,EAAAvB,mBAAA,CACA,IAAAuB,EAAAlE,wBACAkE,EAAAlE,sBAAAkE,EAAA/G,WAAA,GAAA0E,KAAA,GAAA7P,MACAkS,EAAAhC,UAAAgC,EAAAlE,uBAEA,IAAA2F,EAAAzB,EAAA/N,WAAAyP,KAAA1G,KAAA7K,YAAA6P,EAAAxB,oBAAAxD,EAAA7B,gBAAAwI,SAAA3B,EAAAxB,qBACAoD,EAAA5B,EAAA/N,WAAAyP,KAAA1G,KAAA7K,YAAA6P,EAAAvB,oBAAAzD,EAAA7B,gBAAAwI,SAAA3B,EAAAvB,0BACA1O,GAAA0R,QAAA1R,GAAA6R,EACAL,EAAA,CACA,eAAAE,EAAAtI,cAAAsI,EAAAtI,cAAAsI,EAAAtR,UACA,eAAAyR,EAAAzI,cAAAyI,EAAAzI,cAAAyI,EAAAzR,UACA,sBAAA6P,EAAAlE,6BAIA/L,GAAA0R,QAAA1R,GAAA6R,GACA5B,EAAAxB,mBAAA,GACAwB,EAAA/G,WAAA,GAAA0E,KAAA,GAAA7P,MAAA,GACAkS,EAAAvB,mBAAA,GACAuB,EAAA/G,WAAA,GAAA0E,KAAA,GAAA7P,MAAA,SAEAiC,GAAA0R,GACAzB,EAAAxB,mBAAA,GACAwB,EAAA/G,WAAA,GAAA0E,KAAA,GAAA7P,MAAA,KAGAkS,EAAAvB,mBAAA,GACAuB,EAAA/G,WAAA,GAAA0E,KAAA,GAAA7P,MAAA,IAEAkS,EAAA6B,4BAMA,IAAA7B,EAAAxB,oBAAA,IAAAwB,EAAAvB,oBAAAuB,EAAAhB,6BACAgB,EAAAgB,gBAAAc,YAAA9B,EAAAnF,iBAAAmF,EAAAlB,UAAAyC,GACAvB,EAAAnG,UAAAkI,SAAA,GAAAC,YACAhC,EAAAiC,uBAEAjC,EAAAlC,kBAAAkC,EAAA1C,WAAAoE,KAAA1G,KAAAuC,IAAAyC,EAAAxC,qBAAAC,WAAAyE,cACAlC,EAAAmC,eAAAnC,EAAAnB,kBAAAmB,EAAAoC,iBAAApC,EAAAxB,oBAAA6D,gBAAArC,EAAAoC,iBAAApC,EAAAvB,oBAAA4D,iBACArC,EAAAsC,+BAAAtC,EAAAlE,uBACAkE,EAAAuC,YACAvC,EAAAnC,cAAA,EACAmC,EAAAjB,aAAA,EACAiB,EAAAhB,sBAAA,QAIAgB,EAAA6B,4BAGAA,2BACA,IAAA7B,EAAA,KACA,aAAAA,EAAAxC,qBAAA,IAAAwC,EAAAxB,oBAAA,IAAAwB,EAAAvB,oBACAuB,EAAAwC,UAAAxC,EAAA5S,GAAA,sBAAA4S,EAAA5S,GAAA,mBAAA4S,EAAA5S,GAAA,iBAAA4S,EAAA5S,GAAA,wBAAA4S,EAAA5S,GAAA,UACA4S,EAAAjT,WAAA,GACA,GAEA,IAAAiT,EAAAxB,oBAAA,IAAAwB,EAAAvB,oBACAuB,EAAAwC,UAAAxC,EAAA5S,GAAA,qBAAA4S,EAAA5S,GAAA,iBAAA4S,EAAA5S,GAAA,wBAAA4S,EAAA5S,GAAA,UACA4S,EAAAjT,WAAA,GACA,GAEA,MAAAiT,EAAAxC,qBACAwC,EAAAwC,UAAAxC,EAAA5S,GAAA,qBAAA4S,EAAA5S,GAAA,6BAAA4S,EAAA5S,GAAA,UACA4S,EAAAjT,WAAA,GACA,GAEA,IAAAiT,EAAAxB,oBACAwB,EAAAwC,UAAAxC,EAAA5S,GAAA,qBAAA4S,EAAA5S,GAAA,wBAAA4S,EAAA5S,GAAA,UACA4S,EAAAjT,WAAA,GACA,GAEA,IAAAiT,EAAAvB,oBACAuB,EAAAwC,UAAAxC,EAAA5S,GAAA,qBAAA4S,EAAA5S,GAAA,wBAAA4S,EAAA5S,GAAA,UACA4S,EAAAjT,WAAA,GACA,QAHA,GAOAkV,uBACA,IAAAjC,EAAA,KACA,IAAAyC,EAAAzC,EAAAnG,UAAA4I,YACAC,EAAA,GACAC,EAAA3C,EAAAoC,iBAAApC,EAAAxB,oBAAA6D,gBACAO,EAAA5C,EAAAoC,iBAAApC,EAAAvB,oBAAA4D,iBACA/D,OAAAuE,KAAAJ,EAAA,QAAAzC,EAAAoC,iBAAApC,EAAAxB,oBAAA6D,iBAAA/D,OAAAuE,KAAAJ,EAAA,QAAAzC,EAAAoC,iBAAApC,EAAAvB,oBAAA4D,iBAAArC,EAAAhD,UAAA/O,OAAA,QACA8B,GAAA4S,QAAA5S,GAAA6S,KACAD,EAAArE,OAAAuE,KAAAJ,EAAA,OACAG,EAAAtE,OAAAuE,KAAAJ,EAAA,GAAAlG,KAAA,OACAyD,EAAAlE,sBAAAkE,EAAAhD,UAAA,GAAAwE,mBAEAiB,EAAArB,QAAA,CAAAhQ,EAAA0R,KACA,SAAA/S,GAAAqB,EAAAuR,SAAA5S,GAAA4S,KACA,SAAA3C,EAAAlE,uBAAA,OAAAkE,EAAAlE,uBAAA,OAAAkE,EAAAlE,uBACA,OAAAkE,EAAAlE,uBAAA,OAAAkE,EAAAlE,uBAEA,IADA,IAAAiH,OAAAhT,GAAAqB,EAAAuR,GAAAvR,EAAAuR,GAAAvR,EAAAmL,KAAA,GAAAoG,GAAA,KAAAvR,EAAAwL,eACA5Q,EAAA,EAAAA,GAAA2V,SAAAvQ,EAAAwL,aAAA5Q,IACA,GAAAA,GACA0W,EAAA5W,KAAA,CACA,CAAA6W,GAAAI,EACA,CAAAH,GAAA,MAAAxR,EAAA4R,OAAA,GAAA5R,EAAA4R,OAAA5R,EAAA4R,MAAA5R,EAAAwL,YAAAxL,EAAA4R,MAAA5R,EAAAwL,gBAOAoD,EAAAnB,kBAAA6D,GAGA,mBACA,IAAA1C,EAAA,KACA,KAAAY,MAAAC,aAAAC,aAAAmC,WAAA/B,MAAA,eAAAgC,GACAA,UAGAlD,EAAApC,kBACAoC,EAAAf,YAAA,CACA,kBAAAe,EAAAlC,kBACA,oBAAAkC,EAAAxC,oBACA,YAAAwC,EAAAjC,YACA,aAAAiC,EAAAhE,aACA,sBAAAgE,EAAAlE,sBACA,wBAAAkE,EAAAnE,wBACA,mBAAAmE,EAAAxB,mBACA,mBAAAwB,EAAAvB,oBAEA,MAAAuB,EAAAf,YAAAzB,qBAAA,IAAAwC,EAAAf,YAAAnB,mBAAA,IAAAkC,EAAAf,YAAAT,oBAAA,IAAAwB,EAAAf,YAAAR,qBACAuB,EAAAgB,QAAAuB,UAAAvC,EAAAf,YAAAe,EAAAlB,WACAkB,EAAAhB,sBAAA,EACAgB,EAAA/C,0BAOAsF,UAAA,WACA,IAAAvC,EAAA,KACAmD,GAAA,EACA,OAAAnD,EAAAlC,mBAAA,QAAAkC,EAAAlC,mBAAA,kBAAAkC,EAAAlC,oBACA,kBAAAkC,EAAAlC,oBACAkC,EAAAlC,kBAAA,MACAqF,GAAA,GAEAnD,EAAAjC,YAAA,EACAnQ,KAAAoS,EAAA5S,GAAA4S,EAAAoC,iBAAApC,EAAAvB,oBAAA4D,iBACA9F,KAAAyD,EAAApB,kBAEAoB,EAAAhE,aAAA,CACAoH,MAAA,CACAC,QAAA,CACAC,OAAA,CACAC,IAAA,CACAC,SAAAxD,EAAA/G,WAAA,GAAA0E,KAAA,GAAA7P,OAEA2V,IAAA,CACAD,SAAAxD,EAAA/G,WAAA,GAAA0E,KAAA,GAAA7P,OAEA4V,IAAA,CACAC,eAAA3D,EAAA5S,GAAA4S,EAAAoC,iBAAApC,EAAAxB,oBAAA6D,iBACAmB,SAAAxD,EAAA/G,WAAA,GAAA0E,KAAA,GAAA7P,UAKA8V,QAAA,CACAC,SAAA,EACA7I,EAAA,CACA8I,UAAAzQ,OAGA0Q,MAAA,CACAC,WAAAhE,EAAArB,qBACAsF,MAAA,CACAC,KAAAf,EAAAnD,EAAA5S,GAAA4S,EAAAoC,iBAAApC,EAAAvB,oBAAA4D,iBAAArC,EAAA5S,GAAA4S,EAAAoC,iBAAApC,EAAAxB,oBAAA6D,kBAEA8B,OAAA,CACAC,MAAA,EACAC,QAAA,KAIAC,MAAA,CACAL,MAAA,CACAC,KAAAf,EAAAnD,EAAA5S,GAAA4S,EAAAoC,iBAAApC,EAAAxB,oBAAA6D,iBAAArC,EAAA5S,GAAA4S,EAAAoC,iBAAApC,EAAAvB,oBAAA4D,kBAEA8B,OAAA,CACAL,UAAA,SAAAzQ,GACA,OAAAA,EAAAkR,eAAA,YAIAC,YAAArB,EAAA,CAAAsB,IAAA,CAAAC,aAAA,EAAAC,YAAA,OACAC,WAAA,CACAf,SAAA,KAKA,OAAA7D,EAAAlC,mBAAA,SAAAkC,EAAAlC,oBACAkC,EAAAjC,YAAAiC,EAAApB,gBACAoB,EAAAhE,aAAA,CACAmI,OAAAnE,EAAArB,qBACAkG,OAAA7E,EAAAtB,cAYA4D,+BAAA,SAAAwC,GACA,IAAA9E,EAAA,KACA+E,EAAA,EACA,UAAAD,EAAA,CACA,IAAAE,EAAA,EACAhF,EAAApB,gBAAAwC,QAAAhQ,IACA4T,GAAArD,SAAAvQ,KAEA4O,EAAAnE,wBAAAmJ,EAAAC,QAAA,GACAjF,EAAAnE,wBAAAjE,WAAAoI,EAAAnE,yBAAA0I,eAAA,SAEA,YAAAO,EAAA,CACA,IAAAI,EAAA,EACAA,EAAAlF,EAAApB,gBAAA3Q,OACA+R,EAAAnE,wBAAAqJ,EAEA,UAAAJ,EAAA,CACA,IAAAK,EAAA,EACAC,EAAA,EAEApF,EAAApB,gBAAAwC,SAAA,SAAAhQ,EAAAxC,GACAuW,GAAA/T,EACAgU,OAEAL,EAAAI,EAAAC,EACApF,EAAAnE,wBAAAkJ,EAAAE,QAAA,GACAjF,EAAAnE,wBAAAjE,WAAAoI,EAAAnE,yBAAA0I,eAAA,SAEA,OAAAO,IACAC,EAAAM,KAAAC,IAAAC,MAAAF,KAAArF,EAAApB,gBAAA7L,OAAAyS,SACAxF,EAAAnE,wBAAAkJ,EAAAE,QAAA,GACAjF,EAAAnE,wBAAAjE,WAAAoI,EAAAnE,yBAAA0I,eAAA,UAEA,OAAAO,IACAC,EAAAM,KAAAI,OAAAzF,EAAApB,iBACAoB,EAAAnE,wBAAAkJ,EAAAE,QAAA,GACAjF,EAAAnE,wBAAAjE,WAAAoI,EAAAnE,yBAAA0I,eAAA,WAKAlE,eAAA,SAAAlH,GACA,IAAA6G,EAAA,KACA,GAAAA,EAAAvB,oBAAAuB,EAAAxB,mBAGA,OAFAwB,EAAAvB,mBAAA,GACAuB,EAAAwC,UAAA,+CACA,EAEAxC,EAAAnE,wBAAA,EACA,IAAA6J,EAAA1F,EAAAoC,iBAAAjJ,GAAAuM,gBACA,WAAAA,GAAA,OAAAA,GACA1F,EAAA/G,WAAA,GAAA0E,KAAA,GAAAkC,YAAA,EACAG,EAAA/G,WAAA,GAAA0E,KAAA,GAAAkC,YAAA,EACAG,EAAA/G,WAAA,GAAA0E,KAAA,GAAA7P,MAAA,QACAkS,EAAAlE,sBAAA,KAGAkE,EAAA/G,WAAA,GAAA0E,KAAA,GAAAkC,YAAA,EACAG,EAAA/G,WAAA,GAAA0E,KAAA,GAAAkC,YAAA,EACAG,EAAA/G,WAAA,GAAA0E,KAAA,GAAA7P,MAAA,QACAkS,EAAAlE,sBAAA,UAGA6J,gBAAA,SAAAxM,GACA,IAAA6G,EAAA,KAEA,GAAAA,EAAAvB,oBAAAuB,EAAAxB,mBAGA,OAFAwB,EAAAxB,mBAAA,GACAwB,EAAAwC,UAAA,+CACA,GAIAJ,iBAAAjJ,GACA,IAAA6G,EAAA,KACA,IAAAqC,EAAAqD,EACA,QAAA9W,KAAAoR,EAAA/N,WAAA2T,UACA5F,EAAA/N,WAAArD,GAAAuK,kBAAA6G,EAAA/N,WAAArD,GAAAuB,WAAAgJ,IAEAkJ,EADA,MAAArC,EAAA/N,WAAArD,GAAAwB,aAAA,IAAA4P,EAAA/N,WAAArD,GAAAwB,YACA4P,EAAA/N,WAAArD,GAAAwB,YAGA4P,EAAA/N,WAAArD,GAAAuB,UAEAuV,EAAA1F,EAAA/N,WAAArD,GAAA8D,qBAGA,uBAAA2P,EAAA,gBAAAqD,IAIAvD,eAAA5F,EAAAsJ,EAAAC,GACA,IAAA9F,EAAA,KACAA,EAAArB,qBAAA,GACAqB,EAAApB,gBAAA,GACArC,EAAA6E,QAAA2E,IACAF,KAAAE,EACA,MAAAA,EAAAF,SAAA9V,GAAAgW,EAAAF,IACA7F,EAAArB,qBAAA7S,KAAAia,EAAAF,IAEA7F,EAAAgG,aAAAD,EAAAF,EAAAC,IAIA,MAAAC,EAAAD,SAAA/V,GAAAgW,EAAAD,KAEA9F,EAAArB,qBADA,iBAAAkH,EACA,IAAA7F,EAAArB,qBAAA,KAGA,IAAAqB,EAAArB,qBAAA,GAEAqB,EAAAgG,aAAAD,EAAAF,EAAAC,KAMA9F,EAAArB,qBAAA7S,KAAA,KACAkU,EAAAgG,aAAAD,EAAAF,EAAAC,OAKAE,aAAA,SAAAD,EAAAF,EAAAC,GACA,IAAA9F,EAAA,KACA,GAAA8F,KAAAC,EACA,SAAAA,EAAAD,SAAA/V,GAAAgW,EAAAD,GACA,oBAAAC,EAAAD,GAAA,CACA,IAAAG,EAAAF,EAAAD,GAAAI,QAAA,aACAlG,EAAApB,gBAAA9S,KAAA6V,SAAAsE,SAGAjG,EAAApB,gBAAA9S,KAAAia,EAAAD,SAIA9F,EAAApB,gBAAA,IAAAoB,EAAApB,gBAAA,IAMAuH,yBACA,MAAAC,EAAAf,KAAAgB,MAAA,SAAAhB,KAAAiB,UAAAC,SAAA,IACA,UAAAH,GAIAI,yBACA,IAAAxG,EAAA,KACA,MAAAA,EAAAtB,WAAAzQ,OAAA+R,EAAApB,gBAAA3Q,OAAA,CACA,IAAAwY,EACAA,EAAAzG,EAAAmG,yBACA,IAAAO,EAAA1G,EAAAtB,WAAAgD,KAAA1G,MAAAyL,GACAC,GAAA1G,EAAAtB,WAAA5S,KAAA2a,KAGAvJ,SAAA,eAAAyJ,EAAAtT,GACA,IAAA2M,EAAA,WACAA,EAAA/B,gBC77ByX,I,YCOrX2I,EAAY,eACd,EACA,EACA,GACA,EACA,KACA,KACA,MAIa,EAAAA,E,yCCgPfC,IAAAC,IAAAC,aAAAD,IAEe,OACf5I,WAAA,CACAC,kBACA6I,oBACAH,aAGAzI,MAAA,CACA9E,YAAA,CACA+E,KAAAxL,OAEAZ,WAAA,CACAoM,KAAAxL,OAEA0G,uBAAA,CACA8E,KAAAC,QAEAtN,UAAA,CACAqN,KAAAxL,OAEA2G,eAAA,CACA6E,KAAAC,QAEAnR,WAAA,CACAkR,KAAA4I,QAEAjK,UAAA,CACAqB,KAAAxL,OAEAqU,YAAA,CACA7I,KAAAxL,OAEAgH,UAAA,CACAwE,KAAAxL,OAEA6G,aAAA,CACA2E,KAAA8I,SAEArN,gBAAA,CACAuE,KAAAmH,QAEA/L,cAAA,CACA4E,KAAAC,SAGA/B,OACA,OACAxP,WAAA,EACAqP,cAAA,GACAF,iBAAA,GACAI,UAAA,EACAH,UAAA,EACAU,aAAA,EACAvB,kBAAA,EACAE,WAAA,EACA4L,mBAAA,EAEAxM,aAAA,EACAC,iBAAA,EAAAE,cAAA,GAAAE,aAAA,KACAoM,iBAAA,GACAC,WAAA,GACAnM,oBAAA,EACAoM,SAAA,EAGApH,YAAA,KACApE,UAAA,GACAE,YAAA,GACAD,aAAA,GACAF,sBAAA,KACAD,wBAAA,KACAF,WAAA,KACA6L,WAAA,KACAC,YAAA,EACAC,eAAA,KACAC,UAAA,KACA7I,WAAA,EACA8I,eAAA,GAGAC,eAAA,KACAC,UAAA,GACAC,YAAA,GACAC,WAAA,KACAC,cAAA,KACA7C,MAAA,EACA8C,qBAAA,IAIAnI,UACA,IAAAC,EAAA,KACA,MAAAA,EAAAhD,gBAAAjN,GAAAiQ,EAAAhD,WAAA,IAAAgD,EAAAhD,WAAAgD,EAAAhD,UAAA/O,OAAA,IACA+R,EAAA1E,kBAAA,GAEA0E,EAAAmI,kBACA,MAAAnI,EAAA1G,kBAAAvJ,GAAAiQ,EAAA1G,aAAA0G,EAAA1G,YAAArL,OAAA,GACA+R,EAAAoI,aACApI,EAAAtG,cAAAsG,EAAA1F,iBAEA+N,UACA,IAMAC,EANAtI,EAAA,KACA,MAAAA,EAAAhD,gBAAAjN,GAAAiQ,EAAAhD,WAAA,IAAAgD,EAAAhD,WAAAgD,EAAAhD,UAAA/O,OAAA,IACA+R,EAAA1E,kBAAA,EACA,IAAA0E,EAAAlE,wBACAkE,EAAAlE,sBAAAkE,EAAAhD,UAAA,GAAAwE,mBAEA,MAAAxB,EAAA1G,kBAAAvJ,GAAAiQ,EAAA1G,aAAA0G,EAAA1G,YAAArL,OAAA,IACA,QAAAqa,EAAAtI,EAAAY,MAAA2H,kBAAA,IAAAD,KAAA1K,qBAIA0C,MAAA,CACAmH,WAAAe,EAAAC,GACA,IAAAzI,EAAA,KACAwI,GAAAC,IACAzI,EAAAoI,aACApI,EAAAyH,YAAA,KAIAlH,QAAA,CACA4H,gBAAA,WACA,IAAAnI,EAAA,KACA,MAAAA,EAAAkH,kBAAAnX,GAAAiQ,EAAAkH,aAAA,IAAAlH,EAAAkH,aAAAlH,EAAAkH,YAAAjZ,OAAA,GACA+R,EAAAnF,iBAAA,GACAmF,EAAAkH,YAAA9F,QAAA,CAAAhQ,EAAAxC,KACAoR,EAAAnF,iBAAA/O,KAAA,CACA,cAAAsF,EAAA+H,cACA,aAAA/H,EAAAsX,cAKA1I,EAAAnF,iBAAA,EAAAE,cAAA,GAAAE,aAAA,MAGA0N,cAAA,WACA,IAAA3I,EAAA,KACAA,EAAA7D,UAAA,EACA6D,EAAA1F,iBAEA8N,WAAA,WACA,IAAApI,EAAA,KACA,MAAAA,EAAA1G,kBAAAvJ,GAAAiQ,EAAA1G,aAAA0G,EAAA1G,YAAArL,OAAA,GACA+R,EAAA5D,cAAA,GACA4D,EAAA/N,WAAAmP,QAAApG,IACAgF,EAAA5D,cAAAtQ,KAAA,IAAAkP,MAEAgF,EAAAhP,UAAAoQ,QAAAhQ,IACA4O,EAAA5D,cAAAgF,QAAA,CAAA1E,EAAA9N,KACAwC,EAAAhB,cAAAsM,EAAAtM,aAAAgB,EAAAjB,YAAAuM,EAAAvM,WACA6P,EAAA5D,cAAAwM,OAAAha,EAAA,OAIA,MAAAoR,EAAA5D,oBAAArM,GAAAiQ,EAAA5D,eAAA4D,EAAA5D,cAAAnO,OAAA,IACA+R,EAAAhP,UAAA/C,OAAA,GACA+R,EAAA9D,iBAAAoC,OAAAuK,OAAA,GAAA7I,EAAAhP,WACAgP,EAAA7D,UAAA,EAIA6D,EAAAnD,aAAA,IAGAmD,EAAAnD,aAAA,EACAmD,EAAA9D,iBAAA,IAEA8D,EAAA1D,UAAA,KAIA0D,EAAA5D,cAAA,GACA4D,EAAA9D,iBAAA,GACA8D,EAAA1D,UAAA,IAGAhC,cAAA,iBACA,IAAA0F,EAAA,KACAA,EAAApF,aAAA,EACAoF,EAAAlB,WAAA,EACA,MAAAkB,EAAA4H,eAAApK,0BAAAzN,GAAAiQ,EAAA4H,eAAApK,2BACAwC,EAAAY,MAAA2H,WAAAtK,kBAEAlO,GAAAiQ,EAAAnF,iBAAA,GAAAE,oBAAAhL,GAAAiQ,EAAAnF,iBAAA,GAAAI,eACA+E,EAAAnF,iBAAA,EAAAE,cAAA,GAAAE,aAAA,YAEA+E,EAAAgB,QAAAc,YAAA9B,EAAAnF,iBAAAmF,EAAAlB,WACAkB,EAAAyH,YAAA,GAEAlN,UAAA,eAAAuO,EACA9I,EAAA,KACAA,EAAA7D,UAAA,EACA6D,EAAApF,aAAA,EACAoF,EAAAnF,iBAAA,EAAAE,cAAA,GAAAE,aAAA,KACA+E,EAAA5D,cAAA,GACA4D,EAAA1E,kBAAA,EACA0E,EAAAxE,WAAA,EACAwE,EAAAjE,UAAA,KACAiE,EAAAG,YAAA,KACAH,EAAAlE,sBAAA,KACAkE,EAAAnE,wBAAA,KACAmE,EAAArE,WAAA,KACAqE,EAAApE,WAAA,KACAoE,EAAA/D,YAAA,GACA+D,EAAAhE,aAAA,GACA,QAAA8M,EAAA9I,EAAAY,MAAA2H,kBAAA,IAAAO,KAAAxH,aACAtB,EAAAgB,QAAA+H,aAAA/I,EAAAzG,wBACAyG,EAAA1D,UAAA,GAEAb,eAAA,WACA,IAAAuE,EAAA,KACAA,EAAA1E,kBAAA,EACA0E,EAAAY,MAAA2H,WAAAjH,aAEAtB,EAAAjE,UAAA,GACAiE,EAAAG,YAAA,KACAH,EAAAlE,sBAAA,KACAkE,EAAAnE,wBAAA,KACAmE,EAAArE,WAAA,KACAqE,EAAApE,WAAA,KACAoE,EAAA/D,YAAA,GACA+D,EAAAhE,aAAA,GACAgE,EAAAxE,WAAA,EACAwE,EAAAlB,WAAA,GAEAhC,cAAA,iBACA,IAAAkD,EAAA,KACAA,EAAAtG,oBACAsG,EAAAgB,QAAAc,YAAA9B,EAAAnF,kBAEA,IAAAmO,EAAA,CACA,YAAAhJ,EAAAG,YACA,WAAAH,EAAArE,WACA,WAAAqE,EAAApE,WACA,kBAAAoE,EAAAlE,sBACA,mBAAAkE,EAAAnE,yBAEA,MAAAmN,EAAA7I,cACAH,EAAAhP,UAAA/C,QAAA,GACA+R,EAAAhP,UAAAoQ,QAAAhQ,IACA4O,EAAAxG,eAAAyP,KAAAC,MAAApd,KAAAsF,KAGA4O,EAAAxG,eAAAyP,KAAAE,MAAArd,KAAAkd,IAEA,IAAAI,EAAAC,KAAAC,UAAAtJ,EAAAxG,gBACA,MAAA4P,QAAArZ,GAAAqZ,GAAApJ,EAAA1G,YAAArL,OAAA,EACAsb,OAAAC,qBAAAJ,GAAAlI,KAAAC,IACA,GAAAA,EAAA5E,KAAA,GAAAkN,OACAzJ,EAAAwC,UAAAxC,EAAA5S,GAAA,gBAAA4S,EAAA5S,GAAA,yBAAA4S,EAAA5S,GAAA,UACA,KAAAsc,QAAA5d,KAAA,CAAA8B,KAAA,mBAEA,GAAAuT,EAAA5E,KAAA,GAAAkN,QACAzJ,EAAAwC,UAAAxC,EAAA5S,GAAA,kBAAA4S,EAAA5S,GAAA,yBAAA4S,EAAA5S,GAAA,UACA,KAAAsc,QAAA5d,KAAA,CAAA8B,KAAA,qBAEA+b,MAAAC,IACAC,QAAAC,IAAAF,MAGA5J,EAAAwC,UAAAxC,EAAA5S,GAAA,gCAAA4S,EAAA5S,GAAA,UACA4S,EAAAjT,WAAA,IAGA2N,iBAAA,WACA,IAAAsF,EAAA,KACAA,EAAApF,YAIAoF,EAAApF,aAAA,EAHAoF,EAAApF,aAAA,GAMAM,eAAA,SAAApN,GACA,IAAAkS,EAAA,KAEA,IAAAA,EAAAnF,iBAAA,GAAAI,cAAA,IAAA+E,EAAAnF,iBAAA,GAAAE,eAAAiF,EAAAnF,iBAAA5M,OAAA+R,EAAA/N,WAAAhE,OACA+R,EAAAnF,iBAAA/O,KAAA,CAAAiP,cAAA,GAAAE,aAAA,KAEA+E,EAAAwC,UAAA,IAAAxC,EAAAnF,iBAAA,GAAAI,cAAA,IAAA+E,EAAAnF,iBAAA,GAAAE,cAAAiF,EAAA5S,GAAA,mBAAA4S,EAAA5S,GAAA,+BAAA4S,EAAA5S,GAAA,WAGAgO,kBAAA,SAAAxM,GACA,IAAAoR,EAAA,KACA,MAAAA,EAAAnF,iBAAA5M,OACA+R,EAAAnF,iBAAA,EAAAE,cAAA,GAAAE,aAAA,SAEA,CAEA,IAAA8O,EAAA/J,EAAAnF,iBAAAmP,UAAAhP,KAAAD,gBAAAnM,EAAAmM,eACAgP,GAAA,GACA/J,EAAAnF,iBAAA+N,OAAAmB,EAAA,GAEA/J,EAAA7E,oBAAA,EAEA,GAAA6E,EAAAnF,iBAAA5M,SACA+R,EAAA7E,oBAAA,IAEAR,UAAA,WACA,IAAAqF,EAAA,KACAA,EAAApF,aAAA,EACAoF,EAAA1E,iBAIA0E,EAAA1E,kBAAA,EAHA0E,EAAA1E,kBAAA,GAMAC,iBAAA,WACA,IAAAyE,EAAA,KACAA,EAAAxE,WAAA,EACAwE,EAAAuH,SAAA,EACA/G,EAAA,uBAAAC,MAAA,QACAwJ,YAAA,WACAzJ,EAAA,uBAAAC,MAAA,QACAwJ,YAAA,WACAjK,EAAAkK,wBACA,OACA,MAEA3H,UAAA,SAAAtD,EAAAH,GACA,IAAAkB,EAAA,KACA,MAAAf,EAAAzB,0BAAAzN,GAAAkP,EAAAzB,qBACAwC,EAAA4H,eAAA3I,EACAe,EAAAjE,UAAAkD,EAAAnB,kBACAkC,EAAAG,YAAAlB,EAAAzB,oBACAwC,EAAAlE,sBAAAmD,EAAAnD,sBACAkE,EAAAnE,wBAAAoD,EAAApD,wBACAmE,EAAArE,WAAAsD,EAAAT,mBACAwB,EAAApE,WAAAqD,EAAAR,mBACAuB,EAAA/D,YAAAgD,EAAAlB,YACAiC,EAAAhE,aAAAiD,EAAAkL,aACAnK,EAAAxE,WAAA,EACAwE,EAAAlB,aAGAkB,EAAAxE,WAAA,GAIAE,sBAAAvC,GACA,IAAA6G,EAAA,KACA,IAAAqC,EACA,QAAAzT,KAAAoR,EAAA/N,WAAA2T,UACA5F,EAAA/N,WAAArD,GAAAuK,kBAAA6G,EAAA/N,WAAArD,GAAAuB,WAAAgJ,IAEAkJ,EADA,MAAArC,EAAA/N,WAAArD,GAAAwB,aAAA,IAAA4P,EAAA/N,WAAArD,GAAAwB,YACA4P,EAAA/N,WAAArD,GAAAwB,YAGA4P,EAAA/N,WAAArD,GAAAuB,WAIA,OAAAkS,GAEAtF,UAAA,WACA,KAAA2M,QAAA5d,KAAA,CAAA8B,KAAA,mBAEAwc,wBAAA,SAAAjR,GACA,IAAA6G,EAAA,KACAhS,GAAA,EACA,OAAAgS,EAAArE,YAAAxC,GAAA6G,EAAApE,YAAAzC,GACAnL,EAEAA,GAGAqc,oBAAA,eAAAC,GACA,IAAAtK,EAAA,KAEA,GADAA,EAAAoF,MAAA,EACApF,EAAA1G,YAAArL,OAAA,GACA,IAAAsc,EAAA,CACA,MACA,SAAAvK,EAAAzG,uBAAAiR,SACA,WAAAxK,EAAA7S,WACA,WAAA6S,EAAAzG,uBAAAkR,WACA,cAAAzK,EAAAzG,uBAAAmR,cACA,YAAA1K,EAAAzG,uBAAAoR,YACA,SAAA3K,EAAA4K,SACA,WAAAjJ,SAAA3B,EAAA6K,YACA,WACA,aAAA7K,EAAAkI,qBACA,OAAAlI,EAAAxG,eAAAyP,KAAA6B,OAAA7c,OAAA,EAAA+R,EAAAxG,eAAAyP,KAAA6B,OAAA9K,EAAAvG,cAAAwP,KAAA6B,OACA,QAAA9K,EAAAxG,eAAAyP,KAAA8B,QAAA9c,OAAA,EAAA+R,EAAAxG,eAAAyP,KAAA8B,QAAA/K,EAAAvG,cAAAwP,KAAA8B,QACA,MAAA/K,EAAAxG,eAAAyP,KAAAC,MAAAjb,OAAA,EAAA+R,EAAAxG,eAAAyP,KAAAC,MAAAlJ,EAAAvG,cAAAwP,KAAAC,MACA,QAAAlJ,EAAAxG,eAAAyP,KAAA+B,QAAA/c,OAAA,EAAA+R,EAAAxG,eAAAyP,KAAA+B,QAAAhL,EAAAvG,cAAAwP,KAAA+B,QACA,WAAAhL,EAAAxG,eAAAyP,KAAAgC,WAAAhd,OAAA,EAAA+R,EAAAxG,eAAAyP,KAAAgC,WAAAjL,EAAAvG,cAAAwP,KAAAgC,aAIAC,EAAA7B,KAAAC,UAAAiB,GACAvK,EAAAiI,cAAAiD,OACAnb,GAAAua,SACAf,OAAAjP,cAAA4Q,GAAAhK,KAAA,UACA,MAAAC,EAAA5E,WAAAxM,GAAAoR,EAAA5E,OACAyD,EAAA6H,eAAAwB,KAAAnR,MAAAiJ,EAAA5E,KAAA,GAAAkN,OACAzJ,EAAAoF,MAAApF,EAAAoF,MAAA,KAEAuE,MAAAC,IACAC,QAAAC,IAAAF,OAMApP,YAAA,iBACA,IAAAwF,EAAA,KAGA,GAFAA,EAAAjT,WAAA,QACAiT,EAAAqK,sBACA,GAAArK,EAAAoF,MAAA,CACA,IAAA+F,QAAAnL,EAAAoL,mBACApO,EAAA,GACAqO,EAAArL,EAAA6H,eAAApF,YACA,IAGA6I,EAHAvJ,EAAA/B,EAAA6H,eAAA9F,SAAA,GACA5U,EAAA6S,EAAA7S,WAAA+Y,QAAA,SACAqF,EAAA,KAEAC,EAAA,GACAC,EAAA,IAGA1J,EAAAC,iBACAhC,EAAA0L,oBAAAL,SAIArL,EAAA2L,YAAAN,GAIArL,EAAA+H,YAAA9Z,OAAA,IACAsd,EAAA,KACAE,EAAA,KAIAzL,EAAA+H,YAAA9Z,OAAA,KACAud,EAAA,aAGA,MAAAL,QAAApb,GAAAob,IACAnO,EAAA,CACA4O,MAAAT,EAAAU,OACAC,MAAA,IACAC,UAAA,WAIAT,EAAA,CACAU,SAAAT,EACAC,kBACAvf,QAAA,CACA+Q,EAEA,CACAiP,MAAA,QACAC,MAAA,CACAC,WAAA,EACAC,KAAApM,EAAA8H,aAIAuE,OAAArM,EAAAsM,cACAC,aAAA,CACAR,UAAA,YAGAlF,IAAA2F,UAAAlB,GAAAmB,SAAAtf,GACA6S,EAAAjT,WAAA,OAEAiT,EAAAwC,UAAAxC,EAAA5S,GAAA,gCAAA4S,EAAA5S,GAAA,UACA4S,EAAAjT,WAAA,GAIA4e,YAAA,SAAAN,GACA,IAAArL,EAAA,KACAA,EAAA8H,UAAA,GACA9H,EAAA+H,YAAA,GACA,IAAA2E,EAAA,GAEAC,EAAArO,OAAAuE,KAAAwI,EAAA,IACAsB,EAAAvL,QAAAhQ,IACA,aAAAA,IACA4O,EAAA+H,YAAAjc,KAAA,CAAAoY,KAAAlE,EAAA5S,GAAAgE,GAAA6a,MAAA,cAAAF,UAAA,WACAW,EAAA5gB,KAAA,CAAAoY,KAAA9S,EAAA6a,MAAA,cAAAF,UAAA,cAIA/L,EAAA8H,UAAAhc,KAAAkU,EAAA+H,aAEAsD,EAAAjK,QAAAhQ,IACA,IAAAwb,EAAA,GACAF,EAAAtL,QAAAyL,IACA,IAAAC,EAAA,KAEAA,EADA,iBAAA1b,EAAAyb,EAAA3I,MACA9S,EAAAyb,EAAA3I,MAAAgC,QAAA,oBACA9U,EAAAyb,EAAA3I,MACA0I,EAAA9gB,KAAAghB,KAEA9M,EAAA8H,UAAAhc,KAAA8gB,MAIAlB,oBAAA,SAAAL,GACA,IAAArL,EAAA,KACAA,EAAA8H,UAAA,GACA9H,EAAA+H,YAAA,GACA,IAAA2E,EAAA,GAEA1M,EAAA+H,YAAAjc,KAAA,CAAAoY,KAAAlE,EAAA5S,GAAAkR,OAAAuE,KAAAwI,EAAA,QAAAY,MAAA,cAAAF,UAAA,WACAW,EAAA5gB,KAAA,CAAAoY,KAAA5F,OAAAuE,KAAAwI,EAAA,OAAAY,MAAA,cAAAF,UAAA,WAEA,IAAAgB,EAAAzO,OAAAuE,KAAAwI,EAAA,GAAA9O,KAAA,IACAwQ,EAAA3L,QAAAhQ,IACA4O,EAAA+H,YAAAjc,KAAA,CAAAoY,KAAAlE,EAAA5S,GAAAgE,GAAA6a,MAAA,cAAAF,UAAA,WACAW,EAAA5gB,KAAA,CAAAoY,KAAA9S,EAAA6a,MAAA,cAAAF,UAAA,aAIA/L,EAAA8H,UAAAhc,KAAAkU,EAAA+H,aAGAsD,EAAAjK,QAAAhQ,IACAA,EAAAmL,KAAA6E,QAAA,CAAAyL,EAAAG,KACA,IAAAC,EAAA,GACAP,EAAAtL,QAAA,CAAA8L,EAAAC,KACA,MAAAH,GAAA,GAAAG,EAAA,CACA,IAAAC,EAAA,KAEAA,EADA,iBAAAhc,EAAA8b,EAAAhJ,MACA9S,EAAA8b,EAAAhJ,MAAAgC,QAAA,oBACA9U,EAAA8b,EAAAhJ,MACA,IAAAmJ,EAAA,GAAAD,MAAAhc,EAAAwL,eACAqQ,EAAAnhB,KAAA,CAAAwhB,QAAA3L,SAAAvQ,EAAAwL,aAAAsH,KAAAmJ,SAEA,MAAAL,GAAA,GAAAG,EACAF,EAAAnhB,KAAA,SAGA,QAAAiE,GAAA8c,EAAAK,EAAAhJ,OAAA,IAAA2I,EAAAK,EAAAhJ,MAAA,CACA,IAAAqJ,EAAA,KAEAA,EADA,iBAAAV,EAAAK,EAAAhJ,MACA2I,EAAAK,EAAAhJ,MAAAgC,QAAA,oBACA2G,EAAAK,EAAAhJ,MACA+I,EAAAnhB,KAAAyhB,OAEA,CACA,IAAAC,EAAAX,EAAAK,EAAAhJ,MAAA,IACA+I,EAAAnhB,KAAA0hB,MAIAxN,EAAA8H,UAAAhc,KAAAmhB,QAIAX,YAAA,WACA,OACAmB,UAAA,CACAC,SAAA,GACAC,MAAA,EACAC,OAAA,YAEA1B,MAAA,CACA0B,OAAA,cAIAxC,iBAAA,qBAAAyC,EAEAC,EADA9N,EAAA,KAKA,aAHA,QAAA6N,EAAA7N,EAAAY,MAAAwC,aAAA,IAAAyK,OAAA,EAAAA,EAAAzK,MAAA2K,UAAA7M,KAAA8M,IACAF,EAAAE,KAEAF,GAEArT,cAAA,iBACA,IAAAuF,EAAA,KAIA,GAHAA,EAAAjT,WAAA,QAEAiT,EAAAqK,oBAAA,SACA,MAAArK,EAAAiI,oBAAAlY,GAAAiQ,EAAAiI,cAAA,CACA,IAAAmB,EAAApJ,EAAAiI,cACAgG,EAAA,YAAAjO,EAAAzG,uBAAAiR,sCACAjB,OAAA2E,eAAAD,EAAA7E,GAAAlI,KAAAC,IACA,IAAAgN,EAAA,IAAAC,KAAA,CAAAjN,EAAA5E,MAAA,CAAA8B,KAAA,uEACAgQ,EAAAC,SAAAC,cAAA,KACAF,EAAAG,KAAAC,OAAAC,IAAAC,gBAAAR,GACA,MAAAS,EAAA,IAAA3W,KACA4W,EAAA,GAAAD,EAAAE,aAAAF,EAAAG,WAAA,KAAAH,EAAAI,gBACA,IAAAC,EAAA,cAAAjP,EAAA7S,WAAA+Y,QAAA,YAAA2I,IACAI,IAAAC,MAAA,KAAAC,KAAA,IACAd,EAAA5B,SAAAwC,EACAZ,EAAAe,QACApP,EAAAjT,WAAA,IACA4c,MAAAC,IAAAC,QAAAC,IAAAF,GAAA5J,EAAAjT,WAAA,SAEAiT,EAAAwC,UAAAxC,EAAA5S,GAAA,gCAAA4S,EAAA5S,GAAA,UACA4S,EAAAjT,WAAA,GAGAsO,QACA,IAAA2E,EAAA,KACAA,EAAApF,aAAA,KCj2BqX,ICQjX,G,UAAY,eACd,EACA,EACA,GACA,EACA,KACA,WACA,OAIa,I,QCnBXtO,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACE,YAAY,8BAA8BG,MAAM,CAAC,GAAK,sBAAsB,KAAO,WAAW,CAACL,EAAG,MAAM,CAACE,YAAY,eAAeG,MAAM,CAAC,KAAO,aAAa,CAACL,EAAG,MAAM,CAACE,YAAY,iBAAiB,CAACF,EAAG,MAAM,CAACE,YAAY,6BAA6B,CAACF,EAAG,SAAS,CAACE,YAAY,QAAQG,MAAM,CAAC,KAAO,UAAUO,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOf,EAAI8O,WAAW,CAAC5O,EAAG,KAAK,CAACE,YAAY,cAAcG,MAAM,CAAC,cAAc,YAAYL,EAAG,KAAK,CAACE,YAAY,cAAcG,MAAM,CAAC,GAAK,iBAAiB,CAACP,EAAIU,GAAGV,EAAIW,GAAGX,EAAIa,GAAG,qBAAqBX,EAAG,MAAM,CAACE,YAAY,cAAc,CAACF,EAAG,SAAS,CAACK,MAAM,CAAC,aAAaP,EAAIQ,aAAaN,EAAG,eAAe,CAACK,MAAM,CAAC,KAAO,KAAK,QAAUP,EAAI8iB,QAAQ,OAAS9iB,EAAI0M,YAAY5L,GAAG,CAAC,SAAW,SAASC,GAAQ,OAAOf,EAAI+iB,qBAAqBnS,YAAY5Q,EAAI6Q,GAAG,CAAC,CAACvO,IAAI,0BAA0BwO,GAAG,UAAS,KAAEd,IAAQ,MAAO,CAAC9P,EAAG,MAAM,CAACE,YAAY,OAAO,CAACF,EAAG,MAAM,CAACE,YAAY,yBAAyB,CAACF,EAAG,MAAM,CAACE,YAAY,iCAAiC,CAACF,EAAG,MAAM,CAACE,YAAY,uBAAuB,CAACF,EAAG,KAAK,CAACE,YAAY,MAAM,CAACF,EAAG,OAAO,CAACE,YAAY,gBAAgB,CAACJ,EAAIU,GAAG,IAAIV,EAAIW,GAAGX,EAAIa,GAAG,cAAc,KAAKX,EAAG,MAAM,CAACE,YAAY,0CAA0CF,EAAG,MAAM,CAACE,YAAY,qCAAqCG,MAAM,CAAC,GAAK,iBAAiB,CAACL,EAAG,MAAM,CAACE,YAAY,aAAaa,YAAY,CAAC,aAAa,sBAAsBjB,EAAImC,GAAInC,EAAIgjB,eAAe,SAAS3hB,EAAKgB,GAAO,OAAOnC,EAAG,MAAM,CAACoC,IAAID,EAAMjC,YAAY,QAAQ,CAACF,EAAG,MAAM,CAACE,YAAY,cAAcG,MAAM,CAAC,KAAO,MAAM,GAAK,eAAiB8B,IAAQ,CAACnC,EAAG,KAAK,CAACE,YAAY,QAAQ,CAACF,EAAG,IAAI,CAACG,MAAe,GAATgC,EAAa,GAAK,YAAY9B,MAAM,CAAC,cAAc,WAAW,cAAc,gBAAgB,KAAO,oBAAsB8B,EAAM,gBAAyB,GAATA,EAA0B,gBAAgB,mBAAqBA,IAAQ,CAACnC,EAAG,KAAK,CAACE,YAAY,uBAAuBG,MAAM,CAAC,cAAc,UAAUL,EAAG,OAAO,CAACE,YAAY,oBAAoB,CAACJ,EAAIU,GAAG,IAAIV,EAAIW,GAAGU,EAAK4hB,aAAa/iB,EAAG,KAAK,CAACE,YAAY,+BAA+BG,MAAM,CAAC,cAAc,gBAAgBL,EAAG,MAAM,CAACG,MAAe,GAATgC,EAAa,+BAAiC,0BAA0B9B,MAAM,CAAC,GAAK,mBAAqB8B,EAAM,KAAO,WAAW,kBAAkB,eAAiBA,EAAM,cAAc,kBAAkB,CAACnC,EAAG,MAAM,CAACE,YAAY,2CAA2Ca,YAAY,CAAC,aAAa,UAAU,CAACf,EAAG,MAAM,CAACE,YAAY,cAAc,CAACF,EAAG,KAAK,CAACE,YAAY,uEAAuEa,YAAY,CAAC,aAAa,QAAQ,SAAW,OAAO,QAAU,UAAU,CAACjB,EAAImC,GAAInC,EAAIkjB,aAAa7gB,IAAQ,SAASiB,GAAS,MAAO,CAACpD,EAAG,KAAK,CAACE,YAAY,2BAA2B,CAACF,EAAG,OAAO,CAACE,YAAY,2BAA2B,CAACF,EAAG,KAAK,CAACE,YAAY,4BAA4BG,MAAM,CAAC,cAAc,UAAUL,EAAG,OAAO,CAACE,YAAY,2BAA2Ba,YAAY,CAAC,MAAQ,OAAOV,MAAM,CAAC,sBAAsB+C,EAAQ6f,KAAK,MAAQ7f,EAAQ6f,OAAO,CAACnjB,EAAIU,GAAG,IAAIV,EAAIW,GAAG2C,EAAQ6f,MAAM,OAAOjjB,EAAG,IAAI,CAACK,MAAM,CAAC,KAAO,iBAAiB,CAACL,EAAG,KAAK,CAACE,YAAY,gDAAgDG,MAAM,CAAC,cAAc,QAAQO,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOf,EAAIojB,mBAAmB9f,EAASvC,EAAQsB,kBAAqB,cAAa,OAAOnC,EAAG,MAAM,CAACE,YAAY,iCAAiC,CAACF,EAAG,MAAM,CAACE,YAAY,kBAAkB,CAACF,EAAG,KAAK,CAACE,YAAY,MAAM,CAACF,EAAG,OAAO,CAACE,YAAY,gBAAgB,CAACJ,EAAIU,GAAG,IAAIV,EAAIW,GAAGX,EAAIa,GAAG,eAAe,KAAKX,EAAG,IAAI,CAACE,YAAY,uBAAuBG,MAAM,CAAC,MAAQ,kBAAkB,KAAO,iBAAiB,CAACL,EAAG,KAAK,CAACE,YAAY,2CAA2CF,EAAG,MAAM,CAACE,YAAY,8BAA8B,CAACF,EAAG,MAAM,CAACE,YAAY,OAAO,CAACF,EAAG,MAAM,CAACE,YAAY,kBAAkB,CAACF,EAAG,QAAQ,CAACkB,WAAW,CAAC,CAACC,KAAK,QAAQC,QAAQ,UAAUC,MAAOvB,EAAIqjB,yBAA0B5hB,WAAW,6BAA6BpB,MAAyB,aAAnBL,EAAIsjB,aAAiD,YAAnBtjB,EAAIsjB,aAAgD,aAAnBtjB,EAAIsjB,aAAiD,aAAnBtjB,EAAIsjB,aAAiD,MAAnBtjB,EAAIsjB,YAC/9H,eAAiB,sBAAsB/iB,MAAM,CAAC,KAAO,OAAO,YAAc,yBAAyBoB,SAAS,CAAC,MAAS3B,EAAIqjB,0BAA2BviB,GAAG,CAAC,MAAQ,SAASC,GAAWA,EAAOa,OAAOC,YAAiB7B,EAAIqjB,yBAAyBtiB,EAAOa,OAAOL,WAAUrB,EAAG,QAAQ,CAACG,MAAyB,aAAnBL,EAAIsjB,aAAiD,YAAnBtjB,EAAIsjB,aAAgD,aAAnBtjB,EAAIsjB,aAAiD,aAAnBtjB,EAAIsjB,aAAiD,MAAnBtjB,EAAIsjB,YAAsB,cAAgB,UAAU,CAACtjB,EAAIU,GAAGV,EAAIW,GAAGX,EAAIujB,iCAAiCrjB,EAAG,MAAM,CAACE,YAAY,qBAAqB,CAACF,EAAG,IAAI,CAACG,MAAyB,aAAnBL,EAAIsjB,aAAiD,YAAnBtjB,EAAIsjB,aAAgD,aAAnBtjB,EAAIsjB,aAAiD,aAAnBtjB,EAAIsjB,aAAiD,MAAnBtjB,EAAIsjB,YAC/sB,0BAA4B,iCAAiCxiB,GAAG,CAAC,MAAQd,EAAIwjB,8BAA8BtjB,EAAG,WAAW,CAACkB,WAAW,CAAC,CAACC,KAAK,QAAQC,QAAQ,UAAUC,MAAOvB,EAAIyjB,qBAAsBhiB,WAAW,yBAAyBrB,YAAY,+CAA+Ca,YAAY,CAAC,aAAa,SAASV,MAAM,CAAC,GAAK,WAAWoB,SAAS,CAAC,MAAS3B,EAAIyjB,sBAAuB3iB,GAAG,CAAC,QAAU,SAASC,GAAQ,OAAOf,EAAI0jB,gBAAgB3iB,IAAS,QAAU,SAASA,GAAQ,OAAOf,EAAI2jB,eAAe5iB,IAAS,OAAS,SAASA,GAAQ,OAAOf,EAAI4jB,mBAAmB7iB,IAAS,MAAQ,SAASA,GAAWA,EAAOa,OAAOC,YAAiB7B,EAAIyjB,qBAAqB1iB,EAAOa,OAAOL,WAAUrB,EAAG,MAAM,CAACE,YAAY,qEAAqE,CAACF,EAAG,IAAI,CAACE,YAAY,mBAAmBU,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOf,EAAI6jB,SAAS9iB,OAAYb,EAAG,IAAI,CAACK,MAAM,CAAC,KAAO,gBAAgBO,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOf,EAAI8jB,YAAY/iB,MAAW,CAACf,EAAIU,GAAG,OAAOR,EAAG,IAAI,CAACK,MAAM,CAAC,KAAO,gBAAgBO,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOf,EAAI+jB,gBAAgBhjB,MAAW,CAACf,EAAIU,GAAG,OAAOR,EAAG,IAAI,CAACK,MAAM,CAAC,KAAO,gBAAgBO,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOf,EAAIgkB,gBAAgBjjB,MAAW,CAACf,EAAIU,GAAG,OAAOR,EAAG,IAAI,CAACK,MAAM,CAAC,KAAO,gBAAgBO,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOf,EAAIikB,cAAcljB,MAAW,CAACf,EAAIU,GAAG,OAAOR,EAAG,IAAI,CAACK,MAAM,CAAC,KAAO,gBAAgBO,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOf,EAAIkkB,mBAAmBnjB,MAAW,CAACf,EAAIU,GAAG,OAAOR,EAAG,IAAI,CAACK,MAAM,CAAC,KAAO,gBAAgBO,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOf,EAAImkB,oBAAoBpjB,MAAW,CAACf,EAAIU,GAAG,SAASR,EAAG,MAAM,CAACE,YAAY,yBAAyB,CAACF,EAAG,MAAM,CAACE,YAAY,wBAAwB,CAACF,EAAG,MAAM,CAACE,YAAY,wBAAwBG,MAAM,CAAC,GAAK,eAAe,CAA2B,GAAzBP,EAAIokB,kBAAwBlkB,EAAG,MAAM,CAACE,YAAY,iDAAiDG,MAAM,CAAC,KAAO,UAAU,CAACP,EAAIU,GAAG,IAAIV,EAAIW,GAAGX,EAAIa,GAAG,gBAAgBX,EAAG,SAAS,CAACE,YAAY,QAAQG,MAAM,CAAC,KAAO,SAAS,eAAe,QAAQ,aAAa,SAASO,GAAG,CAAC,MAAQd,EAAIqkB,SAAS,CAACnkB,EAAG,OAAO,CAACK,MAAM,CAAC,cAAc,SAAS,CAACP,EAAIU,GAAG,WAAWV,EAAI+D,KAA+B,GAAzB/D,EAAIokB,kBAAwBlkB,EAAG,MAAM,CAACE,YAAY,kDAAkDG,MAAM,CAAC,KAAO,UAAU,CAACP,EAAIU,GAAG,IAAIV,EAAIW,GAAGX,EAAIa,GAAG,sBAAsBX,EAAG,SAAS,CAACE,YAAY,QAAQG,MAAM,CAAC,KAAO,SAAS,eAAe,QAAQ,aAAa,SAASO,GAAG,CAAC,MAAQd,EAAIqkB,SAAS,CAACnkB,EAAG,OAAO,CAACK,MAAM,CAAC,cAAc,SAAS,CAACP,EAAIU,GAAG,WAAWV,EAAI+D,OAAO7D,EAAG,MAAM,CAACE,YAAY,wBAAwB,CAACF,EAAG,IAAI,CAACE,YAAY,yCAAyCG,MAAM,CAAC,KAAO,gBAAgBO,GAAG,CAAC,MAAQd,EAAIskB,mBAAmB,CAACpkB,EAAG,KAAK,CAACE,YAAY,qBAAqBJ,EAAIU,GAAG,YAAYR,EAAG,IAAI,CAACE,YAAY,mCAAmCG,MAAM,CAAC,KAAO,gBAAgBO,GAAG,CAAC,MAAQd,EAAIukB,kBAAkB,CAACrkB,EAAG,KAAK,CAACE,YAAY,uBAAuBJ,EAAIU,GAAG,qBAAqBR,EAAG,MAAM,CAACE,YAAY,iCAAiC,CAACF,EAAG,MAAM,CAACE,YAAY,uBAAuB,CAACF,EAAG,KAAK,CAACE,YAAY,MAAM,CAACF,EAAG,OAAO,CAACE,YAAY,gBAAgB,CAACJ,EAAIU,GAAG,IAAIV,EAAIW,GAAGX,EAAIa,GAAG,YAAY,KAAKX,EAAG,MAAM,CAACE,YAAY,0CAA0CF,EAAG,MAAM,CAACE,YAAY,8BAA8B,CAACF,EAAG,MAAM,CAACE,YAAY,+BAA+B,CAACF,EAAG,QAAQ,CAACkB,WAAW,CAAC,CAACC,KAAK,QAAQC,QAAQ,UAAUC,MAAOvB,EAAI+B,gBAAiBN,WAAW,oBAAoBrB,YAAY,iDAAiDG,MAAM,CAAC,KAAO,OAAO,UAAY,KAAK,GAAK,cAAc,YAAc,iBAAiB,aAAe,OAAOoB,SAAS,CAAC,MAAS3B,EAAI+B,iBAAkBjB,GAAG,CAAC,QAAU,SAASC,GAAQ,OAAOf,EAAIgC,iBAAiB,MAAQ,SAASjB,GAAQ,OAAOf,EAAIgC,iBAAiB,QAAUhC,EAAIiC,gBAAgB,WAAajC,EAAIiC,gBAAgB,MAAQ,SAASlB,GAAWA,EAAOa,OAAOC,YAAiB7B,EAAI+B,gBAAgBhB,EAAOa,OAAOL,WAAUrB,EAAG,MAAM,CAACE,YAAY,sBAAsB,CAACF,EAAG,OAAO,CAACE,YAAY,iEAAiEF,EAAG,MAAM,CAACE,YAAY,qCAAqCG,MAAM,CAAC,GAAK,iBAAiB,CAACL,EAAG,MAAM,CAACE,YAAY,aAAaa,YAAY,CAAC,aAAa,sBAAsBjB,EAAImC,GAAInC,EAAIwkB,aAAa,SAASnjB,EAAKgB,GAAO,OAAOnC,EAAG,MAAM,CAACoC,IAAID,EAAMjC,YAAY,QAAQ,CAACF,EAAG,MAAM,CAACE,YAAY,cAAcG,MAAM,CAAC,KAAO,MAAM,GAAK,aAAe8B,IAAQ,CAACnC,EAAG,KAAK,CAACE,YAAY,QAAQ,CAACF,EAAG,IAAI,CAACG,MAAe,GAATgC,EAAa,GAAK,YAAY9B,MAAM,CAAC,cAAc,WAAW,cAAc,gBAAgB,KAAO,kBAAoB8B,EAAM,gBAAyB,GAATA,EAA0B,gBAAgB,iBAAmBA,IAAQ,CAACnC,EAAG,KAAK,CAACE,YAAY,uBAAuBG,MAAM,CAAC,cAAc,UAAUL,EAAG,OAAO,CAACE,YAAY,oBAAoB,CAACJ,EAAIU,GAAG,IAAIV,EAAIW,GAAGX,EAAIuC,kBAAkBlB,EAAKmB,eAAetC,EAAG,KAAK,CAACE,YAAY,+BAA+BG,MAAM,CAAC,cAAc,gBAAgBL,EAAG,MAAM,CAACG,MAAe,GAATgC,EAAa,+CAAiD,0CAA0C9B,MAAM,CAAC,GAAK,iBAAmB8B,EAAM,KAAO,WAAW,kBAAkB,aAAeA,EAAM,cAAc,kBAAkB,CAACnC,EAAG,MAAM,CAACE,YAAY,2CAA2Ca,YAAY,CAAC,aAAa,UAAU,CAACf,EAAG,MAAM,CAACE,YAAY,cAAc,CAACF,EAAG,KAAK,CAACE,YAAY,uEAAuEa,YAAY,CAAC,aAAa,QAAQ,SAAW,OAAO,QAAU,UAAU,CAACjB,EAAImC,GAAqC,GAAjCnC,EAAI6C,mBAAmBnB,OAAc1B,EAAIyC,cAAcJ,GAASrC,EAAI6C,mBAAmBR,IAAQ,SAASiB,GAAS,MAAO,CAACpD,EAAG,KAAK,CAACE,YAAY,2BAA2B,CAACF,EAAG,OAAO,CAACE,YAAY,2BAA2B,CAACF,EAAG,KAAK,CAACG,MAAMiD,EAAQI,OAAO,GAAGC,KAAlBL,cAA4C/C,MAAM,CAAC,cAAc,UAAUL,EAAG,OAAO,CAACE,YAAY,2BAA2Ba,YAAY,CAAC,MAAQ,OAAOV,MAAM,CAAC,sBAAsB+C,EAAQM,UAAU,MAAQN,EAAQM,YAAY,CAAC5D,EAAIU,GAAG,IAAIV,EAAIW,GAAGX,EAAIuC,kBAA0C,MAAvBe,EAAQO,aAA8C,IAAvBP,EAAQO,YAAqBP,EAAQO,YAAcP,EAAQM,YAAY,OAAO1D,EAAG,IAAI,CAACK,MAAM,CAAC,KAAO,iBAAiB,CAACL,EAAG,KAAK,CAACE,YAAY,gDAAgDG,MAAM,CAAC,cAAc,QAAQO,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOf,EAAI8D,UAAUR,EAASvC,EAAQsB,kBAAqB,cAAa,KAAMrC,EAAIkE,eAAgBhE,EAAG,MAAM,CAACE,YAAY,wFAAwF,CAACJ,EAAIU,GAAG,IAAIV,EAAIW,GAAGX,EAAIa,GAAG,qBAAqBb,EAAI+D,mBAAmB,UAEp9M+J,EAAkB,GCFP,GACf+D,MAAA,CACA7E,uBAAA,CACA8E,KAAAC,QAEApE,aAAA,CACAmE,KAAAxL,OAEAoH,oBAAA,CACAoE,KAAA8I,SAEAnN,kBAAA,CACAqE,KAAAxL,OAEAZ,WAAA,CACAoM,KAAAxL,OAEAsH,uBAAA,CACA6W,MAAA1S,SAGA/B,OACA,OACAwU,YAAA,GACA/hB,cAAA,GACAugB,cAAA,GACAE,aAAA,GACAwB,mBAAA,GACAC,qBAAA,GACAzJ,YAAA,EACA0J,YAAA,GACAC,cAAA,GACAC,gBAAA,GACAC,qBAAA,GACAC,oBAAA,GACAC,mBAAA,GACAC,oBAAA,GACAC,qBAAA,GACA1B,qBAAA,GACA2B,UAAA,GACAC,cAAA,GACAC,QAAA,YACA9kB,WAAA,EACA+kB,eAAA,EACAC,eAAA,GACAC,eAAA,GACArB,kBAAA,KACAsB,eAAA,GACAC,gBAAA,GACAC,yBAAA,GACAC,mBAAA,WACAC,kBAAA,KACAC,sBAAA,KACAC,kBAAA,GACAC,iBAAA,EACAC,YAAA,EACAC,oBAAA,GACAC,uBAAA,GACAC,aAAA,EACAhD,yBAAA,GACAiD,qBAAA,EACAhD,YAAA,KACAC,2BAAA,KACAgD,iBAAA,EACA1jB,mBAAA,GACAd,gBAAA,GACAmC,gBAAA,EACAsiB,iBAAA,GACA9Z,WAAA,CACA,CACAiG,WAAA,SACAvB,KAAA,CACA,CACAwB,OAAA,YACAC,MAAA,KAAAhS,GAAA,aACAQ,KAAA,YACAE,MAAA,GACAuR,YAAA,mBACAC,OAAA,CACArM,QAAA,GACAsM,aAAA,GAGAC,gBAAA,aAAAiG,IAAA,MAGA,CACAtG,OAAA,YACAC,MAAA,GACAxR,KAAA,mBACAE,MAAA,GACAuR,YAAA,GACAC,OAAA,CACArM,QAAA,GACAsM,aAAA,EACAG,SAAA,KAAAC,kBAEAH,gBAAA,OAKA6P,QAAA,CACA,CACAhR,KAAA,SACAzR,MAAA,wCACAsX,KAAA,yCAEA,CACA7F,KAAA,SACAzR,MAAA,0CACAsX,KAAA,yCACA8O,QAAA,KAAAC,uBAKAlT,UACA,IAAAC,EAAA,KACAA,EAAAE,cAAAF,EAAAzG,wBACA,GAAAyG,EAAA/F,qBAAA+F,EAAA9F,aAAAjM,OAAA,GACA+R,EAAAkT,qBAAAlT,EAAA9F,aAAA8F,EAAAhG,mBAEAgG,EAAAmT,mBAEA9K,QAAA,WACA7H,EAAA,wBAAAC,MAAA,CACA2S,SAAA,SACAC,UAAA,KAGA/S,MAAA,CACAmH,WAAAe,GACA,IAAAxI,EAAA,KACAwI,IACAxI,EAAAE,cAAAF,EAAAzG,wBACAyG,EAAAmT,kBACAnT,EAAAyH,YAAA,EACAjH,EAAA,cAAA8S,SAAA,YACA,GAAAtT,EAAA/F,qBAAA+F,EAAA9F,aAAAjM,OAAA,MAAA+R,EAAAwS,iBACAxS,EAAAkT,qBAAAlT,EAAA9F,aAAA8F,EAAAhG,sBAKAuG,QAAA,CACAlF,QACAmF,EAAA,wBAAAC,MAAA,QAAAD,EAAA,QAAAE,YAAA,cACAF,EAAA,mBAAAG,SACA,KAAA4S,MAAA,SAEA,KAAAta,WAAA,GAAA0E,KAAA,GAAA7P,MAAA,GAEA,KAAAykB,kBAAA,GACA,KAAAzB,mBAGA5Q,cAAA3G,GACA,IAAAyG,EAAA,KACA,QAAAjQ,GAAAwJ,EAAAkR,iBAAA1a,GAAAwJ,EAAAmR,eAAA,MAAAnR,EAAApM,WAAA,CACA,IAAA8gB,EAAA,cAAA1U,EAAAkR,4BAAAlR,EAAAmR,gCAAA1K,EAAA6R,UACA2B,OAAAC,cAAAxF,GAAA/M,KAAAC,IACAnB,EAAA+Q,YAAA5P,EAAA5E,KAAAmX,iBAAA,GACA1T,EAAA+Q,YAAA3P,QAAAhQ,IACA4O,EAAAhR,cAAAlD,KAAAsF,EAAAuiB,kBAEAhK,MAAAC,IACAC,QAAAC,IAAAF,OAIAuJ,kBACA,IAAAnT,EAAA,KACAwT,OAAAL,kBAAAjS,KAAA0S,IACA5T,EAAAuP,cAAAqE,EAAArX,KAAAmX,iBAAA,GACA1T,EAAAuP,cAAAnO,QAAAxT,IACAoS,EAAAyP,aAAA3jB,KAAA8B,EAAAimB,eAEAlK,MAAAC,IACAC,QAAAC,IAAAF,MAGAvZ,UAAAR,EAAAikB,EAAAllB,GACA,IAAAoR,EAAA,KAGA,GAFA,IAAAA,EAAA4P,0BAAA5P,EAAA2R,UAAA7lB,KAAA,CAAAqN,cAAAtJ,EAAAsJ,cAAAhJ,UAAAN,EAAAM,YAEA,IAAA6P,EAAAgS,eAAA,CACA,IAAA+B,EAAA/T,EAAAkQ,iBACA8D,EAAAhU,EAAAiU,yBAAAF,GACA,GAAAC,EAAA/lB,OAAA,GACA,IAAAimB,EAAAlU,EAAAkS,gBAAAlI,UAAAhP,KAAAmZ,iBAAAH,EAAA,GAAAG,gBACAD,GAAA,IACAlU,EAAA4R,cAAAhJ,OAAAsL,EAAA,GACAC,eAAAnU,EAAA5S,GAAA,MAAAyC,EAAAO,aAAA,IAAAP,EAAAO,YAAAP,EAAAO,YAAAP,EAAAM,WACAikB,WAAApU,EAAA5S,GAAA,MAAAyC,EAAAO,aAAA,IAAAP,EAAAO,YAAAP,EAAAO,YAAAP,EAAAM,WAAAlC,OAAAomB,SAAA,cAAAN,IAEA/T,EAAAmR,YAAAnR,EAAA4R,cAAAxe,IAAA4H,KAAAmZ,gBAAAhF,KAAA,IACAnP,EAAAyS,YAAA,QAGAzS,EAAA4R,cAAA9lB,KAAA,CACAqoB,eAAAnU,EAAA5S,GAAA,MAAAyC,EAAAO,aAAA,IAAAP,EAAAO,YAAAP,EAAAO,YAAAP,EAAAM,WACAikB,WAAApU,EAAA5S,GAAA,MAAAyC,EAAAO,aAAA,IAAAP,EAAAO,YAAAP,EAAAO,YAAAP,EAAAM,WAAAlC,OAAAomB,SAAA,cAAAN,IAEA/T,EAAAmR,YAAAnR,EAAA4R,cAAAxe,IAAA4H,KAAAmZ,gBAAAhF,KAAA,IACAnP,EAAAyS,YAAA,EAEAjS,EAAA,cAAA8S,SAAA,gBAEA,CACA,oBAAAtT,EAAA4R,cAAA,CACA,IAAA0C,EAAArN,OAAAjH,EAAA4R,cAAAxe,IAAA4H,KAAAmZ,iBACAnU,EAAA4R,cAAA0C,EAEA,0BAAAtU,EAAA2S,wBAAA,GAAA3S,EAAA4S,cAAA5S,EAAA6S,oBAIA,0BAAA7S,EAAA2S,wBAAA3S,EAAA4S,aAAA,IAAA5S,EAAA6S,oBACA0B,EAAAvU,EAAA4R,cAAA1c,QAAA8K,EAAA4R,cAAA1C,MAAA,KAAAlP,EAAA4S,eACA4B,EAAAxU,EAAA4R,cAAA1c,QAAA,UAGAqf,EAAAvU,EAAA4R,cAAA1c,QAAA,OACAsf,EAAAxU,EAAA4R,cAAA1c,QAAA,UATA,IAAAqf,EAAAvU,EAAA4R,cAAA1c,QAAA,OACAsf,EAAAxU,EAAA4R,cAAA1c,QAAA,KAYA,GAFA8K,EAAAgS,eAAAhS,EAAA4R,cAAA6C,UAAAF,EAAAC,GACAxU,EAAAoS,mBAAApS,EAAAgS,eACAhS,EAAAgS,eAAA0C,SAAA,MACA,IAAAC,EAAA3U,EAAAgS,eAAA9C,MAAA,KACAlP,EAAAgS,eAAA2C,EACA3U,EAAA6S,qBAAA,GAAA7S,EAAA8S,iBAKA9S,EAAAmR,YAAAnR,EAAA4R,cAAA1L,QAAAlG,EAAAgS,eAAA,GAAAniB,GAJAmQ,EAAAmR,YAAAnR,EAAA4R,cAAA1L,QAAAlG,EAAAgS,eAAA,GACAhS,EAAA5S,GAAA,MAAAyC,EAAAO,aAAA,IAAAP,EAAAO,YAAAP,EAAAO,YAAAP,EAAAM,YAMA6P,EAAA4R,cAAA,GACA5R,EAAA4R,cAAA9lB,KAAA,CACAqoB,eAAAnU,EAAAmR,YACAiD,WAAApU,EAAAmR,YAAAljB,OAAAomB,SAAA,cAAArU,EAAAmR,YAAAljB,SAEAuS,EAAA,cAAA8S,SAAA,iBAEAtT,EAAA6S,qBAAA,GAAA7S,EAAA8S,iBAKA9S,EAAAmR,YAAAnR,EAAA4R,cAAA1L,QAAAlG,EAAAgS,eAAAniB,GAJAmQ,EAAAmR,YAAAnR,EAAA4R,cAAA1L,QAAAlG,EAAAgS,eACAhS,EAAA5S,GAAA,MAAAyC,EAAAO,aAAA,IAAAP,EAAAO,YAAAP,EAAAO,YAAAP,EAAAM,YAMA6P,EAAA4R,cAAA,GACA5R,EAAA4R,cAAA9lB,KAAA,CACAqoB,eAAAnU,EAAAmR,YACAiD,WAAApU,EAAAmR,YAAAljB,OAAAomB,SAAA,cAAArU,EAAAmR,YAAAljB,SAEAuS,EAAA,cAAA8S,SAAA,YAIAtT,EAAA6S,qBAAA,GAAA7S,EAAA8S,iBAQA9S,EAAA0S,oBAAA7iB,EAPAA,EAAA+kB,kBACA5U,EAAA0S,oBAAA7iB,EAAAglB,UAAA,IAAAhlB,EAAAM,UAGA6P,EAAA0S,oBAAA7iB,EAAAM,UAIA6P,EAAA8U,gBACA9U,EAAA+U,gBAAAllB,EAAAqkB,EAAAF,EAAAD,IAEApE,mBAAA9f,EAAAikB,EAAAllB,GACA,IAAAoR,EAAA,KACA,SAAAA,EAAAgQ,2BAAAjgB,GAAAiQ,EAAAgQ,sBAAA,IAAAhQ,EAAAgQ,qBAAA,CACA,oBAAAhQ,EAAA4R,cAAA,CACA,IAAA+C,EAAA3U,EAAA4R,cAAA1C,MAAA,KACAlP,EAAA4R,cAAA+C,EAEA3U,EAAA4R,cAAA9lB,KAAA,CAAAqoB,eAAAtkB,EAAA4Z,MAAA2K,WAAAvkB,EAAA4Z,MAAAxb,OAAAomB,SAAA,mBACArU,EAAAmR,YAAAnR,EAAA4R,cAAAxe,IAAA4H,KAAAmZ,gBAAAhF,KAAA,IACAnP,EAAAkS,gBAAApmB,KAAA,CAAAqoB,eAAAtkB,EAAA4Z,MAAA2K,WAAAvkB,EAAA4Z,MAAAxb,OAAAomB,SAAA,mBACArU,EAAA6P,YAAAhgB,EAAA6f,KACA1P,EAAAgV,yBACA,QAAAnlB,EAAA6f,KACA1P,EAAAgS,eAAA,GACAhS,EAAAgS,eAAA,iBACAxR,EAAAsT,EAAA3lB,QAAA8mB,QAAA,mBAAAtU,SACAX,EAAA8U,gBACA9U,EAAA+U,uBAGA/U,EAAAwC,UAAA,wDAIAiO,qBACA,IAAAzQ,EAAA,KACA,oBAAAA,EAAA4R,cAAA,CACA,IAAA+C,EAAA3U,EAAA4R,cAAA1C,MAAA,KACAlP,EAAA4R,cAAA+C,EAEA,IAAAO,EAAA,IACAC,EAAAD,EAAAhG,MAAA,IACA6E,EAAA/T,EAAAkQ,iBACA8D,EAAAhU,EAAAiU,yBAAAF,GACA,GAAAC,EAAA/lB,OAAA,GACA,IAAAimB,EAAAlU,EAAAkS,gBAAAlI,UAAAhP,KAAAmZ,iBAAAH,EAAA,GAAAG,gBACAD,GAAA,IACAlU,EAAA4R,cAAAhJ,OAAAsL,EAAA,GACAC,eAAAgB,EAAAf,WAAAe,EAAAlnB,OAAAomB,SAAA,oBAAAN,IAEA/T,EAAAmR,YAAAnR,EAAA4R,cAAAxe,IAAA4H,KAAAmZ,gBAAAhF,KAAA,IACAnP,EAAAkS,gBAAAtJ,OAAAsL,EAAA,GACAC,eAAAgB,EAAAf,WAAAe,EAAAlnB,OAAAomB,SAAA,oBAAAN,UAIA/T,EAAA4R,cAAA9lB,KAAA,CAAAqoB,eAAAgB,EAAAf,WAAAe,EAAAlnB,OAAAomB,SAAA,oBAAAN,IACA/T,EAAAmR,YAAAnR,EAAA4R,cAAAxe,IAAA4H,KAAAmZ,gBAAAhF,KAAA,IACAnP,EAAAkS,gBAAApmB,KAAA,CAAAqoB,eAAAgB,EAAAf,WAAAe,EAAAlnB,OAAAomB,SAAA,oBAAAN,IAEA/T,EAAAgS,eAAA,GACAhS,EAAAoS,mBAAA,WACApS,EAAA8U,gBACA9U,EAAA+U,mBAEArE,sBACA,IAAA1Q,EAAA,KACA,oBAAAA,EAAA4R,cAAA,CACA,IAAA+C,EAAA3U,EAAA4R,cAAA1C,MAAA,KACAlP,EAAA4R,cAAA+C,EAEA,IAAAS,EAAA,IACAC,EAAAD,EAAAlG,MAAA,IACA6E,EAAA/T,EAAAkQ,iBACA8D,EAAAhU,EAAAiU,yBAAAF,GACA,GAAAC,EAAA/lB,OAAA,GACA,IAAAimB,EAAAlU,EAAAkS,gBAAAlI,UAAAhP,KAAAmZ,iBAAAH,EAAA,GAAAG,gBACAD,GAAA,IACAlU,EAAA4R,cAAAhJ,OAAAsL,EAAA,GACAC,eAAAkB,EAAAjB,WAAAiB,EAAApnB,OAAAomB,SAAA,qBAAAN,IAEA/T,EAAAmR,YAAAnR,EAAA4R,cAAAxe,IAAA4H,KAAAmZ,gBAAAhF,KAAA,IACAnP,EAAAkS,gBAAAtJ,OAAAsL,EAAA,GACAC,eAAAkB,EAAAjB,WAAAiB,EAAApnB,OAAAomB,SAAA,qBAAAN,UAIA/T,EAAA4R,cAAA9lB,KAAA,CAAAqoB,eAAAkB,EAAAjB,WAAAiB,EAAApnB,OAAAomB,SAAA,qBAAAN,IACA/T,EAAAmR,YAAAnR,EAAA4R,cAAAxe,IAAA4H,KAAAmZ,gBAAAhF,KAAA,IACAnP,EAAAkS,gBAAApmB,KAAA,CAAAqoB,eAAAkB,EAAAjB,WAAAiB,EAAApnB,OAAAomB,SAAA,qBAAAN,IAEA/T,EAAA8U,gBACA9U,EAAA+U,mBAEA1E,cACA,IAAArQ,EAAA,KACA,oBAAAA,EAAA4R,cAAA,CACA,IAAA+C,EAAA3U,EAAA4R,cAAA1C,MAAA,KACAlP,EAAA4R,cAAA+C,EAEA,IAAAW,EAAA,IACAC,EAAAD,EAAApG,MAAA,IACA6E,EAAA/T,EAAAkQ,iBACA8D,EAAAhU,EAAAiU,yBAAAF,GACA,GAAAC,EAAA/lB,OAAA,GACA,IAAAimB,EAAAlU,EAAAkS,gBAAAlI,UAAAhP,KAAAmZ,iBAAAH,EAAA,GAAAG,gBACAD,GAAA,IACAlU,EAAA4R,cAAAhJ,OAAAsL,EAAA,GACAC,eAAAoB,EAAAnB,WAAAmB,EAAAtnB,OAAAomB,SAAA,YAAAN,IAEA/T,EAAAmR,YAAAnR,EAAA4R,cAAAxe,IAAA4H,KAAAmZ,gBAAAhF,KAAA,IACAnP,EAAAkS,gBAAAtJ,OAAAsL,EAAA,GACAC,eAAAoB,EAAAnB,WAAAmB,EAAAtnB,OAAAomB,SAAA,YAAAN,UAIA/T,EAAA4R,cAAA9lB,KAAA,CAAAqoB,eAAAoB,EAAAnB,WAAAmB,EAAAtnB,OAAAomB,SAAA,YAAAN,IACA/T,EAAAmR,YAAAnR,EAAA4R,cAAAxe,IAAA4H,KAAAmZ,gBAAAhF,KAAA,IACAnP,EAAAkS,gBAAApmB,KAAA,CAAAqoB,eAAAoB,EAAAnB,WAAAmB,EAAAtnB,OAAAomB,SAAA,YAAAN,IAEA/T,EAAAoS,mBAAA,WACApS,EAAA8U,gBACA9U,EAAA+U,mBAEAzE,kBACA,IAAAtQ,EAAA,KACA,oBAAAA,EAAA4R,cAAA,CACA,IAAA+C,EAAA3U,EAAA4R,cAAA1C,MAAA,KACAlP,EAAA4R,cAAA+C,EAEA,IAAAa,EAAA,IACAC,EAAAD,EAAAtG,MAAA,IACA6E,EAAA/T,EAAAkQ,iBACA8D,EAAAhU,EAAAiU,yBAAAF,GACA,GAAAC,EAAA/lB,OAAA,GACA,IAAAimB,EAAAlU,EAAAkS,gBAAAlI,UAAAhP,KAAAmZ,iBAAAH,EAAA,GAAAG,gBACAD,GAAA,IACAlU,EAAA4R,cAAAhJ,OAAAsL,EAAA,GACAC,eAAAsB,EAAArB,WAAAqB,EAAAxnB,OAAAomB,SAAA,gBAAAN,IAEA/T,EAAAmR,YAAAnR,EAAA4R,cAAAxe,IAAA4H,KAAAmZ,gBAAAhF,KAAA,IACAnP,EAAAkS,gBAAAtJ,OAAAsL,EAAA,GACAC,eAAAsB,EAAArB,WAAAqB,EAAAxnB,OAAAomB,SAAA,gBAAAN,UAIA/T,EAAA4R,cAAA9lB,KAAA,CAAAqoB,eAAAsB,EAAArB,WAAAqB,EAAAxnB,OAAAomB,SAAA,gBAAAN,IACA/T,EAAAmR,YAAAnR,EAAA4R,cAAAxe,IAAA4H,KAAAmZ,gBAAAhF,KAAA,IACAnP,EAAAkS,gBAAApmB,KAAA,CAAAqoB,eAAAsB,EAAArB,WAAAqB,EAAAxnB,OAAAomB,SAAA,gBAAAN,IAEA/T,EAAAoS,mBAAA,WACApS,EAAA8U,gBACA9U,EAAA+U,mBAEAxE,kBACA,IAAAvQ,EAAA,KACA,oBAAAA,EAAA4R,cAAA,CACA,IAAA+C,EAAA3U,EAAA4R,cAAA1C,MAAA,KACAlP,EAAA4R,cAAA+C,EAEA,IAAAe,EAAA,IACAC,EAAAD,EAAAxG,MAAA,IACA6E,EAAA/T,EAAAkQ,iBACA8D,EAAAhU,EAAAiU,yBAAAF,GACA,GAAAC,EAAA/lB,OAAA,GACA,IAAAimB,EAAAlU,EAAAkS,gBAAAlI,UAAAhP,KAAAmZ,iBAAAH,EAAA,GAAAG,gBACAD,GAAA,IACAlU,EAAA4R,cAAAhJ,OAAAsL,EAAA,GACAC,eAAAwB,EAAAvB,WAAAuB,EAAA1nB,OAAAomB,SAAA,gBAAAN,IAEA/T,EAAAmR,YAAAnR,EAAA4R,cAAAxe,IAAA4H,KAAAmZ,gBAAAhF,KAAA,IACAnP,EAAAkS,gBAAAtJ,OAAAsL,EAAA,GACAC,eAAAwB,EAAAvB,WAAAuB,EAAA1nB,OAAAomB,SAAA,gBAAAN,UAIA/T,EAAA4R,cAAA9lB,KAAA,CAAAqoB,eAAAwB,EAAAvB,WAAAuB,EAAA1nB,OAAAomB,SAAA,gBAAAN,IACA/T,EAAAmR,YAAAnR,EAAA4R,cAAAxe,IAAA4H,KAAAmZ,gBAAAhF,KAAA,IACAnP,EAAAkS,gBAAApmB,KAAA,CAAAqoB,eAAAwB,EAAAvB,WAAAuB,EAAA1nB,OAAAomB,SAAA,gBAAAN,IAEA/T,EAAAoS,mBAAA,WACApS,EAAA8U,gBACA9U,EAAA+U,mBAEAvE,gBACA,IAAAxQ,EAAA,KACA,oBAAAA,EAAA4R,cAAA,CACA,IAAA+C,EAAA3U,EAAA4R,cAAA1C,MAAA,KACAlP,EAAA4R,cAAA+C,EAEA,IAAAiB,EAAA,IACAC,EAAAD,EAAA1G,MAAA,IACA6E,EAAA/T,EAAAkQ,iBACA8D,EAAAhU,EAAAiU,yBAAAF,GACA,GAAAC,EAAA/lB,OAAA,GACA,IAAAimB,EAAAlU,EAAAkS,gBAAAlI,UAAAhP,KAAAmZ,iBAAAH,EAAA,GAAAG,gBACAD,GAAA,IACAlU,EAAA4R,cAAAhJ,OAAAsL,EAAA,GACAC,eAAA0B,EAAAzB,WAAAyB,EAAA5nB,OAAAomB,SAAA,cAAAN,IAEA/T,EAAAmR,YAAAnR,EAAA4R,cAAAxe,IAAA4H,KAAAmZ,gBAAAhF,KAAA,IACAnP,EAAAkS,gBAAAtJ,OAAAsL,EAAA,GACAC,eAAA0B,EAAAzB,WAAAyB,EAAA5nB,OAAAomB,SAAA,cAAAN,UAIA/T,EAAA4R,cAAA9lB,KAAA,CAAAqoB,eAAA0B,EAAAzB,WAAAyB,EAAA5nB,OAAAomB,SAAA,cAAAN,IACA/T,EAAAmR,YAAAnR,EAAA4R,cAAAxe,IAAA4H,KAAAmZ,gBAAAhF,KAAA,IACAnP,EAAAkS,gBAAApmB,KAAA,CAAAqoB,eAAA0B,EAAAzB,WAAAyB,EAAA5nB,OAAAomB,SAAA,cAAAN,IAEA/T,EAAAoS,mBAAA,WACApS,EAAA8U,gBACA9U,EAAA+U,mBAEA3E,WACA,IAAApQ,EAAA,KACA,oBAAAA,EAAA4R,cAAA,CACA,IAAA+C,EAAA3U,EAAA4R,cAAA1C,MAAA,KACAlP,EAAA4R,cAAA+C,EAEA,IAAAmB,EAAA,IACAC,EAAAD,EAAA5G,MAAA,IACA8G,EAAAF,EAAAG,WAAA,aACAlC,EAAA/T,EAAAkQ,iBACA8D,EAAAhU,EAAAiU,yBAAAF,GACA,GAAAC,EAAA/lB,OAAA,GACA,IAAAimB,EAAAlU,EAAAkS,gBAAAlI,UAAAhP,KAAAmZ,iBAAAH,EAAA,GAAAG,gBACAD,GAAA,IACAlU,EAAA4R,cAAAhJ,OAAAsL,EAAA,GACAC,eAAA4B,EAAA3B,WAAA2B,EAAA9nB,OAAAomB,SAAA,aAAAN,IAEA/T,EAAAmR,YAAAnR,EAAA4R,cAAAxe,IAAA4H,KAAAmZ,gBAAAhF,KAAA,IACAnP,EAAAkS,gBAAAtJ,OAAAsL,EAAA,GACAC,eAAA6B,EAAA5B,WAAA2B,EAAA9nB,OAAAomB,SAAA,aAAAN,IAEA/T,EAAAmS,yBAAAnS,EAAAkS,gBAAA9e,IAAA4H,KAAAmZ,gBAAAhF,KAAA,UAGAnP,EAAA4R,cAAA9lB,KAAA,CAAAqoB,eAAA4B,EAAA3B,WAAA2B,EAAA9nB,OAAAomB,SAAA,aAAAN,IACA/T,EAAAmR,YAAAnR,EAAA4R,cAAAxe,IAAA4H,KAAAmZ,gBAAAhF,KAAA,IACAnP,EAAAkS,gBAAApmB,KAAA,CAAAqoB,eAAA6B,EAAA5B,WAAA2B,EAAA9nB,OAAAomB,SAAA,aAAAN,IACA/T,EAAAmS,yBAAAnS,EAAAkS,gBAAA9e,IAAA4H,KAAAmZ,gBAAAhF,KAAA,IAEAnP,EAAAoS,mBAAA,WACApS,EAAA8U,iBAEAhE,kBACA,IAAA9Q,EAAA,KACAA,EAAAmR,YAAA,GACAnR,EAAAoR,cAAA,GACApR,EAAAqR,gBAAA,GACArR,EAAAsR,qBAAA,GACAtR,EAAAuR,oBAAA,GACAvR,EAAAwR,mBAAA,GACAxR,EAAAyR,oBAAA,GACAzR,EAAA0R,qBAAA,GACA1R,EAAAhR,cAAA4Z,OAAA,GACA5I,EAAAyP,aAAA7G,OAAA,GACA5I,EAAAgQ,qBAAA,GACAhQ,EAAAmS,yBAAA,GACAnS,EAAAkS,gBAAA,GACAlS,EAAA2R,UAAA,GACA3R,EAAA4R,cAAA,GACA5R,EAAAyH,YAAA,EACAzH,EAAAwS,iBAAA,EACAxS,EAAA2Q,kBAAA,KACA3Q,EAAAoS,mBAAA,WACApS,EAAA2S,uBAAA,GACA3S,EAAA4S,aAAA,EACA5S,EAAA4P,yBAAA,GACA5P,EAAA6P,YAAA,KACA7P,EAAA8P,2BAAA,KACA9P,EAAA6S,qBAAA,EACA7S,EAAA8S,iBAAA,EACA9S,EAAAgS,eAAA,IAEA+C,gBAAAmB,EAAAhC,EAAAF,EAAAD,GACA,IAAA/T,EAAA,KACA,GAAAA,EAAAoS,oBAAApS,EAAAgS,eAAA,CACA,oBAAAhS,EAAAkS,gBAAA,CACA,IAAAiE,EAAAlP,OAAAjH,EAAAkS,gBAAA9e,IAAA4H,KAAAmZ,iBACAnU,EAAAkS,gBAAAiE,EAEA,0BAAAnW,EAAA2S,wBAAA,GAAA3S,EAAA4S,cAAA5S,EAAA6S,oBAKA,0BAAA7S,EAAA2S,wBAAA3S,EAAA4S,aAAA,IAAA5S,EAAA6S,oBAAA,CACA0B,EAAAvU,EAAAkS,gBAAAhd,QAAA8K,EAAAkS,gBAAAhD,MAAA,KAAAlP,EAAA4S,eACA4B,EAAAxU,EAAAkS,gBAAAhd,QAAA,KACA8K,EAAA4S,oBAGA2B,EAAAvU,EAAAkS,gBAAAhd,QAAA,OACAsf,EAAAxU,EAAAkS,gBAAAhd,QAAA,SAZA,CACA,IAAAqf,EAAAvU,EAAAkS,gBAAAhd,QAAA,OACAsf,EAAAxU,EAAAkS,gBAAAhd,QAAA,KACA8K,EAAA4S,aAAA5S,EAAA4S,aAAA,IAYA,GADA5S,EAAAgS,eAAAhS,EAAAkS,gBAAAuC,UAAAF,EAAAC,GACAxU,EAAAgS,eAAA0C,SAAA,MACA,IAAA0B,EAAApW,EAAAgS,eAAA9C,MAAA,KACAlP,EAAAgS,eAAAoE,EACApW,EAAAmS,yBAAAnS,EAAAkS,gBAAAhM,QAAAlG,EAAAgS,eAAA,GAAAhS,EAAA0S,qBACA1S,EAAAkS,gBAAA,GAEAlS,EAAAkS,gBAAApmB,KAAA,CACAqoB,eAAAnU,EAAAmS,yBACAiC,WAAApU,EAAAmS,yBAAAlkB,OACAomB,SAAA,cAAArU,EAAAmS,yBAAAlkB,OACAkL,cAAA+c,EAAA/c,gBAEA6G,EAAA2S,uBAAA,sBACAnS,EAAA,cAAA8S,SAAA,iBAEAtT,EAAAmS,yBAAAnS,EAAAkS,gBAAAhM,QAAAlG,EAAAgS,eAAAhS,EAAA0S,qBAEA1S,EAAAkS,gBAAA,GACAlS,EAAAkS,gBAAApmB,KAAA,CACAqoB,eAAAnU,EAAAmS,yBACAiC,WAAApU,EAAAmS,yBAAAlkB,OACAomB,SAAA,cAAArU,EAAAmS,yBAAAlkB,OACAkL,cAAA+c,EAAA/c,gBAEA6G,EAAAgS,eAAA,GACAxR,EAAA,cAAA8S,SAAA,YAEAtT,EAAA4P,yBAAA,GACA5P,EAAA6S,qBAAA,EACA7S,EAAA8S,iBAAA,OAEA,QAAA/iB,GAAAmmB,EACA,GAAAlW,EAAAyS,WAAA,CACAyB,EAAAlU,EAAAkS,gBAAAlI,UAAAhP,KAAAmZ,iBAAAH,EAAA,GAAAG,gBACAD,GAAA,IACAlU,EAAAkS,gBAAAtJ,OAAAsL,EAAA,GACAC,eAAAnU,EAAA0S,oBACA0B,WAAApU,EAAA5S,GAAA,MAAA8oB,EAAA9lB,aAAA,IAAA8lB,EAAA9lB,YAAA8lB,EAAA9lB,YAAA8lB,EAAA/lB,WAAAlC,OACAomB,SAAA,cAAAN,EACA5a,cAAA+c,EAAA/c,gBAGA6G,EAAAmS,yBAAAnS,EAAAkS,gBAAA9e,IAAA4H,KAAAmZ,gBAAAhF,KAAA,UAIAnP,EAAAkS,gBAAApmB,KAAA,CACAqoB,eAAAnU,EAAA0S,oBACA0B,WAAApU,EAAA5S,GAAA,MAAA8oB,EAAA9lB,aAAA,IAAA8lB,EAAA9lB,YAAA8lB,EAAA9lB,YAAA8lB,EAAA/lB,WAAAlC,OACAomB,SAAA,cAAAN,EACA5a,cAAA+c,EAAA/c,gBAEA6G,EAAAmS,yBAAAnS,EAAAkS,gBAAA9e,IAAA4H,KAAAmZ,gBAAAhF,KAAA,SAIAnP,EAAAmS,yBAAAnS,EAAAkS,gBAAA9e,IAAA4H,KAAAmZ,gBAAAhF,KAAA,KAGA2F,gBACA,IAAA9U,EAAA,KACA,oBAAAA,EAAAgQ,qBAAA,CACA,IAAAqG,EAAApP,OAAAjH,EAAAgQ,sBACAhQ,EAAAgQ,qBAAAqG,OAGArW,EAAAgQ,qBAAAhQ,EAAAmR,aAGAlB,gBAAA6D,GACA,IAAA9T,EAAA,KACA,MAAAnR,EAAAilB,EAAAjlB,IACA,aAAAilB,EAAAwC,KAAAtW,EAAAoQ,gBACA,GAAA0D,EAAAyC,SAAA,GAAAzC,EAAAyC,SAAA,IAAAzC,EAAAyC,QAAA,IAAAzC,EAAAyC,SAAA,IAAAzC,EAAAyC,SAAA,KAAAzC,EAAAyC,SAAA,IACAzC,EAAAthB,sBAEA,iBAAA3D,GAAA,IAAAilB,EAAAyC,SAAA,KAAAzC,EAAAyC,QAAA,CACA,IAAAC,EAAAxW,EAAAkQ,iBAEA,IAAAuG,EADAD,GAAA,EAEAxW,EAAA4R,cAAAxQ,QAAAhQ,IACA,GAAAA,EAAAgjB,WAAAoC,EACAC,EAAAD,EAAAplB,EAAAgjB,WACAoC,EAAAC,OAGA,MAAAD,EAAA,CACA,IAAAE,EAAA1W,EAAA4R,cAAA5H,UAAAhP,KAAAqZ,WAAAjjB,EAAAijB,UACAsC,EAAA3W,EAAA2R,UAAA3H,UAAA4M,KAAAzd,gBAAA/H,EAAA+H,eACAud,GAAA,IACA1W,EAAA4R,cAAAhJ,OAAA8N,EAAA,GACA1W,EAAAkS,gBAAAtJ,OAAA8N,EAAA,GACAC,GAAA,GACA3W,EAAA2R,UAAA/I,OAAA+N,EAAA,GAEA3W,EAAA4R,cAAA3jB,OAAA,EACA+R,EAAAmR,YAAAnR,EAAA4R,cAAAxe,IAAA4H,KAAAmZ,gBAAAhF,KAAA,KAEAnP,EAAAmR,YAAAnR,EAAA4R,cAAAzC,KAAA,IACAnP,EAAAgS,eAAA,IAEAwE,EAAA,EACAxW,EAAA6P,YAAA,SAKA7P,EAAA8U,gBACA9U,EAAA+U,sBAEA,CACA,IAAAhB,EAAA/T,EAAAkQ,iBACA8D,EAAAhU,EAAAiU,yBAAAF,GACA,GAAAC,EAAA/lB,OAAA,GACA,IAAAimB,EAAAlU,EAAAkS,gBAAAlI,UAAAhP,KAAAmZ,iBAAAH,EAAA,GAAAG,gBACAD,GAAA,IACAlU,EAAA4R,cAAAhJ,OAAAsL,EAAA,GACAC,eAAAtlB,EAAAulB,WAAAvlB,EAAAZ,OAAAomB,SAAA,aAAAN,IAEA/T,EAAAmR,YAAAnR,EAAA4R,cAAAxe,IAAA4H,KAAAmZ,gBAAAhF,KAAA,IACAnP,EAAAkS,gBAAAtJ,OAAAsL,EAAA,GACAC,eAAAtlB,EAAAulB,WAAAvlB,EAAAZ,OAAAomB,SAAA,aAAAN,UAIA/T,EAAA4R,cAAA9lB,KAAA,CAAAqoB,eAAAtlB,EAAAulB,WAAAvlB,EAAAZ,OAAAomB,SAAA,aAAAN,IACA/T,EAAAmR,YAAAnR,EAAA4R,cAAAxe,IAAA4H,KAAAmZ,gBAAAhF,KAAA,IACAnP,EAAAkS,gBAAApmB,KAAA,CAAAqoB,eAAAtlB,EAAAulB,WAAAvlB,EAAAZ,OAAAomB,SAAA,aAAAN,IAEA/T,EAAA8U,gBACA9U,EAAA+U,kBAEA/U,EAAAqP,QAAA,GAAAziB,MAAA,wCACAknB,EAAAthB,kBAEA2d,mBAAA0G,GACA,IAAA7W,EAAA,KACAA,EAAAqS,kBAAAwE,EAAA1oB,OAAA2oB,eACA9W,EAAAsS,sBAAAtS,EAAAkS,gBAAAjkB,QAEAilB,qBAAA3W,EAAAwa,GACA,IAAA/W,EAAA,KAEAzD,EAAA6E,QAAA4V,IACAhX,EAAAuS,kBAAAyE,EAAAC,aAEAjX,EAAA/G,WAAA,GAAA0E,KAAA,GAAA7P,MAAAkpB,EAAAE,eACAlX,EAAA4R,cAAA9lB,KAAA,CAAAqoB,eAAA6C,EAAAG,kBAAA/C,WAAA4C,EAAAG,kBAAAlpB,OAAAomB,SAAA,cACArU,EAAAmR,YAAAnR,EAAA4R,cAAAxe,IAAA4H,KAAAmZ,gBAAAhF,KAAA,IACAnP,EAAAkS,gBAAApmB,KAAA,CAAAqoB,eAAA6C,EAAAI,WAAAhD,WAAA4C,EAAAI,WAAAnpB,OAAAomB,SAAA,cACArU,EAAAmS,yBAAAnS,EAAAkS,gBAAA9e,IAAA4H,KAAAmZ,gBAAAhF,KAAA,IACAnP,EAAA8U,kBAEAiC,EAAA3V,QAAAhQ,IACA4O,EAAA2R,UAAA7lB,KAAA,CAAAqN,cAAA/H,EAAA+H,cAAAhJ,UAAAiB,EAAAjB,UAAAknB,YAAAjmB,EAAAimB,iBAGAxG,mBACA,IAAA7Q,EAAA,KACA,OAAAA,EAAAgQ,qBACAhQ,EAAAwC,UAAAxC,EAAA5S,GAAA,gCAAA4S,EAAA5S,GAAA,cACA,CACA,IAAA8d,EAAA,CACA,MACA,WAAAoM,mBAAAtX,EAAAmS,0BACA,WAAAnS,EAAAzG,uBAAAkR,WACA,cAAAzK,EAAAzG,uBAAAmR,cACA,mBAAA1K,EAAA6P,YACA,OAAA7P,EAAA2R,YAGA4F,EAAA,YAAAlO,KAAAC,UAAA4B,GACAlL,EAAAjT,WAAA,EACAymB,OAAAgE,uBAAAD,GAAArW,KAAA0S,IACA,QAAAA,EAAArX,KAAAkb,QACAzX,EAAA2Q,kBAAA,EACA3Q,EAAAjT,WAAA,EACAiT,EAAAqP,QAAA,GAAAziB,MAAA,+BACAoT,EAAA8R,eAAA,IAGA9R,EAAA2Q,kBAAA,EACA3Q,EAAAjT,WAAA,KAEA4c,MAAAC,IACAC,QAAAC,IAAAF,OAIA0F,mBACA,IAAAtP,EAAA,KACA0X,GAAA,EACA,IAAA1X,EAAA/F,oBAAA,CACA,IAAA0d,EAAA3X,EAAA/N,WAAA+X,UAAAhP,KAAA7K,YAAA6P,EAAA/G,WAAA,GAAA0E,KAAA,GAAA7P,QACA,GAAA6pB,GACAD,GAAA,EACA1X,EAAAwC,UAAAxC,EAAA5S,GAAA,gCAAA4S,EAAA5S,GAAA,WACAsqB,GAAA,EAEAA,GACA1X,EAAA8R,eAAA,IAAA9R,EAAA/G,WAAA,GAAA0E,KAAA,GAAA7P,QACA,KAAAylB,MAAA,0BACA0D,aAAAjX,EAAAuS,kBACAqF,WAAA5X,EAAA/G,WAAA,GAAA0E,KAAA,GAAA7P,MACA+pB,mBAAA7X,EAAAmS,yBACA2F,qBAAA9X,EAAA2R,UACAwF,kBAAAnX,EAAAgQ,qBACAH,YAAA7P,EAAA6P,YACAkI,OAAA/X,EAAA/F,oBACA+d,WAAAhY,EAAA7F,yBAEA6F,EAAA8R,eAAA,IAIAmB,qBACA,IAAAjT,EAAA,KACAA,EAAA3E,SAEAuV,SACApQ,EAAA,eAAAyX,MAAA,UAEA/H,eAAAgI,GACA,IACAC,EAAA7J,SAAA8J,eAAA,WACAD,EAAAE,QACA,IAAAtE,EAAAzF,SAAA8J,eAAA,WAAAtB,eAEA,OADA/C,GAAA,EACAA,GAEAE,yBAAAF,GACA,IAEA0C,EAFAzW,EAAA,KACAsY,EAAA,GAWA,OATAtY,EAAAkS,gBAAA9Q,QAAAhQ,IACAA,EAAAgjB,WAAAL,GACA0C,EAAA1C,EAAA3iB,EAAAgjB,WACAL,EAAA0C,IAEArlB,EAAAgjB,WAAAL,GAAA,GAAAA,IACAuE,EAAAxsB,KAAAsF,KAGAknB,GAEAvI,yBACA,IAAA/P,EAAA,KACAA,EAAA6S,qBAAA,EACA,YAAA7S,EAAA6P,aAAA,uBAAA7P,EAAA2S,yBACA3S,EAAA6S,qBAAA,EACA7S,EAAA8S,iBAAA9S,EAAA8S,iBAAA,GAEA9S,EAAA3P,UAAA2P,EAAA4P,2BAEAoF,yBACA,IAAAhV,EAAA,KACA,aAAAA,EAAA6P,YACA7P,EAAA8P,2BAAA,2BAEA,YAAA9P,EAAA6P,YACA7P,EAAA8P,2BAAA,8CAEA,aAAA9P,EAAA6P,aAGA,aAAA7P,EAAA6P,YAFA7P,EAAA8P,2BAAA,2BAKA,MAAA9P,EAAA6P,cACA7P,EAAA8P,2BAAA,8CAGAthB,kBACA,IAAAwR,EAAA,KACAA,EAAA+S,iBAAAtE,OAAA8J,eAAAhS,YAEAhY,gBACA,IAAAyR,EAAA,KAEAwY,EAAAxY,EAAA1R,gBACA,MAAAkqB,GAAA,IAAAA,EACAhY,EAAA,oBAAA8S,SAAA,QAGA9S,EAAA,oBAAAE,YAAA,QAEA,IAAAV,EAAA+S,mBACAyF,IAAAvC,WAAAjW,EAAA+S,iBAAA,IACA/S,EAAA+S,iBAAA,IAEA,IAAA0F,EAAA,GACAC,EAAA,GACA1Y,EAAAhR,cAAAoS,QAAA,CAAAhQ,EAAAxC,KACAoR,EAAAhR,cAAAJ,GAAAwS,QAAAuX,IACAD,EAAA5sB,KAAA6sB,GACAF,EAAAC,EAAA3lB,OAAA6lB,IACA,IAAAC,EAAA,MAAAD,EAAAxoB,YAAAwoB,EAAAxoB,YAAAwoB,EAAAzoB,UACA,OAAA0oB,EAAA3S,QAAA,UAAAhE,cAAAwS,SAAA8D,EAAAtS,QAAA,UAAAhE,mBAGAlC,EAAA5Q,mBAAAR,GAAA6pB,EACAC,EAAA,KAEA,IAAAtT,EAAA,EACA,QAAA0T,KAAA9Y,EAAA5Q,mBACA4Q,EAAA5Q,mBAAA0pB,GAAA7qB,OAAA,GACAmX,IAMA,OAFApF,EAAAvP,iBADA2U,EAAA,GAGApF,EAAA5Q,sBC72B8X,ICO1X,EAAY,eACd,EACA,EACA,GACA,EACA,KACA,KACA,MAIa,I,6BCXA,GACf8O,WAAA,CACA6a,cAAAC,gBAAAC,gBAEA1c,OACA,OACAxP,WAAA,EACAiC,cAAA,GACAE,uBAAA,GACAC,wBAAA,EACAF,yBAAA,EACA4iB,QAAA,YACAqH,cAAA,KACAC,WAAA,KACAtsB,QAAA,wBACAusB,kBAAA,uBACA1oB,QAAA,cACA2oB,UAAA,GACAroB,UAAA,GACAiB,WAAA,GACA+C,WAAA,GACAskB,OAAA,KACAnsB,WAAA,KACAyD,SAAA,uBACAlB,mBAAA,KACA6J,uBAAA,KACAggB,aAAA,KACA7rB,UAAA,cACAV,UAAA,OACAe,eAAA,GACAyrB,kBAAA,EACAC,UAAA,EACAC,YAAA,GACAljB,YAAA,GACAmjB,YAAA,KACAC,UAAA,EACA/kB,UAAA,sCACAF,SAAA,kBACAklB,qBAAA,GACAvgB,YAAA,GACApI,UAAA,SACAH,iBAAA,GACAc,kBAAA,GACAvD,gBAAA,GAEAwrB,cAAA,GACAnrB,kBAAA,GACAorB,MAAA,GACAlP,WAAA,EACAmP,SAAA,GACAC,YAAA,GACAC,iBAAA,GACA/iB,gBAAA,EACAI,kBAAA,EACAM,gBAAA,EACAE,gBAAA,EACAW,eAAA,EACAE,gBAAA,EACAI,kBAAA,EACAtB,kBAAA,EACAL,gBAAA,EACA8iB,kBAAA,KACA7qB,MAAA,EACAkE,cAAA,GACAjB,iBAAA,KACAI,gBAAA,GACAiB,mBAAA,KACAC,kBAAA,KACAU,iBAAA,KACA6lB,YAAA,EACA5kB,cAAA,GACAC,gBAAA,GACAC,iBAAA,GACAI,mBAAA,GACAC,oBAAA,GACAG,qBAAA,GACAmkB,cAAA,GACAjjB,iBAAA,GACAE,kBAAA,GACAE,mBAAA,GACAG,oBAAA,GACAG,iBAAA,GACAE,kBAAA,GACAI,eAAA,GACAO,iBAAA,GACAE,kBAAA,GACAyhB,cAAA,GACAC,kBAAA,GACAC,wBAAA,KACArlB,WAAA,KACAslB,YAAA,KACAC,KAAA,OACAC,eAAA,GACA1nB,QAAA,GACA2nB,YAAA,EACAC,cAAA,EACAC,+BAAA,GACAC,4BAAA,GACArkB,gBAAA,GACAmD,UAAA,GACAD,aAAA,KACAD,UAAA,KACAN,mBAAA,EACAK,cAAA,EACAshB,SAAA,GACAC,UAAA,GACAC,aAAA,GACAC,mBAAA,GACAC,cAAA,GACAC,oBAAA,GACAC,SAAA,GACAC,SAAA,GACAnrB,YAAA,GACA2J,kBAAA,EACAyhB,sBAAA,EACAC,gBAAA,GACAC,sBAAA,GACAliB,eAAA,GACAS,qBAAA,EACAzI,qBAAA,EACApC,mBAAA,GACA0K,gBAAA,KACAE,kBAAA,GACAE,aAAA,GACAyhB,SAAA,EACAC,mBAAA,GACAC,cAAA,GACApiB,cAAA,GACAqiB,0BAAA,EACArrB,gBAAA,EACAsrB,gCAAA,EACAC,oBAAA,GACAjjB,oBAAA,GACAD,cAAA,EACAX,iBAAA,EACA8jB,mBAAA,GACAC,aAAA,EACAC,oBAAA,EACAC,iBAAA,GACA1qB,sBAAA,EACA2qB,mBAAA,EACAliB,uBAAA,GACAmiB,gBAAA,GACAjkB,cAAA,GACA0a,iBAAA,GACA9Z,WAAA,CACA,CACAiG,WAAA,SACAvB,KAAA,CACA,CACAwB,OAAA,mBACAC,MAAA,GACAxR,KAAA,SACAE,MAAA,GACA4sB,KAAA,MACArb,YAAA,SACAC,OAAA,CACArM,QAAA,GACAsM,aAAA,GAEAC,gBAAA,SAOAO,QAAA,iBACA,IAAAC,EAAA,KACAQ,EAAA,SAAA8S,SAAA,aACAvjB,GAAA,KAAAwsB,OAAAtO,OAAAxD,YACAzK,EAAAzG,uBAAA,KAAAgjB,OAAAtO,OACAjO,EAAAwc,mBACAxc,EAAAyc,4BACAzc,EAAA0c,QAAA1c,EAAAzG,wBACA,MAAAyG,EAAAzG,uBAAAiR,eAAAza,GAAAiQ,EAAAzG,uBAAAiR,iBACAxK,EAAA2c,6BACA3c,EAAAmc,mBACAlS,YAAA,WACAjK,EAAA3G,mBAAA,IACA,KACA2G,EAAA3G,mBAAA,GAEA2G,EAAApL,oBAEAgoB,SAAA,CACAzrB,cACA,IAAA6O,EAAA,KACA,OAAAA,EAAA/N,WAAAc,OAAA3B,IACA,IAAAyrB,EAAA,MAAAzrB,EAAAhB,YAAAgB,EAAAhB,YAAAgB,EAAAjB,UACA,OAAA0sB,EAAA3W,QAAA,UAAAhE,cAAAwS,SAAA1U,EAAAjP,iBAAAmV,QAAA,UAAAhE,kBAGApQ,oBACA,IAAAkO,EAAA,KACA8c,EAAA,GACApE,EAAA,GACAqE,EAAA,KAgBA,OAfA/c,EAAAhR,cAAAoS,QAAA,CAAAhQ,EAAAxC,KACAoR,EAAAhR,cAAAJ,GAAAwS,QAAAuX,IACAD,EAAA5sB,KAAA6sB,GACAmE,EAAApE,EAAA3lB,OAAA6lB,IACA,IAAAoE,EAAA,MAAApE,EAAAxoB,YAAAwoB,EAAAxoB,YAAAwoB,EAAAzoB,UACA,OAAA6sB,EAAA9W,QAAA,UAAAhE,cAAAwS,SAAA1U,EAAAnO,kBAAAqU,QAAA,UAAAhE,iBAEA4a,EAAA1b,QAAA6b,IACAF,EAAA/c,EAAAhR,cAAAJ,GAAA8S,KAAA1G,KAAA7B,gBAAA8jB,EAAA9jB,oBACApJ,GAAAgtB,IACAA,EAAAzrB,cAAA0O,EAAA8Z,cAAAlrB,UAKAkuB,IAGAvc,QAAA,CACAic,kBACA,IAAAxc,EAAA,KACAkd,aAAAC,QAAA,kBAAA9T,KAAAC,UAAAtJ,EAAAzG,0BAEAkjB,sBACA,IAAAzc,EAAA,KACAA,EAAAzG,uBAAA8P,KAAAnR,MAAAglB,aAAAE,QAAA,qBAEA,yBAAAjkB,GACA,IAAA6G,EAAA,KACAA,EAAA/M,QAAA,GACA,IAAAoqB,EAAA,GAKArd,EAAAjT,WAAA,QACAuwB,OAAAC,wBAAApkB,GAAA+H,KAAAC,IACAA,EAAA5E,KAAAtO,OAAA,GAIA+R,EAAA/G,WAAA,GAAA0E,KAAA,GAAA2B,OAAArM,QAAA,GACAoqB,EAAAlc,EAAA5E,KACA8gB,EAAAjc,QAAAoc,IACAxd,EAAA/M,QAAAnH,KAAA,CACAgC,MAAA0vB,EAAA1vB,MACAF,KAAA4vB,EAAA5vB,SAGAoS,EAAA/G,WAAA,GAAA0E,KAAA,GAAA2B,OAAArM,QAAA+M,EAAA/M,QACA+M,EAAAjT,WAAA,GACAiT,EAAAjT,WAAA,IACA4c,MAAAC,IACAC,QAAAC,IAAAF,MAGA,8BACA,IAAA5J,EAAA,WACAsd,OAAAG,wBAAAvc,KAAAC,IACAnB,EAAA3H,cAAAgR,KAAAnR,MAAAiJ,EAAA5E,KAAA,GAAAkN,OAAA9L,QAGA,mCACA,IAAAqC,EAAA,KACAA,EAAAjT,WAAA,EACA,IAAAkhB,EAAA,YAAAjO,EAAAzG,uBAAAiR,2BACA8S,OAAAI,qBAAAzP,GAAA/M,KAAA,UACA,IAAAyc,EAAA,GACA,MAAAxc,EAAA5E,WAAAxM,GAAAoR,EAAA5E,MAAA,IAAA4E,EAAA5E,OACAohB,EAAAxc,EAAA5E,KAAAqhB,6BAAA,GAAA3U,KAAA6B,QAEA,MAAA3J,EAAA5E,WAAAxM,GAAAoR,EAAA5E,MAAA,IAAA4E,EAAA5E,MAAA,GAAAohB,EAAA1vB,QACA+R,EAAA6d,WAAA1c,EAAA5E,KAAAqhB,6BAAA,GAAA3U,KAAA6B,cACA9K,EAAA8d,YAAA3c,EAAA5E,KAAAqhB,6BAAA,GAAA3U,KAAA8B,SACA/K,EAAA+d,UAAA5c,EAAA5E,KAAAqhB,6BAAA,GAAA3U,KAAAC,OACAlJ,EAAApG,aAAAuH,EAAA5E,KAAAqhB,6BAAA,GAAA3U,KAAA+B,QACAhL,EAAArG,UAAAwH,EAAA5E,KAAAqhB,6BAAA,GAAA3U,KAAAE,MACAnJ,EAAAyb,gBAAAta,EAAA5E,KAAAqhB,6BAAA,GAAA3U,KAAAgC,WACAjL,EAAA0b,sBAAAva,EAAA5E,KAAAqhB,6BAAA,GAAA3U,KAAA+U,sBACAhe,EAAA/F,qBAAA,EACA,GAAAkH,EAAA5E,KAAA0hB,gBACAje,EAAAtG,cAAA,EACAsG,EAAAxG,eAAA2H,EAAA5E,KAAAqhB,6BAAA,GACA5d,EAAAvG,cAAA0H,EAAA5E,KAAAqhB,6BAAA,MAGA,GAAAD,EAAA1vB,QACA+R,EAAAke,6BAEAle,EAAAjT,WAAA,KAEA4c,MAAAC,IACAC,QAAAC,IAAAF,MAGAiU,WAAA/S,GACA,IAAA9K,EAAA,KACA8K,EAAA1J,QAAAhQ,IACA4O,EAAA/N,WAAAnG,KAAAsF,GACA4O,EAAAhR,cAAAoS,QAAA,CAAA+c,EAAAvvB,KACA,IAAAwvB,EAAApe,EAAAhR,cAAAJ,GAAAob,UAAAna,KAAAsJ,gBAAA/H,EAAA+H,gBACA,GAAAilB,GACApe,EAAAhR,cAAAJ,GAAAga,OAAAwV,EAAA,OAIApe,EAAA/N,WAAAhE,OAAA,IACA+R,EAAAxO,qBAAA,IAGA6sB,0BAAAjtB,GACA,IAAA4O,EAAA,KACA,YAAA5O,EAAAsB,qBAAA,QAAAtB,EAAAsB,sBACA,WAAAtB,EAAAktB,uBACAte,EAAAgb,SAAA,qBACAhb,EAAAib,UAAA,uBAEA,cAAA7pB,EAAAktB,sBACAte,EAAAgb,SAAA,iBAGAhb,EAAAgb,SAAA,sBAGA,QAAA5pB,EAAAsB,sBACA,WAAAtB,EAAAktB,uBACAte,EAAAgb,SAAA,wBACAhb,EAAAib,UAAA,0BAGAjb,EAAAgb,SAAA,0BAIAuD,eAAAxT,GACA,IAAA/K,EAAA,KACAA,EAAAhL,WAAA+V,EAAA3X,IAAA,CAAAhC,EAAAxC,KACA,IAAA4vB,EAAA,GACAC,EAAA,GACA,aAAArtB,EAAAsB,qBAAA,UAAAtB,EAAAstB,eAAA,CACA,IAAAC,EAAA,GACA,GAAAvtB,EAAAwtB,mBAAAlK,SAAA,OAAAtjB,EAAAwtB,mBAAAlK,SAAA,WACA,IAAAmK,EAAA,GACAF,EAAAvtB,EAAA0tB,OAAA5P,MAAA,KACAyP,EAAAvd,QAAA2d,IACAP,EAAAxe,EAAA/M,QAAAyO,KAAA1V,KAAA8B,QAAAixB,EAAA7Y,QAAA,YACA2Y,EAAA/yB,KAAA0yB,EAAA5wB,QAEA6wB,EAAA,OAAAI,QAAA,IAAAA,OAAA,EAAAA,EAAA1P,OACAnP,EAAAgb,SAAA,2BAEA,KAAAgE,EACAR,EAAAxe,EAAA/M,QAAAyO,KAAA1V,KAAA8B,QAAAsD,EAAA0tB,QACAL,EAAA,QAAAO,EAAAR,SAAA,IAAAQ,OAAA,EAAAA,EAAApxB,KACAoS,EAAAgb,SAAA,qBAGA,WAAA5pB,EAAAsB,qBAAA,UAAAtB,EAAAsB,qBAAA,OAAAtB,EAAAsB,oBACA,WAAAtB,EAAAktB,uBACAte,EAAAgb,SAAA,kBACAhb,EAAAib,UAAA,oBAGAjb,EAAAgb,SAAA,kBAGA,UAAA5pB,EAAAsB,sBACAtB,EAAAwtB,mBAAAlK,SAAA,OAAAtjB,EAAAwtB,mBAAAlK,SAAA,WACA1U,EAAAgb,SAAA,gBACAhb,EAAAib,UAAA,kBACAjb,EAAAgb,SAAA,iBAEAhb,EAAAqe,0BAAAjtB,GACA,IAAA6tB,EAAAjf,EAAA9Q,uBAAA8a,UAAAkV,GACAA,EAAAxd,KAAAyd,GACAA,EAAAhmB,eAAA/H,EAAA+H,gBAGAilB,EAAApe,EAAA9Q,uBAAA+vB,GAAAjV,UAAAmV,KAAAhmB,eAAA/H,EAAA+H,eACAimB,EAAA,GAsBA,OArBA,GAAAhB,IACAgB,EAAA,CACAjvB,UAAA6P,EAAA9Q,uBAAA+vB,GAAAb,GAAAjuB,UACAgJ,cAAA/H,EAAA+H,cACAkmB,YAAAJ,EACAK,eAAAluB,EAAAkuB,eACAlF,YAAAxrB,EAAA,EACA2wB,kBAAAvf,EAAA7K,WACAwB,YAAAvF,EAAAuF,YACApB,oBAAAnE,EAAAktB,sBACAhoB,qBAAAlF,EAAAkF,qBACAtG,WAAAoB,EAAApB,WACAI,YAAAgB,EAAAhB,YACAsC,oBAAAtB,EAAAsB,oBACAgsB,eAAAttB,EAAAstB,eACAvsB,kBAAA,GAEAitB,EAAApf,EAAAib,WAAA7pB,EAAAouB,OACAJ,EAAApf,EAAAgb,UAAA,IAAAyD,EAAArtB,EAAA0tB,OAAA5Y,QAAA,WAAAuY,EACAze,EAAA9Q,uBAAA+vB,GAAArW,OAAAwV,EAAA,IAEAgB,KAGAK,sCACA,IAAAzf,EAAA,KACA,OAAAA,EAAA7K,WACA6K,EAAArL,SAAA,kBAEAqL,EAAArL,SAAA,mBAGAmpB,YAAA,eAAA/S,GACA,IAAA/K,EAAA,KACA+K,EAAA9c,OAAA,IACA8c,EAAA3X,IAAA,MAAAhC,EAAAxC,KACA,UAAAwC,EAAAsB,qBAAA,UAAAtB,EAAAstB,gBACA1e,EAAAmc,oBAAA,QACAnc,EAAA0f,mBAAAtuB,EAAA+H,gBAEA,YAAA/H,EAAAsB,qBAAA,QAAAtB,EAAAsB,qBAAA,cAAAtB,EAAAktB,wBACAte,EAAAmc,oBAAA,QACAnc,EAAAyd,2BAGAzd,EAAAmc,mBACAlS,YAAA,WACAjK,EAAA7K,WAAA4V,EAAA,GAAAwU,kBACAvf,EAAAyf,sCACAzf,EAAAue,eAAAxT,GACA/K,EAAAua,kBAAAxP,EAAA3X,IAAA,CAAAhC,EAAAxC,KACA,IAAAwvB,EAAApe,EAAAhL,WAAAgV,UAAAmV,KAAAhmB,eAAA/H,EAAA+H,eACAimB,EAAA,GAiBA,OAhBA,GAAAhB,IACAgB,EAAA,CACAjmB,cAAA/H,EAAA+H,cACAhJ,UAAA6P,EAAAhL,WAAAopB,GAAAjuB,UACAmvB,eAAAluB,EAAAkuB,eACAlF,YAAAxrB,EAAA,EACAgwB,mBAAAxtB,EAAAwtB,mBACAW,kBAAAnuB,EAAAmuB,kBACA5oB,YAAAvF,EAAAuF,YACAmoB,OAAA1tB,EAAA0tB,OACAU,OAAApuB,EAAAouB,OACA9sB,oBAAAtB,EAAAsB,oBACA1C,WAAAoB,EAAApB,WACA0uB,eAAAttB,EAAAstB,iBAGAU,MAEA,MAGApf,EAAA7K,WAAA4V,EAAA,GAAAwU,kBACAvf,EAAAyf,sCACAzf,EAAAue,eAAAxT,GACA/K,EAAAua,kBAAAxP,EAAA3X,IAAA,CAAAhC,EAAAxC,KACA,IAAAwvB,EAAApe,EAAAhL,WAAAgV,UAAAmV,KAAAhmB,eAAA/H,EAAA+H,eACAimB,EAAA,GAiBA,OAhBA,GAAAhB,IACAgB,EAAA,CACAjmB,cAAA/H,EAAA+H,cACAhJ,UAAA6P,EAAAhL,WAAAopB,GAAAjuB,UACAmvB,eAAAluB,EAAAkuB,eACAlF,YAAAxrB,EAAA,EACAgwB,mBAAAxtB,EAAAwtB,mBACAW,kBAAAnuB,EAAAmuB,kBACA5oB,YAAAvF,EAAAuF,YACAmoB,OAAA1tB,EAAA0tB,OACAU,OAAApuB,EAAAouB,OACA9sB,oBAAAtB,EAAAsB,oBACA1C,WAAAoB,EAAApB,WACA0uB,eAAAttB,EAAAstB,iBAGAU,OAKArB,UAAA7U,GACA,IAAAlJ,EAAA,KACAA,EAAAhP,UAAA,GACAkY,EAAA9H,QAAAhQ,IACA,IAAAuuB,EAAA3f,EAAA/N,WAAAyP,KAAA1G,KAAA7B,gBAAA/H,EAAA+H,eACA/H,EAAAsB,oBAAAitB,EAAAjtB,oBACAsN,EAAAhP,UAAAlF,KAAAsF,MAGAkB,YAAA,SAAAzC,EAAAikB,GACA,IAAA9T,EAAA,KACA,GAAAnQ,EAAAsC,iBAAA,CAIA,GAHA6N,EAAAjG,kBAAA,EACAiG,EAAA/F,qBAAA,EACA+F,EAAA7F,uBAAA,GACA6F,EAAA0b,sBAAAztB,OAAA,GAAA+R,EAAAyb,gBAAAxtB,OAAA,GAEA+R,EAAA9F,aAAA,GACA8F,EAAAhG,kBAAA,GACA,QAAAhO,EAAA,EAAAA,GAAAgU,EAAAyb,gBAAAxtB,OAAAjC,IACA,GAAAgU,EAAAyb,gBAAAzvB,GAAAqrB,cAAAxnB,EAAAwvB,YAAA,CACArf,EAAA9F,aAAApO,KAAAkU,EAAAyb,gBAAA/Z,KAAA1G,KAAAqc,cAAAxnB,EAAAwvB,cACA,MAGArf,EAAA0b,sBAAAta,QAAAhQ,IACA,IAAAwuB,EAAA,GACAA,EAAA9zB,KAAAsF,GACA,IAAAyuB,EAAAD,EAAAle,KAAA1G,KAAAqc,cAAAxnB,EAAAwvB,kBACAtvB,GAAA8vB,GACA7f,EAAAhG,kBAAAlO,KAAA+zB,KAWA,IAAAC,EAAA,GAPAtf,EAAA,wBAAAC,MAAA,QACAwJ,YAAA,WACAzJ,EAAA,wBAAAC,MAAA,QACAwJ,YAAA,WACAjK,EAAAkK,wBACA,OACA,KACAlK,EAAA/F,oBACA+F,EAAA7F,uBAAAtK,EACA,QAAAiwB,EAAA9f,EAAAY,MAAAmf,kBAAA,IAAAD,KAAA5M,qBAAAlT,EAAA9F,aAAA8F,EAAAhG,wBAGAgG,EAAAzN,iBAAAyN,EAAAlR,kBAAA,MAAAe,EAAAO,aAAA,IAAAP,EAAAO,YAAAP,EAAAO,YAAAP,EAAAM,WACA6P,EAAArN,gBAAA9C,EAAAmwB,WACAhgB,EAAApM,mBAAA/D,EAAAowB,aACAjgB,EAAAnM,kBAAAhE,EAAAqwB,cACAlgB,EAAAzL,iBAAA1E,EAAAswB,iBACA3f,EAAA,oBAAAsL,MAAA,OACAtL,EAAAsT,EAAA3lB,QAAA8mB,QAAA,cAAAvT,KAAA,oBAAAoK,MAAA,SACA9L,EAAAogB,qBAIA3rB,aAAA,SAAAqf,GACA,IAAA9T,EAAA,KACAA,EAAAzN,iBAAA,KACAyN,EAAArN,gBAAA,GACAqN,EAAApM,mBAAA,KACAoM,EAAAnM,kBAAA,KACAmM,EAAAzL,iBAAA,KACAiM,EAAAsT,EAAA3lB,QAAA8mB,QAAA,oBAAAnJ,MAAA,QAEA1S,eAAA,WACA,IAAA4G,EAAA,KACAQ,EAAA,oBAAAsL,MAAA,OAAAuU,IAAA,qBACArgB,EAAA7I,gBAAA,EACA6I,EAAAzI,kBAAA,EACAyI,EAAAnI,gBAAA,EACAmI,EAAAjI,gBAAA,EACAiI,EAAAhH,kBAAA,EACAgH,EAAAtI,kBAAA,EACAsI,EAAA3I,gBAAA,EACA2I,EAAAlH,cAAA,EACAkH,EAAA7H,iBAAA,EACA6H,EAAAtH,eAAA,EACAsH,EAAApH,gBAAA,EACAoH,EAAA5I,iBAAA,GACA4I,EAAA1I,kBAAA,GACA0I,EAAAxI,mBAAA,GACAwI,EAAArI,oBAAA,GACAqI,EAAAlI,iBAAA,GACAkI,EAAAhI,kBAAA,GACAgI,EAAA5H,eAAA,GACA4H,EAAArH,iBAAA,GACAqH,EAAAnH,kBAAA,GACAmH,EAAA9J,qBAAA,GACA8J,EAAA2a,eAAA,GACA3a,EAAA/G,WAAA,GAAA0E,KAAA,GAAA7P,MAAA,GACAkS,EAAAjH,oBAAA,GACAiH,EAAAob,cAAA,GACApb,EAAAqb,oBAAA,IAEAiF,qBACA,IAAAtgB,EAAA,KACA,IAAAugB,EAAAvgB,EAAAY,MAAAkK,OAAA0V,OACA,OAAAD,EACA,QAGA,WAGA7D,QAAA,eAAAnjB,GACA,IAAAyG,EAAA,KACA,QAAAjQ,GAAAwJ,EAAAkR,iBAAA1a,GAAAwJ,EAAAmR,eAAA,MAAAnR,EAAApM,WAAA,CACA,IAAA8gB,EAAA,cAAA1U,EAAAkR,4BAAAlR,EAAAmR,gCAAA1K,EAAA6R,gBACAyL,OAAA7J,cAAAxF,GAAA/M,KAAAC,IACAnB,EAAArR,kBAAAwS,EAAA5E,KAAAmX,iBAAA,GACA1T,EAAArR,kBAAAyS,QAAAhQ,IACA4O,EAAA8Z,cAAAhuB,KAAAsF,EAAArC,WACAiR,EAAAhR,cAAAlD,KAAA,IAAAsF,EAAAuiB,aAAA8M,KAAA,CAAAC,EAAAC,IAAAD,EAAAtwB,YAAAwwB,cAAAD,EAAAvwB,gBACA4P,EAAA9Q,uBAAApD,KAAA,IAAAsF,EAAAuiB,aAAA8M,KAAA,CAAAC,EAAAC,IAAAD,EAAAtwB,YAAAwwB,cAAAD,EAAAvwB,gBACA4P,EAAAoc,iBAAAtwB,KAAA,IAAAsF,EAAAuiB,kBAEA,QAAApa,EAAAsnB,wBAAA9wB,GAAAwJ,EAAAiR,UAAAxK,EAAA+b,iCACA/b,EAAAke,6BAEAjU,YAAA,WACAjK,EAAA8gB,YAAA,4CACA,OACAnX,MAAAC,IAAAC,QAAAC,IAAAF,KACA5J,EAAAkZ,cAAA3f,EAAAmR,cACA1K,EAAA7S,WAAAoM,EAAApM,aAGA+wB,2BAAA,WACA,IAAAle,EAAA,KACAA,EAAAhR,cAAAoS,QAAA,CAAA2f,EAAAnyB,KACAoR,EAAAhR,cAAAJ,GAAAwS,QAAA4f,IACA,GAAAA,EAAA1qB,qBAAA,CACA,IAAA2qB,EAAAjhB,EAAAhR,cAAAJ,GAAA8S,KAAA1G,KAAA7B,gBAAA6nB,EAAA7nB,eACA,YAAA8nB,EAAA3B,iBACAtf,EAAA8b,0BAAA,EACA9b,EAAA8a,+BAAAmG,EAAAhxB,OAAA,GAAAixB,aACAlhB,EAAAlI,iBAAAqpB,UAAAC,SAAA,YAAAC,OAAA,cAIArhB,EAAAma,kBAAA,eACAna,EAAAwa,wBAAA,IACAxa,EAAAya,YAAA,EACAza,EAAAxP,UAAAywB,EAAAryB,GACAoR,EAAA9G,aAAA+nB,EAAA9nB,sBAMA1L,eAAA,WACA,IAAAuS,EAAA,KACAA,EAAAnT,QAAA,+BACAmT,EAAAtP,QAAA,OACAsP,EAAApP,SAAA,+CAEAD,YAAA,WACA,IAAAqP,EAAA,KACAA,EAAAnT,QAAA,yBACAmT,EAAAtP,QAAA,cACAsP,EAAApP,SAAA,wBAEArD,WAAA,WACA,IAAAyS,EAAA,KACAA,EAAAhT,UAAA,cACAgT,EAAAtS,UAAA,OACA,IAAAugB,EAAA,cAAAjO,EAAAzG,uBAAAiR,SACA8S,OAAAgE,kBAAArT,GAAA/M,KAAAC,IACAnB,EAAAjS,eAAAoT,EAAA5E,KAAApP,aACAwc,MAAAC,IAAAC,QAAAC,IAAAF,MAEAvb,WAAA,WACA,IAAA2R,EAAA,KACA,GAAAA,EAAAjS,eAAAE,OAAA,IAEA,OADA+R,EAAAwC,UAAAxC,EAAA5S,GAAA,4DAAA4S,EAAA5S,GAAA,WACA,EAEA4S,EAAAhT,UAAA,OACAgT,EAAAtS,UAAA,cACA,IAAAugB,EAAA,cAAAjO,EAAAjS,4BAAAiS,EAAAzG,uBAAAiR,sBAAAxK,EAAAzG,uBAAAgoB,uBAAAvhB,EAAAzG,uBAAAioB,2BAAAxhB,EAAAzG,uBAAAkoB,0BAAAzhB,EAAAzG,uBAAAmR,yBAAA1K,EAAAzG,uBAAAmoB,UACApE,OAAAqE,iBAAA1T,GAAA/M,KAAAC,IACA,UAAAA,EAAA5E,KAAA,GAAAqlB,QACA5hB,EAAAwC,UAAAxC,EAAA5S,GAAA,kBAAA4S,EAAA5S,GAAA,6BAAA4S,EAAA5S,GAAA,UACA4S,EAAA7S,WAAA6S,EAAAjS,gBACA,UAAAoT,EAAA5E,KAAA,GAAAqlB,QACA5hB,EAAAjS,eAAA,GACAiS,EAAAwC,UAAAxC,EAAA5S,GAAA,iBAAA4S,EAAA5S,GAAA,6BAAA4S,EAAA5S,GAAA,YAEA4S,EAAAjS,eAAA,GACAiS,EAAAwC,UAAAxC,EAAA5S,GAAA,aAAA4S,EAAA5S,GAAA,6BAAA4S,EAAA5S,GAAA,aAEAuc,MAAAC,IAAAC,QAAAC,IAAAF,MAEA9H,YAAA,eAAAjH,EAAAiE,EAAAyC,GACA,IAAAvB,EAAA,KACA,IAAA6hB,EAAA7hB,EAAA8hB,uBACA,GAAAD,EAEA,OADA7hB,EAAAwC,UAAA,uBAAAqf,EAAA,uDAAA7hB,EAAA5S,GAAA,WACA,EAEA4S,EAAApG,aAAA,GACAoG,EAAAqc,mBAAA,EACArc,EAAAjT,WAAA,EACA,IAAAg1B,EAAA/hB,EAAAgiB,qBAAAnnB,GACA,MAAAknB,EAAA,CACA,QAAA/1B,KAAA6O,OACA9K,GAAA8K,EAAA7O,GAAA+O,eAAA,IAAAF,EAAA7O,GAAA+O,gBACAiF,EAAApG,aAAA9N,KACA,eAAA+O,EAAA7O,GAAA+O,cAAA,SAAAF,EAAA7O,GAAAiP,aAAA,UAAA0G,SAAA3V,GAAA,sBAEAgU,EAAA/N,WAAAmP,QAAA6gB,IACA,IAAA/L,EAAAlW,EAAApG,aAAA8H,KAAA1G,KAAA7B,gBAAA8oB,EAAA9oB,eAAA6B,EAAA7B,gBAAA8oB,EAAA9xB,gBACAJ,GAAAmmB,IACAA,EAAA/jB,iBAAA8vB,EAAA9vB,qBAKA,IAAAoY,EACA,GAAAzL,EAAA,CAGA,GAFAkB,EAAA4b,mBAAA,GACA5b,EAAA6b,cAAA,QACA9rB,GAAAwR,GAAA,IAAAA,EAAA,CACA,IAAAE,EAAAzB,EAAA/N,WAAAyP,KAAA1G,KAAA7B,gBAAAoI,EAAA5F,YAAAX,EAAA7K,YAAAoR,EAAA5F,YACAiG,EAAA5B,EAAA/N,WAAAyP,KAAA1G,KAAA7B,gBAAAoI,EAAA3F,YAAAZ,EAAA7K,YAAAoR,EAAA3F,YACAoE,EAAA4b,mBAAA9vB,KAAA,CACAo2B,eAAAzgB,EAAAtI,cAAA0M,WAAApE,EAAAtR,UACAgyB,eAAAvgB,EAAAzI,cAAA2M,WAAAlE,EAAAzR,UAAAiyB,sBAAA7gB,EAAA6gB,wBAGA7X,EAAA,CACA,MACA,SAAAvK,EAAAzG,uBAAAiR,SACA,WAAAxK,EAAA7S,WACA,WAAA6S,EAAAzG,uBAAAkR,WACA,cAAAzK,EAAAzG,uBAAAmR,cACA,YAAA1K,EAAAzG,uBAAAoR,YACA,YACA,aACA,WACA,aAAA3K,EAAAkc,aACA,OAAAlc,EAAA/N,WACA,QAAA+N,EAAAua,kBACA,SACA,gBAAAva,EAAA4b,mBACA,QAAA5b,EAAApG,aACA,SACA,WAAAoG,EAAAyb,gBACA,sBAAAzb,EAAA0b,6BAKAnR,EAAA,CACA,MACA,SAAAvK,EAAAzG,uBAAAiR,SACA,WAAAxK,EAAA7S,WACA,WAAA6S,EAAAzG,uBAAAkR,WACA,cAAAzK,EAAAzG,uBAAAmR,cACA,YAAA1K,EAAAzG,uBAAAoR,YACA,YACA,aACA,WACA,aAAA3K,EAAAkc,aACA,OAAAlc,EAAA/N,WACA,QAAA+N,EAAAua,kBACA,MAAAva,EAAAhP,UACA,mBACA,QAAAgP,EAAApG,aACA,SACA,WAAAoG,EAAAyb,gBACA,sBAAAzb,EAAA0b,wBAIA1b,EAAA3G,mBAAA,EACA2G,EAAAxG,eAAA+Q,EACA,IAAAW,EAAA7B,KAAAC,UAAAiB,SACA+S,OAAAhjB,cAAA4Q,GAAAhK,KAAAC,IACA,IAAAkhB,EAAA,GACAA,EAAAhZ,KAAAnR,MAAAiJ,EAAA5E,KAAA,GAAAkN,OAAAhH,YACA,MAAA4f,QAAAtyB,GAAAsyB,KAAAp0B,OAAA,GACA6Q,GACAkB,EAAAnG,UAAAwP,KAAAnR,MAAAiJ,EAAA5E,KAAA,GAAAkN,OACA3K,IACAkB,EAAA1G,YAAA+P,KAAAnR,MAAAiJ,EAAA5E,KAAA,GAAAkN,OAAAhH,eAIAzC,EAAAvG,cAAA8Q,EACAvK,EAAA1G,YAAA+P,KAAAnR,MAAAiJ,EAAA5E,KAAA,GAAAkN,OAAAhH,YACAzC,EAAAlG,gBAAAuP,KAAAnR,MAAAiJ,EAAA5E,KAAA,GAAAkN,OAAA1H,SAAA,GAAAjI,iBAEAkG,EAAAjT,WAAA,IAEAiT,EAAAjT,WAAA,EACAiT,EAAA1G,YAAA,GACAwF,GACAkB,EAAAY,MAAA0hB,WAAA7mB,iBAEAuE,EAAAwC,UAAAxC,EAAA5S,GAAA,gCAAA4S,EAAA5S,GAAA,aAEAuc,MAAAC,IACAC,QAAAC,IAAA,kBACA9J,EAAA1G,YAAA,GACA0G,EAAAwC,UAAAxC,EAAA5S,GAAA,gCAAA4S,EAAA5S,GAAA,UACA4S,EAAAjT,WAAA,SAGAiT,EAAAwC,UAAAxC,EAAA5S,GAAA,+BAAA4S,EAAA5S,GAAA,UACA4S,EAAAjT,WAAA,GAGAsD,UAAA,SAAAR,EAAAikB,EAAAllB,EAAA0C,GACA,IAAA0O,EAAA,KACA,IAAAuiB,EAAAviB,EAAAY,MAAAkK,OAAA0V,OACA,IAAAgC,EACA,GAAAxiB,EAAA/N,WAAAhE,OAAA,IACA,GAAAs0B,EAAA,CACA,GAAAviB,EAAA/N,WAAAhE,OAAA,EACAu0B,EAAAxiB,EAAA/N,WAAAhE,WAEA,CACA,MAAAw0B,EAAAziB,EAAA/N,WAAA+N,EAAA/N,WAAAhE,OAAA,GACAu0B,EAAAC,EAAAC,cAAA,EAEA,GAAA7yB,EAAA8yB,eAAA,WACA,MAAAC,EAAA5iB,EAAA/N,WAAA+X,UAAA6Y,KAAA1pB,gBAAAtJ,EAAAsJ,gBACA,IAAAypB,IACA5iB,EAAA/N,WAAAnG,KAAA,CACAqN,cAAAtJ,EAAAsJ,cAAA/I,YAAAP,EAAAO,YAAAD,UAAAN,EAAAM,UAAAkvB,YAAAzwB,EAAA8D,oBAAA7C,EAAAI,OAAA,GAAAixB,aAAAwB,cAAAF,EAAArwB,kBAAA,EAAAb,gBACAtB,WAAAH,EAAAI,OAAA,GAAAC,YAEAH,GAAA+jB,EAAAgP,SACA9iB,EAAAhR,cAAAJ,GAAAga,OAAA5I,EAAAhR,cAAAJ,GAAAsG,QAAArF,GAAA,QAGA,CACA,MAAA+yB,EAAA5iB,EAAA/N,WAAA+X,UAAA6Y,KAAA1pB,eAAAtJ,EAAAsJ,gBACA,IAAAypB,IACA5iB,EAAA/N,WAAAnG,KAAA,CACAqN,cAAAtJ,EAAAsJ,cAAA/I,YAAAP,EAAAO,YAAAD,UAAAN,EAAAM,UAAAkvB,YAAAzwB,EAAA8D,oBAAA7C,EAAA6C,oBAAAgwB,cAAAF,EAAArwB,kBAAA,EAAAb,gBACAtB,WAAAH,EAAAG,kBAEAD,GAAA+jB,EAAAgP,SACA9iB,EAAAhR,cAAAJ,GAAAga,OAAA5I,EAAAhR,cAAAJ,GAAAsG,QAAArF,GAAA,WAMAmQ,EAAAwC,UAAAxC,EAAA5S,GAAA,gCAAA4S,EAAA5S,GAAA,UAEA4S,EAAAxO,qBAAA,EACAwO,EAAA5Q,mBAAA,GACA4Q,EAAA1R,gBAAA,IAEAkG,sBAAA,SAAA3E,EAAAikB,GACA,IAAA9T,EAAA,KACA,IAAAA,EAAAzN,iBACAyN,EAAA+iB,iBAAAlzB,EAAAikB,GAGA9T,EAAAwC,UAAA,wCAAAxC,EAAA5S,GAAA,WAGA21B,iBAAA,SAAAlzB,EAAAikB,GACA,IAAA9T,EAAA,KACAkW,EAAAlW,EAAA/N,WAAAyP,KAAA1G,KAAA7B,eAAAtJ,EAAAsJ,eACA+c,EAAA9lB,YAAA4P,EAAAzN,iBACA2jB,EAAA8J,WAAAhgB,EAAArN,gBACAujB,EAAA+J,aAAAjgB,EAAApM,mBACAsiB,EAAAgK,cAAAlgB,EAAAnM,kBACAqiB,EAAAiK,iBAAAngB,EAAAzL,iBACA,IAAAstB,EAAA7hB,EAAA8hB,uBACA,GAAAD,EAMA,CACA,IAAAmB,EAAAhjB,EAAA8hB,qBAAA,oBACA9hB,EAAAhR,cAAAoS,QAAA,CAAA+c,EAAA8E,KACAjjB,EAAAoc,iBAAA6G,GAAA7hB,QAAA8hB,IACA,GAAAA,EAAA/pB,gBAAA6pB,EAAA,CACA,IAAA9M,EAAAlW,EAAA/N,WAAAyP,KAAA1G,KAAA7B,eAAA+pB,EAAA/pB,eACA+c,EAAA9lB,YAAA8yB,EAAA9yB,YACA8lB,EAAA8J,WAAAkD,EAAAlD,WACA9J,EAAA+J,aAAAiD,EAAAjD,aACA/J,EAAAgK,cAAAgD,EAAAhD,cACAhK,EAAAiK,iBAAA+C,EAAA/C,iBACAngB,EAAAhP,UAAA0Q,KAAA1G,KAAA7B,gBAAA+pB,EAAA/pB,iBACA6G,EAAAhP,UAAA,GACAgP,EAAAhP,UAAAlF,KAAAoqB,SAKAlW,EAAAwC,UAAA,uBAAAqf,EAAA,uDAAA7hB,EAAA5S,GAAA,eAvBA4S,EAAAhP,UAAA0Q,KAAA1G,KAAA7B,gBAAA+c,EAAA/c,iBACA6G,EAAAhP,UAAA,GACAgP,EAAAhP,UAAAlF,KAAAoqB,IAEAlW,EAAAvL,aAAAqf,IAsBAzhB,mBAAA,SAAAxC,EAAAikB,GACA,IAAA9T,EAAA,KACA,IAAAmjB,EAAAnjB,EAAAY,MAAA0hB,WAAAlY,wBAAAva,EAAAsJ,eACA,GAAAgqB,EAuDAnjB,EAAAwC,UAAAxC,EAAA5S,GAAA,4BAAA4S,EAAA5S,GAAA,cAvDA,CACA,IAAAyC,EAAAsC,iBAAA,CACA,IAAAixB,EAAApjB,EAAA/N,WAAA+X,UAAAhP,KAAA7B,eAAAtJ,EAAAsJ,eACAiqB,GAAA,IACApjB,EAAA/N,WAAA2W,OAAAwa,EAAA,GACApjB,EAAA5Q,mBAAA,GACAoR,EAAA,oBAAAsL,MAAA,QAGA,IAAAuX,EAAArjB,EAAAhP,UAAAgZ,UAAAhP,KAAA7B,eAAAtJ,EAAAsJ,eAeA,GAdAkqB,GAAA,GACArjB,EAAAhP,UAAA4X,OAAAya,EAAA,GAEA,GAAArjB,EAAA/N,WAAAhE,SACA+R,EAAA1G,YAAA,GACA0G,EAAAxO,qBAAA,GAEA3B,EAAAsC,kBACA6N,EAAAhR,cAAAa,EAAAwvB,aAAAvzB,KAAA,CACAqN,cAAAtJ,EAAAsJ,cAAA/I,YAAAP,EAAAO,YAAAD,UAAAN,EAAAM,UAAAuC,oBAAA7C,EAAA6C,oBAAAgwB,cAAA7yB,EAAA6yB,cAAAvwB,kBAAA,EAAAb,cAAAzB,EAAAyB,cACAtB,WAAAH,EAAAG,aAGAgQ,EAAAjP,iBAAA,GACAlB,EAAAsC,mBACA6N,EAAA0b,sBAAAztB,OAAA,GAAA+R,EAAAyb,gBAAAxtB,OAAA,IACA,IACAq1B,EAAAtjB,EAAA/N,WAAA+X,UAAAhP,KAAAqkB,aAAAxvB,EAAAwvB,aACAiE,GAAA,IACAtjB,EAAA/N,WAAA2W,OAAA0a,EAAA,GACAtjB,EAAA5Q,mBAAA,IAEA,QAAApD,EAAA,EAAAA,GAAAgU,EAAAyb,gBAAAxtB,OAAAjC,IACA,GAAAgU,EAAAyb,gBAAAzvB,GAAAqrB,cAAAxnB,EAAAwvB,YAAA,CACArf,EAAAyb,gBAAA7S,OAAA5c,EAAA,GACA,MAGAgU,EAAA0b,sBAAAta,QAAAhQ,IACA,IAAA8iB,EAAAlU,EAAA0b,sBAAA1R,UAAAhP,KAAAqc,cAAAxnB,EAAAwvB,aACAnL,GAAA,GACAlU,EAAA0b,sBAAA9S,OAAAsL,EAAA,KAKA,SAAAlU,EAAApG,cAAAoG,EAAApG,aAAA3L,OAAA,OAAAs1B,EACA,IAAAxZ,EAAA/J,EAAApG,aAAAoQ,UAAAhP,KAAA7B,gBAAAtJ,EAAAsJ,eACAqqB,EAAAxjB,EAAApG,aAAA8H,KAAA1G,KAAA7B,gBAAAtJ,EAAAsJ,eACA4Q,GAAA,QAAAha,GAAAyzB,GACAxjB,EAAApG,aAAAgP,OAAAmB,EAAA,GAEA,QAAAwZ,EAAAvjB,EAAAY,MAAA0hB,kBAAA,IAAAiB,KAAAnoB,kBAAA,CAAAL,cAAAlL,EAAAsJ,mBAMA5H,kBAAA,SAAA1B,EAAAikB,GACA,IAAA9T,EAAA,KACA,IAAAojB,EAAApjB,EAAAhP,UAAAgZ,UAAAhP,KAAA7B,eAAAtJ,EAAAsJ,eAKA,IAAAsqB,GAJAL,GAAA,GACApjB,EAAAhP,UAAA4X,OAAAwa,EAAA,GAEApjB,EAAAjP,iBAAA,GACA,MAAAiP,EAAA1G,kBAAAvJ,GAAAiQ,EAAA1G,aAAA0G,EAAA1G,YAAArL,OAAA,KACA,QAAAw1B,EAAAzjB,EAAAY,MAAA0hB,kBAAA,IAAAmB,KAAA9a,kBAGAnY,UAAA,SAAAX,EAAAjB,GACA,IAAAoR,EAAA,KACAA,EAAApL,mBACA,IAAA8uB,EAAA,GAAA1jB,EAAAY,MAAA+iB,QAAAnD,OAAAxgB,EAAAY,MAAA+iB,QAAAnD,OAAAxgB,EAAA8b,yBACA,GAAA9b,EAAAhL,WAAA/G,OAAA,IACA,GAAAy1B,EAAA,CACA,MAAAd,EAAA5iB,EAAAhL,WAAAgV,UAAA6Y,KAAA1pB,gBAAAtJ,EAAAsJ,gBACA,IAAAypB,IACA,mBAAA5iB,EAAArL,SACAqL,EAAA7K,WAAA,MAGA6K,EAAA7K,WAAA,KAEA6K,EAAAhL,WAAAlJ,KAAA,CACAqN,cAAAtJ,EAAAsJ,cACAkmB,YAAAzwB,EACAuB,UAAAN,EAAAM,UACAC,YAAAP,EAAAO,YACAkvB,eAAAzvB,EAAAyvB,eACA5sB,yBAAA3C,GAAAF,EAAA6C,oBAAA7C,EAAA6C,oBAAA7C,EAAAI,OAAA,GAAAixB,aACAxC,oBAAA3uB,GAAAF,EAAA6uB,eAAA7uB,EAAA6uB,eAAA7uB,EAAA+zB,iBACAxJ,YAAApa,EAAA6jB,gBACAtE,kBAAAvf,EAAA7K,WACAmB,qBAAAzG,EAAAyG,qBACAtG,gBAAAD,GAAAF,EAAAG,WAAAH,EAAAG,WAAAH,EAAAI,OAAA,GAAAC,KAGAiC,kBAAA,UAGApC,GAAA+jB,MAAAgP,SACA9iB,EAAA9Q,uBAAAN,GAAAga,OAAA5I,EAAA9Q,uBAAAN,GAAAsG,QAAArF,GAAA,GAEAmQ,EAAA8b,0BAAA,QAIA9b,EAAAwC,UAAAxC,EAAA5S,GAAA,gCAAA4S,EAAA5S,GAAA,UAEA4S,EAAA5Q,mBAAA,GACA4Q,EAAA1R,gBAAA,IAGA+H,mBAAA,SAAAxG,EAAAikB,GACA,IAAA9T,EAAA,KACA,IAAAnQ,EAAAyG,qBAAA,CACA,IAAA8sB,EAAApjB,EAAAhL,WAAAgV,UAAAhP,KAAA7B,eAAAtJ,EAAAsJ,eACAiqB,GAAA,GACApjB,EAAAhL,WAAA4T,OAAAwa,EAAA,GAEA,IAAAC,EAAArjB,EAAAhL,WAAAgV,UAAAhP,KAAA7B,eAAAtJ,EAAAsJ,eACAkqB,GAAA,GACArjB,EAAAhL,WAAA4T,OAAAya,EAAA,GAEArjB,EAAA4Z,UAAA5Z,EAAA4Z,UAAA,EACA5Z,EAAA9Q,uBAAAW,EAAAwvB,aAAAvzB,KAAA,CACAqN,cAAAtJ,EAAAsJ,cAAAhJ,UAAAN,EAAAM,UAAAC,YAAAP,EAAAO,YAAAkvB,eAAAzvB,EAAAyvB,eACAtvB,WAAAH,EAAAG,WAAA0C,oBAAA7C,EAAA6C,oBAAAgsB,eAAA7uB,EAAA6uB,eAAAoF,WAAAj0B,EAAAsF,aAEA,IAAA4uB,EAAA/jB,EAAAua,kBAAAvQ,UAAA5Y,KAAA+H,gBAAAtJ,EAAAsJ,gBACA,GAAA4qB,GACA/jB,EAAAua,kBAAA3R,OAAAwa,EAAA,GAEApjB,EAAA5G,mBAGA7C,aAAA,SAAA1G,EAAAikB,GACA,IAAA9T,EAAA,KAIAnQ,EAAA6G,gBAAA,GACA8J,EAAA,oBAAAsL,MAAA,OAAAuU,IAAA,qBACA7f,EAAAsT,EAAA3lB,QAAA8mB,QAAA,cAAAvT,KAAA,oBAAAoK,MAAA,SAAAuU,IAAA,sBACArgB,EAAAgkB,gBAAAn0B,GACAmQ,EAAA7I,gBAAA,EACA6I,EAAAzI,kBAAA,EACAyI,EAAAnI,gBAAA,EACAmI,EAAAjI,gBAAA,EACAiI,EAAAhH,kBAAA,EACAgH,EAAAtI,kBAAA,EACAsI,EAAA3I,gBAAA,EACA2I,EAAAlH,cAAA,EACAkH,EAAA7H,iBAAA,EACA6H,EAAAtH,eAAA,EACAsH,EAAApH,gBAAA,EACAoH,EAAA2a,eAAA,GACA3a,EAAA/G,WAAA,GAAA0E,KAAA,GAAA7P,MAAA,GACAkS,EAAA5I,iBAAA,GACA4I,EAAA1I,kBAAA,GACA0I,EAAAxI,mBAAA,GACAwI,EAAArI,oBAAA,GACAqI,EAAAlI,iBAAA,GACAkI,EAAA5H,eAAA,GACA4H,EAAAhI,kBAAA,GACAgI,EAAA9J,qBAAA,GACA8J,EAAAjH,oBAAA,GACAiH,EAAArH,iBAAA,GACAqH,EAAAnH,kBAAA,IAEAgrB,cAAA,WACA,YAAAjK,aAEAvkB,SAAA,SAAAye,GACA,IAAA1O,EAAA,EACA5E,EAAA,+BAAAyjB,MAAA,SAAAr1B,GACAwW,EAAAxW,EAAA,EACA4R,EAAA,MAAAkB,KAAA,qBAAAwiB,KAAA9e,MAEA,KAAAwU,UAAAxU,GAEAnU,eAAA,WACA,KAAAC,UAAA,IAEAG,kBAAA,SAAAkL,GACA,IAAAyD,EAAA,KACAA,EAAAhP,UAAA/C,OAAA,IACA+R,EAAAhP,UAAAlF,KAAAyQ,GACAyD,EAAA9O,UAAA,SACA8O,EAAAjP,iBAAA,KAGAiB,wBAAA,SAAAuK,GACA,IAAAyD,EAAA,KACA,MAAApR,EAAAoR,EAAA/N,WAAA+X,UAAA6Y,KAAA1pB,gBAAAoD,EAAApD,gBACA,IAAAvK,GACAoR,EAAAhR,cAAAoS,QAAA,CAAA+c,EAAA8E,KACAjjB,EAAAhR,cAAAi0B,GAAA7hB,QAAA+iB,IACA,MAAAC,EAAApkB,EAAAhR,cAAAi0B,GAAAjZ,UAAAhP,KAAA7B,gBAAAoD,EAAApD,gBACA,GAAAirB,IACApkB,EAAA3P,UAAAkM,EAAA,GAAA0mB,EAAAjjB,EAAA8Z,cAAAmJ,IACAjjB,EAAA9O,UAAA,cAKA8O,EAAAnO,kBAAA,IAEAkX,aAAA,SAAAxP,GACA,IAAAyG,EAAA,KACAA,EAAAhR,cAAA4Z,OAAA,GACA5I,EAAA/N,WAAA2W,OAAA,GACA5I,EAAA/N,WAAA,GACA+N,EAAAhP,UAAA4X,OAAA,GACA5I,EAAAjP,iBAAA,GACAiP,EAAA1G,YAAAsP,OAAA,GACA5I,EAAAua,kBAAA,GACAva,EAAAhL,WAAA,GACAgL,EAAAyb,gBAAA,GACAzb,EAAA0b,sBAAA,GACA1b,EAAAxG,eAAA,GACAwG,EAAA2b,SAAA,EACA3b,EAAA9Q,uBAAA0Z,OAAA,GACA5I,EAAAxO,qBAAA,EACAwO,EAAA4b,mBAAA,GACA5b,EAAA6b,cAAA,GACA7b,EAAA1R,gBAAA,GACA0R,EAAA+b,gCAAA,EACA/b,EAAAvP,gBAAA,EACAuP,EAAA5Q,mBAAA,GACA4Q,EAAA0c,QAAAnjB,IAEA6mB,kBAAA,WACA,IAAApgB,EAAA,KACAsd,OAAA+G,iBAAAnjB,KAAAC,IACAnB,EAAAxM,cAAA2N,EAAA5E,OACAoN,MAAAC,IACAC,QAAAC,IAAAF,MAGA0a,8BAAAz0B,EAAA00B,GACA,IAAAvkB,EAAA,KACA,IAAAnQ,EAAA6G,iBAAA,IAAA6tB,IACAvkB,EAAA2a,eAAA,GACA3a,EAAA/G,WAAA,GAAA0E,KAAA,GAAA7P,MAAA,GACAkS,EAAA5I,iBAAA,GACA4I,EAAA1I,kBAAA,GACA0I,EAAAxI,mBAAA,GACAwI,EAAArI,oBAAA,GACAqI,EAAAlI,iBAAA,GACAkI,EAAA5H,eAAA,GACA4H,EAAAhI,kBAAA,GACAgI,EAAA9J,qBAAA,GACA8J,EAAArH,iBAAA,GACAqH,EAAAnH,kBAAA,GACAmH,EAAAjH,oBAAA,KAGAlC,WAAA,eAAA2tB,EAAA30B,EAAA+uB,EAAA6F,EAAAF,GACA,IAAAvkB,EAAA,KACA,WAAAnQ,EAAA6C,qBAAA,WAAA7C,EAAA6uB,eACA1e,EAAA0f,mBAAA7vB,EAAAsJ,cAAAtJ,EAAAM,WACA,eAAAq0B,GACAxkB,EAAAyd,wBAEAxT,YAAA,WAoFA,GAnFAjK,EAAAma,kBAAA,GACAna,EAAA8a,+BAAAjrB,EAAA6C,oBACAsN,EAAAwa,wBAAAoE,EACA5e,EAAAma,kBAAAqK,EACAxkB,EAAAya,YAAAgK,EACA,UAAA50B,EAAA6C,sBACA,WAAA8xB,GACAxkB,EAAA7I,gBAAA,EACA6I,EAAA3I,gBAAA,GACA,YAAAmtB,GAAA,gBAAAA,GACAxkB,EAAA7I,gBAAA,EACA6I,EAAA3I,gBAAA,IAGA2I,EAAA7I,gBAAA,EACA6I,EAAA3I,gBAAA,IAGA,WAAAxH,EAAA6C,qBAAA,OAAA7C,EAAA6C,qBAAA,UAAA7C,EAAA6C,sBACA,WAAA8xB,GACAxkB,EAAAzI,kBAAA,EACAyI,EAAAtI,kBAAA,GACA,YAAA8sB,GAAA,gBAAAA,GACAxkB,EAAAzI,kBAAA,EACAyI,EAAAtI,kBAAA,IAGAsI,EAAAzI,kBAAA,EACAyI,EAAAtI,kBAAA,IAGA,WAAA7H,EAAA6C,qBAAA,WAAA7C,EAAA6uB,iBACA,YAAA8F,GAAA,gBAAAA,GACAxkB,EAAAlH,cAAA,EACAkH,EAAAhH,kBAAA,EACAgH,EAAA7I,gBAAA,EACA6I,EAAA3I,gBAAA,GAEA,MAAAunB,GAAA,UAAAA,GACA5e,EAAAhH,kBAAA,EACAgH,EAAAlH,cAAA,IAEAkH,EAAAlH,cAAA,EACAkH,EAAAhH,kBAAA,EACAgH,EAAA7I,gBAAA,EACA6I,EAAA3I,gBAAA,IAGA,SAAAxH,EAAA6C,sBACA,WAAA8xB,GACAxkB,EAAAnI,gBAAA,EACAmI,EAAAjI,gBAAA,EACAiI,EAAA7H,iBAAA,GACA,YAAAqsB,GAAA,gBAAAA,GAAA,cAAAA,GAAA,eAAAA,GACAxkB,EAAAnI,gBAAA,EACAmI,EAAAjI,gBAAA,EACAiI,EAAA7H,iBAAA,GACA,cAAAqsB,GACAxkB,EAAAnI,gBAAA,EACAmI,EAAAjI,gBAAA,EACAiI,EAAA7H,iBAAA,IAGA6H,EAAAnI,gBAAA,EACAmI,EAAAjI,gBAAA,EACAiI,EAAA7H,iBAAA,IAIA,SAAAtI,EAAA6C,sBACA,WAAA8xB,GACAxkB,EAAAtH,eAAA,EACAsH,EAAApH,gBAAA,GACA,YAAA4rB,GAAA,gBAAAA,GAAA,cAAAA,GAAA,eAAAA,GACAxkB,EAAAtH,eAAA,EACAsH,EAAApH,gBAAA,IAGAoH,EAAAtH,eAAA,EACAsH,EAAApH,gBAAA,SAIA7I,GAAAw0B,OACAx0B,GAAA00B,QAAA10B,GAAAy0B,IACAxkB,EAAA2a,eAAA,GACA3a,EAAA/G,WAAA,GAAA0E,KAAA,GAAA7P,MAAA,GACAkS,EAAA5I,iBAAA,GACA4I,EAAA1I,kBAAA,GACA0I,EAAAxI,mBAAA,GACAwI,EAAArI,oBAAA,GACAqI,EAAAlI,iBAAA,GACAkI,EAAA5H,eAAA,GACA4H,EAAAhI,kBAAA,GACAgI,EAAAjH,oBAAA,GACAiH,EAAArH,iBAAA,GACAqH,EAAAnH,kBAAA,GACAhJ,EAAA8G,aAAA8tB,GACAzkB,EAAA0kB,gBAAAD,EAAA50B,GAEAA,EAAA,QAGA,CACA,IAAA80B,EAAA3kB,EAAAhL,WAAA0M,KAAA1G,KAAArE,cAAA8tB,IACA,GAAAE,GACA3kB,EAAAskB,8BAAAz0B,EAAA00B,MAGA,MAEAP,gBAAA,SAAAn0B,GACA,IAAAmQ,EAAA,KACA7G,EAAAtJ,EAAAsJ,cACA8U,EAAA,YAAApe,EAAA6C,mCAAAyG,IACAmkB,OAAAsH,gBAAA3W,GAAA/M,KAAAC,IAGA,GAFAnB,EAAAxJ,YAAA2K,EAAA5E,KAAAsoB,KACA7kB,EAAA8kB,mBAAA3rB,EAAAtJ,GACAA,EAAA8G,YAAA,GACA,IAAAouB,EAAA/kB,EAAAxJ,YAAAzD,OAAAiI,GACAA,EAAArE,aAAA9G,EAAA8G,aAEA,GAAAouB,EAAA92B,OAAA,GACA,IAAAs2B,GAAA,EACAvkB,EAAAglB,UAAAT,EACAvkB,EAAAnJ,WAAAkuB,EAAA,GAAAjuB,sBAAAjH,EAAAk1B,EAAA,GAAAhuB,oBAAAlH,EAAA8G,YAAAouB,EAAA,GAAA/tB,GAAA,GAAAC,oBAAAstB,QAKAU,eAAAC,EAAA3oB,GACA,IAAAyD,EAAA,KAaA,GAZA,UAAAzD,EAAA7J,sBACA,4CAAA6J,EAAAhH,qBAAA,gDAAAgH,EAAAhH,qBACAyK,EAAA7I,gBAAA,EACA6I,EAAA5I,iBAAA,KAAApC,WAAAkwB,GAAA1vB,cAAA0Z,MAAA,OAKAlP,EAAA7I,gBAAA,EACA6I,EAAA5I,iBAAA,KAAApC,WAAAkwB,GAAA1vB,gBAGA,UAAA+G,EAAA7J,oBACA,+CAAA6J,EAAAhH,qBAAA,gDAAAgH,EAAAhH,oBACAyK,EAAAhH,kBAAA,EACAgH,EAAA+a,4BAAA,KAAA/lB,WAAAkwB,GAAAhvB,qBAAAgZ,MAAA,SAEA,CACAlP,EAAAlH,cAAA,EACA,IAAAqsB,EAAAnlB,EAAA/M,QAAAyO,KAAA1G,KAAApN,OAAA2O,EAAApG,eACA6J,EAAAjH,oBAAA,OAAAosB,QAAA,IAAAA,OAAA,EAAAA,EAAAr3B,MAGA,QAAAyO,EAAA7J,sBACA,WAAAsN,EAAA5P,aACA4P,EAAAnI,gBAAA,EACAmI,EAAAjI,gBAAA,EACAiI,EAAA7H,iBAAA,EACA6H,EAAAlI,iBAAA,KAAA9C,WAAAkwB,GAAApvB,mBACAkK,EAAAhI,kBAAA,KAAAhD,WAAAkwB,GAAAnvB,qBAEA,cAAAiK,EAAA5P,aACA4P,EAAA7H,iBAAA,EACA6H,EAAA5H,eAAA,KAAApD,WAAAkwB,GAAA9uB,iBAGA4J,EAAAnI,gBAAA,EACAmI,EAAA7H,iBAAA,EACA6H,EAAAlI,iBAAA,KAAA9C,WAAAkwB,GAAApvB,qBAGA,QAAAyG,EAAA7J,sBACA,WAAAsN,EAAA5P,aACA4P,EAAAtH,eAAA,EACAsH,EAAApH,gBAAA,EACAoH,EAAArH,iBAAA,KAAA3D,WAAAkwB,GAAAlvB,sBACAgK,EAAAnH,kBAAA,KAAA7D,WAAAkwB,GAAAjvB,yBAGA+J,EAAAtH,eAAA,EACAsH,EAAArH,iBAAA,KAAA3D,WAAAkwB,GAAAlvB,yBAIA8uB,mBAAA3rB,EAAAtJ,GACA,IAAAmQ,EAAA,KACAA,EAAAglB,WAAA,EACA,IAAAE,EAAA,KAAAlwB,WAAAgV,UAAAna,KAAAsJ,kBACA6G,EAAA5P,YAAA,KAAA4E,WAAAkwB,GAAA3vB,oBACA,MAAAyK,EAAA5P,kBAAAL,GAAAiQ,EAAA5P,aAAA,IAAA4P,EAAA5P,aACA4P,EAAAub,SAAA,KAAA/kB,YAAAkL,KAAAtQ,KAAA0F,uBAAAkJ,EAAA5P,aACA4P,EAAAhL,WAAAkwB,GAAA,mBAAAllB,EAAAub,SAAA5kB,YACAqJ,EAAAsb,SAAAtb,EAAAub,SAAAvkB,GAAA,GAAAC,oBACA+I,EAAAilB,eAAAC,EAAAr1B,GACA,WAAAA,EAAA6C,qBAAA,OAAA7C,EAAA6C,sBACA,WAAAsN,EAAA5P,aACA4P,EAAAzI,kBAAA,EACAyI,EAAAtI,kBAAA,EACAsI,EAAAxI,mBAAA,KAAAxC,WAAAkwB,GAAAzvB,gBACAuK,EAAArI,oBAAA,KAAA3C,WAAAkwB,GAAAxvB,mBAGAsK,EAAAzI,kBAAA,EACAyI,EAAAxI,mBAAA,KAAAxC,WAAAkwB,GAAAzvB,mBAIAuK,EAAAtJ,gBAAA,IAGA0uB,iBAAAlP,GACA,IAAAlW,EAAA,KACA,qCAAAkW,EAAA3gB,qBAAA,6BAAA2gB,EAAA3gB,sBAAA,IAAAyK,EAAA5I,iBAEA,OADA4I,EAAAwC,UAAAxC,EAAA5S,GAAA,0DAAA4S,EAAA5S,GAAA,WACA,EAEA,aAAA4S,EAAA8a,+BACA,SAAA9a,EAAAwa,yBAAA,UAAAxa,EAAAwa,yBAIA,GAHAxa,EAAAkb,aAAAlb,EAAA5I,iBACA4I,EAAAmb,mBAAAnb,EAAA1I,kBAEA,4CAAA4e,EAAA3gB,qBAAA,gDAAA2gB,EAAA3gB,oBAAA,CACA,IAAA8vB,EAAArlB,EAAA5I,iBAAA8X,MAAA,KAGAlP,EAAAmb,mBAAAkK,QAIArlB,EAAAkb,aAAA,IAAAlb,EAAA5I,iBAAA,IACA4I,EAAAmb,mBAAAnb,EAAA5I,qBAIA,WAAA4I,EAAA8a,gCAAA,OAAA9a,EAAA8a,gCAAA,UAAA9a,EAAA8a,iCACA,WAAA5E,EAAA3gB,qBACAyK,EAAAkb,aAAA,IAAAhF,EAAAzgB,gBAAA,IACAuK,EAAAmb,mBAAAjF,EAAAzgB,gBACAuK,EAAAob,cAAA,IAAAlF,EAAAxgB,iBAAA,IACAsK,EAAAqb,oBAAAnF,EAAAxgB,mBAGAsK,EAAAkb,aAAA,IAAAhF,EAAAzgB,gBAAA,IACAuK,EAAAmb,mBAAAjF,EAAAzgB,kBAGA,IAAA6vB,EAAAtlB,EAAAulB,4BAAAvlB,EAAAwa,wBAAAxa,EAAAkb,aAAAlb,EAAAob,eACA,MAAAwH,EAAA5iB,EAAAua,kBAAAvQ,UAAA5Y,KAAA+H,gBAAA+c,EAAA/c,eACA,OAAAypB,EACA5iB,EAAAua,kBAAAzuB,KAAA,CACAqN,cAAA+c,EAAA/c,cACAhJ,UAAA+lB,EAAA/lB,UACAmvB,eAAAtf,EAAA8a,+BACAV,YAAAlE,EAAAkE,YACAwE,mBAAA0G,EACA3uB,YAAAqJ,EAAAya,YACAqE,OAAA9e,EAAAmb,mBACAqE,OAAAxf,EAAAqb,oBACA/kB,qBAAA4f,EAAA5f,qBACAtG,WAAAkmB,EAAAlmB,WACAI,YAAA8lB,EAAA9lB,YACAmvB,kBAAArJ,EAAAqJ,kBACAb,eAAAxI,EAAAwI,eACAhsB,oBAAAwjB,EAAAxjB,0BAGA,CACA,IAAA7C,EAAAmQ,EAAAua,kBAAA7Y,KAAAtQ,KAAA+H,gBAAA+c,EAAA/c,eACAtJ,EAAA+uB,mBAAA0G,EACAz1B,EAAA6uB,eAAAxI,EAAAwI,eACA7uB,EAAA6C,oBAAAwjB,EAAAxjB,oBACA7C,EAAA8G,YAAAqJ,EAAAya,YACA5qB,EAAAivB,OAAA9e,EAAAmb,mBACAtrB,EAAA2vB,OAAAxf,EAAAqb,oBACAxrB,EAAAyG,qBAAA4f,EAAA5f,qBACAzG,EAAAG,WAAAkmB,EAAAlmB,WAEAgQ,EAAA5G,kBAEAsrB,gBAAA,SAAAnnB,EAAA1N,GACA,IAAAmQ,EAAA,KACAA,EAAAgc,oBAAAlwB,KAAA+D,GACA,IAAAk1B,EAAA/kB,EAAAgc,oBAAAhS,UAAAhP,GACAA,EAAArE,aAAA4G,GAEA,GAAAwnB,GAAA,GACA,IAAAS,EAAAxlB,EAAAua,kBAAA7Y,KAAA1G,KAAArE,aAAA4G,GAAAvC,EAAA7B,gBAAAtJ,EAAAsJ,eACA,aAAAtJ,EAAA6C,oBACAsN,EAAA5I,iBAAA,OAAAouB,QAAA,IAAAA,OAAA,EAAAA,EAAA1G,OAEA9e,EAAA1I,kBAAA,OAAAkuB,QAAA,IAAAA,OAAA,EAAAA,EAAAhG,YAEA,cAAA3vB,EAAA6C,qBAAA,OAAA7C,EAAA6C,qBAAA,UAAA7C,EAAA6C,oBACAsN,EAAAxI,mBAAA,OAAAguB,QAAA,IAAAA,OAAA,EAAAA,EAAA1G,OACA9e,EAAArI,oBAAA,OAAA6tB,QAAA,IAAAA,OAAA,EAAAA,EAAAhG,YAEA,YAAA3vB,EAAA6C,oBACA,aAAAsN,EAAAwa,wBACAxa,EAAA5H,eAAA,OAAAotB,QAAA,IAAAA,OAAA,EAAAA,EAAA1G,QAEA9e,EAAAlI,iBAAA,OAAA0tB,QAAA,IAAAA,OAAA,EAAAA,EAAA1G,OAEA9e,EAAAhI,kBAAA,OAAAwtB,QAAA,IAAAA,OAAA,EAAAA,EAAAhG,aAEA,YAAA3vB,EAAA6C,oBACAsN,EAAArH,iBAAA,OAAA6sB,QAAA,IAAAA,OAAA,EAAAA,EAAA1G,OAEA9e,EAAAnH,kBAAA,OAAA2sB,QAAA,IAAAA,OAAA,EAAAA,EAAAhG,YAEA,cAAA3vB,EAAA6C,qBAAA,WAAA7C,EAAA6uB,eACA,SAAA1e,EAAAwa,yBAAA,UAAAxa,EAAAwa,wBAAA,CACA,IAAAiL,EAAA,OAAAD,QAAA,IAAAA,OAAA,EAAAA,EAAA1G,OAAA5Y,QAAA,WACAlG,EAAA2a,eAAA,OAAA8K,QAAA,IAAAA,OAAA,EAAAA,EAAAvW,MAAA,KACA,IAAAwW,EAAA,GACA1lB,EAAA2a,eAAAvZ,QAAAukB,IACA,MAAAC,EAAA5lB,EAAA/M,QAAAyO,KAAAmkB,KAAA/3B,QAAA63B,GACA,OAAAC,QAAA71B,GAAA61B,EAAA,CACA,IAAAE,EAAA,CAAAh4B,MAAA83B,EAAA93B,MAAAsR,MAAAwmB,EAAAh4B,MACA83B,EAAA55B,KAAAg6B,MAGA9lB,EAAA/G,WAAA,GAAA0E,KAAA,GAAA7P,MAAA43B,EACA1lB,EAAA2a,eAAA,QAEA3a,EAAAjH,oBAAA,OAAAysB,QAAA,IAAAA,OAAA,EAAAA,EAAA1G,OAIA9e,EAAApL,oBAEAsE,aAAA,SAAAC,GACA,IAAA6G,EAAA,KACA+lB,GAAA,EACA/lB,EAAA/G,WAAA,GAAA0E,KAAA,GAAA7P,MAAAG,OAAA,GACA+R,EAAA/G,WAAA,GAAA0E,KAAA,GAAA7P,MAAAsT,QAAA4kB,IACAhmB,EAAA2a,eAAA7uB,KAAAk6B,EAAAl4B,SAGA,WAAAkS,EAAAma,mBACA,IAAAna,EAAA5I,kBAAA,IAAA4I,EAAA1I,oBAAA,IAAA0I,EAAAxI,oBAAA,KAAAwI,EAAAxI,qBAAA,IAAAwI,EAAArI,qBACA,IAAAqI,EAAAlI,kBAAA,IAAAkI,EAAAhI,mBAAA,IAAAgI,EAAArH,kBAAA,IAAAqH,EAAAnH,qBACAktB,GAAA,IAEA,IAAA/lB,EAAA5I,kBAAA,IAAA4I,EAAA1I,mBAAA,IAAA0I,EAAAxI,oBAAA,KAAAwI,EAAAxI,oBACA,IAAAwI,EAAArI,qBAAA,IAAAqI,EAAAlI,kBAAA,IAAAkI,EAAAhI,mBAAA,IAAAgI,EAAArH,kBAAA,IAAAqH,EAAAnH,mBACAmH,EAAA2a,eAAA1sB,OAAA,OAAA+R,EAAAjH,qBAAA,YAAAiH,EAAAma,mBAAA,gBAAAna,EAAAma,mBACA,cAAAna,EAAAma,mBAAA,eAAAna,EAAAma,mBAAA,IAAAna,EAAA5H,kBACA2tB,GAAA,GAEA9b,YAAA,WACA,GAAA8b,EAAA,KAAAE,EAYAC,EAXAC,EAAA,GAWA,GANAnmB,EAAA2a,eAAAvZ,QAAAglB,IACA,MAAAC,EAAArmB,EAAA/M,QAAAyO,KAAAmkB,KAAA/3B,QAAAs4B,IACA,GAAAC,QAAAt2B,GAAAs2B,GACAF,EAAAr6B,KAAAu6B,EAAAz4B,QAGA,IAAAoS,EAAA2a,eACA3a,EAAA+a,4BAAA,QAAAmL,EAAAlmB,EAAA2a,sBAAA,IAAAuL,OAAA,EAAAA,EAAA/W,OACAnP,EAAAjH,oBAAA,GAEA,IAAAutB,EAAA,GACA,IAAAtmB,EAAAjH,sBACAutB,EAAAtmB,EAAA/M,QAAAyO,KAAA1V,KAAA8B,QAAAkS,EAAAjH,sBAEA,IAAAmd,EAAAlW,EAAAhL,WAAA0M,KAAA1G,KAAA7B,kBAeA,GAdA+c,EAAA3gB,oBAAAyK,EAAAma,kBACAjE,EAAA1gB,cAAAwK,EAAA5I,iBACA8e,EAAAqQ,eAAAvmB,EAAA1I,kBACA4e,EAAAzgB,gBAAAuK,EAAAxI,mBACA0e,EAAAxgB,iBAAAsK,EAAArI,oBACAue,EAAApgB,mBAAAkK,EAAAlI,iBACAoe,EAAAngB,oBAAAiK,EAAAhI,kBACAke,EAAAlgB,sBAAAgK,EAAArH,iBACAud,EAAAjgB,uBAAA+J,EAAAnH,kBACAqd,EAAAhgB,qBAAA,OAAAiwB,QAAA,IAAAA,OAAA,EAAAA,EAAAhX,OACA+G,EAAA/f,cAAA,QAAA8vB,EAAAK,SAAA,IAAAL,OAAA,EAAAA,EAAAr4B,KACAsoB,EAAA9f,eAAA4J,EAAA5H,eAEA8d,EAAAvf,YAAAqJ,EAAAya,YACA,UAAAza,EAAA8a,+BACA,SAAA9a,EAAAwa,yBAAA,UAAAxa,EAAAwa,wBAAA,CAEA,IAAAgM,EAAAxmB,EAAA+a,4BAAA7L,MAAA,KACAuX,EAAAD,EAAArX,KAAA,KACAnP,EAAAkb,aAAA,IAAAuL,EAAAvX,MAAA,KAAAC,KAAA,WACA,IAAAuX,EAAA1mB,EAAAkb,aACAlb,EAAAmb,mBAAAuL,OAGA1mB,EAAAkb,aAAA,IAAAlb,EAAAjH,oBAAA,IACAiH,EAAAmb,mBAAAnb,EAAAjH,wBAGA,QAAAiH,EAAA8a,+BACA,WAAA5E,EAAA3gB,qBACAyK,EAAAkb,aAAA,IAAAhF,EAAApgB,mBAAA,IACAkK,EAAAmb,mBAAAjF,EAAApgB,mBACAkK,EAAAob,cAAA,IAAAlF,EAAAngB,oBAAA,IACAiK,EAAAqb,oBAAAnF,EAAAngB,qBACA,cAAAmgB,EAAA3gB,qBACAyK,EAAAkb,aAAA,IAAAhF,EAAA9f,eAAA,IACA4J,EAAAmb,mBAAAjF,EAAA9f,iBAGA4J,EAAAkb,aAAA,IAAAhF,EAAApgB,mBAAA,IACAkK,EAAAmb,mBAAAjF,EAAApgB,oBAEA,QAAAkK,EAAA8a,iCACA,WAAA5E,EAAA3gB,qBACAyK,EAAAkb,aAAA,IAAAhF,EAAAlgB,sBAAA,IACAgK,EAAAmb,mBAAAjF,EAAAlgB,sBACAgK,EAAAob,cAAA,IAAAlF,EAAAjgB,uBAAA,IACA+J,EAAAqb,oBAAAnF,EAAAjgB,yBAEA+J,EAAAkb,aAAA,IAAAhF,EAAAlgB,sBAAA,IACAgK,EAAAmb,mBAAAjF,EAAAlgB,wBAGAgK,EAAAolB,iBAAAlP,QAEAlW,EAAAwC,UAAA,uCAEA,MAGA9N,mBACA,IAAAsL,EAAA,KACAA,EAAA/Q,yBAAA,EACA+Q,EAAA7Q,wBAAA,EACA6Q,EAAA1R,gBAAA,GACA0R,EAAA5Q,mBAAA,IAGA0B,kBACA,IAAAkP,EAAA,KACAA,EAAA/Q,yBAAA,EACA+Q,EAAA7Q,wBAAA,EACA6Q,EAAA1R,gBAAA,GACA0R,EAAA5Q,mBAAA,IAEAqC,eAAA,SAAAymB,GACA,IAAAlY,EAAA,KACAA,EAAAtO,sBAAA,GAKAE,gBAAA,SAAAsmB,GACA,IAAAlY,EAAA,KACAA,EAAAtO,sBAAA,GAEAC,iBAAA,WACA,IAAAqO,EAAA,KACAA,EAAAjG,kBAAA,EACAiG,EAAA/F,qBAAA,EACA+F,EAAAtO,sBAAA,EACAsO,EAAA7F,uBAAA,GACAqG,EAAA,wBAAAC,MAAA,QACAwJ,YAAA,WACAzJ,EAAA,wBAAAC,MAAA,QACAwJ,YAAA,WACAjK,EAAAkK,wBACA,OACA,MAEA9P,+BAAA,aAAA6c,EAAA,WAAAW,EAAA,mBAAAC,EAAA,qBAAAC,EAAA,kBAAAX,EAAA,YAAAtH,EAAA,OAAAkI,EAAA,WAAAC,IAAA,IAAA2O,EACA3mB,EAAA,KACA,MAAA4iB,EAAA5iB,EAAA/N,WAAA+X,UAAA6Y,KAAA1pB,gBAAA8d,GACA2P,EAAA5mB,EAAA/N,WAAA+X,UAAA6Y,KAAA1yB,YAAAynB,GACA,IAAAiP,EACA,QAAAjE,IAAA,IAAAgE,GAAA7O,EA+DA,CACA,IAAA+O,EAAA9mB,EAAA/N,WAAAyP,KAAA1G,KAAAqkB,cAAArH,EAAAqH,aACAyH,EAAA3tB,cAAA8d,EACA6P,EAAA32B,UAAAynB,EACAkP,EAAA12B,YAAAwnB,EACAkP,EAAA9G,WAAA,KACA8G,EAAAC,aAAA,KACAD,EAAA7G,aAAA,KACA6G,EAAA5G,cAAA,KACA4G,EAAA3G,iBAAA,KACA2G,EAAAp0B,oBAAA,SACAo0B,EAAApE,cAAA1K,EAAA0K,cACAoE,EAAAzH,YAAArH,EAAAqH,YACAyH,EAAA30B,kBAAA,EACA20B,EAAA3P,oBAEA,IAAA6P,EAAAhnB,EAAAyb,gBAAA/Z,KAAAulB,KAAA5P,cAAAW,EAAAqH,aACA2H,EAAA/P,eACA+P,EAAA5P,WAAAS,EACAmP,EAAA9P,eAAAU,EACAoP,EAAA7P,oBACA6P,EAAA3P,YAAAW,EAAAqH,YACA2H,EAAAE,SAAAlnB,EAAAzG,uBAAAiR,SACAwc,EAAAG,aAAAtX,EAEAiI,EAAA1W,QAAAgmB,IACA,IAAAC,EAAArnB,EAAA0b,sBAAAha,KAAA4lB,KAAAjQ,cAAAW,EAAAqH,aACAgI,EAAAluB,cAAAiuB,EAAAjuB,cACAkuB,EAAAl3B,UAAAi3B,EAAAj3B,UACAk3B,EAAAhQ,YAAAW,EAAAqH,kBA5FA,CACA,IAAAkI,EAAA,GACAC,EAAA,GACApiB,EAAA,EAOA,GANApF,EAAA/N,WAAAmP,QAAAqmB,IACAA,EAAAt1B,kBAAA,GAAAiT,GACApF,EAAA2b,SAAA,EACAvW,KACApF,EAAA2b,SAAA,IAEA,GAAA3b,EAAA2b,SACA3b,EAAA/N,WAAAmP,QAAAhQ,IACA,GAAAA,EAAAe,iBAAA,CACA,IAAAu1B,EAAA,GACAA,EAAA57B,KAAAsF,GACA,IAAAu2B,EAAAD,EAAAhmB,KAAA1G,KAAAqkB,aACAkI,EAAAI,EAAAtI,eAGAmI,EAAA7lB,SAAA4lB,GAAA,MAEA,CACA,MAAA9E,EAAAziB,EAAA/N,WAAA+N,EAAA/N,WAAAhE,OAAA,GACAu5B,EAAA/E,EAAApD,YAAA,EACArf,EAAA2b,SAAA,EAEA,GAAA3b,EAAA/N,WAAAhE,OAAA,EACA44B,EAAA7mB,EAAA/N,WAAAhE,WAEA,CACA,MAAAw0B,EAAAziB,EAAA/N,WAAA+N,EAAA/N,WAAAhE,OAAA,GACA44B,EAAApE,EAAAC,cAAA,EAcA,GAZA1iB,EAAA/N,WAAAnG,KAAA,CACAqN,cAAA,GAAAhJ,UAAAynB,EAAAxnB,YAAAwnB,EAAAoI,WAAA,KACA+G,aAAA,KACA9G,aAAA,KACAC,cAAA,KACAC,iBAAA,KACAztB,oBAAA,SACAgwB,cAAAmE,EACAxH,YAAAmI,EACAr1B,kBAAA,EACAglB,sBAEA,IAAAU,EAAA,CACA7X,EAAAyb,gBAAA3vB,KACA,CACA,aAAAmrB,EAAA,WAAAY,EAAA,eAAAD,EAAA,kBAAAT,EAAA,YAAAqQ,EACA,SAAAxnB,EAAAzG,uBAAAiR,SACA,aAAAqF,IAGA,IAAA+X,EAAA5nB,EAAA/N,WAAAyP,KAAA1G,KAAA7K,YAAAynB,GACAgQ,EAAAvI,YAAAmI,OACAz3B,GAAAiQ,EAAA0b,wBACA1b,EAAA0b,sBAAA,IAEA5D,EAAA1W,QAAAgmB,IACApnB,EAAA0b,sBAAA5vB,KAAA,CAAAqN,cAAAiuB,EAAAjuB,cAAAhJ,UAAAi3B,EAAAj3B,UAAAknB,YAAAmQ,OAoCA,QAAAb,EAAA3mB,EAAAY,MAAAmf,kBAAA,IAAA4G,KAAAtrB,SAEA7M,kBACA,IAAAwR,EAAA,KACAA,EAAA+S,iBAAAtE,OAAA8J,eAAAhS,YAEAhY,cAAA,WACA,IAAAyR,EAAA,KACA,IAAAuiB,EAAAviB,EAAAY,MAAAkK,OAAA0V,OAEA,IAAA1lB,EAAAwT,SAAA8J,eAAA,eAEAI,EAAA1d,EAAAhN,MACA,IAAAkS,EAAA+S,mBACAyF,IAAAvC,WAAAjW,EAAA+S,iBAAA,IACA/S,EAAA+S,iBAAA,IAEA,MAAAyF,GAAA,IAAAA,EACAhY,EAAA,mBAAA8S,SAAA,QAGA9S,EAAA,mBAAAE,YAAA,QAEA,IAAA+X,EAAA,GACAC,EAAA,GACA,GAAA6J,EAAA,CACAviB,EAAAhR,cAAAoS,QAAA,CAAAhQ,EAAAxC,KACAoR,EAAAhR,cAAAJ,GAAAwS,QAAAuX,IACAD,EAAA5sB,KAAA6sB,GACAF,EAAAC,EAAA3lB,OAAA6lB,IACA,IAAAC,EAAA7Y,EAAA5S,GAAA,MAAAwrB,EAAAxoB,aAAA4P,EAAA5S,GAAAwrB,EAAAxoB,aAAA4P,EAAA5S,GAAAwrB,EAAAzoB,WACA,OAAA0oB,EAAA3S,QAAA,UAAAhE,cAAAwS,SAAA8D,EAAAtS,QAAA,UAAAhE,mBAGAlC,EAAA5Q,mBAAAR,GAAA6pB,EACAC,EAAA,GACAD,EAAA,KAEA,IAAArT,EAAA,EACA,QAAA0T,KAAA9Y,EAAA5Q,mBACA4Q,EAAA5Q,mBAAA0pB,GAAA7qB,OAAA,GACAmX,IAMA,OAFApF,EAAAvP,iBADA2U,EAAA,GAGApF,EAAA5Q,mBAEA,CACA4Q,EAAA9Q,uBAAAkS,QAAA,CAAAhQ,EAAAxC,KACAoR,EAAA9Q,uBAAAN,GAAAwS,QAAAuX,IACAD,EAAA5sB,KAAA6sB,GACAF,EAAAC,EAAA3lB,OAAA6lB,IACA,IAAAC,EAAA7Y,EAAA5S,GAAA,MAAAwrB,EAAAxoB,aAAA4P,EAAA5S,GAAAwrB,EAAAxoB,aAAA4P,EAAA5S,GAAAwrB,EAAAzoB,WACA,OAAA0oB,EAAA3S,QAAA,UAAAhE,cAAAwS,SAAA8D,EAAAtS,QAAA,UAAAhE,mBAGAlC,EAAA5Q,mBAAAR,GAAA6pB,EACAC,EAAA,GACAD,EAAA,KAEA,IAAArT,EAAA,EACA,QAAA0T,KAAA9Y,EAAA5Q,mBACA4Q,EAAA5Q,mBAAA0pB,GAAA7qB,OAAA,GACAmX,IAMA,OAFApF,EAAAvP,iBADA2U,EAAA,GAGApF,EAAA5Q,qBAGAC,UAAA6oB,GACA,IAAAlY,EAAA,KACA6nB,EAAA,EACA,qBAAA3P,EAAA4P,QAAAvqB,GACAyC,EAAA/Q,wBASA+Q,EAAAhL,WAAA/G,OAAA,KAGA+R,EAAAwC,UAAAxC,EAAA5S,GAAA,gCAAA4S,EAAA5S,GAAA,WACA,GAZA4S,EAAA/N,WAAAhE,OAAA,IAAAiqB,EAAA6P,QAAAxqB,KAAA2a,EAAA4P,QAAAvqB,KAGAyC,EAAAwC,UAAAxC,EAAA5S,GAAA,gCAAA4S,EAAA5S,GAAA,WACA,IAYA8qB,EAAA8P,eAAAn4B,QAAAsC,uBAAApC,GAAAmoB,EAAA8P,eAAAn4B,QAAAsC,mBACA6N,EAAAhR,cAAAoS,QAAA,CAAApV,EAAA4C,KACAoR,EAAAoc,iBAAAxtB,GAAAwS,QAAAykB,IACA,GAAA3N,EAAA+P,eAAAC,KAAAj6B,OACA43B,EAAA1sB,gBAAA+e,EAAA8P,eAAAn4B,QAAAsJ,gBACA0uB,EAAAj5B,GAGAi3B,EAAA1sB,gBAAA+e,EAAA+P,eAAAp4B,QAAAsJ,gBACA0uB,EAAAj5B,OAIAi5B,IAAA3P,EAAA8P,eAAAn4B,QAAAwvB,cAUA9vB,UAAA,SAAA2oB,EAAAld,GACA,uBAAAkd,EAAA9mB,KAAAmM,KAIA2a,EAAA1lB,kBACA,IAGAN,uBAAA,SAAAgmB,GACA,IAAAlY,EAAA,KACAA,EAAA/Q,yBAMA+Q,EAAA3K,WACA2K,EAAA5G,mBANAoH,EAAA,oBAAAsL,MAAA,OACA9L,EAAA/N,WAAAmP,QAAA,CAAA+mB,EAAAC,KACAD,EAAAzF,cAAA0F,EAAA,MAOA54B,eAAAskB,EAAAllB,EAAA0C,GACA,IAAA0O,EAAA,KACA,QAAAjQ,GAAA+jB,EAAAgP,QACA,QAAA/yB,GAAAuB,EAAA,CACA,IAAA+2B,EAAAroB,EAAA/N,WAAA+X,UAAAse,KAAAnvB,gBAAA2a,EAAAgP,QAAAjzB,QAAAsJ,eACAovB,EAAAvoB,EAAAhR,cAAAJ,GAAAob,UAAAwe,KAAArvB,gBAAA2a,EAAAgP,QAAAjzB,QAAAsJ,gBACA,GAAAovB,GACAvoB,EAAAhR,cAAAJ,GAAAga,OAAA5I,EAAAhR,cAAAJ,GAAAsG,QAAA4e,EAAAgP,QAAAjzB,SAAA,IAEA,GAAAw4B,IACAroB,EAAA/N,WAAA2W,OAAAyf,EAAA,GACAroB,EAAA3P,UAAAyjB,EAAAgP,QAAAjzB,QAAAikB,EAAAllB,EAAA0C,QAEA,CACA,IAAA+2B,EAAAroB,EAAAhL,WAAAgV,UAAAse,KAAAnvB,gBAAA2a,EAAAgP,QAAAjzB,QAAAsJ,eACAovB,EAAAvoB,EAAA9Q,uBAAAN,GAAAob,UAAAwe,KAAArvB,gBAAA2a,EAAAgP,QAAAjzB,QAAAsJ,gBACA,GAAAovB,GACAvoB,EAAA9Q,uBAAAN,GAAAga,OAAA5I,EAAA9Q,uBAAAN,GAAAsG,QAAA4e,EAAAgP,QAAAjzB,SAAA,IAEA,GAAAw4B,IACAroB,EAAAhL,WAAA4T,OAAAyf,EAAA,GACAroB,EAAAxP,UAAAsjB,EAAAgP,QAAAjzB,QAAAjB,MAKAkzB,qBAAAkB,GACA,IAAAhjB,EAAA,KACA,QAAAhU,EAAA,EAAAA,EAAAgU,EAAA/N,WAAAhE,OAAAjC,IACA,QAAA65B,EAAA,EAAAA,EAAA75B,EAAA65B,IACA,GAAA7lB,EAAA/N,WAAAjG,GAAAmN,eAAA6G,EAAA/N,WAAA4zB,GAAA1sB,gBAAA6G,EAAA5S,GAAA4S,EAAA/N,WAAAjG,GAAAoE,cAAA4P,EAAA5S,GAAA4S,EAAA/N,WAAA4zB,GAAAz1B,cACA4P,EAAA5S,GAAA4S,EAAA/N,WAAAjG,GAAAoE,aAAA8R,eAAAlC,EAAA5S,GAAA4S,EAAA/N,WAAA4zB,GAAAz1B,aAAA8R,eACA,YAAAnS,GAAAizB,EAAAhjB,EAAA5S,GAAA4S,EAAA/N,WAAAjG,GAAAoE,aAAA4P,EAAA5S,GAAA4S,EAAA/N,WAAAjG,GAAAmN,eAIA,UAEAvE,mBACA,IAAAoL,EAAA,KACAA,EAAA7K,WAAA,GACA,mBAAA6K,EAAArL,UACAqL,EAAAhL,WAAAoM,QAAAqnB,IACAA,EAAAlJ,kBAAA,QAEAvf,EAAAua,kBAAAtsB,OAAA,GACA+R,EAAAua,kBAAAnZ,QAAAsnB,IACAA,EAAAnJ,kBAAA,QAGAvf,EAAA7K,WAAA,QAGA6K,EAAAhL,WAAAoM,QAAAqnB,IACAA,EAAAlJ,kBAAA,OAEAvf,EAAAua,kBAAAtsB,OAAA,GACA+R,EAAAua,kBAAAnZ,QAAAsnB,IACAA,EAAAnJ,kBAAA,OAGAvf,EAAA7K,WAAA,OAGA6sB,qBAAAnnB,GACA,IACAuK,EAAA,EAMA,OALAvK,EAAAuG,QAAAunB,KACA,IAAAA,EAAA5tB,eAAA,IAAA4tB,EAAA1tB,cAAA,IAAA0tB,EAAA5tB,eAAA,IAAA4tB,EAAA1tB,mBAAAlL,GAAA44B,EAAA5tB,oBAAAhL,GAAA44B,EAAA1tB,gBACAmK,EAAA,KAGAA,GAEA3N,cAAAqc,GACA,IACA8U,EAAA9U,EAAAyC,QACA,IAAAqS,GAAA,KAAAA,GAAA,KAAAA,GAAA9U,EAAAthB,kBAEAC,eAAAqhB,GACA,IAAA8U,EAAA9U,EAAAyC,QACA,KAAAqS,GAAA,KAAAA,GAAA9U,EAAAthB,kBAEAiG,YAAA,SAAAowB,EAAAC,GACA,IAAAC,EAAA,GAAAF,EACA,SAAAE,EACA,OAAAA,EAAA96B,QAAA66B,EAAAD,EACAE,EAAAtU,UAAA,EAAAqU,GAAA,SCt6DkX,ICQ9W,G,UAAY,eACd,EACAx8B,EACA+N,GACA,EACA,KACA,WACA,OAIa,e,gCClBf,IAAIzO,EAA8B,EAAQ,QAC1CC,EAAUD,GAA4B,GAEtCC,EAAQC,KAAK,CAACC,EAAOC,EAAI,GAAI,KAE7BD,EAAOF,QAAUA","file":"js/chunk-bc26155c.js","sourcesContent":["export * from \"-!../../../../node_modules/vue-style-loader/index.js??ref--7-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Datareport.vue?vue&type=style&index=0&id=3f331cb8&prod&scoped=true&lang=css&\"","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".mCSB_inside>.mCSB_container[data-v-3f331cb8]{margin-right:30px}.width80[data-v-3f331cb8]{width:80px}.width120[data-v-3f331cb8]{width:110px}.invalid-feedback[data-v-3f331cb8]{white-space:normal;font-size:110%}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Datareport.vue?vue&type=style&index=0&id=3f331cb8&prod&scoped=true&lang=css&\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"67ae9d9b\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ReportPreview.vue?vue&type=style&index=0&id=e8fc039a&prod&scoped=true&lang=css&\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"515b791d\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","export * from \"-!../../../../node_modules/vue-style-loader/index.js??ref--7-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ReportPreview.vue?vue&type=style&index=0&id=e8fc039a&prod&scoped=true&lang=css&\"","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('section',{staticClass:\"page-action\"},[_c('div',{staticClass:\"left-menu-tab datareport\"},[_c('div',{class:_vm.maindiv},[_c('loader',{attrs:{\"isVisible\":_vm.isLoading}}),_c('div',{staticClass:\"accordion md-accordion left-filter\",attrs:{\"id\":\"accordionEx\",\"role\":\"tablist\",\"aria-multiselectable\":\"true\"}},[_c('div',{class:_vm.editclass},[_c('div',{staticClass:\"card-header filter-head p-0\",attrs:{\"role\":\"tab\",\"id\":\"headingOne1\"}},[_c('h5',{staticClass:\"mb-0 px-2\"},[_vm._v(_vm._s(_vm.ReportName)+\" \"),_c('span',{staticClass:\"expand_all_filters\"},[_c('span',{attrs:{\"id\":\"SearchData\"}},[_c('a',{staticClass:\"collapsed\",attrs:{\"title\":_vm.$t('EditReportName'),\"data-toggle-tooltip\":\"tooltip\"},on:{\"click\":function($event){return _vm.editreport()}}},[_c('em',{staticClass:\"fa fa-pencil\",staticStyle:{\"font-size\":\"20px\"},attrs:{\"aria-hidden\":\"true\"}})])]),_c('span',[_c('a',{staticClass:\"collapsed\",attrs:{\"title\":\"Collapse\",\"data-toggle-tooltip\":\"tooltip\"},on:{\"click\":function($event){return _vm.collapsedclick()}}},[_c('em',{staticClass:\"fa fa-angle-double-left mt-1\",attrs:{\"aria-hidden\":\"true\"}})])])])])])]),_c('div',{class:_vm.saveclass},[_c('div',{staticClass:\"card-header filter-head p-0\",attrs:{\"role\":\"tab\",\"id\":\"headingOne1\"}},[_c('h5',{staticClass:\"mb-0 pl-2 mt-1\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.savereportname),expression:\"savereportname\"}],class:{'form-control p-1':true,'is-invalid': _vm.savereportname.length >100},staticStyle:{\"width\":\"83%\"},attrs:{\"type\":\"text\"},domProps:{\"value\":(_vm.savereportname)},on:{\"input\":function($event){if($event.target.composing)return;_vm.savereportname=$event.target.value}}}),_c('span',{staticClass:\"expand_all_filters\"},[_c('span',{attrs:{\"id\":\"SearchData\"}},[_c('a',{staticClass:\"collapsed\",attrs:{\"title\":_vm.$t('Save'),\"data-toggle-tooltip\":\"tooltip\"},on:{\"click\":function($event){return _vm.savereport()}}},[_c('em',{staticClass:\"fa fa-floppy-o mt-1\",attrs:{\"aria-hidden\":\"true\"}})])])])])])]),_c('div',{staticClass:\"card-panel\"},[_c('div',{staticClass:\"mb-0 d-lg-block p-2 border\"},[_c('div',{staticClass:\"input-group customsearchbox\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.MainSearchmodel),expression:\"MainSearchmodel\"}],staticClass:\"form-control searchcustomfilter border-right-0\",attrs:{\"type\":\"text\",\"maxlength\":\"50\",\"id\":\"searchinput\",\"placeholder\":\"Search by Name\",\"autocomplete\":\"off\"},domProps:{\"value\":(_vm.MainSearchmodel)},on:{\"keydown\":_vm.ListFiltering,\"keyup\":_vm.ListFiltering,\"mouseup\":_vm.SelectAllSearch,\"mouseleave\":_vm.SelectAllSearch,\"input\":function($event){if($event.target.composing)return;_vm.MainSearchmodel=$event.target.value}}}),_vm._m(0)])]),_vm._l((_vm.submodulecodename),function(name,index){return _c('div',{key:index,staticClass:\"card\",staticStyle:{\"border-bottom\":\"1px solid #929292\"}},[_c('div',{staticClass:\"card-header pl-0\",attrs:{\"role\":\"tab\",\"id\":'headingOnee' + index}},[_c('h5',{staticClass:\"mb-0\"},[_c('a',{class:index == 0 ? '' : 'collapsed',attrs:{\"data-toggle\":\"collapse\",\"data-parent\":\"#accordionEx\",\"href\":\"javascript:;\",\"aria-expanded\":index == 0 ? true : false,\"data-target\":'#collapseOne' + index,\"aria-controls\":'collapseOne' + index}},[_c('em',{staticClass:\"fa fa fa-file-text-o\",attrs:{\"aria-hidden\":\"true\"}}),_c('span',{staticClass:\"font-weight-bold\"},[_vm._v(\" \"+_vm._s(_vm.GetLocalizedValue(name.SubModule)))]),_c('em',{staticClass:\"fa fa-angle-down rotate-icon\",attrs:{\"aria-hidden\":\"true\"}})]),_vm._m(1,true)])]),_c('div',{class:_vm.modulelisting.length == 0 ? 'd-none' : _vm.modulelisting[index].length == 0 && !_vm.showModuleListForFilter ||\n                        _vm.modulelistingforfilter[index].length == 0 && _vm.showModuleListForFilter ? 'text-center text-danger d-flex align-items-center justify-content-center norecs pt-2' : 'd-none'},[_vm._v(\" \"+_vm._s(_vm.$t(\"NoFieldAvailable\")))]),_c('div',{class:index == 0 ? 'collapse multi-collapse show':'collapse multi-collapse',attrs:{\"id\":'collapseOne' + index,\"role\":\"tabpanel\",\"aria-labelledby\":'headingOnee' + index,\"data-parent\":\"#accordionEx\"}},[_c('PerfectScrollbar',[_c('div',{staticClass:\"card-body p-0 customScrollForLeftBar llt\",staticStyle:{\"max-height\":\"300px\"}},[_c('div',{staticClass:\"form-group\"},[_c('ul',{staticClass:\"nav nav-pills flex-column left-tab responivecustomtab lefttabiconfix\"},[(_vm.showModuleListForField)?_c('draggable',{staticClass:\"draggable-list\",attrs:{\"list\":_vm.searchColumnfilter.length == 0 ? _vm.modulelisting[index] : _vm.searchColumnfilter[index],\"group\":\"my-groupForFields\",\"move\":_vm.checkMove,\"item-key\":\"CustomFieldId\"},on:{\"start\":function($event){_vm.drag = true},\"end\":_vm.onDragEnd,\"change\":function($event){return _vm.GetDraggedItem($event, index, name.SubModule)}},model:{value:(_vm.modulelistingmodel),callback:function ($$v) {_vm.modulelistingmodel=$$v},expression:\"modulelistingmodel\"}},_vm._l(((_vm.searchColumnfilter.length == 0 ? _vm.modulelisting[index] : _vm.searchColumnfilter[index])),function(element,elementIndex){return _c('li',{key:elementIndex,staticClass:\"nav-item parent-element\",attrs:{\"id\":\"StopDragfield\"}},[_c('span',{staticClass:\"nav-link left-menu px-3\"},[_c('em',{class:element.FieldIcons != undefined ? element.FieldIcons + ' ' + 'float-left' : \n                                                        element.dttype[0].icon != null ? element.dttype[0].icon + ' ' + 'float-left' : 'float-left',attrs:{\"aria-hidden\":\"true\"}}),_c('span',{staticClass:\"text-truncate float-left\",staticStyle:{\"width\":\"55%\"},attrs:{\"data-toggle-tooltip\":_vm.GetLocalizedValue(element.FieldName,\n                                                                element.DisplayName),\"title\":_vm.GetLocalizedValue(element.FieldName, element.DisplayName)}},[_vm._v(\" \"+_vm._s(_vm.GetLocalizedValue(element.FieldName, element.DisplayName))+\" \")]),_c('a',{attrs:{\"href\":\"javascript:;\"}},[_c('em',{staticClass:\"fa fa-plus float-right mt-1 text-success pr-0\",attrs:{\"aria-hidden\":\"true\"},on:{\"click\":function($event){return _vm.Addfields(element, $event, index, name.SubModule)}}})])])])}),0):_vm._e(),(_vm.showModuleListForFilter)?_c('draggable',{staticClass:\"draggable-list\",attrs:{\"list\":_vm.searchColumnfilter.length == 0 ? _vm.modulelistingforfilter[index] : _vm.searchColumnfilter[index],\"group\":\"my-groupForFilter\",\"move\":_vm.checkMove,\"item-key\":\"CustomFieldId\"},on:{\"start\":function($event){_vm.drag = true},\"end\":_vm.onDragEnd,\"change\":function($event){return _vm.GetDraggedItem($event, index)}},model:{value:(_vm.modulelistingmodel),callback:function ($$v) {_vm.modulelistingmodel=$$v},expression:\"modulelistingmodel\"}},_vm._l((_vm.searchColumnfilter.length == 0 ? _vm.modulelistingforfilter[index] : _vm.searchColumnfilter[index]),function(element,elemIndex){return _c('li',{key:elemIndex,staticClass:\"nav-item parent-element\",attrs:{\"id\":\"StopDragfield\"}},[_c('span',{staticClass:\"nav-link left-menu px-3\"},[_c('em',{class:element.FieldIcons != undefined ? element.FieldIcons + ' ' + 'float-left' : \n                                                            element.dttype[0].icon != null ? element.dttype[0].icon + ' ' + 'float-left' : 'float-left',attrs:{\"aria-hidden\":\"true\"}}),_c('span',{staticClass:\"text-truncate float-left\",staticStyle:{\"width\":\"55%\"},attrs:{\"data-toggle-tooltip\":element.FieldName,\"title\":_vm.GetLocalizedValue(element.FieldName, element.DisplayName)}},[_vm._v(\" \"+_vm._s(_vm.GetLocalizedValue(element.FieldName, element.DisplayName))+\" \")]),_c('a',{attrs:{\"href\":\"javascript:;\"}},[_c('em',{staticClass:\"fa fa-sliders float-right mt-1 text-primary pr-0\",attrs:{\"aria-hidden\":\"true\"},on:{\"click\":function($event){return _vm.AddFilter(element, index)}}})])])])}),0):_vm._e()],1)])])])],1)])}),(_vm.SearchNoRecord)?_c('div',{staticClass:\"text-center text-danger d-flex align-items-center justify-content-center norecs pt-2\"},[_vm._v(\" \"+_vm._s(_vm.$t(\"NoRecordfound\")))]):_vm._e()],2)])],1),_c('div',{class:_vm.showdiv,staticStyle:{\"float\":\"left\",\"width\":\"50px\"},on:{\"click\":function($event){return _vm.expandclick()}}},[_vm._m(2)]),_c('div',{class:_vm.fieldpan},[_c('div',{staticClass:\"tab-style w-100\"},[_c('div',{staticClass:\"tab_container\",attrs:{\"role\":\"tabpanel\"}},[_c('div',{staticClass:\"tab-content\"},[_c('b-tabs',{attrs:{\"pills\":\"\"}},[_c('b-tab',{ref:\"FIELDS\",staticClass:\"fields\",attrs:{\"title\":\"FIELDS\",\"active\":_vm.showModuleListForField},on:{\"click\":_vm.FieldTabClicked}},[_c('div',{staticClass:\"col-12 p-0 float-left\"},[_c('h6',{staticClass:\"mb-1\"},[_vm._v(_vm._s(_vm.$t('Groups')))]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.Groupsearchmodel),expression:\"Groupsearchmodel\"}],class:_vm.Grouplist.length == 0 ? 'form-control' : 'form-control disabled',attrs:{\"placeholder\":\"Add Group\"},domProps:{\"value\":(_vm.Groupsearchmodel)},on:{\"keypress\":_vm.GroupSearching,\"input\":function($event){if($event.target.composing)return;_vm.Groupsearchmodel=$event.target.value}}}),(_vm.Groupsearchmodel != '')?_c('div',{staticClass:\"autosuggestion\",class:_vm.itemclass},[_vm._l((_vm.filtergroup),function(item,i){return _c('div',{key:i},[_c('div',[_c('div',{on:{\"click\":function($event){return _vm.selectfiltervalue(item)}}},[_vm._v(\" \"+_vm._s(_vm.GetLocalizedValue(item.FieldName, item.DisplayName))+\" : \"+_vm._s(item.MainFieldname)+\" \")])])])}),(_vm.filtergroup.length == 0)?_c('div',{staticClass:\"text-center text-danger d-flex align-items-center justify-content-center norecs pt-2\"},[_vm._v(\" \"+_vm._s(_vm.$t(\"NoRecordfound\"))+\" \")]):_vm._e()],2):_vm._e(),_c('br'),_c('draggable',{staticClass:\"draggable-list\",attrs:{\"list\":_vm.Grouplist,\"group\":\"my-groupGrouplist\",\"item-key\":\"CustomFieldId\"},on:{\"start\":function($event){_vm.drag = true},\"end\":function($event){_vm.drag = false}},model:{value:(_vm.Grouplist),callback:function ($$v) {_vm.Grouplist=$$v},expression:\"Grouplist\"}},_vm._l((_vm.Grouplist),function(element,index){return _c('div',{key:index,staticClass:\"list-item\"},[_c('span',{staticClass:\"text-truncate float-left\",staticStyle:{\"width\":\"200px\"},attrs:{\"data-toggle-tooltip\":element.FieldName,\"title\":element.FieldName}},[_vm._v(\" \"+_vm._s(_vm.GetLocalizedValue(element.FieldName, element.DisplayName))+\" \")]),_c('a',[_c('em',{staticClass:\"fa fa-trash-o text-danger\",attrs:{\"aria-hidden\":\"true\"},on:{\"click\":function($event){return _vm.DeleteGroupFields(element, $event, index)}}})])])}),0)],1),_c('hr'),_c('div',{staticClass:\"col-12 p-0 float-left\"},[_c('h6',{staticClass:\"mb-1\"},[_vm._v(_vm._s(_vm.$t('COLUMNS')))]),_c('div',{staticClass:\"verticle-action\",staticStyle:{\"top\":\"-3px\"}},[_c('em',{class:_vm.CalculatedUIEnabled == true ? 'fa fa-ellipsis-v action_icon' : 'fa fa-ellipsis-v action_icon disabled',attrs:{\"id\":\"btnpopup\",\"aria-hidden\":\"true\"},on:{\"click\":function($event){return _vm.openActionIcon($event)}}}),(_vm.showRowLevelFunction)?_c('span',{staticClass:\"action-list-box\",staticStyle:{\"width\":\"240px\",\"display\":\"block\"}},[_c('span',{staticClass:\"list-actions fsm-list\",staticStyle:{\"padding-left\":\"0\"},attrs:{\"id\":\"action-list\"}},[_c('a',{staticClass:\"update actions-onclick\",on:{\"click\":_vm.OpenCalculatedUI}},[_c('span',{staticClass:\"text\"},[_vm._v(_vm._s(_vm.$t('CalcultedUIName')))])]),_c('em',{staticClass:\"fa fa-times close close-action\",attrs:{\"aria-hidden\":\"true\"},on:{\"click\":function($event){return _vm.closeActionIcon($event)}}})])]):_vm._e()]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.ColumnSearchmodel),expression:\"ColumnSearchmodel\"}],staticClass:\"form-control\",attrs:{\"placeholder\":\"Add Column\"},domProps:{\"value\":(_vm.ColumnSearchmodel)},on:{\"keypress\":_vm.GroupSearching,\"input\":function($event){if($event.target.composing)return;_vm.ColumnSearchmodel=$event.target.value}}}),(_vm.ColumnSearchmodel != '')?_c('div',{staticClass:\"autosuggestion\",class:_vm.itemclass,staticStyle:{\"z-index\":\"9999\"}},[_vm._l((_vm.filterColumngroup),function(item,indx){return _c('div',{key:indx},[_c('div',[_c('div',{on:{\"click\":function($event){return _vm.selectfilterColumnvalue(item)}}},[_vm._v(\" \"+_vm._s(_vm.GetLocalizedValue(item.FieldName, item.DisplayName))+\" : \"+_vm._s(item.MainFieldname)+\" \")])])])}),(_vm.filterColumngroup.length == 0)?_c('div',{staticClass:\"text-center text-danger d-flex align-items-center justify-content-center norecs pt-2\"},[_vm._v(\" \"+_vm._s(_vm.$t(\"NoRecordfound\"))+\" \")]):_vm._e()],2):_vm._e(),_c('div',{staticClass:\"dashed_bod_drag text-center mt-2\"},[_c('h6',{staticClass:\"p-2 m-0\"},[_vm._v(\"Drag Fields Here \")]),_c('draggable',{staticClass:\"draggable-list\",attrs:{\"list\":_vm.Columnlist,\"group\":\"my-groupForFields\",\"id\":\"TargetDivID\",\"move\":_vm.checkMove,\"item-key\":\"CustomFieldId\"},on:{\"start\":function($event){_vm.drag = true},\"end\":_vm.ColumnListDisplayOrder},model:{value:(_vm.Columnlist),callback:function ($$v) {_vm.Columnlist=$$v},expression:\"Columnlist\"}},_vm._l((_vm.Columnlist),function(element,indx){return _c('div',{key:indx,staticClass:\"list-item parent-element\",attrs:{\"id\":\"TargetDivID\"}},[(element.Calculated_Field == true)?_c('span',{staticStyle:{\"font-size\":\"22px\",\"float\":\"left\",\"margin-right\":\"10px\"}},[_vm._v(\"f\"),_c('sub',{staticStyle:{\"font-size\":\"12px\"}},[_vm._v(\"x\")])]):_vm._e(),_c('span',{staticClass:\"text-truncate float-left\",staticStyle:{\"width\":\"200px\"},attrs:{\"data-toggle-tooltip\":element.FieldName,\"title\":_vm.GetLocalizedValue(element.FieldName, element.DisplayName)}},[_vm._v(\" \"+_vm._s(_vm.GetLocalizedValue(element.FieldName, element.DisplayName))+\" \"+_vm._s(element.ExpresssionFieldName)+\" \")]),_c('div',{staticClass:\"parentdiv datarepfix filters\"},[_c('a',{attrs:{\"aria-hidden\":\"true\"},on:{\"click\":function($event){return _vm.DeleteColumnFields(element, $event)}}},[_c('em',{staticClass:\"fa fa-trash-o text-danger\"})]),_c('a',{attrs:{\"aria-hidden\":\"true\"},on:{\"click\":function($event){return _vm.openSetting(element, $event)}}},[_c('em',{staticClass:\"fa fa-cog action_icon_cv\"})]),_c('div',[_c('div',{staticClass:\"verticle-action rt25 rt502\"},[_c('span',{staticClass:\"action-list-box small setting-div-box\"},[_c('span',{staticClass:\"list-actions text-left p-0 datarep ml-3\",staticStyle:{\"width\":\"480px\"},attrs:{\"id\":\"action-list\"}},[_c('div',{staticClass:\"float-left col-12 p-0\"},[_c('div',{staticClass:\"container-fluid p-0 mb-3\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"theme-primary partition-full\"},[_c('span',{staticClass:\"p-name text-white mt-2\"},[_vm._v(\" \"+_vm._s(_vm.$t('Setting'))+\" \")])])])])]),_c('div',{staticClass:\"col-12 float-left\"},[_c('div',{staticClass:\"col-12 p-0 float-left\"},[_c('div',{staticClass:\"form-group\"},[_c('label',[_vm._v(_vm._s(_vm.$t('DisplayName')))]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.modeldisplayname),expression:\"modeldisplayname\"}],staticClass:\"form-control\",attrs:{\"maxlength\":\"20\"},domProps:{\"value\":(_vm.modeldisplayname)},on:{\"paste\":function($event){$event.preventDefault();},\"keydown\":function($event){return _vm.PreventDecimal($event)},\"input\":function($event){if($event.target.composing)return;_vm.modeldisplayname=$event.target.value}}})])]),_c('div',{staticClass:\"col-12 p-0 float-left\"},[_c('div',{class:element.ColumnFieldDataCode == 'date' ? '' : 'form-group d-none'},[_c('label',[_vm._v(_vm._s(_vm.$t('DateFormat'))+\":\")]),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.modeldateformat),expression:\"modeldateformat\"}],staticClass:\"form-control textnormal\",on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.modeldateformat=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},[_c('option',{attrs:{\"value\":\"\",\"disabled\":\"\"}},[_vm._v(\" Select \")]),_vm._l((_vm.GetDateFromDB),function(dateformat,dateIndex){return _c('option',{key:dateIndex},[_vm._v(\" \"+_vm._s(_vm.GetLocalizedValue(dateformat.dateFormat))+\" \")])})],2)])]),_c('div',{staticClass:\"col-12 p-0 float-left\"},[_c('div',{class:element.ColumnFieldDataCode == 'decimal' ? '' : 'form-group d-none'},[_c('label',[_vm._v(_vm._s(_vm.$t('DecimalPlaces')))]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.modeldecimalplaces),expression:\"modeldecimalplaces\"}],staticClass:\"form-control\",attrs:{\"type\":\"number\"},domProps:{\"value\":(_vm.modeldecimalplaces)},on:{\"input\":function($event){if($event.target.composing)return;_vm.modeldecimalplaces=$event.target.value}}})])]),_c('div',{staticClass:\"col-12 p-0 float-left\",staticStyle:{\"margin-top\":\"10px\"}},[_c('div',{class:element.ColumnFieldDataCode == 'decimal' ? '' : 'form-group d-none'},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.modeluseseparator),expression:\"modeluseseparator\"}],attrs:{\"type\":\"checkbox\",\"id\":\"useseparator\"},domProps:{\"checked\":Array.isArray(_vm.modeluseseparator)?_vm._i(_vm.modeluseseparator,null)>-1:(_vm.modeluseseparator)},on:{\"change\":function($event){var $$a=_vm.modeluseseparator,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.modeluseseparator=$$a.concat([$$v]))}else{$$i>-1&&(_vm.modeluseseparator=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.modeluseseparator=$$c}}}}),_vm._v(\"  \"),_c('label',{attrs:{\"for\":\"User\"}},[_vm._v(_vm._s(_vm.$t('UseSeparator')))]),_c('br'),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.modelusecurrency),expression:\"modelusecurrency\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.modelusecurrency)?_vm._i(_vm.modelusecurrency,null)>-1:(_vm.modelusecurrency)},on:{\"change\":function($event){var $$a=_vm.modelusecurrency,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.modelusecurrency=$$a.concat([$$v]))}else{$$i>-1&&(_vm.modelusecurrency=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.modelusecurrency=$$c}}}}),_c('label',{staticStyle:{\"padding\":\"6px\"},attrs:{\"for\":\"Role\"}},[_vm._v(_vm._s(_vm.$t('UseCurrency')))])])]),_c('div',{staticClass:\"col-12 p-0 float-left mb-3\"},[_c('div',{staticClass:\"row flex-row-reverse\"},[_c('div',{staticClass:\"col-lg-6 text-right\"},[_c('a',{staticClass:\"btn btn-success ancsaveuserticket text-white\",attrs:{\"id\":\"btnSaveTicket\",\"title\":\"\",\"data-toggle-tooltip\":\"tooltip\",\"data-original-title\":\"Click here to submit ticket\"},on:{\"click\":function($event){return _vm.ApplySaveSelectedData(element, $event)}}},[_c('span',{staticClass:\"fa fa-floppy-o\"}),_vm._v(\" \"+_vm._s(_vm.$t('Save'))+\" \")])])])])])]),_c('em',{staticClass:\"fa fa-times close close-action_cv\",attrs:{\"aria-hidden\":\"true\"},on:{\"click\":function($event){return _vm.CloseSetting($event)}}}),_c('div',{staticClass:\"va_rt25\"},[_c('em',{staticClass:\"icon-solid arrow-solid-left text-dark\",staticStyle:{\"font-size\":\"20pt\"}})])])])])])]),_c('div',{staticClass:\"float-left text-left w-100 font-12\"},[_vm._v(_vm._s(element.MainFieldname))])])}),0)],1)])]),_c('b-tab',{ref:\"Filters\",attrs:{\"title\":\"Filters\",\"active\":_vm.showModuleListForFilter},on:{\"click\":_vm.FilterTabClicked}},[_c('div',{staticClass:\"col-12 p-0 float-left\"},[_c('h6',[_vm._v(\"include data if it matches\")]),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.category),expression:\"category\"}],staticClass:\"form-control\",attrs:{\"name\":\"template\"},on:{\"change\":[function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.category=$event.target.multiple ? $$selectedVal : $$selectedVal[0]},_vm.filterRulechange]}},_vm._l((_vm.templates),function(template,tempIndex){return _c('option',{key:tempIndex,domProps:{\"selected\":template == _vm.category ? 'selected' : '',\"value\":template}},[_vm._v(\" \"+_vm._s(template)+\" \")])}),0),_c('h6',{staticClass:\"mt-3\"},[_vm._v(\"Filter rules\")]),_c('div',{staticClass:\"form-control\"},[_vm._l((_vm.Filterlist),function(item,itmIndex){return (_vm.category == 'Match All Value')?_c('span',{key:itmIndex,attrs:{\"ml-1\":\"\"}},[_vm._v(\" \"+_vm._s((_vm.Filterlist.indexOf(item) + 1))+\" \"),(_vm.Filterlist.length > (_vm.Filterlist.indexOf(item) + 1))?_c('span',{staticStyle:{\"margin-right\":\"3px\"}},[_vm._v(\" \"+_vm._s(_vm.filtertype))]):_vm._e()]):_vm._e()}),_vm._l((_vm.Filterlist),function(item,itemIndex){return (_vm.category != 'Match All Value')?_c('span',{key:itemIndex},[_vm._v(\" \"+_vm._s((_vm.Filterlist.indexOf(item) + 1))+\" \"),(_vm.Filterlist.length > (_vm.Filterlist.indexOf(item) + 1))?_c('span',{staticStyle:{\"margin-right\":\"3px\"}},[_vm._v(_vm._s(_vm.filtertype))]):_vm._e()]):_vm._e()})],2),_c('draggable',{staticClass:\"draggable-list\",attrs:{\"list\":_vm.Filterlist,\"group\":\"my-groupForFilter\",\"move\":_vm.checkMove,\"item-key\":\"CustomFieldId\",\"id\":\"TargetDivID\"},on:{\"start\":function($event){_vm.drag = true},\"end\":_vm.ColumnListDisplayOrder,\"dragenter\":function($event){return _vm.dragover($event)},\"dragleave\":function($event){return _vm.dragover($event)},\"drop\":function($event){return _vm.dragover($event)}},model:{value:(_vm.Filterlist),callback:function ($$v) {_vm.Filterlist=$$v},expression:\"Filterlist\"}},_vm._l((_vm.Filterlist),function(element,eleIndex){return _c('div',{key:eleIndex,staticClass:\"list-item row filter-div\",attrs:{\"id\":\"TargetDivID\"},on:{\"dragover\":function($event){return _vm.dragover($event)}}},[_c('div',{staticClass:\"counter_num px-1 py-2 filter-count-div\"},[_vm._v(\" \"+_vm._s((_vm.Filterlist.indexOf(element) + 1))+\" \")]),_c('div',{staticStyle:{\"width\":\"77%\"}},[_c('div',{staticClass:\"px-1 py-0 width120 text-truncate float-left font-14\"},[(element.Calculated_Field == true)?_c('span',{staticStyle:{\"font-size\":\"22px\",\"float\":\"left\",\"margin-right\":\"10px\"}},[_vm._v(\"f\"),_c('sub',{staticStyle:{\"font-size\":\"12px\"}},[_vm._v(\"x\")])]):_vm._e(),_c('span',{staticClass:\"text-truncate float-left\",staticStyle:{\"width\":\"110px\"},attrs:{\"data-toggle-tooltip\":element.FieldName,\"title\":_vm.GetLocalizedValue(element.FieldName, element.DisplayName)}},[_vm._v(\" \"+_vm._s(_vm.GetLocalizedValue(element.FieldName, element.DisplayName))+_vm._s(element.ExpresssionFieldName)+\" \")])]),_c('div',{staticClass:\"px-1 py-0 text-primary width80 text-truncate float-left font-14\"},[_vm._v(\" \"+_vm._s(element.OperatorDisplayName)+\" \")]),_c('div',{staticClass:\"px-1 py-0 hh text-truncate float-left font-12 w-100\"},[_vm._v(\" \"+_vm._s(element.valueTypeText)+\" \"+_vm._s(element.valueTypeNumber)+\" \"+_vm._s(element.valueTypeNumber2)+\" \"+_vm._s(_vm.$options.filters.formatDate(element.valueTypeFirstdate))+\" \"+_vm._s(_vm.$options.filters.formatDate(element.valueTypeSeconddate))+\" \"+_vm._s(element.ValueDisplayFirstTime)+\" \"+_vm._s(element.ValueDisplaySecondTime)+\" \"+_vm._s(element.Displaymultiplevalue)+\" \"+_vm._s(element.DropDownValue)+\" \"+_vm._s(_vm.$t(element.DateRangeValue))+\" \")])]),_c('div',{staticClass:\"parentdiv datarepfix filters\"},[_c('a',{attrs:{\"aria-hidden\":\"true\"},on:{\"click\":function($event){return _vm.DeleteFilterFields(element, $event)}}},[_c('em',{class:!element.IsMandatoryforFilter ? 'fa fa-trash-o text-danger' : 'fa fa-trash-o text-danger d-none'})]),_c('a',{attrs:{\"aria-hidden\":\"true\"},on:{\"click\":function($event){return _vm.openrulespop(element, $event)}}},[_c('em',{staticClass:\"fa fa-cog action_icon_cv\"})]),_c('div',[_c('div',{staticClass:\"verticle-action rt25 rt502\"},[_c('span',{staticClass:\"action-list-box small filter-list-box\"},[_c('span',{staticClass:\"list-actions text-left p-0 datarep ml-3\",staticStyle:{\"width\":\"480px\"},attrs:{\"id\":\"action-list\"}},[_c('div',{staticClass:\"float-left col-12 p-0\"},[_c('div',{staticClass:\"container-fluid p-0 mb-3\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"theme-primary partition-full\"},[_c('span',{staticClass:\"p-name text-white mt-2\"},[_vm._v(\" \"+_vm._s(_vm.$t('Setting'))+\" \")])])])])]),_c('div',{staticClass:\"col-12 float-left\"},[_c('div',{staticClass:\"col-12 p-0 float-left\"},[_vm._l((_vm.GetOperator),function(item,itmInx){return _c('div',{key:itmInx,staticClass:\"form-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(element.selectedOPValue),expression:\"element.selectedOPValue\"}],staticClass:\"radio\",attrs:{\"type\":\"radio\",\"name\":'radiobtn' + (_vm.Filterlist.indexOf(element) + 1)},domProps:{\"value\":item.OPERATOR_ID,\"checked\":_vm._q(element.selectedOPValue,item.OPERATOR_ID)},on:{\"click\":function($event){return _vm.checkvalue(item.OPERATOR_DISPLAY_NAME, element, item.OPERATOR_EXPRESSION, item.OPERATOR_ID, item.MP[0].OPERATION_DATA_TYPE)},\"change\":function($event){return _vm.$set(element, \"selectedOPValue\", item.OPERATOR_ID)}}}),_c('label',{staticClass:\"ml-2\"},[_vm._v(\" \"+_vm._s(item.OPERATOR_DISPLAY_NAME)+\" \")]),_c('br')])}),(_vm.texttypevalue1)?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.ValueDisplaytext),expression:\"ValueDisplaytext\"}],staticClass:\"form-control\",attrs:{\"type\":\"text\",\"id\":\"inpttxt\"},domProps:{\"value\":(_vm.ValueDisplaytext)},on:{\"input\":function($event){if($event.target.composing)return;_vm.ValueDisplaytext=$event.target.value}}}):_vm._e(),(_vm.texttypevalue2)?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.ValueDisplaytext2),expression:\"ValueDisplaytext2\"}],staticClass:\"form-control\",attrs:{\"type\":\"text\",\"id\":\"inpttxt2\"},domProps:{\"value\":(_vm.ValueDisplaytext2)},on:{\"input\":function($event){if($event.target.composing)return;_vm.ValueDisplaytext2=$event.target.value}}}):_vm._e(),(_vm.numbertypevalue1)?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.ValueDisplaynumber),expression:\"ValueDisplaynumber\"}],class:{'form-control':true,'is-invalid':\n                                                                                    element.ColumnFieldDataCode == 'int' ? _vm.ValueDisplaynumber.length > 9 : _vm.ValueDisplaynumber.length > 15},attrs:{\"type\":\"number\",\"id\":\"inpttxtbtw\",\"onKeyPress\":element.ColumnFieldDataCode == 'int' ? 'if(this.value.length > 9) return false;' :'if(this.value.length > 15) return false;'},domProps:{\"value\":(_vm.ValueDisplaynumber)},on:{\"keydown\":function($event){return _vm.PreventValues($event)},\"input\":function($event){if($event.target.composing)return;_vm.ValueDisplaynumber=$event.target.value}}}):_vm._e(),_c('br'),(_vm.numbertypevalue2)?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.ValueDisplaynumber2),expression:\"ValueDisplaynumber2\"}],class:{ 'form-control': true, 'is-invalid': element.ColumnFieldDataCode == 'int' ? ((parseFloat(_vm.ValueDisplaynumber2) < parseFloat(_vm.ValueDisplaynumber) || \n                                                                                    parseFloat(_vm.ValueDisplaynumber2) == parseFloat(_vm.ValueDisplaynumber) || _vm.ValueDisplaynumber2.length > 9) && (_vm.ValueDisplaynumber2 != '' || _vm.ValueDisplaynumber2 == '0')) :\n                                                                                    ((parseFloat(_vm.ValueDisplaynumber2) < parseFloat(_vm.ValueDisplaynumber) || parseFloat(_vm.ValueDisplaynumber2) == parseFloat(_vm.ValueDisplaynumber) || \n                                                                                    _vm.ValueDisplaynumber2.length > 15) && (_vm.ValueDisplaynumber2 != '' || _vm.ValueDisplaynumber2 == '0')) },attrs:{\"type\":\"number\",\"id\":\"inpttxtbtw\",\"onKeyPress\":element.ColumnFieldDataCode == 'int' ? 'if(this.value.length > 9) return false;' :'if(this.value.length > 15) return false;'},domProps:{\"value\":(_vm.ValueDisplaynumber2)},on:{\"keydown\":function($event){return _vm.PreventValues($event)},\"input\":function($event){if($event.target.composing)return;_vm.ValueDisplaynumber2=$event.target.value}}}):_vm._e(),(((parseFloat(_vm.ValueDisplaynumber2) < parseFloat(_vm.ValueDisplaynumber) || parseFloat(_vm.ValueDisplaynumber2) == parseFloat(_vm.ValueDisplaynumber)) && \n                                                                                    (_vm.ValueDisplaynumber2 != '' || _vm.ValueDisplaynumber2 == '0')))?_c('span',{staticClass:\"invalid-feedback\"},[_vm._v(\"Second value should be greater than first value.\")]):_vm._e(),(element.ColumnFieldDataCode != 'int')?_c('span',{class:_vm.ValueDisplaynumber.length > 15 || _vm.ValueDisplaynumber2.length > 15 ? 'invalid-feedback':'d-none'},[_vm._v(\"Can not add more than 15 digits\")]):_vm._e(),(element.ColumnFieldDataCode == 'int')?_c('span',{class:_vm.ValueDisplaynumber.length > 9 || _vm.ValueDisplaynumber2.length > 9 ? 'invalid-feedback':'d-none'},[_vm._v(\"Can not add more than 09 digits\")]):_vm._e(),(_vm.datetypevalue1)?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.ValueDisplaydate),expression:\"ValueDisplaydate\"}],staticClass:\"form-control\",attrs:{\"type\":\"date\",\"id\":\"inpttxtdate1\",\"max\":\"9999-12-31\"},domProps:{\"value\":(_vm.ValueDisplaydate)},on:{\"input\":function($event){if($event.target.composing)return;_vm.ValueDisplaydate=$event.target.value}}}):_vm._e(),(_vm.datetypevalue2)?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.ValueDisplaydate2),expression:\"ValueDisplaydate2\"}],class:{ 'form-control': true, 'disabled': _vm.ValueDisplaydate == '','is-invalid': ((Date.parse(_vm.ValueDisplaydate2) < Date.parse(_vm.ValueDisplaydate) \n                                                                                    || Date.parse(_vm.ValueDisplaydate2) == Date.parse(_vm.ValueDisplaydate)) && _vm.ValueDisplaydate2 != '') },attrs:{\"type\":\"date\",\"id\":\"inpttxtdate2\",\"min\":_vm.ValueDisplaydate,\"max\":\"9999-12-31\"},domProps:{\"value\":(_vm.ValueDisplaydate2)},on:{\"input\":function($event){if($event.target.composing)return;_vm.ValueDisplaydate2=$event.target.value}}}):_vm._e(),(((Date.parse(_vm.ValueDisplaydate2) < Date.parse(_vm.ValueDisplaydate) \n                                                                                    || Date.parse(_vm.ValueDisplaydate2) == Date.parse(_vm.ValueDisplaydate)) && _vm.ValueDisplaydate2 != ''))?_c('span',{staticClass:\"invalid-feedback\"},[_vm._v(\"Second value should be greater than first value.\")]):_vm._e(),(_vm.DDLForDateRange)?_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.modeldaterange),expression:\"modeldaterange\"}],staticClass:\"form-control\",on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.modeldaterange=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},[_c('option',{attrs:{\"disabled\":\"\"}},[_vm._v(\"Select \")]),_vm._l((_vm.DateRangeData),function(DDLitem){return _c('option',{key:DDLitem.date_range_name,attrs:{\"title\":DDLitem.date_range_value},domProps:{\"value\":DDLitem.date_range_name}},[_vm._v(\" \"+_vm._s(_vm.TruncateStr(DDLitem.date_range_value, 50)))])})],2):_vm._e(),(_vm.timetypevalue)?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.ValueDisplayTime),expression:\"ValueDisplayTime\"}],staticClass:\"form-control\",attrs:{\"type\":\"time\",\"id\":\"inpttxttime1\",\"Title\":_vm.ValueDisplayTime,\"step\":\"2\"},domProps:{\"value\":(_vm.ValueDisplayTime)},on:{\"input\":function($event){if($event.target.composing)return;_vm.ValueDisplayTime=$event.target.value}}}):_vm._e(),(_vm.timetypevalue2)?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.ValueDisplayTime2),expression:\"ValueDisplayTime2\"}],class:{ 'form-control': true, 'disabled': _vm.ValueDisplayTime == '' },attrs:{\"type\":\"time\",\"id\":\"inpttxttime2\",\"min\":_vm.ValueDisplayTime,\"Title\":_vm.ValueDisplayTime2,\"step\":\"2\"},domProps:{\"value\":(_vm.ValueDisplayTime2)},on:{\"input\":function($event){if($event.target.composing)return;_vm.ValueDisplayTime2=$event.target.value}}}):_vm._e(),(_vm.DDLForFilter)?_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.modelFilterDDLValue),expression:\"modelFilterDDLValue\"}],staticClass:\"form-control\",on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.modelFilterDDLValue=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},[_c('option',{attrs:{\"disabled\":\"\"}},[_vm._v(\"Select \")]),_vm._l((_vm.options),function(DDLitem){return _c('option',{key:DDLitem.value,attrs:{\"title\":DDLitem.name},domProps:{\"value\":DDLitem.value}},[_vm._v(\" \"+_vm._s(_vm.TruncateStr(DDLitem.name, 50)))])})],2):_vm._e(),(_vm.multiselectvalue)?_c('div',[_c('dynamic-form',{attrs:{\"lang\":\"en\",\"buttons\":false,\"schema\":_vm.FormSchema}})],1):_vm._e()],2),_c('div',{staticClass:\"col-12 p-0 float-left mb-3 mt-3\"},[_c('div',{staticClass:\"row flex-row-reverse\"},[_c('div',{staticClass:\"col-lg-6 text-right\"},[_c('a',{class:{ 'btn btn-primary ancsaveuserticket text-white': true, 'disabled': (element.ColumnFieldDataCode == 'int' \n                                                                                            ? (parseFloat(_vm.ValueDisplaynumber2) < parseFloat(_vm.ValueDisplaynumber) || parseFloat(_vm.ValueDisplaynumber2) == parseFloat(_vm.ValueDisplaynumber) \n                                                                                            || _vm.ValueDisplaynumber.length > 9 || _vm.ValueDisplaynumber2.length > 9 && _vm.numbertypevalue2)\n                                                                                            : (parseFloat(_vm.ValueDisplaynumber2) < parseFloat(_vm.ValueDisplaynumber) || parseFloat(_vm.ValueDisplaynumber2) == parseFloat(_vm.ValueDisplaynumber) \n                                                                                            || _vm.ValueDisplaynumber.length > 15 || _vm.ValueDisplaynumber2.length > 15 && _vm.numbertypevalue2))\n                                                                                            || (Date.parse(_vm.ValueDisplaydate2) < Date.parse(_vm.ValueDisplaydate) || Date.parse(_vm.ValueDisplaydate2) == Date.parse(_vm.ValueDisplaydate) && _vm.datetypevalue2) },attrs:{\"id\":\"btnSaveTicket\",\"title\":\"\",\"data-toggle-tooltip\":\"tooltip\",\"data-original-title\":\"Click here to submit ticket\"},on:{\"click\":function($event){return _vm.applySetting(element.CustomFieldId)}}},[_c('em',{class:{ 'fa fa-save text-white': true, 'disabled': (element.ColumnFieldDataCode == 'int' \n                                                                                                ? (parseFloat(_vm.ValueDisplaynumber2) < parseFloat(_vm.ValueDisplaynumber) || parseFloat(_vm.ValueDisplaynumber2) == parseFloat(_vm.ValueDisplaynumber) \n                                                                                                || _vm.ValueDisplaynumber.length > 9 || _vm.ValueDisplaynumber2.length > 9 && _vm.numbertypevalue2)\n                                                                                                : (parseFloat(_vm.ValueDisplaynumber2) < parseFloat(_vm.ValueDisplaynumber) || parseFloat(_vm.ValueDisplaynumber2) == parseFloat(_vm.ValueDisplaynumber) \n                                                                                                || _vm.ValueDisplaynumber.length > 15 || _vm.ValueDisplaynumber2.length > 15 && _vm.numbertypevalue2))\n                                                                                                || (Date.parse(_vm.ValueDisplaydate2) < Date.parse(_vm.ValueDisplaydate) || Date.parse(_vm.ValueDisplaydate2) == Date.parse(_vm.ValueDisplaydate) && _vm.datetypevalue2)}}),_vm._v(\"Apply\")])])])])])]),_c('em',{staticClass:\"fa fa-times close close-action_cv\",attrs:{\"aria-hidden\":\"true\"},on:{\"click\":function($event){return _vm.ClosePopFilter()}}}),_c('div',{staticClass:\"va_rt25\"},[_c('em',{staticClass:\"icon-solid arrow-solid-left text-dark\",staticStyle:{\"font-size\":\"20pt\"}})])])])])])])])}),0)],1),_c('hr')])],1),_vm._m(3)],1)])])])]),(_vm.showReportPreview)?_c('ReportPreview',{ref:\"reportdata\",attrs:{\"previewdata\":_vm.previewdata,\"customreportparameters\":_vm.customreportparameters,\"Columnlist\":_vm.Columnlist,\"Grouplist\":_vm.Grouplist,\"saveJsonReport\":_vm.saveJsonReport,\"PdfJsonReport\":_vm.PdfJsonReport,\"editjsondata\":_vm.editjsondata,\"ReportName\":_vm.ReportName,\"GraphData\":_vm.graphData,\"SortingData\":_vm.sortingArray,\"GraphJson\":_vm.GraphJson,\"LevelOfGrouping\":_vm.LevelOfGrouping}}):_vm._e(),(_vm.showcalculatedUI)?_c('CalculatedUI',{ref:\"Calculated\",attrs:{\"customreportparameters\":_vm.customreportparameters,\"Columnlist\":_vm.Columnlist,\"ExpFieldDataArray\":_vm.ExpFieldDataArray,\"editexpressionvalue\":_vm.editexpressionvalue,\"ExpDataArray\":_vm.ExpDataArray,\"AlreadyExistExpression\":_vm.AlreadyExistExpression},on:{\"close\":function($event){_vm.showcalculatedUI = false},\"VerifiedExpressionData\":_vm.VerifiedExpressionColumnValue}}):_vm._e()],1)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"input-group-append\"},[_c('span',{staticClass:\"input-group-text bg-transparent bg-white border-left-0\"})])\n},function (){var _vm=this,_c=_vm._self._c;return _c('a',{staticClass:\"tab-Search-btn\"},[_c('em',{staticClass:\"fa fa-search\",attrs:{\"aria-hidden\":\"true\"}})])\n},function (){var _vm=this,_c=_vm._self._c;return _c('span',{staticClass:\"expand_all_filters\",staticStyle:{\"position\":\"absolute\",\"left\":\"0\"}},[_c('span',[_c('a',{staticClass:\"collapsed\",attrs:{\"title\":\"Expand\",\"data-toggle-tooltip\":\"tooltip\"}},[_c('em',{staticClass:\"fa fa-angle-double-right mt-1\",attrs:{\"aria-hidden\":\"true\"}})])])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"tab-pane\",attrs:{\"role\":\"tabpanel\",\"id\":\"tab-em-groups\"}},[_c('div',{staticClass:\"col-sm-12 col-md-12 col-lg-12 col-xl-12 p-0\"},[_c('div',{staticClass:\"listing\"},[_c('div',{staticClass:\"table-responsive\"})])])])\n}]\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('div',{staticClass:\"right-content datareport hr_jobpost\"},[_c('div',{staticClass:\"col-md-12 p-0 mb-2\"},[_c('div',{staticClass:\"theme-primary partition p-actions-expand overflow-visible\"},[_c('loader',{attrs:{\"isVisible\":_vm.isLoading}}),_c('span',{staticClass:\"p-name text-white\"},[_vm._v(_vm._s(_vm.$t('ReportPreview')))]),_c('span',{staticClass:\"p-actions float-right mydbsize\"},[_c('a',{staticClass:\"p-action-btn text-white dash\",attrs:{\"data-original-title\":\"REPORT PREVIEW\"},on:{\"click\":_vm.PreviewReport}},[_c('em',{staticClass:\"fa fa-play\"}),_c('br'),_vm._v(_vm._s(_vm.$t('ReportPreview'))+\" \")]),_c('a',{staticClass:\"p-action-btn text-white dash\",attrs:{\"data-original-title\":\"RESET\"},on:{\"click\":_vm.ResetData}},[_c('em',{staticClass:\"fa fa-repeat\"}),_c('br'),_vm._v(_vm._s(_vm.$t('Reset'))+\" \")]),_c('a',{staticClass:\"p-action-btn text-white dash\",attrs:{\"data-original-title\":\"PDF\"},on:{\"click\":_vm.ExportToPDF}},[_c('em',{staticClass:\"fa fa-file-pdf-o\"}),_c('br'),_vm._v(_vm._s(_vm.$t('ExportToPdf'))+\" \")]),_c('a',{staticClass:\"p-action-btn text-white dash\",attrs:{\"data-original-title\":\"Excel\"},on:{\"click\":_vm.ExportToExcel}},[_c('em',{staticClass:\"fa fa-file-excel-o\"}),_c('br'),_vm._v(_vm._s(_vm.$t('ExportToExcel'))+\" \")]),_c('a',{staticClass:\"p-action-btn text-white dash\",attrs:{\"data-original-title\":\"SORT\"},on:{\"click\":_vm.OpenSortingPopup}},[_c('em',{staticClass:\"fa fa-sort-amount-asc\"}),_c('br'),_vm._v(_vm._s(_vm.$t('SORT'))+\" \")]),_c('a',{staticClass:\"p-action-btn text-white dash\",attrs:{\"data-original-title\":\"GRAPH\"},on:{\"click\":_vm.OpenGraph}},[_c('em',{staticClass:\"fa fa-pie-chart\"}),_c('br'),_vm._v(_vm._s(_vm.$t('Graph'))+\" \")]),_c('div',{staticClass:\"parentdiv datarepfix2\"},[_c('div',{staticClass:\"verticle-action lft75 rt30\"},[_c('span',{staticClass:\"action-list-box small\",staticStyle:{\"width\":\"400px\"}},[(_vm.isSortPopup)?_c('span',{staticClass:\"text-left p-0 datarep mt-3 w-90 float-left bg_outerdark borderbababa position-relative\",attrs:{\"id\":\"action-list1\"}},[_c('div',{staticClass:\"float-left col-12\"},[_c('div',{staticClass:\"container-fluid p-0 mb-3\"}),_vm._l((_vm.sortColummnarray),function(input,index){return _c('div',{key:`phoneInput-${index}`,staticClass:\"row px-3 pb-0\"},[_c('div',{staticClass:\"col-lg-5 pl-0 pr-3\"},[_c('div',{staticClass:\"form-group\"},[_c('label',[_vm._v(_vm._s(_vm.$t('SortBy')))]),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(input.sortcolummnId),expression:\"input.sortcolummnId\"}],staticClass:\"form-control\",on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(input, \"sortcolummnId\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},_vm._l((_vm.Columnlist.filter(x => x.Calculated_Field == false)),function(item){return _c('option',{key:item.CustomFieldId,attrs:{\"disabled\":(_vm.sortColummnarray.filter(x => x.sortcolummnId == item.CustomFieldId)).length > 0},domProps:{\"value\":item.CustomFieldId}},[_vm._v(\" \"+_vm._s(item.DisplayName ? _vm.GetLocalizedValue(item.DisplayName) : _vm.GetLocalizedValue(item.FieldName))+\" \")])}),0)])]),_c('div',{staticClass:\"col-lg-5 pl-0 pr-3\"},[_c('div',{staticClass:\"form-group\"},[_c('label',[_vm._v(_vm._s(_vm.$t('OrderBy')))]),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(input.columnOrders),expression:\"input.columnOrders\"}],staticClass:\"form-control\",on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(input, \"columnOrders\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},[_c('option',[_vm._v(_vm._s(_vm.$t('ASC')))]),_c('option',[_vm._v(_vm._s(_vm.$t('DESC')))])])])]),_c('div',{staticClass:\"col-lg-2\"},[_c('div',{staticClass:\"form-group\"},[_c('a',{on:{\"click\":function($event){return _vm.AddSortingForm(input)}}},[_c('em',{staticClass:\"fa fa-plus-circle font-24 text-success mt-3\"})]),_c('a',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.sortColummnarray[0].sortcolummnId != '' || _vm.isValueExistInSort),expression:\"sortColummnarray[0].sortcolummnId != '' || isValueExistInSort\"}],on:{\"click\":function($event){return _vm.RemoveSortingForm(input)}}},[_c('em',{staticClass:\"fa fa-times-circle font-24 text-danger mt-3 ml-1\"})])])])])})],2),_vm._m(0),_c('button',{staticClass:\"close closebtnsmall\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.close()}}},[_c('em',{staticClass:\"fa fa-times\",attrs:{\"aria-hidden\":\"true\"}})])]):_vm._e()])])])]),_vm._m(1)],1)]),_c('div',{staticClass:\"col-md-12 p-0 mb-2\"},[_c('div',{staticClass:\"tab-pane mb-0\"},[_c('div',{staticClass:\"tab-content fsmtabcontrolMobileView\",attrs:{\"id\":\"myTabContent\"}},[_vm._m(2),(_vm.showGraphOptions)?_c('div',{staticClass:\"card mb-3 probx\"},[_c('div',{staticClass:\"card-header\"},[_c('h2',[_vm._v(_vm._s(_vm.$t('Graph')))]),_c('a',{staticClass:\"btn btn-primary\",on:{\"click\":_vm.OpenGraphOptions}},[_vm._v(_vm._s(_vm.$t('GraphOptions'))+\" \"),_c('em',{staticClass:\"fa fa-cogs\"})])]),(_vm.showChart)?_c('div',{staticClass:\"card-body\",staticStyle:{\"min-height\":\"245px\"},attrs:{\"id\":\"Reportpdf\"}},[_c('div',{staticClass:\"float-right\"},[_c('a',{staticClass:\"text-center text-danger\",on:{\"click\":function($event){return _vm.ResetGraphData()}}},[_c('span',{staticClass:\"fa fa-trash-o text-danger\",staticStyle:{\"font-size\":\"25px\"}})])]),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12 col-lg-12 text-center p-0\"},[_c('div',{staticClass:\"border bg-light float-left text-left p-0 graphinfo_base_lft\"},[_c('ul',{staticClass:\"graphinfo\"},[_c('li',[_c('label',[_vm._v(\"X-axis:\")]),_vm._v(\" \"+_vm._s(_vm.GetLocalizedValue(_vm.FilterCustomFieldName(_vm.XAxisField))))]),_c('li',[_c('label',[_vm._v(\"Y-axis:\")]),_vm._v(\" \"+_vm._s(_vm.GetLocalizedValue(_vm.FilterCustomFieldName(_vm.YAxisField))))]),_c('li',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.aggregateFunctionResult != 0),expression:\"aggregateFunctionResult != 0\"}]},[_c('label',[_vm._v(\"# \"+_vm._s(_vm.aggregateFunctionType)+\":\")]),_vm._v(\" \"+_vm._s(_vm.aggregateFunctionResult)+\" \")])])]),(_vm.chartType == 'line' || _vm.chartType == 'bar')?_c('div',{staticClass:\"p-0 m-0 float-left graphinfo_base_rgt\"},[_c('VueApexCharts',{ref:\"chart\",attrs:{\"type\":_vm.chartType,\"height\":\"auto\",\"options\":_vm.chartOptions,\"series\":_vm.chartSeries}})],1):_vm._e(),(_vm.chartType == 'pie' || _vm.chartType == 'donut')?_c('div',{staticClass:\"p-0 m-0 float-left graphinfo_base_rgt\"},[_c('VueApexCharts',{ref:\"chart\",attrs:{\"type\":_vm.chartType,\"height\":\"auto\",\"options\":_vm.chartOptions,\"series\":_vm.chartSeries}})],1):_vm._e()])])]):_vm._e()]):_vm._e(),_c('div',{staticClass:\"tab-pane p-0 pb-2 border-0 active\",attrs:{\"role\":\"tabpanel\",\"id\":\"tab-detail-content\",\"aria-labelledby\":\"tab-detail-content\"}},[_c('div',{staticClass:\"listing mt-3\"},[_c('div',{staticClass:\"table-responsive table-fix-header\"},[_c('table',{staticClass:\"table table-bordered mt-0\",staticStyle:{\"width\":\"100%\"},attrs:{\"id\":\"Reportpdf\",\"aria-label\":\"Report Preview Listing\"}},[_c('thead',{staticClass:\"thead-bg\"},[_c('tr',[_vm._l((_vm.previewgroupdata),function(item,index){return (_vm.showdata)?_c('th',{key:index,attrs:{\"scope\":\"col\"}},[_vm._v(\" \"+_vm._s(_vm.GetLocalizedValue((item.DisplayName != null && item.DisplayName != '') ? item.DisplayName : item.FieldName)))]):_vm._e()}),_vm._l((_vm.previewcolumn),function(column,index){return _c('th',{key:index,attrs:{\"scope\":\"col\"}},[_vm._v(\" \"+_vm._s(_vm.GetLocalizedValue((column.DisplayName != null && column.DisplayName != '') ? column.DisplayName : column.FieldName))+_vm._s(column.ExpresssionFieldName)+\" \")])})],2)]),(_vm.noRecord)?_c('tbody',[_c('tr',{staticStyle:{\"cursor\":\"initial\"}},[_c('td',{attrs:{\"colspan\":\"4\"}},[_c('div',{staticClass:\"text-center text-danger d-flex align-items-center justify-content-center norecs\"},[_vm._v(\" \"+_vm._s(_vm.$t(\"NoRecordfound\")))])])])]):_vm._e(),_vm._l((_vm.previewdata),function(item,index){return _c('tbody',[_vm._l((_vm.previewdata[index].data),function(sitem,sindex){return (_vm.showdata)?_c('tr',[(sindex == 0)?_vm._l((_vm.previewgroupdata),function(gitem,gindex){return _c('td',{class:{ 'onlyrtbod': true, '': item.totalRecord == null },attrs:{\"rowspan\":item.totalRecord}},[_vm._v(\" \"+_vm._s((item[gitem.DisplayName] != null && item[gitem.DisplayName] != '') ? gitem.ColumnFieldDataCode == 'date' ? _vm.$options.filters.formatDate(item[gitem.DisplayName]) : item[gitem.DisplayName] : gitem.ColumnFieldDataCode == 'date' ? _vm.$options.filters.formatDate(item[gitem.FieldName]) : item[gitem.FieldName])+\" \"),_vm._v(\" (\"+_vm._s((item[gitem.DisplayName] != null && item[gitem.DisplayName] != '' || gitem.FieldName != null && gitem.FieldName != '') ? item.totalRecord : '-')+\") \")])}):_vm._e(),_vm._l((_vm.previewcolumn),function(column,i){return _c('td',{key:i},[_c('span',{domProps:{\"innerHTML\":_vm._s((sitem[column.DisplayName] == true && sitem[column.DisplayName] != 1 || sitem[column.DisplayName] == false && sitem[column.DisplayName] != 0) ?\n                                                    (sitem[column.DisplayName] == true ? 'YES' : 'NO') : (sitem[column.FieldName]\n                                                    == true ? 'YES' : 'NO') ||\n                                                    (sitem[column.DisplayName] != null && sitem[column.DisplayName] != '') ?\n                                                    (sitem[column.DisplayName] || sitem[column.DisplayName] == 0 ? column.ColumnFieldDataCode == 'date' ? \n                                                    _vm.$options.filters.formatDate(sitem[column.DisplayName]) : sitem[column.DisplayName] : '') :\n                                                    (sitem[column.FieldName] || sitem[column.DisplayName] == 0 ? column.ColumnFieldDataCode == 'date' ? \n                                                    _vm.$options.filters.formatDate(sitem[column.FieldName]) : sitem[column.FieldName] : ''))}})])})],2):_vm._e()}),(_vm.showcoldata)?_c('tr',_vm._l((_vm.previewcolumn),function(column,i){return _c('td',{key:i},[_c('span',{domProps:{\"innerHTML\":_vm._s((item[column.DisplayName] == true && item[column.DisplayName] != 1 || item[column.DisplayName] == false && item[column.DisplayName] != 0) ?\n                                                    (item[column.DisplayName] == true ? 'YES' : 'NO') : (item[column.FieldName]\n                                                    == true ? 'YES' : 'NO') ||\n                                                    (item[column.DisplayName] != null && item[column.DisplayName] != '') ?\n                                                    (item[column.DisplayName] || item[column.DisplayName] == 0 ? column.ColumnFieldDataCode == 'date' ? \n                                                    _vm.$options.filters.formatDate(item[column.DisplayName]) : item[column.DisplayName] : '') :\n                                                    (item[column.FieldName] || item[column.DisplayName] == 0 ? column.ColumnFieldDataCode == 'date' ?\n                                                    _vm.$options.filters.formatDate(item[column.FieldName]) : item[column.FieldName] : ''))}}),_vm._v(\" \"+_vm._s(item[column.ExpresssionFieldName])+\" \")])}),0):_vm._e()],2)})],2)])])]),_c('div',{staticClass:\"float-right\"},[_c('a',{staticClass:\"btn btn-success my-2 my-sm-0 mr-2\",on:{\"click\":function($event){return _vm.SaveAllReport()}}},[_vm._v(\"  \"),_c('span',{staticClass:\"fa fa-floppy-o\"}),_vm._v(\" \"+_vm._s(_vm.$t('Save'))+\" \")]),_c('a',{staticClass:\"btn btn-danger\",on:{\"click\":function($event){return _vm.CancelAll()}}},[_vm._v(\"  \"),_c('span',{staticClass:\"fa fa-times\"}),_vm._v(\" \"+_vm._s(_vm.$t('Cancel'))+\" \")])])])])])]),_c('modalGraphOptions',{ref:\"modalGraph\",attrs:{\"Columnlist\":_vm.Columnlist,\"showGraphOptions\":_vm.showGraphOptions,\"customreportparameters\":_vm.customreportparameters,\"GraphData\":_vm.GraphData,\"sortColummnarray\":_vm.sortColummnarray,\"GraphJson\":_vm.GraphJson}})],1)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"va_lft25 top4\"},[_c('em',{staticClass:\"icon-solid arrow-solid-left text-secondary\",staticStyle:{\"font-size\":\"20pt\"}})])\n},function (){var _vm=this,_c=_vm._self._c;return _c('span',{staticClass:\"collapse-head-btns\"},[_c('a',{staticClass:\"collapse-btns\",attrs:{\"href\":\"javascript:;\"}},[_c('em',{staticClass:\"fa fa-angle-up text-white\"})])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"expand-list\"},[_c('a',{staticClass:\"expand-list-btn justify-content-center align-items-center\",attrs:{\"href\":\"javascript:;\"}},[_c('em',{staticClass:\"icon-solid arrow-solid-left text-white\",staticStyle:{\"font-size\":\"9pt\"}})])])\n}]\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"modal my-popups right fade\",attrs:{\"id\":\"CustomGraphOptions\",\"role\":\"dialog\",\"data-backdrop\":\"static\",\"data-keyboard\":\"false\"}},[_c('div',{staticClass:\"modal-dialog mw-1100\",attrs:{\"role\":\"document\"}},[_c('div',{staticClass:\"modal-content\"},[_c('div',{staticClass:\"modal-header mheader-user\"},[_c('button',{staticClass:\"close\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.CloseGraphOptions()}}},[_c('em',{staticClass:\"fa fa-times\",attrs:{\"aria-hidden\":\"true\"}})]),_c('h4',{staticClass:\"modal-title\",attrs:{\"id\":\"myModalLabel\"}},[_vm._v(_vm._s(_vm.$t(\"GraphSetting\")))]),_c('span',{staticClass:\"user-guide\"},[_c('a',{staticClass:\"ancuserguide\",attrs:{\"data-toggle\":\"collapse\",\"href\":\"javascript:;\",\"role\":\"button\",\"aria-expanded\":\"false\",\"aria-controls\":\"collapseExample\"}},[_vm._v(_vm._s(_vm.$t(\"GuideForUser\")))]),_c('div',{staticClass:\"divancuserguide collapse overflow-auto\",attrs:{\"id\":\"collapseReplyUG\"}},[_c('div',{staticClass:\"custom-scrollbar-js\",attrs:{\"id\":\"scrollbarreplyuserguideMangeView\"}},[_c('div',{staticClass:\"con\",domProps:{\"innerHTML\":_vm._s(_vm.$t('User_Guide_Graph_Option'))}})])])])]),_c('div',{staticClass:\"modal-body p-3\"},[_c('loader',{attrs:{\"is-visible\":_vm.isLoading}}),_c('div',{staticClass:\"container-fluid tab-content\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-6\"},[_c('dynamic-form',{ref:\"refGraphForm\",attrs:{\"lang\":\"en\",\"buttons\":false,\"schema\":_vm.FormSchema},on:{\"OnSubmit\":_vm.onSubmit},scopedSlots:_vm._u([{key:\"tgslot-chartlist\",fn:function({ data }){return [_c('div',{staticClass:\"user_type_choice coloredicons row\"},_vm._l((_vm.chartTypes),function(item,index){return _c('div',{key:index,staticClass:\"btn-group btn-group-toggle mb-2\",attrs:{\"data-toggle\":\"buttons\"}},[_c('label',{class:{ 'btn btn_cstm': true, 'active': (item.id == _vm.selectedChartTypeID) },attrs:{\"for\":'cls_usertype' + index}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.selectedChartTypeID),expression:\"selectedChartTypeID\"}],attrs:{\"type\":\"radio\",\"name\":\"cls_usertype\",\"id\":'cls_usertype' + index},domProps:{\"value\":item.id,\"checked\":_vm._q(_vm.selectedChartTypeID,item.id)},on:{\"change\":function($event){_vm.selectedChartTypeID=item.id}}}),_c('span',{staticClass:\"d-block pb-2\"},[_c('em',{class:[item.chart_Type == 'Pie' ? 'fa fa-pie-chart bg-transparent' : '',\n                                                    item.chart_Type == 'Bar' ? 'fa fa-bar-chart bg-transparent' : '',\n                                                    item.chart_Type == 'Line' ? 'fa fa-line-chart bg-transparent' : '',\n                                                    item.chart_Type == 'Horizontal_Bar' ? 'fa fa-bars bg-transparent' : '',\n                                                    item.chart_Type == 'Donut' ? 'fa fa-circle-o-notch bg-transparent' : ''],attrs:{\"aria-hidden\":\"true\"}})])])])}),0),(data.error != '')?_c('span',{staticClass:\"invalid-feedback d-block\"},[_vm._v(_vm._s(data.error))]):_vm._e()]}}])})],1),_c('div',{staticClass:\"col-md-6\"},[_c('div',{staticClass:\"p-3 bg-light border\"},[_c('div',{staticClass:\"heading-border\"},[_c('h5',{staticClass:\"h5\"},[_c('span',[_vm._v(_vm._s(_vm.$t('Preview')))])])]),_c('span',{staticClass:\"text-center my-3 w-100 float-left\"},[_vm._v(_vm._s(_vm.FormSchema[0].Data[0].value)+\" - \"),_c('button',{staticClass:\"btn btn-info mt-2\",attrs:{\"href\":\"javascript:;\"},on:{\"click\":_vm.ViewReportGraph}},[_vm._v(\" \"+_vm._s(_vm.$t('ViewReport'))+\" \")])]),(_vm.PreviewChart)?_c('div',{staticClass:\"col-sm-12 col-lg-12 px-0 py-4 float-left bg-white\"},[_c('VueApexCharts',{attrs:{\"type\":_vm.selectedChartType,\"options\":_vm.chartOptions,\"series\":_vm.chartseries}}),(_vm.aggregateFunctionResult != 0)?_c('div',{class:_vm.selectedChartType == 'pie' || _vm.selectedChartType == 'donut' ? 'text-left pl-4 ml-4' : 'text-center'},[_c('a',{attrs:{\"href\":\"javascript:;\"}},[_vm._v(_vm._s(_vm.resultMsg)+\" : \"+_vm._s(_vm.aggregateFunctionResult))])]):_vm._e()],1):_vm._e()])])]),_c('div',{staticClass:\"col-12 p-0 mt-3 float-left\"},[_c('div',{staticClass:\"row flex-row-reverse\"},[_c('div',{staticClass:\"col-lg-6 text-right\"},[_c('button',{staticClass:\"btn btn-success ancsaveuserticket\",on:{\"click\":_vm.ApplyGraph}},[_c('em',{staticClass:\"fa fa-share pr-2\"}),_vm._v(_vm._s(_vm.$t('Apply')))])])])])])],1)])])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div id=\"CustomGraphOptions\" role=\"dialog\" class=\"modal my-popups right fade\" data-backdrop=\"static\"\r\n        data-keyboard=\"false\" v-cloak>\r\n        <div role=\"document\" class=\"modal-dialog mw-1100\">\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header mheader-user\">\r\n                    <button type=\"button\" class=\"close\" v-on:click=\"CloseGraphOptions()\">\r\n                        <em aria-hidden=\"true\" class=\"fa fa-times\"></em>\r\n                    </button>\r\n                    <h4 id=\"myModalLabel\" class=\"modal-title\">{{ $t(\"GraphSetting\") }}</h4>\r\n                    <span class=\"user-guide\">\r\n                        <a class=\"ancuserguide\" data-toggle=\"collapse\" href=\"javascript:;\" role=\"button\"\r\n                            aria-expanded=\"false\" aria-controls=\"collapseExample\">{{ $t(\"GuideForUser\") }}</a>\r\n                        <div id=\"collapseReplyUG\" class=\"divancuserguide collapse overflow-auto\">\r\n                            <div id=\"scrollbarreplyuserguideMangeView\" class=\"custom-scrollbar-js\">\r\n                                <div class=\"con\" v-html=\"$t('User_Guide_Graph_Option')\"></div>\r\n                            </div>\r\n                        </div>\r\n                    </span>\r\n                </div>\r\n                <div class=\"modal-body p-3\">\r\n                    <loader :is-visible=\"isLoading\"></loader>\r\n                    <div class=\"container-fluid tab-content\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6\">\r\n                                <dynamic-form lang=\"en\" ref=\"refGraphForm\" :buttons=\"false\" :schema=\"FormSchema\"\r\n                                    v-on:OnSubmit=\"onSubmit\">\r\n                                    <template v-slot:tgslot-chartlist=\"{ data }\">\r\n                                        <div class=\"user_type_choice coloredicons row\">\r\n                                            <div class=\"btn-group btn-group-toggle mb-2\" data-toggle=\"buttons\"\r\n                                                v-for=\"(item, index) in chartTypes\" :key=\"index\">\r\n                                                <label\r\n                                                    v-bind:class=\"{ 'btn btn_cstm': true, 'active': (item.id == selectedChartTypeID) }\"\r\n                                                    v-bind:for=\"'cls_usertype' + index\">\r\n                                                    <input type=\"radio\" v-bind:value=\"item.id\" name=\"cls_usertype\"\r\n                                                        v-bind:id=\"'cls_usertype' + index\" v-model=\"selectedChartTypeID\" />\r\n                                                    <span class=\"d-block pb-2\">\r\n                                                        <em :class=\"[item.chart_Type == 'Pie' ? 'fa fa-pie-chart bg-transparent' : '',\r\n                                                        item.chart_Type == 'Bar' ? 'fa fa-bar-chart bg-transparent' : '',\r\n                                                        item.chart_Type == 'Line' ? 'fa fa-line-chart bg-transparent' : '',\r\n                                                        item.chart_Type == 'Horizontal_Bar' ? 'fa fa-bars bg-transparent' : '',\r\n                                                        item.chart_Type == 'Donut' ? 'fa fa-circle-o-notch bg-transparent' : '']\"\r\n                                                            aria-hidden=\"true\"></em>\r\n                                                    </span>\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n                                        <span class=\"invalid-feedback d-block\" v-if=\"data.error != ''\">{{ data.error }}</span>\r\n                                    </template>\r\n                                </dynamic-form>\r\n                            </div>\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"p-3 bg-light border\">\r\n                                    <div class=\"heading-border\">\r\n                                        <h5 class=\"h5\"><span>{{ $t('Preview') }}</span></h5>\r\n                                    </div>\r\n                                    <span class=\"text-center my-3 w-100 float-left\">{{ FormSchema[0].Data[0].value }} -\r\n                                        <button href=\"javascript:;\" class=\"btn btn-info mt-2\" v-on:click=\"ViewReportGraph\">\r\n                                            {{ $t('ViewReport') }}\r\n                                        </button>\r\n                                    </span>\r\n                                    <div v-if=\"PreviewChart\" class=\"col-sm-12 col-lg-12 px-0 py-4 float-left bg-white\">\r\n                                        <VueApexCharts :type=\"selectedChartType\" :options=\"chartOptions\"\r\n                                            :series=\"chartseries\">\r\n                                        </VueApexCharts>\r\n                                        <div :class=\"selectedChartType == 'pie' || selectedChartType == 'donut' ? 'text-left pl-4 ml-4' : 'text-center'\"\r\n                                            v-if=\"aggregateFunctionResult != 0\">\r\n                                            <a href=\"javascript:;\">{{ resultMsg }} : {{ aggregateFunctionResult }}</a>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <!-- <div class=\"col-lg-12\">\r\n                                        <div class=\"form-group\">\r\n                                            <label>{{ $t('ViewAs') }}:</label>\r\n                                            <div v-if=\"isTypeInteger\" class=\"input-group\">\r\n                                                <input name=\"sum\" v-model=\"aggregateFunctionType\" value=\"Sum\" type=\"radio\"\r\n                                                    class=\"mr-2\" />{{ $t('Sum') }}\r\n                                                <input name=\"sum\" v-model=\"aggregateFunctionType\" value=\"Avg\" type=\"radio\"\r\n                                                    class=\"mr-2 ml-3\" />{{ $t('Average') }}\r\n                                                <input name=\"sum\" v-model=\"aggregateFunctionType\" value=\"Min\" type=\"radio\"\r\n                                                    class=\"mr-2 ml-3\" />{{ $t('Min') }}\r\n                                                <input name=\"sum\" v-model=\"aggregateFunctionType\" value=\"Max\" type=\"radio\"\r\n                                                    class=\"mr-2 ml-3\" />{{ $t('Max') }}\r\n                                                <input name=\"sum\" v-model=\"aggregateFunctionType\" value=\"Count\" type=\"radio\"\r\n                                                    class=\"mr-2 ml-3\" />{{ $t('Count') }}\r\n                                            </div>\r\n                                            <div class=\"input-group\" v-if=\"!isTypeInteger\">\r\n                                                <input name=\"sum\" v-model=\"aggregateFunctionType\" value=\"Count\" checked\r\n                                                    type=\"radio\" class=\"mr-2 ml-3\" />{{ $t('Count') }}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                        </div> -->\r\n                            <!-- <div class=\"col-sm-12 col-lg-6 p-3 bg-light border\">\r\n                                <div class=\"heading-border\">\r\n                                    <h5 class=\"h5\"><span>{{ $t('Preview') }}</span></h5>\r\n                                </div>\r\n                                <span class=\"text-center my-3 w-100 float-left\">{{ reportTitle }} -\r\n                                    <button href=\"#\" class=\"btn btn-info\" @click=\"ViewReportGraph\">\r\n                                        {{ $t('ViewReport') }}\r\n                                    </button>\r\n                                </span>\r\n                                <div v-if=\"PreviewChart\" class=\"col-sm-12 col-lg-12 px-0 py-4 float-left bg-white\">\r\n                                    <VueApexCharts :type=\"selectedChartType\" :options=\"chartOptions\" :series=\"chartseries\">\r\n                                    </VueApexCharts>\r\n                                    <div :class=\"selectedChartType == 'pie' || selectedChartType == 'donut' ? 'text-left pl-4 ml-4' : 'text-center'\"\r\n                                        v-if=\"aggregateFunctionResult != 0\">\r\n                                        <a href=\"#\">{{ resultMsg }} : {{ aggregateFunctionResult }}</a>\r\n                                    </div>\r\n                                </div>\r\n                            </div> -->\r\n\r\n                        </div>\r\n\r\n\r\n                        <!-- <Form v-slot=\"{ values, meta }\" ref=\"form\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-12 col-lg-6 float-left leftsideicon pl-0 py-3 border\">\r\n                                    <div class=\"col-lg-12\">\r\n                                        <div class=\"form-group\">\r\n                                            <label>{{ $t('ReportTitle') }} :</label>\r\n                                            <input v-model=\"reportTitle\" placeholder=\"Report Title\" class=\"form-control\"\r\n                                                type=\"text\" maxlength=\"50\" disabled />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-lg-12\">\r\n                                        <div class=\"form-group\">\r\n                                            <Field name=\"ChartTypes\" :rules=\"{ 'required': true }\" label=\"Chart Type\"\r\n                                                v-slot=\"{ field, errorMessage, meta }\">\r\n                                                <label>{{ $t('ChartTypes') }}<span class=\"text-danger\">*</span></label>\r\n                                                <div class=\"user_type_choice coloredicons row\"\r\n                                                    v-bind:class=\"{ '': true, 'is-invalid': meta.touched && !meta.valid && !selectedChartTypeID }\">\r\n                                                    <div class=\"btn-group btn-group-toggle mb-2\" data-toggle=\"buttons\"\r\n                                                        v-for=\"(item, index) in chartTypes\" :key=\"index\">\r\n                                                        <label\r\n                                                            v-bind:class=\"{ 'btn btn_cstm': true, 'active': (item.id == selectedChartTypeID) }\"\r\n                                                            v-bind:for=\"'cls_usertype' + index\">\r\n                                                            <input v-bind=\"field\" type=\"radio\" v-bind:value=\"item.id\"\r\n                                                                name=\"cls_usertype\" v-bind:id=\"'cls_usertype' + index\"\r\n                                                                v-model=\"selectedChartTypeID\" />\r\n                                                            <span class=\"d-block pb-2\">\r\n                                                                <em :class=\"[item.chart_Type == 'Pie' ? 'fa fa-pie-chart bg-transparent' : '',\r\n                                                                item.chart_Type == 'Bar' ? 'fa fa-bar-chart bg-transparent' : '',\r\n                                                                item.chart_Type == 'Line' ? 'fa fa-line-chart bg-transparent' : '',\r\n                                                                item.chart_Type == 'Horizontal_Bar' ? 'fa fa-bars bg-transparent' : '',\r\n                                                                item.chart_Type == 'Donut' ? 'fa fa-circle-o-notch bg-transparent' : '']\"\r\n                                                                    aria-hidden=\"true\"></em>\r\n                                                            </span>\r\n                                                        </label>\r\n\r\n                                                    </div>\r\n                                                </div>\r\n                                                <span name=\"ChartTypes\" v-if=\"meta.touched && !meta.valid\"\r\n                                                    class=\"invalid-feedback\">\r\n                                                    {{ errorMessage }}\r\n                                                </span>\r\n                                            </Field>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-lg-12\">\r\n                                        <div class=\"form-group\">\r\n                                            <Field name=\"selectedChartXAxis\" :rules=\"{ 'required': true }\"\r\n                                                v-model=\"selectedChartXAxis\" label=\"X Axis\"\r\n                                                v-slot=\"{ field, errorMessage, meta }\">\r\n                                                <label>{{ $t('XAXIS') }}<span class=\"text-danger\">*</span></label>\r\n                                                <div class=\"input-group\">\r\n                                                    <select v-bind=\"field\" @change=\"CheckFieldTypeX(selectedChartXAxis)\"\r\n                                                        v-bind:class=\"{ 'form-control': true, 'is-invalid': meta.touched && !meta.valid && !selectedChartXAxis }\">\r\n                                                        <option value=\"\" disabled>Select</option>\r\n                                                        <option v-for=\"item in Columnlist\"\r\n                                                            :value=\"item.CustomFieldId != '' ? item.CustomFieldId : item.FieldName\"\r\n                                                            :key=\"item.CustomFieldId\">\r\n                                                            {{ GetLocalizedValue((item.DisplayName != null &&\r\n                                                                item.DisplayName != '') ?\r\n                                                                item.DisplayName : item.FieldName) }}\r\n                                                        </option>\r\n                                                    </select>\r\n                                                    <span name=\"selectedChartXAxis\" v-if=\"meta.touched && !meta.valid\"\r\n                                                        class=\"invalid-feedback\">{{\r\n                                                            errorMessage\r\n                                                        }}</span>\r\n                                                </div>\r\n                                            </Field>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-lg-12\">\r\n                                        <div class=\"form-group\">\r\n                                            <label>{{ $t('YAXIS') }}<span class=\"text-danger\">*</span></label>\r\n                                            <div class=\"input-group\">\r\n                                                <Field name=\"selectedChartYAxis\" :rules=\"{ 'required': true }\"\r\n                                                    v-model=\"selectedChartYAxis\" label=\"Y Axis\"\r\n                                                    v-slot=\"{ field, errorMessage, meta }\">\r\n                                                    <select v-bind=\"field\" @change=\"CheckFieldType(selectedChartYAxis)\"\r\n                                                        :class=\"{ 'form-control': true, 'is-invalid': meta.touched && !meta.valid && !selectedChartYAxis }\">\r\n                                                        <option value=\"\" disabled>Select</option>\r\n                                                        <option\r\n                                                            v-for=\"item in Columnlist.filter(x => x.CustomFieldId != selectedChartXAxis)\"\r\n                                                            :value=\"item.CustomFieldId != '' ? item.CustomFieldId : item.FieldName\"\r\n                                                            :key=\"item.CustomFieldId\">\r\n                                                            {{ GetLocalizedValue((item.DisplayName != null &&\r\n                                                                item.DisplayName != '') ?\r\n                                                                item.DisplayName : item.FieldName) }}\r\n                                                        </option>\r\n                                                    </select>\r\n                                                    <span name=\"selectedChartYAxis\" v-if=\"meta.touched && !meta.valid\"\r\n                                                        class=\"invalid-feedback\">\r\n                                                        {{ errorMessage }}\r\n                                                    </span>\r\n                                                </Field>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-lg-12\">\r\n                                        <div class=\"form-group\">\r\n                                            <label>{{ $t('ViewAs') }}:</label>\r\n                                            <div v-if=\"isTypeInteger\" class=\"input-group\">\r\n                                                <input name=\"sum\" v-model=\"aggregateFunctionType\" value=\"Sum\" type=\"radio\"\r\n                                                    class=\"mr-2\" />{{ $t('Sum') }}\r\n                                                <input name=\"sum\" v-model=\"aggregateFunctionType\" value=\"Avg\" type=\"radio\"\r\n                                                    class=\"mr-2 ml-3\" />{{ $t('Average') }}\r\n                                                <input name=\"sum\" v-model=\"aggregateFunctionType\" value=\"Min\" type=\"radio\"\r\n                                                    class=\"mr-2 ml-3\" />{{ $t('Min') }}\r\n                                                <input name=\"sum\" v-model=\"aggregateFunctionType\" value=\"Max\" type=\"radio\"\r\n                                                    class=\"mr-2 ml-3\" />{{ $t('Max') }}\r\n                                                <input name=\"sum\" v-model=\"aggregateFunctionType\" value=\"Count\" type=\"radio\"\r\n                                                    class=\"mr-2 ml-3\" />{{ $t('Count') }}\r\n                                            </div>\r\n                                            <div class=\"input-group\" v-if=\"!isTypeInteger\">\r\n                                                <input name=\"sum\" v-model=\"aggregateFunctionType\" value=\"Count\" checked\r\n                                                    type=\"radio\" class=\"mr-2 ml-3\" />{{ $t('Count') }}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div class=\"col-sm-12 col-lg-6 p-3 bg-light border\">\r\n                                    <div class=\"heading-border\">\r\n                                        <h5 class=\"h5\"><span>{{ $t('Preview') }}</span></h5>\r\n                                    </div>\r\n                                    <span class=\"text-center my-3 w-100 float-left\">{{ reportTitle }} -\r\n                                        <button href=\"#\" class=\"btn btn-info\" @click=\"ViewReportGraph\">\r\n                                            {{ $t('ViewReport') }}\r\n                                        </button>\r\n                                    </span>\r\n                                    <div v-if=\"PreviewChart\" class=\"col-sm-12 col-lg-12 px-0 py-4 float-left bg-white\">\r\n                                        <VueApexCharts :type=\"selectedChartType\" :options=\"chartOptions\"\r\n                                            :series=\"chartseries\">\r\n                                        </VueApexCharts>\r\n                                        <div :class=\"selectedChartType == 'pie' || selectedChartType == 'donut' ? 'text-left pl-4 ml-4' : 'text-center'\"\r\n                                            v-if=\"aggregateFunctionResult != 0\">\r\n                                            <a href=\"#\">{{ resultMsg }} : {{ aggregateFunctionResult }}</a>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"col-12 p-0 mt-3 float-left\">\r\n                                <div class=\"row flex-row-reverse\">\r\n                                    <div class=\"col-lg-6 text-right\">\r\n                                        <button class=\"btn btn-success ancsaveuserticket\" @click=\"ApplyGraph\">\r\n                                            <em class=\"fa fa-share pr-2\"></em>{{ $t('Apply') }}</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Form> -->\r\n                        <div class=\"col-12 p-0 mt-3 float-left\">\r\n                            <div class=\"row flex-row-reverse\">\r\n                                <div class=\"col-lg-6 text-right\">\r\n                                    <button class=\"btn btn-success ancsaveuserticket\" @click=\"ApplyGraph\">\r\n                                        <em class=\"fa fa-share pr-2\"></em>{{ $t('Apply') }}</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport GraphServices from \"@/services/DataService\";\r\nimport VueApexCharts from \"vue-apexcharts\";\r\nexport default {\r\n    components: {\r\n        VueApexCharts\r\n    },\r\n    props: {\r\n        Columnlist: {\r\n            type: Array\r\n        },\r\n        customreportparameters: {\r\n            type: Object\r\n        },\r\n        GraphData: {\r\n            type: Array\r\n        },\r\n        GraphJson: {\r\n            type: Object\r\n        },\r\n        sortColummnarray: {\r\n            type: Array\r\n        },\r\n    },\r\n    data() {\r\n        return {\r\n            isLoading: false,\r\n            reportTitle: '',\r\n            chartTypes: null,\r\n            // isTypeInteger: false,\r\n            // Selected Chart Properties\r\n            selectedChartTypeID: null,\r\n            selectedChartXAxis: \"\",\r\n            selectedChartYAxis: \"\",\r\n            PreviewChart: false,\r\n            aggregateFunctionType: \"Count\",\r\n            aggregateFunctionResult: 0,\r\n            //Chart Properties\r\n            chartseries: [],\r\n            chartOptions: {},\r\n            colourList: ['#8892d0', '#da9c49', '#94c5a3', '#e67d21', '#787878', '#c59e71', '#38b8df', '#f55e1a', '#207a92', '#13599c'],\r\n            // Properties for Binding the Chart Valus\r\n            chartOptionXAxisData: [],\r\n            chartSeriesData: [],\r\n            selectedChartType: \"\",\r\n            resultMsg: \"\",\r\n            GroupingGraphData: [],\r\n            BindGraph: false,\r\n            isChartData: false,\r\n            isGraphLoadedAlready: false,\r\n            graphParams: {},\r\n            FormSchema: [\r\n                {\r\n                    layoutType: \"single\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"TextField\",\r\n                            label: this.$t('ReportTitle'),\r\n                            name: \"ReportTitle\",\r\n                            value: \"\",\r\n                            placeholder: \"Enter ReportTitle\",\r\n                            config: {\r\n                                options: [],\r\n                                showAddIcon: false,\r\n                            },\r\n                            validationRules: \"\",\r\n                            disabled: true,\r\n                        },\r\n                        {\r\n                            astype: \"SlotField\",\r\n                            label: this.$t('ChartTypes'),\r\n                            name: \"chartlist\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            config: {\r\n                                options: [],\r\n                                showAddIcon: false,\r\n                                onChange: this.onChangeDropdown\r\n                            },\r\n                            validationRules: \"required\",\r\n                        },\r\n                        {\r\n                            astype: \"SelectField\",\r\n                            label: this.$t('XAXIS'),\r\n                            name: \"XAXIS\",\r\n                            value: \"\",\r\n                            placeholder: \"Please Select X Axis\",\r\n                            config: {\r\n                                options: [],\r\n                                showAddIcon: false,\r\n                                onChange: this.onChangeXYAxisDropdown\r\n                            },\r\n                            validationRules: \"required\",\r\n                        },\r\n                        {\r\n                            astype: \"SelectField\",\r\n                            label: this.$t('YAXIS'),\r\n                            name: \"YAXIS\",\r\n                            value: '',\r\n                            placeholder: \"\",\r\n                            //visibility:true,\r\n                            config: {\r\n                                options: [],\r\n                                showAddIcon: false,\r\n                                onChange: this.onChangeXYAxisDropdown\r\n                            },\r\n                            validationRules: \"required\",\r\n                        },\r\n                        {\r\n                            astype: \"RadioField\",\r\n                            label: this.$t('ViewAs'),\r\n                            name: \"ViewAs\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            visibility: false,\r\n                            config: {\r\n                                options: [{\r\n                                    value: \"Sum\",\r\n                                    name: \"Sum\"\r\n                                },\r\n                                {\r\n                                    value: \"Avg\",\r\n                                    name: \"Average\"\r\n                                },\r\n                                {\r\n                                    value: \"Min\",\r\n                                    name: \"Min\"\r\n                                }, {\r\n                                    value: \"Max\",\r\n                                    name: \"Max\"\r\n                                }, {\r\n                                    value: \"Count\",\r\n                                    name: \"Count\"\r\n                                }],\r\n                                showAddIcon: false,\r\n                                onChange: this.GetRadioValue\r\n                            },\r\n                            validationRules: \"\",\r\n                        },\r\n                        {\r\n                            astype: \"RadioField\",\r\n                            label: this.$t('ViewAs'),\r\n                            name: \"ViewAs\",\r\n                            value: \"Count\",\r\n                            placeholder: \"\",\r\n                            visibility: true,\r\n                            config: {\r\n                                options: [{\r\n                                    value: \"Count\",\r\n                                    name: \"Count\"\r\n                                }],\r\n                                showAddIcon: false\r\n                            },\r\n                            validationRules: \"\",\r\n                        },\r\n                    ]\r\n                },\r\n            ],\r\n            // buttons: [\r\n            //     {\r\n            //         type: \"submit\",\r\n            //         class: \"btn btn-success save\",\r\n            //         text: \"<i class='fa fa-save pr-2'></i>Apply\"\r\n            //     }\r\n            // ]\r\n        }\r\n    },\r\n    created: async function () {\r\n        var vm = this;\r\n        await vm.GetChartTypes();\r\n        vm.GetColumnList();\r\n        vm.FormSchema[0].Data[0].value = vm.customreportparameters.ReportName;\r\n        if (vm.GraphData != null && vm.GraphData != undefined && vm.GraphData != '' && vm.GraphData.length > 0) {\r\n            vm.selectedChartTypeID = vm.GraphData[0].chartTypeID;\r\n            vm.aggregateFunctionType = vm.GraphData[0].AggregateFuncField;\r\n            vm.selectedChartXAxis = vm.GraphData[0].XAxisField;\r\n            vm.FormSchema[0].Data[2].value = vm.GraphData[0].XAxisField;\r\n            vm.selectedChartYAxis = vm.GraphData[0].YAxisField;\r\n            vm.FormSchema[0].Data[3].value = vm.GraphData[0].YAxisField;\r\n            await vm.CheckFieldType(vm.selectedChartYAxis);\r\n            await vm.ViewReportGraph();\r\n            await vm.ApplyGraph();\r\n        }\r\n    },\r\n    watch:{\r\n        Columnlist(){\r\n            var vm = this;\r\n            vm.GetColumnList();\r\n        }\r\n    },\r\n    methods: {\r\n        //Close Graph Options Model\r\n        CloseGraphOptions: function () {\r\n            var vm = this;\r\n            $(\"#CustomGraphOptions\").modal(\"hide\");\r\n            $(\"body\").removeClass(\"modal-open\");\r\n            $(\".modal-backdrop\").remove();\r\n            vm.$refs.refGraphForm.validateForm.reset();\r\n            if(vm.graphParams.selectedChartTypeID != null && vm.graphParams.selectedChartType != '' && vm.graphParams.selectedChartXAxis != '' && vm.graphParams.selectedChartYAxis != ''){\r\n            vm.$parent.showChart = true;}\r\n            // vm.ApplyGraph();\r\n        },\r\n\r\n        // Get all Chart types\r\n        async GetChartTypes() {\r\n            var vm = this;\r\n            await GraphServices.GetChartTypes().then((response) => {\r\n                vm.chartTypes = response.data;\r\n            })\r\n        },\r\n\r\n        // Fill Values in Dropdowns\r\n        GetColumnList() {\r\n            var vm = this;\r\n            vm.FormSchema[0].Data[2].config.options = [];\r\n            vm.FormSchema[0].Data[3].config.options = [];\r\n            vm.Columnlist.forEach(item => {\r\n                vm.FormSchema[0].Data[2].config.options.push({\r\n                    value: item.CustomFieldId,\r\n                    name: item.DisplayName != '' ? vm.$t(item.DisplayName) : vm.$(item.FieldName)\r\n                })\r\n                vm.FormSchema[0].Data[3].config.options.push({\r\n                    value: item.CustomFieldId,\r\n                    name: item.DisplayName != '' ? vm.$t(item.DisplayName) : vm.$(item.FieldName)\r\n                })\r\n            })\r\n        },\r\n\r\n        // On change X and Y Axis\r\n        onChangeXYAxisDropdown(x, data) {\r\n            var vm = this;\r\n            if (data.name == \"XAXIS\") {\r\n                vm.selectedChartXAxis = data.value;\r\n                vm.FormSchema[0].Data[3].config.options = [];\r\n                vm.Columnlist.forEach(item => {\r\n                    if (item.CustomFieldId != vm.selectedChartXAxis) {\r\n                        vm.FormSchema[0].Data[3].config.options.push({\r\n                            value: item.CustomFieldId,\r\n                            name: item.DisplayName != '' ? vm.$t(item.DisplayName) : vm.$(item.FieldName)\r\n                        })\r\n                    }\r\n                    if(vm.selectedChartXAxis === vm.selectedChartYAxis){\r\n                        vm.selectedChartYAxis = '';\r\n                        vm.FormSchema[0].Data[3].value = '';\r\n                    }\r\n                })\r\n            }\r\n            else {\r\n                vm.selectedChartYAxis = data.value;\r\n                vm.CheckFieldType(vm.selectedChartYAxis)\r\n            }\r\n        },\r\n\r\n        // Get Radio Selected Value \r\n        GetRadioValue(x, data) {\r\n            var vm = this;\r\n            vm.aggregateFunctionType = x.target.dataset.value;\r\n        },\r\n        // Reset Graph properties when click on reset button \r\n        ResetGraph() {\r\n            var vm = this;\r\n            vm.selectedChartXAxis = \"\";\r\n            vm.selectedChartYAxis = \"\";\r\n            // vm.$refs.form.setFieldTouched('selectedChartXAxis', false)\r\n            // vm.$refs.form.setFieldTouched('selectedChartYAxis', false)\r\n            vm.chartseries = [];\r\n            vm.chartOptions = {};\r\n            vm.selectedChartTypeID = null;\r\n            vm.selectedChartType = \"\";\r\n            vm.aggregateFunctionResult = 0;\r\n            vm.aggregateFunctionType = \"Count\";\r\n            vm.resultMsg = \"\";\r\n            vm.graphParams = {};\r\n            vm.FormSchema[0].Data[2].value = '';\r\n            vm.FormSchema[0].Data[3].value = '';\r\n            vm.FormSchema[0].Data[4].value = 'Count';\r\n            vm.FormSchema[0].Data[5].value = 'Count';\r\n            vm.FormSchema[0].Data[4].visibility = false;\r\n            vm.FormSchema[0].Data[5].visibility = true;\r\n            vm.$refs.refGraphForm.validateForm.reset();\r\n            vm.PreviewChart = false;\r\n        },\r\n\r\n        // View Graph when click on View Report\r\n        async ViewReportGraph() {\r\n            var vm = this;\r\n            vm.resultMsg = vm.aggregateFunctionType;\r\n            vm.PreviewChart = false;\r\n            vm.BindGraph = true;\r\n            var GraphDataValue = null;\r\n                if (vm.aggregateFunctionType == null || vm.aggregateFunctionType == '' && vm.GraphData != null && vm.isChartData == false) {\r\n                    if (vm.GraphData.length > 0) {\r\n                        vm.resultMsg = vm.GraphData[0].AggregateFunction\r\n                        vm.aggregateFunctionType = vm.resultMsg\r\n                        vm.selectedChartYAxis = vm.GraphData[0].YAxisField;\r\n                        vm.selectedChartXAxis = vm.GraphData[0].XAxisField;\r\n                        vm.FormSchema[0].Data[4].value = vm.GraphData[0].AggregateFunction;\r\n                    }\r\n                }\r\n                if (vm.selectedChartTypeID != null && vm.selectedChartXAxis != '' && vm.selectedChartYAxis != '') {\r\n                    if (vm.aggregateFunctionType == \"\") {\r\n                        vm.aggregateFunctionType = vm.FormSchema[0].Data[4].value;\r\n                        vm.resultMsg = vm.aggregateFunctionType;\r\n                    }\r\n                    var findvaluefromcolumnlistxaxis = vm.Columnlist.find(x => x.FieldName === vm.selectedChartXAxis || x.CustomFieldId === parseInt(vm.selectedChartXAxis));\r\n                    var findvaluefromcolumnlistyaxis = vm.Columnlist.find(x => x.FieldName === vm.selectedChartYAxis || x.CustomFieldId === parseInt(vm.selectedChartYAxis));\r\n                    if (findvaluefromcolumnlistxaxis != undefined && findvaluefromcolumnlistyaxis != undefined){\r\n                        GraphDataValue = {\r\n                        \"XAxisField\": findvaluefromcolumnlistxaxis.CustomFieldId != '' ? findvaluefromcolumnlistxaxis.CustomFieldId : findvaluefromcolumnlistxaxis.FieldName,\r\n                        \"YAxisField\": findvaluefromcolumnlistyaxis.CustomFieldId != '' ? findvaluefromcolumnlistyaxis.CustomFieldId : findvaluefromcolumnlistyaxis.FieldName,\r\n                        \"AggregateFunctionType\": vm.aggregateFunctionType\r\n                     }\r\n                    }\r\n                    else{\r\n                        if(findvaluefromcolumnlistxaxis == undefined && findvaluefromcolumnlistyaxis == undefined ){\r\n                            vm.selectedChartXAxis='';\r\n                            vm.FormSchema[0].Data[2].value = '';\r\n                            vm.selectedChartYAxis=''\r\n                            vm.FormSchema[0].Data[3].value = '';\r\n                        }\r\n                        else if (findvaluefromcolumnlistxaxis == undefined){\r\n                            vm.selectedChartXAxis='';\r\n                            vm.FormSchema[0].Data[2].value = '';\r\n                        }\r\n                        else{\r\n                            vm.selectedChartYAxis='';\r\n                            vm.FormSchema[0].Data[3].value = ''\r\n                        }\r\n                        vm.requiedFieldfordrawGraph();\r\n                       \r\n                    }\r\n                    // if(vm.GraphData == null){\r\n                    //     GraphDataValue={};\r\n                    // }\r\n                    if(vm.selectedChartXAxis != '' && vm.selectedChartYAxis != '' && !vm.isGraphLoadedAlready){\r\n                        await vm.$parent.$parent.PreviewJson(vm.sortColummnarray, vm.BindGraph, GraphDataValue);\r\n                        if (vm.GraphJson.MetaData[0].IsGrouping) {\r\n                            vm.SetGroupingGraphData();\r\n                        }\r\n                        vm.selectedChartType = vm.chartTypes.find(x => x.id == vm.selectedChartTypeID).chart_Type.toLowerCase();\r\n                        vm.SetGraphValues(vm.GroupingGraphData, vm.FilterColumnlist(vm.selectedChartXAxis).CustomFieldName, vm.FilterColumnlist(vm.selectedChartYAxis).CustomFieldName);\r\n                        vm.CalculatingAggregateFuncResult(vm.aggregateFunctionType);\r\n                        vm.DrawGraph();\r\n                        vm.PreviewChart = true;\r\n                        vm.isChartData = true\r\n                        vm.isGraphLoadedAlready = true;\r\n                    }\r\n                }\r\n               else {\r\n                vm.requiedFieldfordrawGraph();\r\n               }    \r\n        },\r\n        requiedFieldfordrawGraph() {\r\n            var vm = this;\r\n            if(vm.selectedChartTypeID == null && vm.selectedChartXAxis=='' && vm.selectedChartYAxis==''){\r\n                    vm.ShowAlert(vm.$t(\"FieldsNameRequired\", [vm.$t(\"ChartTypes\") + ', ' + vm.$t(\"XAXIS\") + ' and '+  vm.$t(\"YAXIS\")]), 'failure', true, vm.$t('Alert'));\r\n                    vm.isLoading = false;\r\n                    return false;\r\n                }\r\n                else if(vm.selectedChartXAxis=='' && vm.selectedChartYAxis =='' ){\r\n                    vm.ShowAlert(vm.$t(\"FieldNameRequired\", [vm.$t(\"XAXIS\") + ' and '+  vm.$t(\"YAXIS\")]), 'failure', true, vm.$t('Alert'));\r\n                    vm.isLoading = false;\r\n                    return false\r\n                }\r\n                else if(vm.selectedChartTypeID == null){\r\n                    vm.ShowAlert(vm.$t(\"FieldNameRequired\", [vm.$t(\"ChartTypes\")]), 'failure', true, vm.$t('Alert'));\r\n                    vm.isLoading = false;\r\n                    return false\r\n                }\r\n                else if(vm.selectedChartXAxis==''){\r\n                    vm.ShowAlert(vm.$t(\"FieldNameRequired\", [vm.$t(\"XAXIS\")]), 'failure', true, vm.$t('Alert'));\r\n                    vm.isLoading = false;\r\n                    return false\r\n                }\r\n                else if(vm.selectedChartYAxis==''){\r\n                    vm.ShowAlert(vm.$t(\"FieldNameRequired\", [vm.$t(\"YAXIS\")]), 'failure', true, vm.$t('Alert'));\r\n                    vm.isLoading = false;\r\n                    return false\r\n                }\r\n        },\r\n\r\n        SetGroupingGraphData() {\r\n            var vm = this;\r\n            let ListingData = vm.GraphJson.ListingData;\r\n            let setGraphArray = [];\r\n            let XaxisField = vm.FilterColumnlist(vm.selectedChartXAxis).CustomFieldName;\r\n            let yAxisField = vm.FilterColumnlist(vm.selectedChartYAxis).CustomFieldName;\r\n            if (Object.keys(ListingData[0])[0] == vm.FilterColumnlist(vm.selectedChartXAxis).CustomFieldName && Object.keys(ListingData[0])[0] == vm.FilterColumnlist(vm.selectedChartYAxis).CustomFieldName && vm.GraphData.length > 0\r\n                || XaxisField == undefined && yAxisField == undefined) {\r\n                XaxisField = Object.keys(ListingData[0])[0];\r\n                yAxisField = Object.keys(ListingData[0].data[0])[0];\r\n                vm.aggregateFunctionType = vm.GraphData[0].AggregateFunction;\r\n            }\r\n            ListingData.forEach((item, mainindex) => {\r\n                if (item[XaxisField] != undefined || XaxisField != undefined) {\r\n                    if (vm.aggregateFunctionType == \"Count\" || vm.aggregateFunctionType == \"Sum\" || vm.aggregateFunctionType == \"Avg\"\r\n                        || vm.aggregateFunctionType == \"Min\" || vm.aggregateFunctionType == \"Max\") {\r\n                        var pushitem = item[XaxisField] != undefined ? item[XaxisField] : item.data[0][XaxisField] + ` (${item.totalRecord})`;\r\n                        for (var i = 0; i <= parseInt(item.totalRecord); i++) {\r\n                            if (i == 0) {\r\n                                setGraphArray.push({\r\n                                    [XaxisField]: pushitem,\r\n                                    [yAxisField]: item.GData != null && item.GData != 0 && item.GData > item.totalRecord ? item.GData : item.totalRecord\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n            vm.GroupingGraphData = setGraphArray\r\n        },\r\n        // Apply  Graph Values when click on Apply adn bind the final values of graph and pass to Reportpreview \r\n        async ApplyGraph() {\r\n            var vm = this;\r\n            this.$refs.refGraphForm.validateForm.validate().then(async function (valid) {\r\n                if (valid) {\r\n                    // if (!vm.isGraphLoadedAlready) {\r\n                    // }\r\n                    await vm.ViewReportGraph();\r\n                    vm.graphParams = {\r\n                        \"selectedChartType\": vm.selectedChartType,\r\n                        \"selectedChartTypeID\": vm.selectedChartTypeID,\r\n                        \"chartseries\": vm.chartseries,\r\n                        \"chartoptions\": vm.chartOptions,\r\n                        \"aggregateFunctionType\": vm.aggregateFunctionType,\r\n                        \"aggregateFunctionResult\": vm.aggregateFunctionResult,\r\n                        \"selectedChartXAxis\": vm.selectedChartXAxis,\r\n                        \"selectedChartYAxis\": vm.selectedChartYAxis\r\n                    }\r\n                    if (vm.graphParams.selectedChartTypeID != null && vm.graphParams.selectedChartType != '' && vm.graphParams.selectedChartXAxis != '' && vm.graphParams.selectedChartYAxis != '') {\r\n                        vm.$parent.DrawGraph(vm.graphParams, vm.BindGraph)\r\n                        vm.isGraphLoadedAlready = false\r\n                        vm.CloseGraphOptions();\r\n                    }\r\n                }\r\n            });\r\n        },\r\n\r\n        // Draw Graph\r\n        DrawGraph: function () {\r\n            var vm = this;\r\n            var isHorizontal = false;\r\n            if (vm.selectedChartType == \"bar\" || vm.selectedChartType == \"line\" || vm.selectedChartType == 'horizontal_bar') {\r\n                if (vm.selectedChartType == 'horizontal_bar') {\r\n                    vm.selectedChartType = \"bar\";\r\n                    isHorizontal = true;\r\n                }\r\n                vm.chartseries = [{\r\n                    name: vm.$t(vm.FilterColumnlist(vm.selectedChartYAxis).CustomFieldName),\r\n                    data: vm.chartSeriesData\r\n                }]\r\n                vm.chartOptions = {\r\n                    chart: {\r\n                        toolbar: {\r\n                            export: {\r\n                                svg: {\r\n                                    filename: vm.FormSchema[0].Data[0].value,\r\n                                },\r\n                                png: {\r\n                                    filename: vm.FormSchema[0].Data[0].value,\r\n                                },\r\n                                csv: {\r\n                                    headerCategory: vm.$t(vm.FilterColumnlist(vm.selectedChartXAxis).CustomFieldName),\r\n                                    filename: vm.FormSchema[0].Data[0].value,\r\n                                }\r\n                            }\r\n                        },\r\n                    },\r\n                    tooltip:{\r\n                        enabled:true,\r\n                        x:{\r\n                            formatter:(val) => val\r\n                        }\r\n                    },\r\n                    xaxis: {\r\n                        categories: vm.chartOptionXAxisData,\r\n                        title: {\r\n                            text: isHorizontal ? vm.$t(vm.FilterColumnlist(vm.selectedChartYAxis).CustomFieldName) : vm.$t(vm.FilterColumnlist(vm.selectedChartXAxis).CustomFieldName),\r\n                        },\r\n                        labels: {\r\n                            trim:true,\r\n                            rotate: -45,\r\n                            // formatter: (val) => isHorizontal ? val : val != undefined ? vm.TruncateStr(val,6) : val\r\n                        },\r\n                    },\r\n                    yaxis: {\r\n                        title: {\r\n                            text: isHorizontal ? vm.$t(vm.FilterColumnlist(vm.selectedChartXAxis).CustomFieldName) : vm.$t(vm.FilterColumnlist(vm.selectedChartYAxis).CustomFieldName),\r\n                        },\r\n                        labels: {\r\n                            formatter: function (val) {\r\n                                return val.toLocaleString(\"en-US\");\r\n                            }\r\n                        }\r\n                    },\r\n                    plotOptions: isHorizontal ? { bar: { borderRadius: 4, horizontal: true, } } : {},\r\n                    dataLabels: {\r\n                        enabled: true,\r\n                    },\r\n\r\n                }\r\n            }\r\n            if (vm.selectedChartType == \"pie\" || vm.selectedChartType == \"donut\") {\r\n                vm.chartseries = vm.chartSeriesData;\r\n                vm.chartOptions = {\r\n                    labels: vm.chartOptionXAxisData,\r\n                    colors: vm.colourList,\r\n                }\r\n            }\r\n        },\r\n        // TruncateStr: function (str, len) {\r\n        //     var convertstring = '' + str;\r\n        //     if (convertstring != null)\r\n        //         if (convertstring.length <= len) return str;\r\n        //         else return convertstring.substring(0, len) + \"..\";\r\n        // },\r\n\r\n        // Calculating  Aggregate Function Result\r\n        CalculatingAggregateFuncResult: function (functionType) {\r\n            var vm = this;\r\n            var tempval = 0;\r\n            if (functionType == \"Sum\") {\r\n                var sum = 0;\r\n                vm.chartSeriesData.forEach(item => {\r\n                    sum += parseInt(item);\r\n                });\r\n                vm.aggregateFunctionResult = sum.toFixed(2);\r\n                vm.aggregateFunctionResult = parseFloat(vm.aggregateFunctionResult).toLocaleString('en-US');\r\n            }\r\n            if (functionType == \"Count\") {\r\n                var aggregatecount = 0;\r\n                aggregatecount = vm.chartSeriesData.length;\r\n                vm.aggregateFunctionResult = aggregatecount;\r\n            }\r\n            if (functionType == \"Avg\") {\r\n                var total = 0;\r\n                var count = 0;\r\n\r\n                vm.chartSeriesData.forEach(function (item, index) {\r\n                    total += item;\r\n                    count++;\r\n                });\r\n                tempval = total / count;\r\n                vm.aggregateFunctionResult = tempval.toFixed(2);\r\n                vm.aggregateFunctionResult = parseFloat(vm.aggregateFunctionResult).toLocaleString('en-US');\r\n            }\r\n            if (functionType == \"Min\") {\r\n                tempval = Math.min.apply(Math, vm.chartSeriesData.filter(Number));\r\n                vm.aggregateFunctionResult = tempval.toFixed(2);\r\n                vm.aggregateFunctionResult = parseFloat(vm.aggregateFunctionResult).toLocaleString('en-US');\r\n            }\r\n            if (functionType == \"Max\") {\r\n                tempval = Math.max(...vm.chartSeriesData)\r\n                vm.aggregateFunctionResult = tempval.toFixed(2);\r\n                vm.aggregateFunctionResult = parseFloat(vm.aggregateFunctionResult).toLocaleString('en-US');\r\n            }\r\n        },\r\n\r\n        // Check field type for View AS checkbox \r\n        CheckFieldType: function (CustomFieldId) {\r\n            var vm = this;\r\n            if (vm.selectedChartYAxis == vm.selectedChartXAxis) {\r\n                vm.selectedChartYAxis = '';\r\n                vm.ShowAlert(\"X and Y axis values are not same\", \"warning\")\r\n                return false;\r\n            }\r\n            vm.aggregateFunctionResult = 0;\r\n            let ColumnFieldType = vm.FilterColumnlist(CustomFieldId).ColumnFieldType;\r\n            if (ColumnFieldType == \"decimal\" || ColumnFieldType == \"int\") {\r\n                vm.FormSchema[0].Data[4].visibility = true;\r\n                vm.FormSchema[0].Data[5].visibility = false;\r\n                vm.FormSchema[0].Data[4].value = 'Count'\r\n                vm.aggregateFunctionType = ''\r\n            }\r\n            else {\r\n                vm.FormSchema[0].Data[4].visibility = false;\r\n                vm.FormSchema[0].Data[5].visibility = true;\r\n                vm.FormSchema[0].Data[5].value = 'Count'\r\n                vm.aggregateFunctionType = 'Count'\r\n            }\r\n        },\r\n        CheckFieldTypeX: function (CustomFieldId) {\r\n            var vm = this;\r\n            //vm.aggregateFunctionType = ''\r\n            if (vm.selectedChartYAxis == vm.selectedChartXAxis) {\r\n                vm.selectedChartXAxis = '';\r\n                vm.ShowAlert(\"X and Y axis values are not same\", \"warning\")\r\n                return false;\r\n            }\r\n        },\r\n        // Filter column List baesd on CustomFieldId\r\n        FilterColumnlist(CustomFieldId) {\r\n            var vm = this;\r\n            let CustomFieldName, ColumnFieldType;\r\n            for (let [index] of vm.Columnlist.entries()) {\r\n                if (vm.Columnlist[index].CustomFieldId == CustomFieldId || vm.Columnlist[index].FieldName == CustomFieldId) {\r\n                    if (vm.Columnlist[index].DisplayName != null && vm.Columnlist[index].DisplayName != '') {\r\n                        CustomFieldName = vm.Columnlist[index].DisplayName;\r\n                    }\r\n                    else {\r\n                        CustomFieldName = vm.Columnlist[index].FieldName;\r\n                    }\r\n                    ColumnFieldType = vm.Columnlist[index].ColumnFieldDataCode;\r\n                }\r\n            }\r\n            return { 'CustomFieldName': CustomFieldName, 'ColumnFieldType': ColumnFieldType }\r\n        },\r\n\r\n        // Set the Chart Xaxis and Yaxis\r\n        SetGraphValues(data, XFieldName, YFieldName) {\r\n            var vm = this;\r\n            vm.chartOptionXAxisData = [];\r\n            vm.chartSeriesData = [];\r\n            data.forEach(items => {\r\n                if (XFieldName in items) {\r\n                    if (items[XFieldName] != null && items[XFieldName] != undefined) {\r\n                        vm.chartOptionXAxisData.push(items[XFieldName])\r\n                        //set graph Values if XField  is Not Null  \r\n                        vm.BindXYFields(items, XFieldName, YFieldName);\r\n                    }\r\n                    else {\r\n                        //set graph Values if XField  is  Null\r\n                        if (items[YFieldName] != null && items[YFieldName] != undefined) {\r\n                            if (typeof XFieldName == \"string\") {\r\n                                vm.chartOptionXAxisData = [...vm.chartOptionXAxisData, \"-\"]\r\n                            }\r\n                            else {\r\n                                vm.chartOptionXAxisData = [...vm.chartOptionXAxisData, 0]\r\n                            }\r\n                            vm.BindXYFields(items, XFieldName, YFieldName);\r\n                        }\r\n\r\n                    }\r\n                }\r\n                else {\r\n                    vm.chartOptionXAxisData.push(\" \")\r\n                    vm.BindXYFields(items, XFieldName, YFieldName);\r\n                }\r\n            });\r\n        },\r\n        //set graph Values if XField  is Not Null  \r\n        BindXYFields: function (items, XFieldName, YFieldName) {\r\n            var vm = this;\r\n            if (YFieldName in items) {\r\n                if (items[YFieldName] != null && items[YFieldName] != undefined) {\r\n                    if (typeof items[YFieldName] == \"string\") {\r\n                        var replaceXCurrencySymbol = items[YFieldName].replace(/[$€£]/g, '')\r\n                        vm.chartSeriesData.push(parseInt(replaceXCurrencySymbol))\r\n                    }\r\n                    else {\r\n                        vm.chartSeriesData.push(items[YFieldName])\r\n                    }\r\n                }\r\n                else {\r\n                    vm.chartSeriesData = [...vm.chartSeriesData, 0]\r\n                }\r\n            }\r\n        },\r\n\r\n        //Genrate Random Color Code\r\n        GenrateRandomColorCode() {\r\n            const randomColor = Math.floor(Math.random() * 16777215).toString(16);\r\n            return \"#\" + randomColor;\r\n        },\r\n\r\n        // Genrate List of random colors\r\n        GenrateRandomColorList() {\r\n            var vm = this;\r\n            while (vm.colourList.length < vm.chartSeriesData.length) {\r\n                let color;\r\n                color = vm.GenrateRandomColorCode();\r\n                let IsExist = vm.colourList.find(x => x == color)\r\n                if (!IsExist) { vm.colourList.push(color); }\r\n            }\r\n        },\r\n        onSubmit: async function (formfields, val) {\r\n            var vm = this;\r\n            await vm.ApplyGraph();\r\n            // vm.SaveDynamicreport(ReportID)            \r\n        },\r\n    }\r\n}\r\n\r\n</script>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./modalGraphOptions.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./modalGraphOptions.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./modalGraphOptions.vue?vue&type=template&id=75234cf6&\"\nimport script from \"./modalGraphOptions.vue?vue&type=script&lang=js&\"\nexport * from \"./modalGraphOptions.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\r\n    <div>\r\n        <div class=\"right-content datareport hr_jobpost\">\r\n            <div class=\"col-md-12 p-0 mb-2\"> \r\n                <div class=\"theme-primary partition p-actions-expand overflow-visible\">\r\n                    <loader :isVisible=\"isLoading\"></loader>\r\n                    <span class=\"p-name text-white\">{{ $t('ReportPreview') }}</span>\r\n                    <span class=\"p-actions float-right mydbsize\">\r\n                        <a class=\"p-action-btn text-white dash\" data-original-title=\"REPORT PREVIEW\" v-on:click=\"PreviewReport\">\r\n                            <em class=\"fa fa-play\"></em><br>{{ $t('ReportPreview') }}\r\n                        </a>\r\n                        <a class=\"p-action-btn text-white dash\" data-original-title=\"RESET\" v-on:click=\"ResetData\">\r\n                            <em class=\"fa fa-repeat\"></em><br>{{ $t('Reset') }}\r\n                        </a>\r\n                        <a class=\"p-action-btn text-white dash\" data-original-title=\"PDF\" v-on:click=\"ExportToPDF\">\r\n                            <em class=\"fa fa-file-pdf-o\"></em><br>{{ $t('ExportToPdf') }}\r\n                        </a>\r\n                        <a class=\"p-action-btn text-white dash\" data-original-title=\"Excel\" v-on:click=\"ExportToExcel\">\r\n                            <em class=\"fa fa-file-excel-o\"></em><br>{{ $t('ExportToExcel') }}\r\n                        </a>\r\n                        <a v-on:click=\"OpenSortingPopup\" class=\"p-action-btn text-white dash\" data-original-title=\"SORT\">\r\n                            <em class=\"fa fa-sort-amount-asc\"></em><br>{{ $t('SORT') }}\r\n                        </a>\r\n                        <a v-on:click=\"OpenGraph\" class=\"p-action-btn text-white dash\" data-original-title=\"GRAPH\">\r\n                            <em class=\"fa fa-pie-chart\"></em><br>{{ $t('Graph') }}\r\n                        </a>\r\n                        <div class=\"parentdiv datarepfix2\">\r\n                    <div class=\"verticle-action lft75 rt30\">\r\n                        <span class=\"action-list-box small\" style=\"width:400px\">\r\n                            <span id=\"action-list1\" class=\"text-left p-0 datarep mt-3 w-90 float-left bg_outerdark borderbababa position-relative\" v-if=\"isSortPopup\">\r\n                                <div class=\"float-left col-12\">\r\n                                    <div class=\"container-fluid p-0 mb-3\">\r\n                                    </div>\r\n                                    <div class=\"row px-3 pb-0\" v-for=\"(input, index) in sortColummnarray\" :key=\"`phoneInput-${index}`\">\r\n                                        <div class=\"col-lg-5 pl-0 pr-3\">\r\n                                            <div class=\"form-group\">\r\n                                                <label>{{ $t('SortBy') }}</label>\r\n                                                <select v-model=\"input.sortcolummnId\" class=\"form-control\">\r\n                                                    <option v-for=\"item in Columnlist.filter(x => x.Calculated_Field == false)\"\r\n                                                        :value=\"item.CustomFieldId\" :key=\"item.CustomFieldId\" :disabled=\"(sortColummnarray.filter(x => x.sortcolummnId == item.CustomFieldId)).length > 0\">\r\n                                                        {{ item.DisplayName ? GetLocalizedValue(item.DisplayName) :\r\n                                                            GetLocalizedValue(item.FieldName) }}\r\n                                                    </option>\r\n                                                </select>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-lg-5 pl-0 pr-3\">\r\n                                            <div class=\"form-group\">\r\n                                                <label>{{ $t('OrderBy') }}</label>\r\n                                                <select v-model=\"input.columnOrders\" class=\"form-control\">\r\n                                                    <option>{{ $t('ASC') }}</option>\r\n                                                    <option>{{ $t('DESC') }}</option>\r\n                                                </select>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-lg-2\">\r\n                                            <div class=\"form-group\">\r\n                                                <a v-on:click=\"AddSortingForm(input)\"><em\r\n                                                        class=\"fa fa-plus-circle font-24 text-success mt-3\"></em></a>\r\n                                                <a v-show=\"sortColummnarray[0].sortcolummnId != '' || isValueExistInSort\"\r\n                                                    v-on:click=\"RemoveSortingForm(input)\"><em\r\n                                                        class=\"fa fa-times-circle font-24 text-danger mt-3 ml-1\"></em></a>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"va_lft25 top4\"><em class=\"icon-solid arrow-solid-left text-secondary\"\r\n                                        style=\"font-size: 20pt;\"></em>\r\n                                </div>\r\n                                <button type=\"button\" class=\"close closebtnsmall\" v-on:click=\"close()\">\r\n                                        <em aria-hidden=\"true\" class=\"fa fa-times\"></em>\r\n                                </button>\r\n                            </span>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n\r\n                    </span>\r\n                    <span class=\"collapse-head-btns\">\r\n                        <a href=\"javascript:;\" class=\"collapse-btns\">\r\n                            <em class=\"fa fa-angle-up text-white\"></em>\r\n                        </a>\r\n                    </span>\r\n                </div>\r\n                \r\n            </div>\r\n\r\n            <div class=\"col-md-12 p-0 mb-2\">\r\n                <div class=\"tab-pane mb-0\">\r\n                    <div class=\"tab-content fsmtabcontrolMobileView\" id=\"myTabContent\">\r\n                        <div class=\"expand-list\">\r\n                            <a href=\"javascript:;\" class=\"expand-list-btn justify-content-center align-items-center\">\r\n                                <em class=\"icon-solid arrow-solid-left text-white\" style=\"font-size:9pt\"></em>\r\n                            </a>\r\n                        </div>\r\n                        <div v-if=\"showGraphOptions\" class=\"card mb-3 probx\">\r\n                            <div class=\"card-header\">\r\n                                <h2>{{ $t('Graph') }}</h2>\r\n                                <a class=\"btn btn-primary\" v-on:click=\"OpenGraphOptions\">{{ $t('GraphOptions') }} <em\r\n                                        class=\"fa fa-cogs\"></em></a>\r\n                            </div>\r\n                            <div v-if=\"showChart\" class=\"card-body\" id=\"Reportpdf\" style=\"min-height: 245px;\">\r\n                                <div class=\"float-right\"><a class=\"text-center text-danger\" v-on:click=\"ResetGraphData()\">\r\n                                        <span class=\"fa fa-trash-o text-danger\" style=\"font-size:25px;\"></span>\r\n                                    </a></div>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-12 col-lg-12 text-center p-0\">\r\n                                        <div class=\"border bg-light float-left text-left p-0  graphinfo_base_lft\">\r\n                                            <ul class=\"graphinfo\">\r\n                                                <li><label>X-axis:</label>\r\n                                                    {{ GetLocalizedValue(FilterCustomFieldName(XAxisField)) }}</li>\r\n                                                <li><label>Y-axis:</label>\r\n                                                    {{ GetLocalizedValue(FilterCustomFieldName(YAxisField)) }}</li>\r\n                                                <li v-show=\"aggregateFunctionResult != 0\">\r\n                                                    <label># {{ aggregateFunctionType }}:</label>\r\n                                                    {{ aggregateFunctionResult }}\r\n                                                </li>\r\n                                            </ul>\r\n                                        </div>\r\n                                        <div class=\"p-0 m-0 float-left graphinfo_base_rgt\"\r\n                                            v-if=\"chartType == 'line' || chartType == 'bar'\">\r\n                                            <VueApexCharts ref=\"chart\" :type=\"chartType\" height=\"auto\" :options=\"chartOptions\"\r\n                                                :series=\"chartSeries\">\r\n                                            </VueApexCharts>\r\n                                        </div>\r\n                                        <div class=\"p-0 m-0 float-left graphinfo_base_rgt\"\r\n                                            v-if=\"chartType == 'pie' || chartType == 'donut'\">\r\n                                            <VueApexCharts ref=\"chart\" :type=\"chartType\" height=\"auto\" :options=\"chartOptions\"\r\n                                                :series=\"chartSeries\">\r\n                                            </VueApexCharts>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"tab-pane p-0 pb-2 border-0 active\" role=\"tabpanel\" id=\"tab-detail-content\"\r\n                            aria-labelledby=\"tab-detail-content\">\r\n                            <div class=\"listing mt-3\">\r\n                                <div class=\"table-responsive table-fix-header\">\r\n                                    <table class=\"table table-bordered mt-0\" style=\"width:100%\" id=\"Reportpdf\"\r\n                                        aria-label=\"Report Preview Listing\">\r\n                                        <thead class=\"thead-bg\">\r\n                                            <tr>\r\n                                                <th scope=\"col\" v-for=\"(item, index) in previewgroupdata\" :key=\"index\"\r\n                                                    v-if=\"showdata\">\r\n                                                    {{ GetLocalizedValue((item.DisplayName != null && item.DisplayName != '') ?\r\n                                                        item.DisplayName : item.FieldName) }}</th>\r\n                                                <th scope=\"col\" v-for=\"(column, index) in previewcolumn\" :key=\"index\">\r\n                                                    {{ GetLocalizedValue((column.DisplayName != null && column.DisplayName !=\r\n                                                        '') ?\r\n                                                        column.DisplayName : column.FieldName) }}{{ column.ExpresssionFieldName }}\r\n                                                </th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody v-if=\"noRecord\">\r\n                                            <tr style=\"cursor:initial;\">\r\n                                                <td colspan=\"4\">\r\n                                                    <div\r\n                                                        class=\"text-center text-danger d-flex align-items-center justify-content-center norecs\">\r\n                                                        {{ $t(\"NoRecordfound\") }}</div>\r\n                                                </td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                        <tbody v-for=\"(item, index) in previewdata\">\r\n                                            <tr v-for=\"(sitem, sindex) in previewdata[index].data\" v-if=\"showdata\">\r\n                                                <template v-if=\"sindex == 0\">\r\n                                                    <td v-for=\"(gitem, gindex) in previewgroupdata\"\r\n                                                        :class=\"{ 'onlyrtbod': true, '': item.totalRecord == null }\"\r\n                                                        :rowspan=\"item.totalRecord\">\r\n                                                        {{ (item[gitem.DisplayName] != null && item[gitem.DisplayName] != '') ?\r\n                                                            gitem.ColumnFieldDataCode == 'date' ? $options.filters.formatDate(item[gitem.DisplayName]) : item[gitem.DisplayName] : \r\n                                                            gitem.ColumnFieldDataCode == 'date' ? $options.filters.formatDate(item[gitem.FieldName]) : item[gitem.FieldName] }}\r\n                                                        <!-- {{ (LevelOfGrouping == 2) ?\r\n                                                            (item.data[sindex][gitem.DisplayName] ?\r\n                                                                item.data[sindex][gitem.DisplayName] : '') :\r\n                                                            (item.data[sindex][gitem.FieldName] ?\r\n                                                                item.data[sindex][gitem.FieldName] : '-') }}  -->\r\n                                                        <!-- {{ (LevelOfGrouping == 3) ?\r\n                                                            (item.data[sindex].data[sindex][gitem.DisplayName] ?\r\n                                                                item.data[sindex].data[sindex][gitem.DisplayName] : '') :\r\n                                                            (item.data[sindex].data[sindex][gitem.FieldName] ?\r\n                                                                item.data[sindex].data[sindex][gitem.FieldName] : '-') }} -->\r\n                                                        ({{ (item[gitem.DisplayName] != null && item[gitem.DisplayName] != '' ||\r\n                                                            gitem.FieldName != null && gitem.FieldName != '') ? item.totalRecord\r\n                                                            : '-' }})\r\n                                                    </td>\r\n                                                </template>\r\n                                                <!-- v-if=\"LevelOfGrouping < 2\" -->\r\n                                                <td v-for=\"(column,i) in previewcolumn\" :key=\"i\">\r\n                                                    <span v-html=\"(sitem[column.DisplayName] == true && sitem[column.DisplayName] != 1 || sitem[column.DisplayName] == false && sitem[column.DisplayName] != 0) ?\r\n                                                        (sitem[column.DisplayName] == true ? 'YES' : 'NO') : (sitem[column.FieldName]\r\n                                                        == true ? 'YES' : 'NO') ||\r\n                                                        (sitem[column.DisplayName] != null && sitem[column.DisplayName] != '') ?\r\n                                                        (sitem[column.DisplayName] || sitem[column.DisplayName] == 0 ? column.ColumnFieldDataCode == 'date' ? \r\n                                                        $options.filters.formatDate(sitem[column.DisplayName]) : sitem[column.DisplayName] : '') :\r\n                                                        (sitem[column.FieldName] || sitem[column.DisplayName] == 0 ? column.ColumnFieldDataCode == 'date' ? \r\n                                                        $options.filters.formatDate(sitem[column.FieldName]) : sitem[column.FieldName] : '')\">\r\n                                                    </span>\r\n                                                </td>\r\n                                                <!-- <td v-for=\"column in previewcolumn\" v-if=\"LevelOfGrouping == 2\">\r\n                                                    {{ (sitem.data[0][column.DisplayName] != null &&\r\n                                                        sitem.data[0][column.DisplayName] != '') ?\r\n                                                        (sitem.data[0][column.DisplayName] ? sitem.data[0][column.DisplayName] :\r\n                                                            '-') :\r\n                                                        (sitem.data[0][column.FieldName] ? sitem.data[0][column.FieldName] : '-') }}\r\n                                                </td> -->\r\n                                                <!-- <td v-for=\"column in previewcolumn\" v-if=\"LevelOfGrouping == 3\">\r\n                                                    {{ (sitem.data[0].data[0][column.DisplayName] != null &&\r\n                                                        sitem.data[0].data[0][column.DisplayName] != '') ?\r\n                                                        (sitem.data[0].data[0][column.DisplayName] ?\r\n                                                            sitem.data[0].data[0][column.DisplayName] : '-') :\r\n                                                        (sitem.data[0].data[0][column.FieldName] ?\r\n                                                            sitem.data[0].data[0][column.FieldName] : '-') }}\r\n                                                </td> -->\r\n                                            </tr>\r\n                                            <tr v-if=\"showcoldata\">\r\n                                                <td v-for=\"(column,i) in previewcolumn\" :key=\"i\"> \r\n                                                    <span v-html=\"(item[column.DisplayName] == true && item[column.DisplayName] != 1 || item[column.DisplayName] == false && item[column.DisplayName] != 0) ?\r\n                                                        (item[column.DisplayName] == true ? 'YES' : 'NO') : (item[column.FieldName]\r\n                                                        == true ? 'YES' : 'NO') ||\r\n                                                        (item[column.DisplayName] != null && item[column.DisplayName] != '') ?\r\n                                                        (item[column.DisplayName] || item[column.DisplayName] == 0 ? column.ColumnFieldDataCode == 'date' ? \r\n                                                        $options.filters.formatDate(item[column.DisplayName]) : item[column.DisplayName] : '') :\r\n                                                        (item[column.FieldName] || item[column.DisplayName] == 0 ? column.ColumnFieldDataCode == 'date' ?\r\n                                                        $options.filters.formatDate(item[column.FieldName]) : item[column.FieldName] : '')\">\r\n                                                    </span>\r\n                                                        {{ item[column.ExpresssionFieldName] }}\r\n                                                </td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"float-right\">\r\n                            <a class=\"btn btn-success my-2 my-sm-0 mr-2\" v-on:click=\"SaveAllReport()\">&emsp13;\r\n                                <span class=\"fa fa-floppy-o\"></span> {{ $t('Save') }}\r\n                            </a>\r\n                            <a class=\"btn btn-danger\" v-on:click=\"CancelAll()\">&emsp13;\r\n                                <span class=\"fa fa-times\"></span> {{ $t('Cancel') }}\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <modalGraphOptions :Columnlist=\"Columnlist\" :showGraphOptions=\"showGraphOptions\" :customreportparameters=\"customreportparameters\" :GraphData=\"GraphData\"\r\n            :sortColummnarray=\"sortColummnarray\" :GraphJson=\"GraphJson\" ref=\"modalGraph\">\r\n        </modalGraphOptions>\r\n    </div>\r\n</template>\r\n<script>\r\nimport ReportPreviewService from \"@/services/DataService\";\r\nimport modalGraphOptions from \"@/components/Common/Modal/modalGraphOptions.vue\";\r\nimport VueApexCharts from \"vue-apexcharts\";\r\nimport * as pdfFonts from \"pdfmake/build/vfs_fonts.js\"; // <-- vfs_fonts has to be imported before pdfmake\r\nimport pdfMake from 'pdfmake';\r\npdfMake.vfs = pdfFonts.pdfMake.vfs;\r\n\r\nexport default {\r\n    components: {\r\n        VueApexCharts,\r\n        modalGraphOptions,\r\n        pdfMake\r\n\r\n    },\r\n    props: {\r\n        previewdata: {\r\n            type: Array,\r\n        },\r\n        Columnlist: {\r\n            type: Array\r\n        },\r\n        customreportparameters: {\r\n            type: Object\r\n        },\r\n        Grouplist: {\r\n            type: Array\r\n        },\r\n        saveJsonReport: {\r\n            type: Object\r\n        },\r\n        ReportName: {\r\n            type: String\r\n        },\r\n        GraphData: {\r\n            type: Array\r\n        },\r\n        SortingData: {\r\n            type: Array\r\n        },\r\n        GraphJson: {\r\n            type: Array\r\n        },\r\n        editjsondata: {\r\n            type: Boolean\r\n        },\r\n        LevelOfGrouping: {\r\n            type: Number\r\n        },\r\n        PdfJsonReport: {\r\n            type: Object\r\n     }\r\n    },\r\n    data() {\r\n        return {\r\n            isLoading: false,\r\n            previewcolumn: [],\r\n            previewgroupdata: [],\r\n            noRecord: true,\r\n            showdata: false,\r\n            showcoldata: true,\r\n            showGraphOptions: false,\r\n            showChart: false,\r\n            showmulitGrouping: false,\r\n            //Sorting PopUp\r\n            isSortPopup: false,\r\n            sortColummnarray: [{ sortcolummnId: \"\", columnOrders: \"\" }],\r\n            DynamicFillValue: [],\r\n            GroupValue: [],\r\n            isValueExistInSort: false,\r\n            isGraph:false,\r\n\r\n            //Bind Chart \r\n            chartTypeID: null,\r\n            chartType: \"\",\r\n            chartSeries: [],\r\n            chartOptions: {},\r\n            aggregateFunctionType: null,\r\n            aggregateFunctionResult: null,\r\n            XAxisField: null,\r\n            YAxisfield: null,\r\n            watchvalue: false,\r\n            allReocrdsList: null,\r\n            ExcelData: null,\r\n            BindGraph: false,\r\n            SavedGraphData:{},\r\n\r\n            //Export to PDF\r\n            allReocrdsData: null,\r\n            TableBody: [],\r\n            TableHeader: [],\r\n            pdfContent: null,\r\n            ExcelJsonData: null,\r\n            count: 0,\r\n            isPreviewForPdfExcel: 1,\r\n           \r\n        }\r\n    },\r\n    created() {\r\n        var vm = this;\r\n        if (vm.GraphData != null && vm.GraphData != undefined && vm.GraphData != '' && vm.GraphData.length > 0) {\r\n            vm.showGraphOptions = true;\r\n        }\r\n        vm.EditSortingData();\r\n        if (vm.previewdata != null && vm.previewdata != undefined && vm.previewdata.length > 0) {\r\n            vm.RenderList();\r\n        } if (vm.editjsondata) { vm.PreviewReport(); }\r\n    },\r\n    mounted() {\r\n        var vm = this;\r\n        if (vm.GraphData != null && vm.GraphData != undefined && vm.GraphData != '' && vm.GraphData.length > 0) {\r\n            vm.showGraphOptions = true;\r\n            if (vm.aggregateFunctionType == '') {\r\n                vm.aggregateFunctionType = vm.GraphData[0].AggregateFunction\r\n            }\r\n            if (vm.previewdata != null && vm.previewdata != undefined && vm.previewdata.length > 0) {\r\n                vm.$refs.modalGraph?.ViewReportGraph();\r\n            }\r\n        }\r\n    },\r\n    watch: {\r\n        watchvalue(newval, oldval) {\r\n            var vm = this;\r\n            if (newval != oldval) {\r\n                vm.RenderList();\r\n                vm.watchvalue = false;\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        EditSortingData: function () {\r\n            var vm = this;\r\n            if (vm.SortingData != null && vm.SortingData != undefined && vm.SortingData != '' && vm.SortingData.length > 0) {\r\n                vm.sortColummnarray = [];\r\n                vm.SortingData.forEach((item, index) => {\r\n                    vm.sortColummnarray.push({\r\n                        \"sortcolummnId\": item.CustomFieldId,\r\n                        \"columnOrders\": item.SORTTYPE\r\n                    })\r\n                })\r\n            }\r\n            else {\r\n                vm.sortColummnarray = [{ sortcolummnId: \"\", columnOrders: \"\" }]\r\n            }\r\n        },\r\n        RefreshReport: function () {\r\n            var vm = this;\r\n            vm.showdata = false;\r\n            vm.PreviewReport();\r\n        },\r\n        RenderList: function () {\r\n            var vm = this;\r\n            if (vm.previewdata != null && vm.previewdata != undefined && vm.previewdata.length > 0) {\r\n                vm.previewcolumn = []\r\n                vm.Columnlist.forEach(x => {\r\n                    vm.previewcolumn.push({ ...x });\r\n                })\r\n                vm.Grouplist.forEach(item => {\r\n                    vm.previewcolumn.forEach((gitem, index) => {\r\n                        if (item.DisplayName === gitem.DisplayName || item.FieldName === gitem.FieldName) {\r\n                            vm.previewcolumn.splice(index, 1);\r\n                        }\r\n                    })\r\n                })\r\n                if (vm.previewcolumn != null && vm.previewcolumn != undefined && vm.previewcolumn.length > 0) {\r\n                    if (vm.Grouplist.length > 0) {\r\n                        vm.previewgroupdata = Object.assign([], vm.Grouplist);\r\n                        vm.showdata = true;\r\n                        // if (vm.LevelOfGrouping > 2) {\r\n                        //     vm.showmulitGrouping = true;\r\n                        // }\r\n                        vm.showcoldata = false;\r\n                    }\r\n                    else {\r\n                        vm.showcoldata = true;\r\n                        vm.previewgroupdata = [];\r\n                    }\r\n                    vm.noRecord = false;\r\n                }\r\n            }\r\n            else {\r\n                vm.previewcolumn = [];\r\n                vm.previewgroupdata = [];\r\n                vm.noRecord = true;\r\n            }\r\n        },\r\n        PreviewReport: async function () {\r\n            var vm = this;\r\n            vm.isSortPopup = false;\r\n            vm.BindGraph = false;\r\n            if(vm.SavedGraphData.selectedChartTypeID != null && vm.SavedGraphData.selectedChartTypeID != undefined){\r\n               await vm.$refs.modalGraph.ApplyGraph();\r\n            }\r\n            if(vm.sortColummnarray[0].sortcolummnId == undefined || vm.sortColummnarray[0].columnOrders == undefined){\r\n                vm.sortColummnarray = [{ sortcolummnId: \"\", columnOrders: \"\" }]\r\n            }\r\n            await vm.$parent.PreviewJson(vm.sortColummnarray, vm.BindGraph);\r\n            vm.watchvalue = true\r\n        },\r\n        ResetData: function () {\r\n            var vm = this;\r\n            vm.showdata = false;\r\n            vm.isSortPopup = false;\r\n            vm.sortColummnarray = [{ sortcolummnId: \"\", columnOrders: \"\" }]\r\n            vm.previewcolumn = [];\r\n            vm.showGraphOptions = false;\r\n            vm.showChart = false;\r\n            vm.chartType = null;\r\n            vm.chartTypeID = null;\r\n            vm.aggregateFunctionType = null;\r\n            vm.aggregateFunctionResult = null;\r\n            vm.XAxisField = null;\r\n            vm.YAxisField = null;\r\n            vm.chartSeries = [];\r\n            vm.chartOptions = {};\r\n            vm.$refs.modalGraph?.ResetGraph();\r\n            vm.$parent.ResetPreview(vm.customreportparameters);\r\n            vm.noRecord = true;\r\n        },\r\n        ResetGraphData: function () {\r\n            var vm = this;\r\n            vm.showGraphOptions = false;\r\n            vm.$refs.modalGraph.ResetGraph();\r\n            // vm.$refs.modalGraph.ApplyGraph();\r\n            vm.chartType = \"\"\r\n            vm.chartTypeID = null\r\n            vm.aggregateFunctionType = null\r\n            vm.aggregateFunctionResult = null\r\n            vm.XAxisField = null\r\n            vm.YAxisField = null\r\n            vm.chartSeries = []\r\n            vm.chartOptions = {}\r\n            vm.showChart = false;\r\n            vm.BindGraph = false;\r\n        },\r\n        SaveAllReport: async function () {\r\n            var vm = this;\r\n            if (vm.editjsondata) {\r\n                await vm.$parent.PreviewJson(vm.sortColummnarray);\r\n            }\r\n            var graphArray = {\r\n                \"chartTypeID\": vm.chartTypeID,\r\n                \"XAxisField\": vm.XAxisField,\r\n                \"YAxisField\": vm.YAxisField,\r\n                \"AggregateFunction\": vm.aggregateFunctionType,\r\n                \"AggregateFuncField\": vm.aggregateFunctionResult\r\n            }\r\n            if (graphArray.chartTypeID != null) {\r\n                if (vm.Grouplist.length <= 1) {\r\n                    vm.Grouplist.forEach(item => {\r\n                        vm.saveJsonReport.Info.GROUP.push(item);\r\n                    })\r\n                }\r\n                vm.saveJsonReport.Info.GRAPH.push(graphArray);\r\n            }\r\n            var jsonData = JSON.stringify(vm.saveJsonReport);\r\n            if (jsonData != '[]' && jsonData != undefined && vm.previewdata.length > 0) {\r\n                ReportPreviewService.SaveAllDynamicReport(jsonData).then((response) => {\r\n                    if (response.data[0].Value == 1) {\r\n                        vm.ShowAlert(vm.$t(\"AddedSuccess\", [vm.$t(\"Report\")]), 'success', true, vm.$t('Alert'));\r\n                        this.$router.push({ name: 'CustomReports' });\r\n                    }\r\n                    else if (response.data[0].Value == 2) {\r\n                        vm.ShowAlert(vm.$t(\"UpdatedSuccess\", [vm.$t(\"Report\")]), 'success', true, vm.$t('Alert'));\r\n                        this.$router.push({ name: 'CustomReports' });\r\n                    }\r\n                }).catch((err) => {\r\n                    console.log(err);\r\n                })\r\n            } else {\r\n                vm.ShowAlert(vm.$t(\"No_Record_Found\"), 'failure', true, vm.$t('Alert'));\r\n                vm.isLoading = false;\r\n            }\r\n        },\r\n        OpenSortingPopup: function () {\r\n            var vm = this;\r\n            if (!vm.isSortPopup) {\r\n                vm.isSortPopup = true;\r\n            }\r\n            else {\r\n                vm.isSortPopup = false;\r\n            }\r\n        },\r\n        AddSortingForm: function (value) {\r\n            var vm = this\r\n            // Add Sorting popup dynamically.\r\n            if (vm.sortColummnarray[0].columnOrders != '' && vm.sortColummnarray[0].sortcolummnId != '' && vm.sortColummnarray.length < vm.Columnlist.length) {\r\n                vm.sortColummnarray.push({ sortcolummnId: \"\", columnOrders: \"\" });\r\n            } else {\r\n                vm.ShowAlert(vm.sortColummnarray[0].columnOrders != '' && vm.sortColummnarray[0].sortcolummnId != '' ? vm.$t(\"SortLimitExceed\") : vm.$t(\"AddFieldsFirst\"), 'failure', true, vm.$t('Alert'));\r\n            }\r\n        },\r\n        RemoveSortingForm: function (index) {\r\n            var vm = this;\r\n            if (vm.sortColummnarray.length == 1) {\r\n                vm.sortColummnarray = [{ sortcolummnId: \"\", columnOrders: \"\" }]\r\n            }\r\n            else {\r\n                // vm.sortColummnarray.splice(vm.sortColummnarray.indexOf(index), 1);\r\n                let sortindex = vm.sortColummnarray.findIndex(x => x.sortcolummnId === index.sortcolummnId)\r\n                if(sortindex > -1){\r\n                    vm.sortColummnarray.splice(sortindex,1);\r\n                }\r\n                vm.isValueExistInSort = true;\r\n            }\r\n            if(vm.sortColummnarray.length == 1){\r\n                vm.isValueExistInSort = false}\r\n        },\r\n        OpenGraph: function () {\r\n            var vm = this;\r\n            vm.isSortPopup = false;\r\n            if (!vm.showGraphOptions) {\r\n                vm.showGraphOptions = true;\r\n            }\r\n            else {\r\n                vm.showGraphOptions = false;\r\n            }\r\n        },\r\n        OpenGraphOptions: function () {\r\n            var vm = this;\r\n            vm.showChart = false;\r\n            vm.isGraph = true;\r\n            $(\"#CustomGraphOptions\").modal('show');\r\n            setTimeout(function () {\r\n                $(\"#CustomGraphOptions\").modal('show');\r\n                setTimeout(function () {\r\n                    vm.SetBootstraptoolTip();\r\n                }, 200);\r\n            }, 1000);\r\n        },\r\n        DrawGraph: function (graphParams, BindGraph) {\r\n            var vm = this;\r\n            if (graphParams.selectedChartTypeID != null && graphParams.selectedChartTypeID != undefined) {\r\n                vm.SavedGraphData = graphParams;\r\n                vm.chartType = graphParams.selectedChartType;\r\n                vm.chartTypeID = graphParams.selectedChartTypeID;\r\n                vm.aggregateFunctionType = graphParams.aggregateFunctionType;\r\n                vm.aggregateFunctionResult = graphParams.aggregateFunctionResult;\r\n                vm.XAxisField = graphParams.selectedChartXAxis;\r\n                vm.YAxisField = graphParams.selectedChartYAxis;\r\n                vm.chartSeries = graphParams.chartseries;\r\n                vm.chartOptions = graphParams.chartoptions;\r\n                vm.showChart = true;\r\n                vm.BindGraph = BindGraph;\r\n            }\r\n            else {\r\n                vm.showChart = false;\r\n            }\r\n\r\n        },\r\n        FilterCustomFieldName(CustomFieldId) {\r\n            var vm = this;\r\n            let CustomFieldName;\r\n            for (let [index] of vm.Columnlist.entries()) {\r\n                if (vm.Columnlist[index].CustomFieldId == CustomFieldId || vm.Columnlist[index].FieldName == CustomFieldId) {\r\n                    if (vm.Columnlist[index].DisplayName != null && vm.Columnlist[index].DisplayName != '') {\r\n                        CustomFieldName = vm.Columnlist[index].DisplayName;\r\n                    }\r\n                    else {\r\n                        CustomFieldName = vm.Columnlist[index].FieldName;\r\n                    }\r\n                }\r\n            }\r\n            return CustomFieldName;\r\n        },\r\n        CancelAll: function () {\r\n            this.$router.push({ name: 'CustomReports' });\r\n        },\r\n        CheckColumnExistInGraph: function (CustomFieldId) {\r\n            var vm = this;\r\n            var expression = true;\r\n            if (vm.XAxisField != CustomFieldId && vm.YAxisField != CustomFieldId) {\r\n                return !expression;\r\n            }\r\n            return expression;\r\n\r\n        },\r\n        GetAllRecordsForPDF: async function (excelvalue) {\r\n            var vm = this;\r\n            vm.count = 0;\r\n            if (vm.previewdata.length > 0) {\r\n                var temp = {\r\n                    \"Info\": {\r\n                        \"REPORTID\": vm.customreportparameters.ReportID,\r\n                        \"REPORTNAME\": vm.ReportName,\r\n                        \"MODULENAME\": vm.customreportparameters.Modulename,\r\n                        \"SUBMODULECODE\": vm.customreportparameters.Submodulecode,\r\n                        \"SUBMODULEID\": vm.customreportparameters.submoduleid,\r\n                        \"PAGESIZE\": vm.PageSize,\r\n                        \"PAGENUMBER\": parseInt(vm.PageNumber),\r\n                        \"IS_PAGED\": 1,\r\n                        \"IsForPreview\": vm.isPreviewForPdfExcel,\r\n                        \"FIELDS\": vm.saveJsonReport.Info.FIELDS.length > 0 ? vm.saveJsonReport.Info.FIELDS : vm.PdfJsonReport.Info.FIELDS,\r\n                        \"FILTERS\": vm.saveJsonReport.Info.FILTERS.length > 0 ? vm.saveJsonReport.Info.FILTERS : vm.PdfJsonReport.Info.FILTERS,\r\n                        \"GROUP\": vm.saveJsonReport.Info.GROUP.length > 0 ? vm.saveJsonReport.Info.GROUP : vm.PdfJsonReport.Info.GROUP,\r\n                        \"SORTING\": vm.saveJsonReport.Info.SORTING.length > 0 ? vm.saveJsonReport.Info.SORTING : vm.PdfJsonReport.Info.SORTING,\r\n                        \"EXPRESSION\": vm.saveJsonReport.Info.EXPRESSION.length > 0 ? vm.saveJsonReport.Info.EXPRESSION : vm.PdfJsonReport.Info.EXPRESSION\r\n\r\n                    }\r\n                }\r\n                var jsondata = JSON.stringify(temp);\r\n                vm.ExcelJsonData = jsondata;\r\n                if (excelvalue == undefined) {\r\n                    await ReportPreviewService.PreviewReport(jsondata).then(async (response) => {\r\n                        if (response.data != null && response.data != undefined) {\r\n                            vm.allReocrdsData = JSON.parse(response.data[0].Value);\r\n                            vm.count = vm.count + 1;\r\n                        }\r\n                    }).catch((err) => {\r\n                        console.log(err);\r\n                    })\r\n                }\r\n            }\r\n        },\r\n        //Export TO PDF functionality \r\n        ExportToPDF: async function () {\r\n            var vm = this;\r\n            vm.isLoading = true;\r\n            await vm.GetAllRecordsForPDF();\r\n            if (vm.count != 0) {\r\n                var graphURI = await vm.GetGraphImageURI();\r\n                var GraphData = {};\r\n                var allRecordslisting = vm.allReocrdsData.ListingData;\r\n                let MetaData = vm.allReocrdsData.MetaData[0];\r\n                let ReportName = vm.ReportName.replace('.','-');\r\n                let pageType = 'A2';\r\n                let pdfDetails;\r\n                let pageOrientation = '';\r\n                let GraphWidth = 300;\r\n\r\n                // Create PDF with  Grouping \r\n                if (MetaData.IsGrouping) {\r\n                    await vm.BindPDFDataForGroup(allRecordslisting);\r\n                }\r\n                // Create PDF without  Grouping \r\n                else {\r\n                    await vm.BindPDFData(allRecordslisting);\r\n                }\r\n\r\n                //Set Page Type \r\n                if (vm.TableHeader.length > 5) {\r\n                    pageType = \"A1\";\r\n                    GraphWidth = 500\r\n                }\r\n                //Set Page  pageOrientation\r\n\r\n                if (vm.TableHeader.length > 10) {\r\n                    pageOrientation = 'landscape';\r\n                }\r\n                //Add graph Data\r\n                if (graphURI != null && graphURI != undefined) {\r\n                    GraphData = {\r\n                        image: graphURI.imgURI,\r\n                        width: 500,\r\n                        alignment: 'center'\r\n                    }\r\n                }\r\n\r\n                pdfDetails = {\r\n                    pageSize: pageType,\r\n                    pageOrientation: pageOrientation,\r\n                    content: [\r\n                        GraphData,\r\n                        // { text: `Report Name = ${ReportName}`, style: 'subheader' },\r\n                        {\r\n                            style: 'table',\r\n                            table: {\r\n                                headerRows: 1,\r\n                                body: vm.TableBody\r\n                            }\r\n                        },\r\n                    ],\r\n                    styles: vm.SetPDFStyle(),\r\n                    defaultStyle: {\r\n                        alignment: 'justify'\r\n                    }\r\n                }\r\n                pdfMake.createPdf(pdfDetails).download(ReportName);\r\n                vm.isLoading = false;\r\n            } else {\r\n                vm.ShowAlert(vm.$t(\"No_Record_Found\"), 'failure', true, vm.$t('Alert'));\r\n                vm.isLoading = false;\r\n            }\r\n        },\r\n\r\n        BindPDFData: function (allRecordslisting) {\r\n            var vm = this;\r\n            vm.TableBody = [];\r\n            vm.TableHeader = [];\r\n            var TableHeader2=[];\r\n            //Add  Column for Table header\r\n            var ColumnList = Object.keys(allRecordslisting[0])\r\n            ColumnList.forEach((item) => {\r\n                if (item != 'ROWNUMBER') {\r\n                    vm.TableHeader.push({ text: vm.$t(item), style: 'tableHeader', alignment: 'center' })\r\n                    TableHeader2.push({ text: item, style: 'tableHeader', alignment: 'center' })\r\n                }\r\n            })\r\n\r\n            vm.TableBody.push(vm.TableHeader);\r\n\r\n            allRecordslisting.forEach((item) => {\r\n                let currentData = [];\r\n                TableHeader2.forEach((heading) => {\r\n                    let pdfdata = null;\r\n                    if(typeof item[heading.text] == 'string'){\r\n                        pdfdata = item[heading.text].replace( /(<([^>]+)>)/ig, '');\r\n                    }else{pdfdata = item[heading.text]}\r\n                    currentData.push(pdfdata);\r\n                })\r\n                vm.TableBody.push(currentData);\r\n            })\r\n        },\r\n\r\n        BindPDFDataForGroup: function (allRecordslisting) {\r\n            var vm = this;\r\n            vm.TableBody = [];\r\n            vm.TableHeader = [];\r\n             var TableHeader2=[];\r\n            //Add Grouping Column for Table header\r\n            vm.TableHeader.push({ text: vm.$t(Object.keys(allRecordslisting[0])[0]), style: 'tableHeader', alignment: 'center' })\r\n            TableHeader2.push({ text: Object.keys(allRecordslisting[0])[0], style: 'tableHeader', alignment: 'center' })\r\n            // Add all Column in Table Header \r\n            var columnList = Object.keys(allRecordslisting[0].data[0])\r\n            columnList.forEach((item) => {\r\n                vm.TableHeader.push({ text: vm.$t(item), style: 'tableHeader', alignment: 'center' })\r\n                TableHeader2.push({ text: item, style: 'tableHeader', alignment: 'center' })\r\n            })\r\n\r\n            //Add First header array into Table Body\r\n            vm.TableBody.push(vm.TableHeader);\r\n\r\n            //Create Array for PDF\r\n            allRecordslisting.forEach((item) => {\r\n                item.data.forEach((heading, groupingindex) => {\r\n                    let tableData = [];\r\n                    TableHeader2.forEach((headerelement, headerindex) => {\r\n                        if (groupingindex == 0 && headerindex == 0) {\r\n                            let pdfgroupdata = null;\r\n                            if(typeof item[headerelement.text] == 'string'){\r\n                                pdfgroupdata = item[headerelement.text].replace( /(<([^>]+)>)/ig, '');\r\n                            }else{pdfgroupdata = item[headerelement.text]}\r\n                            var groupColumn = `${pdfgroupdata} (${item.totalRecord})`\r\n                            tableData.push({ rowSpan: parseInt(item.totalRecord), text: groupColumn })\r\n                        }\r\n                        else if (groupingindex == 1 && headerindex == 0) {\r\n                            tableData.push(\"\")\r\n                        }\r\n                        else {\r\n                            if (heading[headerelement.text] != undefined && heading[headerelement.text] != \"\") {\r\n                                let pdfwithoutgroupdata = null;\r\n                                if(typeof heading[headerelement.text] == 'string'){\r\n                                    pdfwithoutgroupdata = heading[headerelement.text].replace( /(<([^>]+)>)/ig, '');\r\n                                }else{pdfwithoutgroupdata = heading[headerelement.text]}\r\n                                tableData.push(pdfwithoutgroupdata);\r\n                            }\r\n                            else {\r\n                                var tempitem = heading[headerelement.text] = \"-\";\r\n                                tableData.push(tempitem);\r\n                            }\r\n                        }\r\n                    })\r\n                    vm.TableBody.push(tableData)\r\n                })\r\n            })\r\n        },\r\n        SetPDFStyle: function () {\r\n            return {\r\n                subheader: {\r\n                    fontSize: 16,\r\n                    bold: true,\r\n                    margin: [0, 0, 0, 10]\r\n                },\r\n                table: {\r\n                    margin: [0, 5, 0, 15]\r\n                }\r\n            };\r\n        },\r\n        GetGraphImageURI: async function () {\r\n            var vm = this;\r\n            var URI;\r\n            await vm.$refs.chart?.chart.dataURI().then(uri => {\r\n                URI = uri;\r\n            });\r\n            return URI;\r\n        },\r\n        ExportToExcel: async function () {\r\n            var vm = this;\r\n            vm.isLoading = true;\r\n            // var jsonData = JSON.stringify(vm.saveJsonReport.Info.GROUP.length > 0 ? vm.saveJsonReport : vm.PdfJsonReport);\r\n            await vm.GetAllRecordsForPDF('Excel');\r\n            if (vm.ExcelJsonData != null && vm.ExcelJsonData != undefined) {\r\n                var jsonData = vm.ExcelJsonData;\r\n                var params = `reportId=${vm.customreportparameters.ReportID}&pagetype=preview&IsPaged=1`;\r\n                ReportPreviewService.GetExcelReport(params, jsonData).then((response) => {\r\n                    var blob = new Blob([response.data], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;' });\r\n                    var link = document.createElement('a');\r\n                    link.href = window.URL.createObjectURL(blob);\r\n                    const current = new Date();\r\n                    const date = `${current.getDate()}_${current.getMonth()+1}_${current.getFullYear()}`;\r\n                    var fileName = `ReportData-${vm.ReportName.replace('.', '-')}-${date}`;\r\n                    fileName = fileName.split(\" \").join(\"\");\r\n                    link.download = fileName;\r\n                    link.click();\r\n                    vm.isLoading = false\r\n                }).catch((err) => { console.log(err); vm.isLoading = false; })\r\n            } else {\r\n                vm.ShowAlert(vm.$t(\"No_Record_Found\"), 'failure', true, vm.$t('Alert'));\r\n                vm.isLoading = false;\r\n            }\r\n        },\r\n        close() {\r\n            var vm = this;\r\n            vm.isSortPopup = false;\r\n        }\r\n        \r\n        \r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/* .arrow-solid-left::before {\r\n    right: 4px;\r\n    ;\r\n} */\r\n/* \r\n@media (max-width:1440px) {\r\n    .verticle-action.lft75 {\r\n        top: 80px !important;\r\n    }\r\n}\r\n\r\n@media (max-width:1250px) {\r\n    .verticle-action.lft75 {\r\n        right: 50px !important;\r\n    }\r\n\r\n}\r\n\r\n@media (max-width:1180px) {\r\n    .verticle-action.lft75 {\r\n        top: 130px !important;\r\n        right: 70px !important;\r\n    }\r\n\r\n    .arrow-solid-left::before {\r\n        right: 2px;\r\n        top: 350px;\r\n    }\r\n}\r\n\r\n@media (max-width: 1080px) {\r\n    .verticle-action.lft75 {\r\n        right: 0 !important;\r\n    }\r\n\r\n    .arrow-solid-left::before {\r\n        right: 4px;\r\n        top: 170px;\r\n    }\r\n}\r\n\r\n@media (max-width: 992px) {\r\n    .arrow-solid-left::before {\r\n        right: 4px;\r\n        top: 140px;\r\n    }\r\n}\r\n\r\n@media (max-width: 930px) {\r\n    .verticle-action.lft75 {\r\n        top: 180px !important;\r\n    }\r\n\r\n    .arrow-solid-left::before {\r\n        top: 175px !important;\r\n    }\r\n}\r\n\r\n@media (max-width: 830px) {\r\n    .verticle-action.lft75 {\r\n        top: 295px !important;\r\n        right: 0 !important;\r\n    }\r\n\r\n    .arrow-solid-left::before {\r\n        top: 50px !important;\r\n    }\r\n} */\r\n</style>\r\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ReportPreview.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ReportPreview.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ReportPreview.vue?vue&type=template&id=e8fc039a&scoped=true&\"\nimport script from \"./ReportPreview.vue?vue&type=script&lang=js&\"\nexport * from \"./ReportPreview.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ReportPreview.vue?vue&type=style&index=0&id=e8fc039a&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"e8fc039a\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"modal my-popups centre fade\",attrs:{\"id\":\"showcalculatedfield\",\"role\":\"dialog\"}},[_c('div',{staticClass:\"modal-dialog\",attrs:{\"role\":\"document\"}},[_c('div',{staticClass:\"modal-content\"},[_c('div',{staticClass:\"modal-header mheader-user\"},[_c('button',{staticClass:\"close\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.close()}}},[_c('em',{staticClass:\"fa fa-times\",attrs:{\"aria-hidden\":\"true\"}})]),_c('h4',{staticClass:\"modal-title\",attrs:{\"id\":\"myModalLabel\"}},[_vm._v(_vm._s(_vm.$t('customField')))])]),_c('div',{staticClass:\"modal-body\"},[_c('loader',{attrs:{\"is-visible\":_vm.isLoading}}),_c('dynamic-form',{attrs:{\"lang\":\"en\",\"buttons\":_vm.buttons,\"schema\":_vm.FormSchema},on:{\"OnSubmit\":function($event){return _vm.SubmitExpression()}},scopedSlots:_vm._u([{key:\"tgslot-CalculatedUIList\",fn:function({ data }){return [_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-12 p-0 float-left\"},[_c('div',{staticClass:\"col-lg-4 mb-0 float-left px-3\"},[_c('div',{staticClass:\"heading-border mb-4\"},[_c('h5',{staticClass:\"h5\"},[_c('span',{staticClass:\"spngropuname\"},[_vm._v(\" \"+_vm._s(_vm.$t('Functions'))+\" \"),_c('div',{staticClass:\"w3-container w3-border w3-large\"})])])]),_c('div',{staticClass:\"accordion md-accordion left-filter\",attrs:{\"id\":\"accordionEx1\"}},[_c('div',{staticClass:\"card-panel\",staticStyle:{\"border-top\":\"1px solid #c7c7c7\"}},_vm._l((_vm.FunctionsName),function(name,index){return _c('div',{key:index,staticClass:\"card\"},[_c('div',{staticClass:\"card-header\",attrs:{\"role\":\"tab\",\"id\":'MainFunction' + index}},[_c('h5',{staticClass:\"mb-0\"},[_c('a',{class:index == 0 ? '' : 'collapsed',attrs:{\"data-toggle\":\"collapse\",\"data-parent\":\"#accordionEx1\",\"href\":'#FucntionCollapse' + index,\"aria-expanded\":index == 0 ? true : false,\"aria-controls\":'FucntionCollapse' + index}},[_c('em',{staticClass:\"fa fa fa-file-text-o\",attrs:{\"aria-hidden\":\"true\"}}),_c('span',{staticClass:\"font-weight-bold\"},[_vm._v(\" \"+_vm._s(name.FuncType))]),_c('em',{staticClass:\"fa fa-angle-down rotate-icon\",attrs:{\"aria-hidden\":\"true\"}})])])]),_c('div',{class:index == 0 ? 'collapse multi-collapse show' : 'collapse multi-collapse',attrs:{\"id\":'FucntionCollapse' + index,\"role\":\"tabpanel\",\"aria-labelledby\":'MainFunction' + index,\"data-parent\":\"#accordionEx1\"}},[_c('div',{staticClass:\"card-body p-0 customScrollForLeftBar llt\",staticStyle:{\"max-height\":\"300px\"}},[_c('div',{staticClass:\"form-group\"},[_c('ul',{staticClass:\"nav nav-pills flex-column left-tab responivecustomtab lefttabiconfix\",staticStyle:{\"max-height\":\"214px\",\"overflow\":\"auto\",\"display\":\"block\"}},[_vm._l((_vm.Functionskey[index]),function(element){return [_c('li',{staticClass:\"nav-item parent-element\"},[_c('span',{staticClass:\"nav-link left-menu px-4\"},[_c('em',{staticClass:\"fa fa-bullhorn float-left\",attrs:{\"aria-hidden\":\"true\"}}),_c('span',{staticClass:\"text-truncate float-left\",staticStyle:{\"width\":\"55%\"},attrs:{\"data-toggle-tooltip\":element.Keys,\"title\":element.Keys}},[_vm._v(\" \"+_vm._s(element.Keys)+\" \")]),_c('a',{attrs:{\"href\":\"javascript:;\"}},[_c('em',{staticClass:\"fa fa-plus float-right mt-1 text-success pr-0\",attrs:{\"aria-hidden\":\"true\"},on:{\"click\":function($event){return _vm.AddFunctionsfields(element, $event, index)}}})])])])]})],2)])])])])}),0)])]),_c('div',{staticClass:\"col-lg-4 mb-0 float-left px-3\"},[_c('div',{staticClass:\"heading-border\"},[_c('h5',{staticClass:\"h5\"},[_c('span',{staticClass:\"spngropuname\"},[_vm._v(\" \"+_vm._s(_vm.$t('Expression'))+\" \"),_c('a',{staticClass:\"editgroupname d-none\",attrs:{\"title\":\"@Resources.Edit\",\"href\":\"javascript:;\"}},[_c('em',{staticClass:\"fa fa-pencil pl-2 text-success\"})])])])]),_c('div',{staticClass:\"border p-3 mt-4 float-left\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-11 mb-2\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.modelconditionexpression),expression:\"modelconditionexpression\"}],class:_vm.Functionkey == 'Date diff' || _vm.Functionkey == 'Date add' || _vm.Functionkey == 'Date name' || _vm.Functionkey == 'Date part' || _vm.Functionkey == 'If'\n                                                        ? 'form-control' : 'form-control d-none',attrs:{\"type\":\"text\",\"placeholder\":\"Enter Your Conditions\"},domProps:{\"value\":(_vm.modelconditionexpression)},on:{\"input\":function($event){if($event.target.composing)return;_vm.modelconditionexpression=$event.target.value}}}),_c('small',{class:_vm.Functionkey == 'Date diff' || _vm.Functionkey == 'Date add' || _vm.Functionkey == 'Date name' || _vm.Functionkey == 'Date part' || _vm.Functionkey == 'If' ? 'text-danger' : 'd-none'},[_vm._v(_vm._s(_vm.ShowDescriptionForFunction))])]),_c('div',{staticClass:\"col-md-1 p-0 my-1\"},[_c('a',{class:_vm.Functionkey == 'Date diff' || _vm.Functionkey == 'Date add' || _vm.Functionkey == 'Date name' || _vm.Functionkey == 'Date part' || _vm.Functionkey == 'If'\n                                                        ? 'fa fa-play text-success' : 'fa fa-play text-success d-none',on:{\"click\":_vm.AddConditionExpression}})])]),_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.InputValueExpression),expression:\"InputValueExpression\"}],staticClass:\"border background-white float-left w-100 p-3\",staticStyle:{\"min-height\":\"250px\"},attrs:{\"id\":\"txtarea\"},domProps:{\"value\":(_vm.InputValueExpression)},on:{\"keydown\":function($event){return _vm.deleteuserinput($event)},\"mouseup\":function($event){return _vm.GetCursorPoint($event)},\"select\":function($event){return _vm.UserInputSelection($event)},\"input\":function($event){if($event.target.composing)return;_vm.InputValueExpression=$event.target.value}}}),_c('div',{staticClass:\"expressionbx mb-4 bg-grey text-right float-left w-100 py-2 border\"},[_c('a',{staticClass:\"fa fa-keyboard-o\",on:{\"click\":function($event){return _vm.AddSpace($event)}}}),_c('a',{attrs:{\"href\":\"javascript:;\"},on:{\"click\":function($event){return _vm.Addplussign($event)}}},[_vm._v(\"+\")]),_c('a',{attrs:{\"href\":\"javascript:;\"},on:{\"click\":function($event){return _vm.Addsubtractsign($event)}}},[_vm._v(\"-\")]),_c('a',{attrs:{\"href\":\"javascript:;\"},on:{\"click\":function($event){return _vm.Addmultiplysign($event)}}},[_vm._v(\"*\")]),_c('a',{attrs:{\"href\":\"javascript:;\"},on:{\"click\":function($event){return _vm.Adddividesign($event)}}},[_vm._v(\"/\")]),_c('a',{attrs:{\"href\":\"javascript:;\"},on:{\"click\":function($event){return _vm.Addopenbracketsign($event)}}},[_vm._v(\"(\")]),_c('a',{attrs:{\"href\":\"javascript:;\"},on:{\"click\":function($event){return _vm.Addclosebracketsign($event)}}},[_vm._v(\")\")])]),_c('div',{staticClass:\"col-12 p-0 float-left\"},[_c('div',{staticClass:\"row flex-row-reverse\"},[_c('div',{staticClass:\"col-12 p-0 float-left\",attrs:{\"id\":\"verifiedid\"}},[(_vm.verifiedvaluedata == 0)?_c('div',{staticClass:\"alert alert-danger alert-dismissible fade show\",attrs:{\"role\":\"alert\"}},[_vm._v(\" \"+_vm._s(_vm.$t(\"InvalidExp\"))),_c('button',{staticClass:\"close\",attrs:{\"type\":\"button\",\"data-dismiss\":\"alert\",\"aria-label\":\"Close\"},on:{\"click\":_vm.closed}},[_c('span',{attrs:{\"aria-hidden\":\"true\"}},[_vm._v(\"×\")])])]):_vm._e(),(_vm.verifiedvaluedata == 1)?_c('div',{staticClass:\"alert alert-success alert-dismissible fade show\",attrs:{\"role\":\"alert\"}},[_vm._v(\" \"+_vm._s(_vm.$t(\"ExpressionVerify\"))),_c('button',{staticClass:\"close\",attrs:{\"type\":\"button\",\"data-dismiss\":\"alert\",\"aria-label\":\"Close\"},on:{\"click\":_vm.closed}},[_c('span',{attrs:{\"aria-hidden\":\"true\"}},[_vm._v(\"×\")])])]):_vm._e()]),_c('div',{staticClass:\"col-lg-12 text-right\"},[_c('a',{staticClass:\"btn btn-success ancsaveuserticket mr-2\",attrs:{\"href\":\"javascript:;\"},on:{\"click\":_vm.VerifyExpression}},[_c('em',{staticClass:\"fa fa-check pr-2\"}),_vm._v(\"Verify\")]),_c('a',{staticClass:\"btn btn-danger ancsaveuserticket\",attrs:{\"href\":\"javascript:;\"},on:{\"click\":_vm.ResetExpression}},[_c('em',{staticClass:\"fa fa-refresh pr-2\"}),_vm._v(\"Reset\")])])])])])]),_c('div',{staticClass:\"col-lg-4 mb-0 float-left px-3\"},[_c('div',{staticClass:\"heading-border mb-4\"},[_c('h5',{staticClass:\"h5\"},[_c('span',{staticClass:\"spngropuname\"},[_vm._v(\" \"+_vm._s(_vm.$t('Columns'))+\" \"),_c('div',{staticClass:\"w3-container w3-border w3-large\"})])])]),_c('div',{staticClass:\"mb-0 d-lg-block p-2 border\"},[_c('div',{staticClass:\"input-group customsearchbox\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.MainSearchmodel),expression:\"MainSearchmodel\"}],staticClass:\"form-control searchcustomfilter border-right-0\",attrs:{\"type\":\"text\",\"maxlength\":\"50\",\"id\":\"searchinput\",\"placeholder\":\"Search by Name\",\"autocomplete\":\"off\"},domProps:{\"value\":(_vm.MainSearchmodel)},on:{\"keydown\":function($event){return _vm.ListFiltering()},\"keyup\":function($event){return _vm.ListFiltering()},\"mouseup\":_vm.SelectAllSearch,\"mouseleave\":_vm.SelectAllSearch,\"input\":function($event){if($event.target.composing)return;_vm.MainSearchmodel=$event.target.value}}}),_c('div',{staticClass:\"input-group-append\"},[_c('span',{staticClass:\"input-group-text bg-transparent bg-white border-left-0\"})])])]),_c('div',{staticClass:\"accordion md-accordion left-filter\",attrs:{\"id\":\"accordionEx2\"}},[_c('div',{staticClass:\"card-panel\",staticStyle:{\"border-top\":\"1px solid #c7c7c7\"}},_vm._l((_vm.JsonColumns),function(name,index){return _c('div',{key:index,staticClass:\"card\"},[_c('div',{staticClass:\"card-header\",attrs:{\"role\":\"tab\",\"id\":'MainColumn' + index}},[_c('h5',{staticClass:\"mb-0\"},[_c('a',{class:index == 0 ? '' : 'collapsed',attrs:{\"data-toggle\":\"collapse\",\"data-parent\":\"#accordionEx2\",\"href\":'#ColumnCollapse' + index,\"aria-expanded\":index == 0 ? true : false,\"aria-controls\":'ColumnCollapse' + index}},[_c('em',{staticClass:\"fa fa fa-file-text-o\",attrs:{\"aria-hidden\":\"true\"}}),_c('span',{staticClass:\"font-weight-bold\"},[_vm._v(\" \"+_vm._s(_vm.GetLocalizedValue(name.SubModule)))]),_c('em',{staticClass:\"fa fa-angle-down rotate-icon\",attrs:{\"aria-hidden\":\"true\"}})])])]),_c('div',{class:index == 0 ? 'collapse multi-collapse column-collapse show' : 'collapse multi-collapse column-collapse',attrs:{\"id\":'ColumnCollapse' + index,\"role\":\"tabpanel\",\"aria-labelledby\":'MainColumn' + index,\"data-parent\":\"#accordionEx2\"}},[_c('div',{staticClass:\"card-body p-0 customScrollForLeftBar llt\",staticStyle:{\"max-height\":\"300px\"}},[_c('div',{staticClass:\"form-group\"},[_c('ul',{staticClass:\"nav nav-pills flex-column left-tab responivecustomtab lefttabiconfix\",staticStyle:{\"max-height\":\"305px\",\"overflow\":\"auto\",\"display\":\"block\"}},[_vm._l((_vm.searchColumnfilter.length == 0 ? _vm.modulelisting[index] : _vm.searchColumnfilter[index]),function(element){return [_c('li',{staticClass:\"nav-item parent-element\"},[_c('span',{staticClass:\"nav-link left-menu px-4\"},[_c('em',{class:element.dttype[0].icon + ' ' + 'float-left',attrs:{\"aria-hidden\":\"true\"}}),_c('span',{staticClass:\"text-truncate float-left\",staticStyle:{\"width\":\"55%\"},attrs:{\"data-toggle-tooltip\":element.FieldName,\"title\":element.FieldName}},[_vm._v(\" \"+_vm._s(_vm.GetLocalizedValue((element.DisplayName != null && element.DisplayName != \"\") ? element.DisplayName : element.FieldName))+\" \")]),_c('a',{attrs:{\"href\":\"javascript:;\"}},[_c('em',{staticClass:\"fa fa-plus float-right mt-1 text-success pr-0\",attrs:{\"aria-hidden\":\"true\"},on:{\"click\":function($event){return _vm.Addfields(element, $event, index)}}})])])])]})],2)])])])])}),0)]),(_vm.SearchNoRecord)?_c('div',{staticClass:\"text-center text-danger d-flex align-items-center justify-content-center norecs pt-2\"},[_vm._v(\" \"+_vm._s(_vm.$t(\"NoRecordfound\")))]):_vm._e()])])])]}}])})],1)])])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<script>\r\nimport ExpressionDataService from \"@/services/DataService\";\r\nexport default {\r\n    props: {\r\n        customreportparameters: {\r\n            type: Object\r\n        },\r\n        ExpDataArray: {\r\n            type: Array\r\n        },\r\n        editexpressionvalue: {\r\n            type: Boolean\r\n        },\r\n        ExpFieldDataArray: {\r\n            type: Array\r\n        },\r\n        Columnlist: {\r\n            type: Array\r\n        },\r\n        AlreadyExistExpression: {\r\n            typeL: Object\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            JsonColumns: [],\r\n            modulelisting: [],\r\n            FunctionsName: [],\r\n            Functionskey: [],\r\n            ResponseColumnData: [],\r\n            ResponseFunctionData: [],\r\n            watchvalue: false,\r\n            FieldsValue: '',\r\n            FunctionValue: '',\r\n            AddBracketValue: '',\r\n            SubtractBracketValue: '',\r\n            MultplyBracketValue: '',\r\n            DivideBracketValue: '',\r\n            OpenBracketExpValue: '',\r\n            CloseBracketExpValue: '',\r\n            InputValueExpression: '',\r\n            FieldData: [],\r\n            fieldatavalue: [],\r\n            reqFrom: 'Reporting',\r\n            isLoading: false,\r\n            verifiedvalue: false,\r\n            modelfieldname: '',\r\n            substringvalue: '',\r\n            verifiedvaluedata: null,\r\n            verifyErrorMsg: '',\r\n            InputValueArray: [],\r\n            InputValueExpressionByID: '',\r\n            FunctionValueArray: 'No_Value',\r\n            selecteduserinput: null,\r\n            selecteduserinputbyid: null,\r\n            ExpressionIDvalue: '',\r\n            updateexpresion: true,\r\n            fieldadded: false,\r\n            FieldTableNameValue: '',\r\n            GetCommaSeparatedValue: '',\r\n            countbyfield: 0,\r\n            modelconditionexpression: '',\r\n            conditionexpression: false,\r\n            Functionkey: null,\r\n            ShowDescriptionForFunction: null,\r\n            checkbycondition: 0,\r\n            searchColumnfilter: [],\r\n            MainSearchmodel: '',\r\n            SearchNoRecord: false,\r\n            GetSelectedValue:'',\r\n            FormSchema: [\r\n                {\r\n                    layoutType: \"single\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"TextField\",\r\n                            label: this.$t('fieldName'),\r\n                            name: \"fieldName\",\r\n                            value: \"\",\r\n                            placeholder: \"Enter Field Name\",\r\n                            config: {\r\n                                options: [],\r\n                                showAddIcon: false,\r\n                            },\r\n                            // validationRules: \"required\",\r\n                            validationRules: { \"required\": true, max: 100 },\r\n\r\n                        },\r\n                        {\r\n                            astype: \"SlotField\",\r\n                            label: '',\r\n                            name: \"CalculatedUIList\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            config: {\r\n                                options: [],\r\n                                showAddIcon: false,\r\n                                onChange: this.onChangeDropdown\r\n                            },\r\n                            validationRules: \"\",\r\n                        },\r\n                    ]\r\n                }\r\n            ],\r\n            buttons: [\r\n                {\r\n                    type: \"submit\",\r\n                    class: \"btn btn-success mr-2 my-sm-0 disabled\",\r\n                    text: \"<i class='fa fa-save pr-2'></i>Submit\",\r\n                },\r\n                {\r\n                    type: \"button\",\r\n                    class: \"btn btn-primary delete-btn mr-2 my-sm-0\",\r\n                    text: \"<i class='fa fa-times pr-2'></i>Cancel\",\r\n                    onClick: this.CancelExpressionUI\r\n                }\r\n            ]\r\n        }\r\n    },\r\n    created() {\r\n        var vm = this;\r\n        vm.GetColumnList(vm.customreportparameters);\r\n        if (vm.editexpressionvalue == true && vm.ExpDataArray.length > 0) {\r\n            vm.ExpresssionDataValue(vm.ExpDataArray, vm.ExpFieldDataArray);\r\n        }\r\n        vm.GetFunctionList();\r\n    },\r\n    mounted: function () {\r\n        $('#showcalculatedfield').modal({\r\n            backdrop: 'static',\r\n            keyboard: false\r\n        })\r\n    },\r\n    watch: {\r\n        watchvalue(newval) {\r\n            var vm = this;\r\n            if (newval) {\r\n                vm.GetColumnList(vm.customreportparameters);\r\n                vm.GetFunctionList();\r\n                vm.watchvalue = false;\r\n                $(\"#Submitbtn\").addClass('disabled');\r\n                if (vm.editexpressionvalue == true && vm.ExpDataArray.length > 0 && vm.updateexpresion == true) {\r\n                    vm.ExpresssionDataValue(vm.ExpDataArray, vm.ExpFieldDataArray);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        close() {\r\n            $(\"#showcalculatedfield\").modal(\"hide\"); $(\"body\").removeClass(\"modal-open\");\r\n            $(\".modal-backdrop\").remove();\r\n            this.$emit('close');\r\n            // this.modelfieldname = '';\r\n            this.FormSchema[0].Data[0].value = '';\r\n            // this.FormSchema[0].Data[0].validationRules = '';\r\n            this.ExpressionIDvalue = '';\r\n            this.ResetExpression();\r\n            //this.$refs.form.setFieldTouched('modelfieldname', false);\r\n        },\r\n        GetColumnList(customreportparameters) {\r\n            var vm = this;\r\n            if (customreportparameters.Modulename != undefined && customreportparameters.Submodulecode != undefined && customreportparameters.ReportName != null) {\r\n                var params = `moduleName=${customreportparameters.Modulename}&subModuleCode=${customreportparameters.Submodulecode}&viewId&reqFrom=${vm.reqFrom}`;\r\n                ExpressionDataService.GetListFields(params).then(response => {\r\n                    vm.JsonColumns = response.data.AVAILABLE_FIELDS[0];\r\n                    vm.JsonColumns.forEach((item) => {\r\n                        vm.modulelisting.push(item.CustomFields);\r\n                    })\r\n                }).catch(err => {\r\n                    console.log(err);\r\n                })\r\n            }\r\n        },\r\n        GetFunctionList() {\r\n            var vm = this;\r\n            ExpressionDataService.GetFunctionList().then(res => {\r\n                vm.FunctionsName = res.data.AVAILABLE_FIELDS[0];\r\n                vm.FunctionsName.forEach((name) => {\r\n                    vm.Functionskey.push(name.Functions);\r\n                })\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n        },\r\n        Addfields(element, event, index) {\r\n            var vm = this;\r\n            if (vm.modelconditionexpression == '') { vm.FieldData.push({ CustomFieldId: element.CustomFieldId, FieldName: element.FieldName }); }\r\n\r\n            if (vm.substringvalue == '') {\r\n                var cursorpos = vm.GetCursorPoint();\r\n                var getdata = vm.SetValueOnCursorPosition(cursorpos);\r\n                if (getdata.length > 1) {\r\n                    var checkindex = vm.InputValueArray.findIndex(x => x.FieldValueData === getdata[0].FieldValueData);\r\n                    if (checkindex > -1) {\r\n                        vm.fieldatavalue.splice(checkindex, 0, {\r\n                            FieldValueData: vm.$t((element.DisplayName != null && element.DisplayName != \"\") ? element.DisplayName : element.FieldName),\r\n                            MatchIndex: vm.$t((element.DisplayName != null && element.DisplayName != \"\") ? element.DisplayName : element.FieldName).length, SameName: 'Field_Added' + cursorpos\r\n                        })\r\n                        vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('')\r\n                        vm.fieldadded = true;\r\n                    }\r\n                } else {\r\n                    vm.fieldatavalue.push({\r\n                        FieldValueData: vm.$t((element.DisplayName != null && element.DisplayName != \"\") ? element.DisplayName : element.FieldName),\r\n                        MatchIndex: vm.$t((element.DisplayName != null && element.DisplayName != \"\") ? element.DisplayName : element.FieldName).length, SameName: 'Field_Added' + cursorpos\r\n                    });\r\n                    vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                    vm.fieldadded = false;\r\n                }\r\n                $(\"#Submitbtn\").addClass('disabled');\r\n            }\r\n            else {\r\n                if (typeof vm.fieldatavalue == 'object') {\r\n                    var convertarr = String(vm.fieldatavalue.map(x => x.FieldValueData));\r\n                    vm.fieldatavalue = convertarr\r\n                }\r\n                if (vm.GetCommaSeparatedValue == \"CommaSeparatedValue\" && vm.countbyfield == 0 && !vm.conditionexpression) {\r\n                    var firstindex = vm.fieldatavalue.indexOf(\",\") + 1;\r\n                    var secondindex = vm.fieldatavalue.indexOf(\")\")\r\n                }\r\n                else if (vm.GetCommaSeparatedValue == \"CommaSeparatedValue\" && vm.countbyfield > 0 && !vm.conditionexpression) {\r\n                    var firstindex = vm.fieldatavalue.indexOf(vm.fieldatavalue.split(\",\")[vm.countbyfield]);\r\n                    var secondindex = vm.fieldatavalue.indexOf(\")\")\r\n                }\r\n                else {\r\n                    var firstindex = vm.fieldatavalue.indexOf(\"(\") + 1;\r\n                    var secondindex = vm.fieldatavalue.indexOf(\")\")\r\n                }\r\n                vm.substringvalue = vm.fieldatavalue.substring(firstindex, secondindex);\r\n                vm.FunctionValueArray = vm.substringvalue;\r\n                if (vm.substringvalue.includes(',')) {\r\n                    var substringarr = vm.substringvalue.split(',')\r\n                    vm.substringvalue = substringarr;\r\n                    if (!vm.conditionexpression && vm.checkbycondition == 0) {\r\n                        vm.FieldsValue = vm.fieldatavalue.replace(vm.substringvalue[0],\r\n                            vm.$t((element.DisplayName != null && element.DisplayName != \"\") ? element.DisplayName : element.FieldName))\r\n                    }\r\n                    else {\r\n                        vm.FieldsValue = vm.fieldatavalue.replace(vm.substringvalue[0], element)\r\n                    }\r\n                    // vm.fieldatavalue = vm.FieldsValue;\r\n                    vm.fieldatavalue = [];\r\n                    vm.fieldatavalue.push({\r\n                        FieldValueData: vm.FieldsValue,\r\n                        MatchIndex: vm.FieldsValue.length, SameName: 'Field_Added' + vm.FieldsValue.length\r\n                    });\r\n                    $(\"#Submitbtn\").addClass('disabled');\r\n                } else {\r\n                    if (!vm.conditionexpression && vm.checkbycondition == 0) {\r\n                        vm.FieldsValue = vm.fieldatavalue.replace(vm.substringvalue,\r\n                            vm.$t((element.DisplayName != null && element.DisplayName != \"\") ? element.DisplayName : element.FieldName))\r\n                    }\r\n                    else {\r\n                        vm.FieldsValue = vm.fieldatavalue.replace(vm.substringvalue, element);\r\n                    }\r\n                    // vm.fieldatavalue = vm.FieldsValue;\r\n                    vm.fieldatavalue = [];\r\n                    vm.fieldatavalue.push({\r\n                        FieldValueData: vm.FieldsValue,\r\n                        MatchIndex: vm.FieldsValue.length, SameName: 'Field_Added' + vm.FieldsValue.length\r\n                    });\r\n                    $(\"#Submitbtn\").addClass('disabled');\r\n\r\n                }\r\n            }\r\n            if (!vm.conditionexpression && vm.checkbycondition == 0) {\r\n                if (element.IsSystemGenerated) {\r\n                    vm.FieldTableNameValue = element.TableName + '.' + element.FieldName;\r\n                }\r\n                else {\r\n                    vm.FieldTableNameValue = element.FieldName;\r\n                }\r\n                // $(event.target).closest(\".parent-element\").remove();\r\n            } else { vm.FieldTableNameValue = element; }\r\n            vm.updatingvalue();\r\n            vm.updatevaluebyid(element, checkindex, getdata, cursorpos);\r\n        },\r\n        AddFunctionsfields(element, event, index) {\r\n            var vm = this;\r\n            if (vm.InputValueExpression == null || vm.InputValueExpression == undefined || vm.InputValueExpression == \"\") {\r\n                if (typeof vm.fieldatavalue == 'string') {\r\n                    var substringarr = vm.fieldatavalue.split(',')\r\n                    vm.fieldatavalue = substringarr;\r\n                }\r\n                vm.fieldatavalue.push({ FieldValueData: element.Value, MatchIndex: element.Value.length, SameName: 'Function_Added' });\r\n                vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                vm.InputValueArray.push({ FieldValueData: element.Value, MatchIndex: element.Value.length, SameName: 'Function_Added' });\r\n                vm.Functionkey = element.Keys;\r\n                vm.DescriptionForFunction();\r\n                if (element.Keys == \"Case\") {\r\n                    vm.substringvalue = ''\r\n                } else { vm.substringvalue = \"Function_Added\"; }\r\n                $(event.target).closest(\".parent-element\").remove();\r\n                vm.updatingvalue();\r\n                vm.updatevaluebyid();\r\n            }\r\n            else {\r\n                vm.ShowAlert(\"You Cannot Select More Than One Function.\", \"Failure\");\r\n            }\r\n\r\n        },\r\n        Addopenbracketsign() {\r\n            var vm = this;\r\n            if (typeof vm.fieldatavalue == 'string') {\r\n                var substringarr = vm.fieldatavalue.split(',')\r\n                vm.fieldatavalue = substringarr;\r\n            }\r\n            var openbracketexpsign = '('\r\n            var openbracket = openbracketexpsign.split('');\r\n            var cursorpos = vm.GetCursorPoint();\r\n            var getdata = vm.SetValueOnCursorPosition(cursorpos);\r\n            if (getdata.length > 1) {\r\n                var checkindex = vm.InputValueArray.findIndex(x => x.FieldValueData === getdata[0].FieldValueData);\r\n                if (checkindex > -1) {\r\n                    vm.fieldatavalue.splice(checkindex, 0, {\r\n                        FieldValueData: openbracket, MatchIndex: openbracket.length, SameName: 'Open_BracketAdded' + cursorpos\r\n                    })\r\n                    vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                    vm.InputValueArray.splice(checkindex, 0, {\r\n                        FieldValueData: openbracket, MatchIndex: openbracket.length, SameName: 'Open_BracketAdded' + cursorpos\r\n                    })\r\n                }\r\n            } else {\r\n                vm.fieldatavalue.push({ FieldValueData: openbracket, MatchIndex: openbracket.length, SameName: 'Open_BracketAdded' + cursorpos })\r\n                vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                vm.InputValueArray.push({ FieldValueData: openbracket, MatchIndex: openbracket.length, SameName: 'Open_BracketAdded' + cursorpos })\r\n            }\r\n            vm.substringvalue = '';\r\n            vm.FunctionValueArray = 'No_Value';\r\n            vm.updatingvalue();\r\n            vm.updatevaluebyid();\r\n        },\r\n        Addclosebracketsign() {\r\n            var vm = this;\r\n            if (typeof vm.fieldatavalue == 'string') {\r\n                var substringarr = vm.fieldatavalue.split(',')\r\n                vm.fieldatavalue = substringarr;\r\n            }\r\n            var closebracketexpsign = ')'\r\n            var closebracket = closebracketexpsign.split('');\r\n            var cursorpos = vm.GetCursorPoint();\r\n            var getdata = vm.SetValueOnCursorPosition(cursorpos);\r\n            if (getdata.length > 1) {\r\n                var checkindex = vm.InputValueArray.findIndex(x => x.FieldValueData === getdata[0].FieldValueData);\r\n                if (checkindex > -1) {\r\n                    vm.fieldatavalue.splice(checkindex, 0, {\r\n                        FieldValueData: closebracket, MatchIndex: closebracket.length, SameName: 'Close_BracketAdded' + cursorpos\r\n                    })\r\n                    vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                    vm.InputValueArray.splice(checkindex, 0, {\r\n                        FieldValueData: closebracket, MatchIndex: closebracket.length, SameName: 'Close_BracketAdded' + cursorpos\r\n                    })\r\n                }\r\n            } else {\r\n                vm.fieldatavalue.push({ FieldValueData: closebracket, MatchIndex: closebracket.length, SameName: 'Close_BracketAdded' + cursorpos })\r\n                vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                vm.InputValueArray.push({ FieldValueData: closebracket, MatchIndex: closebracket.length, SameName: 'Close_BracketAdded' + cursorpos })\r\n            }\r\n            vm.updatingvalue();\r\n            vm.updatevaluebyid();\r\n        },\r\n        Addplussign() {\r\n            var vm = this;\r\n            if (typeof vm.fieldatavalue == 'string') {\r\n                var substringarr = vm.fieldatavalue.split(',')\r\n                vm.fieldatavalue = substringarr;\r\n            }\r\n            var addbracketexpsign = '+';\r\n            var Addsign = addbracketexpsign.split('');\r\n            var cursorpos = vm.GetCursorPoint();\r\n            var getdata = vm.SetValueOnCursorPosition(cursorpos);\r\n            if (getdata.length > 1) {\r\n                var checkindex = vm.InputValueArray.findIndex(x => x.FieldValueData === getdata[0].FieldValueData);\r\n                if (checkindex > -1) {\r\n                    vm.fieldatavalue.splice(checkindex, 0, {\r\n                        FieldValueData: Addsign, MatchIndex: Addsign.length, SameName: 'AddedPlus' + cursorpos\r\n                    })\r\n                    vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                    vm.InputValueArray.splice(checkindex, 0, {\r\n                        FieldValueData: Addsign, MatchIndex: Addsign.length, SameName: 'AddedPlus' + cursorpos\r\n                    })\r\n                }\r\n            } else {\r\n                vm.fieldatavalue.push({ FieldValueData: Addsign, MatchIndex: Addsign.length, SameName: 'AddedPlus' + cursorpos })\r\n                vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                vm.InputValueArray.push({ FieldValueData: Addsign, MatchIndex: Addsign.length, SameName: 'AddedPlus' + cursorpos })\r\n            }\r\n            vm.FunctionValueArray = 'No_Value';\r\n            vm.updatingvalue();\r\n            vm.updatevaluebyid();\r\n        },\r\n        Addsubtractsign() {\r\n            var vm = this;\r\n            if (typeof vm.fieldatavalue == 'string') {\r\n                var substringarr = vm.fieldatavalue.split(',')\r\n                vm.fieldatavalue = substringarr;\r\n            }\r\n            var subtractbracketexpsign = '-';\r\n            var subtractsign = subtractbracketexpsign.split('');\r\n            var cursorpos = vm.GetCursorPoint();\r\n            var getdata = vm.SetValueOnCursorPosition(cursorpos);\r\n            if (getdata.length > 1) {\r\n                var checkindex = vm.InputValueArray.findIndex(x => x.FieldValueData === getdata[0].FieldValueData);\r\n                if (checkindex > -1) {\r\n                    vm.fieldatavalue.splice(checkindex, 0, {\r\n                        FieldValueData: subtractsign, MatchIndex: subtractsign.length, SameName: 'AddedSubtract' + cursorpos\r\n                    })\r\n                    vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                    vm.InputValueArray.splice(checkindex, 0, {\r\n                        FieldValueData: subtractsign, MatchIndex: subtractsign.length, SameName: 'AddedSubtract' + cursorpos\r\n                    })\r\n                }\r\n            } else {\r\n                vm.fieldatavalue.push({ FieldValueData: subtractsign, MatchIndex: subtractsign.length, SameName: 'AddedSubtract' + cursorpos })\r\n                vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                vm.InputValueArray.push({ FieldValueData: subtractsign, MatchIndex: subtractsign.length, SameName: 'AddedSubtract' + cursorpos })\r\n            }\r\n            vm.FunctionValueArray = 'No_Value';\r\n            vm.updatingvalue();\r\n            vm.updatevaluebyid();\r\n        },\r\n        Addmultiplysign() {\r\n            var vm = this;\r\n            if (typeof vm.fieldatavalue == 'string') {\r\n                var substringarr = vm.fieldatavalue.split(',')\r\n                vm.fieldatavalue = substringarr;\r\n            }\r\n            var multiplybracketexpsign = '*';\r\n            var multiplysign = multiplybracketexpsign.split('');\r\n            var cursorpos = vm.GetCursorPoint();\r\n            var getdata = vm.SetValueOnCursorPosition(cursorpos);\r\n            if (getdata.length > 1) {\r\n                var checkindex = vm.InputValueArray.findIndex(x => x.FieldValueData === getdata[0].FieldValueData);\r\n                if (checkindex > -1) {\r\n                    vm.fieldatavalue.splice(checkindex, 0, {\r\n                        FieldValueData: multiplysign, MatchIndex: multiplysign.length, SameName: 'AddedMultiply' + cursorpos\r\n                    })\r\n                    vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                    vm.InputValueArray.splice(checkindex, 0, {\r\n                        FieldValueData: multiplysign, MatchIndex: multiplysign.length, SameName: 'AddedMultiply' + cursorpos\r\n                    })\r\n                }\r\n            } else {\r\n                vm.fieldatavalue.push({ FieldValueData: multiplysign, MatchIndex: multiplysign.length, SameName: 'AddedMultiply' + cursorpos })\r\n                vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                vm.InputValueArray.push({ FieldValueData: multiplysign, MatchIndex: multiplysign.length, SameName: 'AddedMultiply' + cursorpos })\r\n            }\r\n            vm.FunctionValueArray = 'No_Value';\r\n            vm.updatingvalue();\r\n            vm.updatevaluebyid();\r\n        },\r\n        Adddividesign() {\r\n            var vm = this;\r\n            if (typeof vm.fieldatavalue == 'string') {\r\n                var substringarr = vm.fieldatavalue.split(',')\r\n                vm.fieldatavalue = substringarr;\r\n            }\r\n            var dividebracketexpsign = '/';\r\n            var dividesign = dividebracketexpsign.split('');\r\n            var cursorpos = vm.GetCursorPoint();\r\n            var getdata = vm.SetValueOnCursorPosition(cursorpos);\r\n            if (getdata.length > 1) {\r\n                var checkindex = vm.InputValueArray.findIndex(x => x.FieldValueData === getdata[0].FieldValueData);\r\n                if (checkindex > -1) {\r\n                    vm.fieldatavalue.splice(checkindex, 0, {\r\n                        FieldValueData: dividesign, MatchIndex: dividesign.length, SameName: 'AddedDivide' + cursorpos\r\n                    })\r\n                    vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                    vm.InputValueArray.splice(checkindex, 0, {\r\n                        FieldValueData: dividesign, MatchIndex: dividesign.length, SameName: 'AddedDivide' + cursorpos\r\n                    })\r\n                }\r\n            } else {\r\n                vm.fieldatavalue.push({ FieldValueData: dividesign, MatchIndex: dividesign.length, SameName: 'AddedDivide' + cursorpos })\r\n                vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                vm.InputValueArray.push({ FieldValueData: dividesign, MatchIndex: dividesign.length, SameName: 'AddedDivide' + cursorpos })\r\n            }\r\n            vm.FunctionValueArray = 'No_Value';\r\n            vm.updatingvalue();\r\n            vm.updatevaluebyid();\r\n        },\r\n        AddSpace() {\r\n            var vm = this;\r\n            if (typeof vm.fieldatavalue == 'string') {\r\n                var substringarr = vm.fieldatavalue.split(',')\r\n                vm.fieldatavalue = substringarr;\r\n            }\r\n            var spaceaddingexp = ' ';\r\n            var addedspace = spaceaddingexp.split('');\r\n            var addedspacefordb = spaceaddingexp.replaceAll(' ', \"+' '+\");\r\n            var cursorpos = vm.GetCursorPoint();\r\n            var getdata = vm.SetValueOnCursorPosition(cursorpos);\r\n            if (getdata.length > 0) {\r\n                var checkindex = vm.InputValueArray.findIndex(x => x.FieldValueData === getdata[0].FieldValueData);\r\n                if (checkindex > -1) {\r\n                    vm.fieldatavalue.splice(checkindex, 0, {\r\n                        FieldValueData: addedspace, MatchIndex: addedspace.length, SameName: 'addedspace' + cursorpos\r\n                    })\r\n                    vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                    vm.InputValueArray.splice(checkindex, 0, {\r\n                        FieldValueData: addedspacefordb, MatchIndex: addedspace.length, SameName: 'addedspace' + cursorpos\r\n                    })\r\n                    vm.InputValueExpressionByID = vm.InputValueArray.map(x => x.FieldValueData).join('');\r\n                }\r\n            } else {\r\n                vm.fieldatavalue.push({ FieldValueData: addedspace, MatchIndex: addedspace.length, SameName: 'addedspace' + cursorpos })\r\n                vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                vm.InputValueArray.push({ FieldValueData: addedspacefordb, MatchIndex: addedspace.length, SameName: 'addedspace' + cursorpos })\r\n                vm.InputValueExpressionByID = vm.InputValueArray.map(x => x.FieldValueData).join('');\r\n            }\r\n            vm.FunctionValueArray = 'No_Value';\r\n            vm.updatingvalue();\r\n        },\r\n        ResetExpression() {\r\n            var vm = this;\r\n            vm.FieldsValue = '';\r\n            vm.FunctionValue = '';\r\n            vm.AddBracketValue = '';\r\n            vm.SubtractBracketValue = '';\r\n            vm.MultplyBracketValue = '';\r\n            vm.DivideBracketValue = '';\r\n            vm.OpenBracketExpValue = '';\r\n            vm.CloseBracketExpValue = '';\r\n            vm.modulelisting.splice(0);\r\n            vm.Functionskey.splice(0);\r\n            vm.InputValueExpression = '';\r\n            vm.InputValueExpressionByID = '';\r\n            vm.InputValueArray = [];\r\n            vm.FieldData = [];\r\n            vm.fieldatavalue = [];\r\n            vm.watchvalue = true;\r\n            vm.updateexpresion = false;\r\n            vm.verifiedvaluedata = null;\r\n            vm.FunctionValueArray = 'No_Value';\r\n            vm.GetCommaSeparatedValue = '';\r\n            vm.countbyfield = 0;\r\n            vm.modelconditionexpression = '';\r\n            vm.Functionkey = null;\r\n            vm.ShowDescriptionForFunction = null;\r\n            vm.conditionexpression = false;\r\n            vm.checkbycondition = 0;\r\n            vm.substringvalue = '';\r\n        },\r\n        updatevaluebyid(elem, checkindex, getdata, cursorpos) {\r\n            var vm = this;\r\n            if (vm.FunctionValueArray == vm.substringvalue) {\r\n                if (typeof vm.InputValueArray == 'object') {\r\n                    var convertarrid = String(vm.InputValueArray.map(x => x.FieldValueData));\r\n                    vm.InputValueArray = convertarrid\r\n                }\r\n                if (vm.GetCommaSeparatedValue == \"CommaSeparatedValue\" && vm.countbyfield == 0 && !vm.conditionexpression) {\r\n                    var firstindex = vm.InputValueArray.indexOf(\",\") + 1;\r\n                    var secondindex = vm.InputValueArray.indexOf(\")\")\r\n                    vm.countbyfield = vm.countbyfield + 1 + 1;\r\n                }\r\n                else if (vm.GetCommaSeparatedValue == \"CommaSeparatedValue\" && vm.countbyfield > 0 && !vm.conditionexpression) {\r\n                    var firstindex = vm.InputValueArray.indexOf(vm.InputValueArray.split(\",\")[vm.countbyfield]);\r\n                    var secondindex = vm.InputValueArray.indexOf(\")\")\r\n                    vm.countbyfield++;\r\n                }\r\n                else {\r\n                    var firstindex = vm.InputValueArray.indexOf(\"(\") + 1;\r\n                    var secondindex = vm.InputValueArray.indexOf(\")\")\r\n                }\r\n                vm.substringvalue = vm.InputValueArray.substring(firstindex, secondindex);\r\n                if (vm.substringvalue.includes(',')) {\r\n                    var substringarrid = vm.substringvalue.split(',')\r\n                    vm.substringvalue = substringarrid;\r\n                    vm.InputValueExpressionByID = vm.InputValueArray.replace(vm.substringvalue[0], vm.FieldTableNameValue)\r\n                    vm.InputValueArray = [];\r\n                    // vm.InputValueArray = vm.InputValueExpressionByID;\r\n                    vm.InputValueArray.push({\r\n                        FieldValueData: vm.InputValueExpressionByID,\r\n                        MatchIndex: vm.InputValueExpressionByID.length,\r\n                        SameName: 'Field_Added' + vm.InputValueExpressionByID.length,\r\n                        CustomFieldId: elem.CustomFieldId\r\n                    });\r\n                    vm.GetCommaSeparatedValue = \"CommaSeparatedValue\"\r\n                    $(\"#Submitbtn\").addClass('disabled');\r\n                } else {\r\n                    vm.InputValueExpressionByID = vm.InputValueArray.replace(vm.substringvalue, vm.FieldTableNameValue)\r\n                    // vm.InputValueArray = vm.InputValueExpressionByID;\r\n                    vm.InputValueArray = [];\r\n                    vm.InputValueArray.push({\r\n                        FieldValueData: vm.InputValueExpressionByID,\r\n                        MatchIndex: vm.InputValueExpressionByID.length,\r\n                        SameName: 'Field_Added' + vm.InputValueExpressionByID.length,\r\n                        CustomFieldId: elem.CustomFieldId\r\n                    });\r\n                    vm.substringvalue = '';\r\n                    $(\"#Submitbtn\").addClass('disabled');\r\n                }\r\n                vm.modelconditionexpression = '';\r\n                vm.conditionexpression = false;\r\n                vm.checkbycondition = 0;\r\n            }\r\n            else if (elem != undefined) {\r\n                if (vm.fieldadded) {\r\n                    var checkindex = vm.InputValueArray.findIndex(x => x.FieldValueData === getdata[0].FieldValueData);\r\n                    if (checkindex > -1) {\r\n                        vm.InputValueArray.splice(checkindex, 0, {\r\n                            FieldValueData: vm.FieldTableNameValue,\r\n                            MatchIndex: vm.$t((elem.DisplayName != null && elem.DisplayName != \"\") ? elem.DisplayName : elem.FieldName).length,\r\n                            SameName: 'Field_Added' + cursorpos,\r\n                            CustomFieldId: elem.CustomFieldId\r\n                        }\r\n                        )\r\n                        vm.InputValueExpressionByID = vm.InputValueArray.map(x => x.FieldValueData).join('')\r\n                    }\r\n                }\r\n                else {\r\n                    vm.InputValueArray.push({\r\n                        FieldValueData: vm.FieldTableNameValue,\r\n                        MatchIndex: vm.$t((elem.DisplayName != null && elem.DisplayName != \"\") ? elem.DisplayName : elem.FieldName).length,\r\n                        SameName: 'Field_Added' + cursorpos,\r\n                        CustomFieldId: elem.CustomFieldId\r\n                    });\r\n                    vm.InputValueExpressionByID = vm.InputValueArray.map(x => x.FieldValueData).join('')\r\n                }\r\n            }\r\n            else {\r\n                vm.InputValueExpressionByID = vm.InputValueArray.map(x => x.FieldValueData).join('')\r\n            }\r\n        },\r\n        updatingvalue() {\r\n            var vm = this;\r\n            if (typeof vm.InputValueExpression == 'object') {\r\n                var convertstr = String(vm.InputValueExpression)\r\n                vm.InputValueExpression = convertstr;\r\n            }\r\n            else {\r\n                vm.InputValueExpression = vm.FieldsValue;\r\n            }\r\n        },\r\n        deleteuserinput(event) {\r\n            var vm = this;\r\n            const key = event.key;\r\n            if (event.code === 'Space') { vm.AddSpace(); }\r\n            else if (event.keyCode >= 9 && event.keyCode <= 45 || event.keyCode > 90 && event.keyCode <= 93 || event.keyCode >= 112 && event.keyCode <= 167) {\r\n                event.preventDefault();\r\n            }\r\n            else if (key === 'Backspace' || event.keyCode === 8 || event.keyCode === 46) {\r\n                var cursorposition = vm.GetCursorPoint();\r\n                cursorposition = cursorposition - 1;\r\n                let assignindex;\r\n                vm.fieldatavalue.forEach(item => {\r\n                    if (item.MatchIndex < cursorposition) {\r\n                        assignindex = cursorposition - item.MatchIndex;\r\n                        cursorposition = assignindex;\r\n                    }\r\n                    else {\r\n                        if (cursorposition != 0) {\r\n                            let getindexofexp = vm.fieldatavalue.findIndex(x => x.SameName === item.SameName);\r\n                            let getfieldindex = vm.FieldData.findIndex(f => f.CustomFieldId === item.CustomFieldId);\r\n                            if (getindexofexp > -1) {\r\n                                vm.fieldatavalue.splice(getindexofexp, 1);\r\n                                vm.InputValueArray.splice(getindexofexp, 1);\r\n                                if (getfieldindex > -1) {\r\n                                    vm.FieldData.splice(getfieldindex, 1);\r\n                                }\r\n                                if (vm.fieldatavalue.length > 0) {\r\n                                    vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                                } else {\r\n                                    vm.FieldsValue = vm.fieldatavalue.join('');\r\n                                    vm.substringvalue = '';\r\n                                }\r\n                                cursorposition = 0;\r\n                                vm.Functionkey = null;\r\n                            }\r\n                        }\r\n                    }\r\n                })\r\n                vm.updatingvalue();\r\n                vm.updatevaluebyid();\r\n            }\r\n            else {\r\n                var cursorpos = vm.GetCursorPoint();\r\n                var getdata = vm.SetValueOnCursorPosition(cursorpos);\r\n                if (getdata.length > 1) {\r\n                    var checkindex = vm.InputValueArray.findIndex(x => x.FieldValueData === getdata[0].FieldValueData);\r\n                    if (checkindex > -1) {\r\n                        vm.fieldatavalue.splice(checkindex, 0, {\r\n                            FieldValueData: key, MatchIndex: key.length, SameName: 'User-input' + cursorpos\r\n                        })\r\n                        vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                        vm.InputValueArray.splice(checkindex, 0, {\r\n                            FieldValueData: key, MatchIndex: key.length, SameName: 'User-input' + cursorpos\r\n                        })\r\n                    }\r\n                } else {\r\n                    vm.fieldatavalue.push({ FieldValueData: key, MatchIndex: key.length, SameName: 'User-input' + cursorpos });\r\n                    vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                    vm.InputValueArray.push({ FieldValueData: key, MatchIndex: key.length, SameName: 'User-input' + cursorpos });\r\n                }\r\n                vm.updatingvalue();\r\n                vm.updatevaluebyid();\r\n            }\r\n            vm.buttons[0].class = \"btn btn-success mr-2 my-sm-0 disabled\";\r\n            event.preventDefault();\r\n        },\r\n        UserInputSelection(userinput) {\r\n            var vm = this;\r\n            vm.selecteduserinput = userinput.target.selectionStart;\r\n            vm.selecteduserinputbyid = vm.InputValueArray.length;\r\n        },\r\n        ExpresssionDataValue(data, fieldsdata) {\r\n            var vm = this;\r\n            //vm.ResetExpression();\r\n            data.forEach(dataitem => {\r\n                vm.ExpressionIDvalue = dataitem.ExpressionID;\r\n                // vm.modelfieldname = dataitem.ExpressionName;\r\n                vm.FormSchema[0].Data[0].value = dataitem.ExpressionName;\r\n                vm.fieldatavalue.push({ FieldValueData: dataitem.ExpressionDisplay, MatchIndex: dataitem.ExpressionDisplay.length, SameName: 'EditedExp' });\r\n                vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                vm.InputValueArray.push({ FieldValueData: dataitem.Expression, MatchIndex: dataitem.Expression.length, SameName: 'EditedExp' })\r\n                vm.InputValueExpressionByID = vm.InputValueArray.map(x => x.FieldValueData).join('')\r\n                vm.updatingvalue();\r\n            })\r\n            fieldsdata.forEach(item => {\r\n                vm.FieldData.push({ CustomFieldId: item.CustomFieldId, FieldName: item.FieldName, ColumnIndex: item.ColumnIndex });\r\n            })\r\n        },\r\n        VerifyExpression() {\r\n            var vm = this;\r\n            if (vm.InputValueExpression == '') {\r\n                vm.ShowAlert(vm.$t(\"Expressionemmty\"), 'failure', true, vm.$t('Alert'));\r\n            } else {\r\n                var jsondata = {\r\n                    \"Info\": {\r\n                        \"Expression\": encodeURIComponent(vm.InputValueExpressionByID),\r\n                        \"MODULENAME\": vm.customreportparameters.Modulename,\r\n                        \"SUBMODULECODE\": vm.customreportparameters.Submodulecode,\r\n                        \"FunctionExpression\": vm.Functionkey,\r\n                        \"FIELDS\": vm.FieldData\r\n                    }\r\n                }\r\n                var jsonvalue = `JsonData=${JSON.stringify(jsondata)}`;\r\n                vm.isLoading = true;\r\n                ExpressionDataService.VerifyExpressionFromDB(jsonvalue).then(res => {\r\n                    if (res.data.Result == \"True\") {\r\n                        vm.verifiedvaluedata = 1;\r\n                        vm.isLoading = false;\r\n                        vm.buttons[0].class = \"btn btn-success mr-2 my-sm-0\";\r\n                        vm.verifiedvalue = true;\r\n                    }\r\n                    else {\r\n                        vm.verifiedvaluedata = 0;\r\n                        vm.isLoading = false;\r\n                    }\r\n                }).catch(err => {\r\n                    console.log(err);\r\n                })\r\n            }\r\n        },\r\n        SubmitExpression() {\r\n            var vm = this;\r\n            var InavalidExpression = true;\r\n            if (!vm.editexpressionvalue) {\r\n                var checkeditfieldexist = vm.Columnlist.findIndex(x => x.FieldName === vm.FormSchema[0].Data[0].value);\r\n                if (checkeditfieldexist != -1) {\r\n                    InavalidExpression = false;\r\n                    vm.ShowAlert(vm.$t(\"ExpressionExist\"), 'failure', true, vm.$t('Alert'));\r\n                } else { InavalidExpression = true }\r\n            }\r\n            if (InavalidExpression) {\r\n                if (vm.verifiedvalue && vm.FormSchema[0].Data[0].value != '') {\r\n                    this.$emit('VerifiedExpressionData', {\r\n                        ExpressionID: vm.ExpressionIDvalue,\r\n                        FieldValue: vm.FormSchema[0].Data[0].value,\r\n                        VerifiedExpression: vm.InputValueExpressionByID,\r\n                        ExpressionFieldArray: vm.FieldData,\r\n                        ExpressionDisplay: vm.InputValueExpression,\r\n                        Functionkey: vm.Functionkey,\r\n                        IsEdit: vm.editexpressionvalue,\r\n                        IsExpExist: vm.AlreadyExistExpression\r\n                    })\r\n                    vm.verifiedvalue = false;\r\n                }\r\n            }\r\n        },\r\n        CancelExpressionUI() {\r\n            var vm = this;\r\n            vm.close();\r\n        },\r\n        closed() {\r\n            $(\"#verifiedid\").alert('close');\r\n        },\r\n        GetCursorPoint(e) {\r\n            var vm = this;\r\n            var cursorpos1 = document.getElementById(\"txtarea\");\r\n            cursorpos1.focus();\r\n            var cursorpos = document.getElementById(\"txtarea\").selectionStart;\r\n            cursorpos = cursorpos + 1;\r\n            return cursorpos;\r\n        },\r\n        SetValueOnCursorPosition(cursorpos) {\r\n            var vm = this;\r\n            var returndata = []\r\n            var assignindex;\r\n            vm.InputValueArray.forEach(item => {\r\n                if (item.MatchIndex < cursorpos) {\r\n                    assignindex = cursorpos - item.MatchIndex;\r\n                    cursorpos = assignindex;\r\n                }\r\n                else if (item.MatchIndex > cursorpos || cursorpos == 1) {\r\n                    returndata.push(item)\r\n                }\r\n            })\r\n            return returndata;\r\n        },\r\n        AddConditionExpression() {\r\n            var vm = this;\r\n            vm.conditionexpression = true;\r\n            if (vm.Functionkey == 'Date add' && vm.GetCommaSeparatedValue == 'CommaSeparatedValue') {\r\n                vm.conditionexpression = false;\r\n                vm.checkbycondition = vm.checkbycondition + 1;\r\n            }\r\n            vm.Addfields(vm.modelconditionexpression);\r\n        },\r\n        DescriptionForFunction() {\r\n            var vm = this;\r\n            if (vm.Functionkey == 'Date diff') {\r\n                vm.ShowDescriptionForFunction = 'Interval(Year,Month,Day)';\r\n            }\r\n            else if (vm.Functionkey == 'Date add') {\r\n                vm.ShowDescriptionForFunction = 'Interval(Year,Month,Day) Number(1,2,3,nth.)';\r\n            }\r\n            else if (vm.Functionkey == 'Date name') {\r\n                vm.ShowDescriptionForFunction = 'Interval(Year,Month,Day)';\r\n            }\r\n            else if (vm.Functionkey == 'Date part') {\r\n                vm.ShowDescriptionForFunction = 'Interval(Year,Month,Day)';\r\n            }\r\n            else if (vm.Functionkey == 'If') {\r\n                vm.ShowDescriptionForFunction = 'BooleanExpression,True Value, False Value';\r\n            }\r\n        },\r\n        SelectAllSearch(){\r\n            var vm = this;\r\n            vm.GetSelectedValue = window.getSelection().toString()\r\n        },\r\n        ListFiltering() {\r\n            var vm = this;\r\n           \r\n            var filterinput = vm.MainSearchmodel;\r\n            if (filterinput != null && filterinput != \"\") {\r\n                $(\".column-collapse\").addClass(\"show\");\r\n            }\r\n            else {\r\n                $(\".column-collapse\").removeClass(\"show\");\r\n            }\r\n            if(vm.GetSelectedValue != ''){\r\n                filterinput = filterinput.replaceAll(vm.GetSelectedValue,'')\r\n                vm.GetSelectedValue = '';\r\n            }\r\n            var searchcol = [];\r\n            var searchfilter = [];\r\n            vm.modulelisting.forEach((item, index) => {\r\n                vm.modulelisting[index].forEach((indexitem) => {\r\n                    searchfilter.push(indexitem);\r\n                    searchcol = searchfilter.filter(searchitem => {\r\n                        var displayMainColname = (searchitem.DisplayName != null) ? searchitem.DisplayName : searchitem.FieldName;\r\n                        return displayMainColname.replace(/\\W/g, \"\").toLowerCase().includes(filterinput.replace(/\\W/g, \"\").toLowerCase());\r\n                    })\r\n                })\r\n                vm.searchColumnfilter[index] = searchcol;\r\n                searchfilter = [];\r\n            })\r\n            let count = 0;\r\n            for (let filteritem in vm.searchColumnfilter) {\r\n                if (vm.searchColumnfilter[filteritem].length > 0) {\r\n                    count++;\r\n                }\r\n            }\r\n            if (count > 0) {\r\n                vm.SearchNoRecord = false\r\n            } else { vm.SearchNoRecord = true; }\r\n            return vm.searchColumnfilter;\r\n        }\r\n    }\r\n}\r\n</script>\r\n<template>\r\n    <div id=\"showcalculatedfield\" role=\"dialog\" class=\"modal my-popups centre fade\" v-cloak>\r\n        <div role=\"document\" class=\"modal-dialog\">\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header mheader-user\">\r\n                    <button type=\"button\" class=\"close\" v-on:click=\"close()\">\r\n                        <em aria-hidden=\"true\" class=\"fa fa-times\"></em>\r\n                    </button>\r\n                    <h4 id=\"myModalLabel\" class=\"modal-title\">{{ $t('customField') }}</h4>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                    <loader :is-visible=\"isLoading\"></loader>\r\n                    <dynamic-form lang=\"en\" :buttons=\"buttons\" :schema=\"FormSchema\" v-on:OnSubmit=\"SubmitExpression()\">\r\n                        <template v-slot:tgslot-CalculatedUIList=\"{ data }\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-12 p-0 float-left\">\r\n                                    <div class=\"col-lg-4 mb-0 float-left px-3\">\r\n                                        <div class=\"heading-border mb-4\">\r\n                                            <h5 class=\"h5\">\r\n                                                <span class=\"spngropuname\">\r\n                                                    {{ $t('Functions') }}\r\n                                                    <div class=\"w3-container w3-border w3-large\"></div>\r\n                                                </span>\r\n                                            </h5>\r\n                                        </div>\r\n                                        <div class=\"accordion md-accordion left-filter\" id=\"accordionEx1\">\r\n                                            <div class=\"card-panel\" style=\"border-top:1px solid #c7c7c7;\">\r\n                                                <div class=\"card\" v-for=\"(name, index) in FunctionsName\" :key=\"index\">\r\n                                                    <div class=\"card-header\" role=\"tab\" :id=\"'MainFunction' + index\">\r\n                                                        <h5 class=\"mb-0\"><a data-toggle=\"collapse\"\r\n                                                                data-parent=\"#accordionEx1\"\r\n                                                                :href=\"'#FucntionCollapse' + index\"\r\n                                                                :aria-expanded=\"index == 0 ? true : false\"\r\n                                                                :aria-controls=\"'FucntionCollapse' + index\"\r\n                                                                :class=\"index == 0 ? '' : 'collapsed'\"><em\r\n                                                                    class=\"fa fa fa-file-text-o\"\r\n                                                                    aria-hidden=\"true\"></em><span class=\"font-weight-bold\">\r\n                                                                    {{ name.FuncType }}</span><em\r\n                                                                    class=\"fa fa-angle-down rotate-icon\"\r\n                                                                    aria-hidden=\"true\"></em></a>\r\n                                                        </h5>\r\n                                                    </div>\r\n                                                    <div :id=\"'FucntionCollapse' + index\"\r\n                                                        :class=\"index == 0 ? 'collapse multi-collapse show' : 'collapse multi-collapse'\"\r\n                                                        role=\"tabpanel\" :aria-labelledby=\"'MainFunction' + index\"\r\n                                                        data-parent=\"#accordionEx1\">\r\n                                                        <div class=\"card-body p-0 customScrollForLeftBar llt\"\r\n                                                            style=\"max-height:300px;\">\r\n                                                            <div class=\"form-group\">\r\n                                                                <ul class=\"nav nav-pills flex-column left-tab responivecustomtab lefttabiconfix\"\r\n                                                                    style=\"max-height: 214px; overflow: auto; display: block;\">\r\n                                                                    <template v-for=\"element in Functionskey[index]\">\r\n                                                                        <li class=\"nav-item parent-element\">\r\n                                                                            <span class=\"nav-link left-menu px-4 \">\r\n                                                                                <em class=\"fa fa-bullhorn float-left\"\r\n                                                                                    aria-hidden=\"true\"></em>\r\n                                                                                <span class=\"text-truncate float-left\"\r\n                                                                                    style=\"width: 55%;\"\r\n                                                                                    :data-toggle-tooltip=\"element.Keys\"\r\n                                                                                    :title=\"element.Keys\">\r\n                                                                                    {{ element.Keys }}\r\n                                                                                </span>\r\n                                                                                <a href=\"javascript:;\"><em\r\n                                                                                        class=\"fa fa-plus float-right mt-1 text-success pr-0\"\r\n                                                                                        aria-hidden=\"true\"\r\n                                                                                        @click=\"AddFunctionsfields(element, $event, index)\"></em></a>\r\n                                                                            </span>\r\n                                                                        </li>\r\n                                                                    </template>\r\n                                                                </ul>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-lg-4 mb-0 float-left px-3\">\r\n                                        <div class=\"heading-border\">\r\n                                            <h5 class=\"h5\">\r\n                                                <span class=\"spngropuname\">\r\n                                                    {{ $t('Expression') }}\r\n                                                    <a title=\"@Resources.Edit\" href=\"javascript:;\"\r\n                                                        class=\"editgroupname d-none\"><em\r\n                                                            class=\"fa fa-pencil pl-2 text-success\"></em></a>\r\n                                                </span>\r\n                                            </h5>\r\n                                        </div>\r\n                                        <div class=\"border p-3 mt-4 float-left\">\r\n                                            <div class=\"row\">\r\n                                                <div class=\"col-md-11 mb-2\">\r\n                                                    <input :class=\"Functionkey == 'Date diff' || Functionkey == 'Date add' || Functionkey == 'Date name' || Functionkey == 'Date part' || Functionkey == 'If'\r\n                                                        ? 'form-control' : 'form-control d-none'\" type=\"text\"\r\n                                                        v-model=\"modelconditionexpression\"\r\n                                                        placeholder=\"Enter Your Conditions\" />\r\n                                                    <small\r\n                                                        :class=\"Functionkey == 'Date diff' || Functionkey == 'Date add' || Functionkey == 'Date name' || Functionkey == 'Date part' || Functionkey == 'If' ? 'text-danger' : 'd-none'\">{{\r\n                                                            ShowDescriptionForFunction }}</small>\r\n                                                </div>\r\n                                                <div class=\"col-md-1 p-0 my-1\">\r\n                                                    <a :class=\"Functionkey == 'Date diff' || Functionkey == 'Date add' || Functionkey == 'Date name' || Functionkey == 'Date part' || Functionkey == 'If'\r\n                                                        ? 'fa fa-play text-success' : 'fa fa-play text-success d-none'\"\r\n                                                        @click=\"AddConditionExpression\"></a>\r\n                                                </div>\r\n                                            </div>\r\n                                            <textarea class=\"border background-white float-left w-100 p-3\" id=\"txtarea\"\r\n                                                style=\"min-height: 250px;\" v-model=\"InputValueExpression\"\r\n                                                @keydown=\"deleteuserinput($event)\" @mouseup=\"GetCursorPoint($event)\"\r\n                                                v-on:select=\"UserInputSelection($event)\"></textarea>\r\n                                            <div class=\"expressionbx mb-4 bg-grey text-right float-left w-100 py-2 border\">\r\n                                                <a class=\"fa fa-keyboard-o\" v-on:click=\"AddSpace($event)\"></a>\r\n                                                <a href=\"javascript:;\" v-on:click=\"Addplussign($event)\">+</a>\r\n                                                <a href=\"javascript:;\" v-on:click=\"Addsubtractsign($event)\">-</a>\r\n                                                <a href=\"javascript:;\" v-on:click=\"Addmultiplysign($event)\">*</a>\r\n                                                <a href=\"javascript:;\" v-on:click=\"Adddividesign($event)\">/</a>\r\n                                                <a href=\"javascript:;\" v-on:click=\"Addopenbracketsign($event)\">(</a>\r\n                                                <a href=\"javascript:;\" v-on:click=\"Addclosebracketsign($event)\">)</a>\r\n                                            </div>\r\n\r\n                                            <div class=\"col-12 p-0 float-left\">\r\n                                                <div class=\"row flex-row-reverse\">\r\n                                                    <div class=\"col-12 p-0 float-left\" id=\"verifiedid\">\r\n                                                        <div class=\"alert alert-danger alert-dismissible fade show\"\r\n                                                            role=\"alert\" v-if=\"verifiedvaluedata == 0\">\r\n                                                            {{ $t(\"InvalidExp\") }}<button type=\"button\" class=\"close\"\r\n                                                                data-dismiss=\"alert\" @click=\"closed\" aria-label=\"Close\">\r\n                                                                <span aria-hidden=\"true\">×</span>\r\n                                                            </button>\r\n                                                        </div>\r\n                                                        <div class=\"alert alert-success alert-dismissible fade show\"\r\n                                                            role=\"alert\" v-if=\"verifiedvaluedata == 1\">\r\n\r\n                                                            {{ $t(\"ExpressionVerify\") }}<button type=\"button\" class=\"close\"\r\n                                                                data-dismiss=\"alert\" @click=\"closed\" aria-label=\"Close\">\r\n                                                                <span aria-hidden=\"true\">×</span>\r\n                                                            </button>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"col-lg-12 text-right\">\r\n                                                        <a href=\"javascript:;\"\r\n                                                            class=\"btn btn-success ancsaveuserticket mr-2\"\r\n                                                            v-on:click=\"VerifyExpression\">\r\n                                                            <em class=\"fa fa-check pr-2\"></em>Verify</a>\r\n                                                        <a href=\"javascript:;\" class=\"btn btn-danger ancsaveuserticket\"\r\n                                                            v-on:click=\"ResetExpression\">\r\n                                                            <em class=\"fa fa-refresh pr-2\"></em>Reset</a>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-lg-4 mb-0 float-left px-3\">\r\n                                        <div class=\"heading-border mb-4\">\r\n                                            <h5 class=\"h5\">\r\n                                                <span class=\"spngropuname\">\r\n                                                    {{ $t('Columns') }}\r\n                                                    <div class=\"w3-container w3-border w3-large\"></div>\r\n                                                </span>\r\n                                            </h5>\r\n                                        </div>\r\n                                        <div class=\"mb-0 d-lg-block p-2 border\">\r\n                                            <div class=\"input-group customsearchbox\">\r\n                                                <input type=\"text\" maxlength=\"50\" v-on:keydown=\"ListFiltering()\" \r\n                                                    v-on:keyup=\"ListFiltering()\" v-on:mouseup=\"SelectAllSearch\" v-on:mouseleave=\"SelectAllSearch\"\r\n                                                    id=\"searchinput\" v-model=\"MainSearchmodel\"\r\n                                                    placeholder=\"Search by Name\"\r\n                                                    class=\"form-control searchcustomfilter border-right-0\"\r\n                                                    autocomplete=\"off\">\r\n                                                <div class=\"input-group-append\">\r\n                                                    <span class=\"input-group-text bg-transparent bg-white border-left-0\">\r\n                                                    </span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"accordion md-accordion left-filter\" id=\"accordionEx2\">\r\n                                            <div class=\"card-panel\" style=\"border-top:1px solid #c7c7c7;\">\r\n                                                <div class=\"card\" v-for=\"(name, index) in JsonColumns\" :key=\"index\">\r\n                                                    <div class=\"card-header\" role=\"tab\" :id=\"'MainColumn' + index\">\r\n                                                        <h5 class=\"mb-0\"><a data-toggle=\"collapse\"\r\n                                                                data-parent=\"#accordionEx2\"\r\n                                                                :href=\"'#ColumnCollapse' + index\"\r\n                                                                :aria-expanded=\"index == 0 ? true : false\"\r\n                                                                :aria-controls=\"'ColumnCollapse' + index\"\r\n                                                                :class=\"index == 0 ? '' : 'collapsed'\"><em\r\n                                                                    class=\"fa fa fa-file-text-o\"\r\n                                                                    aria-hidden=\"true\"></em><span class=\"font-weight-bold\">\r\n                                                                    {{ GetLocalizedValue(name.SubModule) }}</span><em\r\n                                                                    class=\"fa fa-angle-down rotate-icon\"\r\n                                                                    aria-hidden=\"true\"></em></a>\r\n                                                        </h5>\r\n                                                    </div>\r\n                                                    <div :id=\"'ColumnCollapse' + index\"\r\n                                                        :class=\"index == 0 ? 'collapse multi-collapse column-collapse show' : 'collapse multi-collapse column-collapse'\"\r\n                                                        role=\"tabpanel\" :aria-labelledby=\"'MainColumn' + index\"\r\n                                                        data-parent=\"#accordionEx2\">\r\n                                                        <div class=\"card-body p-0 customScrollForLeftBar llt\"\r\n                                                            style=\"max-height:300px;\">\r\n                                                            <div class=\"form-group\">\r\n                                                                <ul class=\"nav nav-pills flex-column left-tab responivecustomtab lefttabiconfix\"\r\n                                                                    style=\"max-height: 305px; overflow: auto; display: block;\">\r\n                                                                    <template\r\n                                                                        v-for=\"element in searchColumnfilter.length == 0 ? modulelisting[index] : searchColumnfilter[index]\">\r\n                                                                        <li class=\"nav-item parent-element\">\r\n                                                                            <span class=\"nav-link left-menu px-4 \">\r\n                                                                                <em :class=\"element.dttype[0].icon + ' ' + 'float-left'\"\r\n                                                                                    aria-hidden=\"true\"></em>\r\n                                                                                <span class=\"text-truncate float-left\"\r\n                                                                                    style=\"width: 55%;\"\r\n                                                                                    :data-toggle-tooltip=\"element.FieldName\"\r\n                                                                                    :title=\"element.FieldName\">\r\n                                                                                    {{\r\n                                                                                        GetLocalizedValue((element.DisplayName\r\n                                                                                            !=\r\n                                                                                            null &&\r\n                                                                                            element.DisplayName != \"\") ?\r\n                                                                                            element.DisplayName : element.FieldName)\r\n                                                                                    }}\r\n                                                                                </span>\r\n                                                                                <a href=\"javascript:;\"><em\r\n                                                                                        class=\"fa fa-plus float-right mt-1 text-success pr-0\"\r\n                                                                                        aria-hidden=\"true\"\r\n                                                                                        @click=\"Addfields(element, $event, index)\"></em></a>\r\n                                                                            </span>\r\n                                                                        </li>\r\n                                                                    </template>\r\n                                                                </ul>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div v-if=\"SearchNoRecord\"\r\n                                            class=\"text-center text-danger d-flex align-items-center justify-content-center norecs pt-2\">\r\n                                            {{\r\n                                                $t(\"NoRecordfound\") }}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <!-- <Form v-slot=\"{ values, meta }\" ref=\"form\">\r\n                        <div class=\"col-12 mt-0 mb-4 p-0\">\r\n                            <div class=\"form-group\">\r\n                                <label>{{ $t('fieldName') }}<span class=\"text-danger\">*</span></label>\r\n                                <Field name=\"modelfieldname\" :rules=\"{ 'required': true }\" label=\"Field Name\"\r\n                                    v-slot=\"{ field, errorMessage, meta }\" v-model=\"modelfieldname\">\r\n                                    <input v-bind=\"field\" placeholder=\"Enter Field Name\"\r\n                                        :class=\"{ 'form-control': true, 'is-invalid': meta.touched && !meta.valid }\"\r\n                                        type=\"text\" maxlength=\"50\" />\r\n                                    <span name=\"modelfieldname\" v-if=\"meta.touched && !meta.valid\"\r\n                                        class=\"invalid-feedback d-block\">{{\r\n                                            errorMessage\r\n                                        }}</span>\r\n                                </Field>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </Form> -->\r\n                            <!-- <div class=\"row\">\r\n                        <div class=\"col-12 p-0 float-left\">\r\n                            <div class=\"col-lg-4 mb-0 float-left px-3\">\r\n                                <div class=\"heading-border mb-4\">\r\n                                    <h5 class=\"h5\">\r\n                                        <span class=\"spngropuname\">\r\n                                            {{ $t('Functions') }}\r\n                                            <div class=\"w3-container w3-border w3-large\"></div>\r\n                                        </span>\r\n                                    </h5>\r\n                                </div>\r\n                                <div class=\"accordion md-accordion left-filter\" id=\"accordionEx\">\r\n                                    <div class=\"card-panel\" style=\"border-top:1px solid #c7c7c7;\">\r\n                                        <div class=\"card\" v-for=\"(name, index) in FunctionsName\" :key=\"index\">\r\n                                            <div class=\"card-header\" role=\"tab\" :id=\"'MainFunction' + index\">\r\n                                                <h5 class=\"mb-0\"><a data-toggle=\"collapse\" data-parent=\"#accordionEx\"\r\n                                                        :href=\"'#FucntionCollapse' + index\" aria-expanded=\"false\"\r\n                                                        :aria-controls=\"'FucntionCollapse' + index\" class=\"\"><em\r\n                                                            class=\"fa fa fa-file-text-o\" aria-hidden=\"true\"></em><span\r\n                                                            class=\"font-weight-bold\">\r\n                                                            {{ name.FuncType }}</span><em\r\n                                                            class=\"fa fa-angle-down rotate-icon\"\r\n                                                            aria-hidden=\"true\"></em></a>\r\n                                                </h5>\r\n                                            </div>\r\n                                            <div :id=\"'FucntionCollapse' + index\" class=\"collapse multi-collapse\"\r\n                                                role=\"tabpanel\" :aria-labelledby=\"'MainFunction' + index\"\r\n                                                data-parent=\"#accordionEx\">\r\n                                                <div class=\"card-body p-0 customScrollForLeftBar llt\"\r\n                                                    style=\"max-height:300px;\">\r\n                                                    <div class=\"form-group\">\r\n                                                        <ul class=\"nav nav-pills flex-column left-tab responivecustomtab lefttabiconfix\"\r\n                                                            style=\"max-height: 214px; overflow: auto; display: block;\">\r\n                                                            <template v-for=\"element in Functionskey[index]\">\r\n                                                                <li class=\"nav-item parent-element\">\r\n                                                                    <span class=\"nav-link left-menu px-4 \">\r\n                                                                        <em class=\"fa fa-bullhorn float-left\"\r\n                                                                            aria-hidden=\"true\"></em>\r\n                                                                        <span class=\"text-truncate float-left\"\r\n                                                                            style=\"width: 55%;\"\r\n                                                                            :data-toggle-tooltip=\"element.Keys\"\r\n                                                                            :title=\"element.Keys\">\r\n                                                                            {{ element.Keys }}\r\n                                                                        </span>\r\n                                                                        <a href=\"#\"><em\r\n                                                                                class=\"fa fa-plus float-right mt-1 text-success pr-0\"\r\n                                                                                aria-hidden=\"true\"\r\n                                                                                @click=\"AddFunctionsfields(element, $event, index)\"></em></a>\r\n                                                                    </span>\r\n                                                                </li>\r\n                                                            </template>\r\n                                                        </ul>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-lg-4 mb-0 float-left px-3\">\r\n                                <div class=\"heading-border\">\r\n                                    <h5 class=\"h5\">\r\n                                        <span class=\"spngropuname\">\r\n                                            {{ $t('Expression') }}\r\n                                            <a title=\"@Resources.Edit\" href=\"javascript:;\" class=\"editgroupname d-none\"><em\r\n                                                    class=\"fa fa-pencil pl-2 text-success\"></em></a>\r\n                                        </span>\r\n                                    </h5>\r\n                                </div>\r\n                                <div class=\"border p-3 mt-4 float-left\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-md-11 mb-2\">\r\n                                            <input :class=\"Functionkey == 'Datediff' || Functionkey == 'Dateadd' || Functionkey == 'Datename' || Functionkey == 'Datepart' || Functionkey == 'If'\r\n                                                ? 'form-control' : 'form-control d-none'\" type=\"text\"\r\n                                                v-model=\"modelconditionexpression\" placeholder=\"Enter Your Conditions\" />\r\n                                            <small :class=\"Functionkey == 'Datediff' || Functionkey == 'Dateadd' || Functionkey == 'Datename' || Functionkey == 'Datepart' || Functionkey == 'If' ? 'text-danger': 'd-none'\">{{ ShowDescriptionForFunction }}</small>\r\n                                        </div>\r\n                                        <div class=\"col-md-1 p-0 my-1\">\r\n                                            <a :class=\"Functionkey == 'Datediff' || Functionkey == 'Dateadd' || Functionkey == 'Datename' || Functionkey == 'Datepart' || Functionkey == 'If'\r\n                                                ? 'fa fa-play text-success' : 'fa fa-play text-success d-none'\"\r\n                                                @click=\"AddConditionExpression\"></a>\r\n                                        </div>\r\n                                    </div>\r\n                                    <textarea class=\"border background-white float-left w-100 p-3\" id=\"txtarea\"\r\n                                        style=\"min-height: 250px;\" v-model=\"InputValueExpression\"\r\n                                        @keydown=\"deleteuserinput($event)\" @mouseup=\"GetCursorPoint($event)\"\r\n                                        v-on:select=\"UserInputSelection($event)\"></textarea>\r\n                                    <div class=\"expressionbx mb-4 bg-grey text-right float-left w-100 py-2 border\">\r\n                                        <a class=\"fa fa-keyboard-o\" v-on:click=\"AddSpace($event)\"></a>\r\n                                        <a href=\"#\" v-on:click=\"Addplussign($event)\">+</a>\r\n                                        <a href=\"#\" v-on:click=\"Addsubtractsign($event)\">-</a>\r\n                                        <a href=\"#\" v-on:click=\"Addmultiplysign($event)\">*</a>\r\n                                        <a href=\"#\" v-on:click=\"Adddividesign($event)\">/</a>\r\n                                        <a href=\"#\" v-on:click=\"Addopenbracketsign($event)\">(</a>\r\n                                        <a href=\"#\" v-on:click=\"Addclosebracketsign($event)\">)</a>\r\n                                    </div>\r\n\r\n                                    <div class=\"col-12 p-0 float-left\">\r\n                                        <div class=\"row flex-row-reverse\">\r\n                                            <div class=\"col-12 p-0 float-left\" id=\"verifiedid\">\r\n                                                <div class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\"\r\n                                                    v-if=\"verifiedvaluedata == 0\">\r\n                                                    {{ verifyErrorMsg }}<button type=\"button\" class=\"close\"\r\n                                                        data-dismiss=\"alert\" @click=\"closed\" aria-label=\"Close\">\r\n                                                        <span aria-hidden=\"true\">×</span>\r\n                                                    </button>\r\n                                                </div>\r\n                                                <div class=\"alert alert-success alert-dismissible fade show\" role=\"alert\"\r\n                                                    v-if=\"verifiedvaluedata == 1\">\r\n\r\n                                                    {{ $t(\"ExpressionVerify\") }}<button type=\"button\" class=\"close\"\r\n                                                        data-dismiss=\"alert\" @click=\"closed\" aria-label=\"Close\">\r\n                                                        <span aria-hidden=\"true\">×</span>\r\n                                                    </button>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-lg-12 text-right\">\r\n                                                <a href=\"javascript:;\" class=\"btn btn-success ancsaveuserticket mr-2\"\r\n                                                    v-on:click=\"VerifyExpression\">\r\n                                                    <em class=\"fa fa-check pr-2\"></em>Verify</a>\r\n                                                <a href=\"javascript:;\" class=\"btn btn-danger ancsaveuserticket\"\r\n                                                    v-on:click=\"ResetExpression\">\r\n                                                    <em class=\"fa fa-refresh pr-2\"></em>Reset</a>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-lg-4 mb-0 float-left px-3\">\r\n                                <div class=\"heading-border mb-4\">\r\n                                    <h5 class=\"h5\">\r\n                                        <span class=\"spngropuname\">\r\n                                            {{ $t('Columns') }}\r\n                                            <div class=\"w3-container w3-border w3-large\"></div>\r\n                                        </span>\r\n                                    </h5>\r\n                                </div>\r\n                                <div class=\"mb-0 d-lg-block p-2 border\">\r\n                                    <div class=\"input-group customsearchbox\">\r\n                                        <input type=\"text\" maxlength=\"50\" v-on:keyup=\"ListFiltering\" id=\"searchinput\"\r\n                                            v-model=\"MainSearchmodel\" placeholder=\"Search by Name\"\r\n                                            class=\"form-control searchcustomfilter border-right-0\" autocomplete=\"off\">\r\n                                        <div class=\"input-group-append\">\r\n                                            <span class=\"input-group-text bg-transparent bg-white border-left-0\">\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"accordion md-accordion left-filter\" id=\"accordionEx\">\r\n                                    <div class=\"card-panel\" style=\"border-top:1px solid #c7c7c7;\">\r\n                                        <div class=\"card\" v-for=\"(name, index) in JsonColumns\" :key=\"index\">\r\n                                            <div class=\"card-header\" role=\"tab\" :id=\"'MainColumn' + index\">\r\n                                                <h5 class=\"mb-0\"><a data-toggle=\"collapse\" data-parent=\"#accordionEx\"\r\n                                                        :href=\"'#ColumnCollapse' + index\" aria-expanded=\"false\"\r\n                                                        :aria-controls=\"'ColumnCollapse' + index\" class=\"\"><em\r\n                                                            class=\"fa fa fa-file-text-o\" aria-hidden=\"true\"></em><span\r\n                                                            class=\"font-weight-bold\">\r\n                                                            {{ GetLocalizedValue(name.SubModule) }}</span><em\r\n                                                            class=\"fa fa-angle-down rotate-icon\"\r\n                                                            aria-hidden=\"true\"></em></a>\r\n                                                </h5>\r\n                                            </div>\r\n                                            <div :id=\"'ColumnCollapse' + index\" class=\"collapse multi-collapse column-collapse\"\r\n                                                role=\"tabpanel\" :aria-labelledby=\"'MainColumn' + index\"\r\n                                                data-parent=\"#accordionEx\">\r\n                                                <div class=\"card-body p-0 customScrollForLeftBar llt\"\r\n                                                    style=\"max-height:300px;\">\r\n                                                    <div class=\"form-group\">\r\n                                                        <ul class=\"nav nav-pills flex-column left-tab responivecustomtab lefttabiconfix\"\r\n                                                            style=\"max-height: 305px; overflow: auto; display: block;\">\r\n                                                            <template\r\n                                                                v-for=\"element in searchColumnfilter.length == 0 ? modulelisting[index] : searchColumnfilter[index]\" >\r\n                                                                <li class=\"nav-item parent-element\">\r\n                                                                    <span class=\"nav-link left-menu px-4 \">\r\n                                                                        <em :class=\"element.dttype[0].icon + ' ' + 'float-left'\"\r\n                                                                            aria-hidden=\"true\"></em>\r\n                                                                        <span class=\"text-truncate float-left\"\r\n                                                                            style=\"width: 55%;\"\r\n                                                                            :data-toggle-tooltip=\"element.FieldName\"\r\n                                                                            :title=\"element.FieldName\">\r\n                                                                            {{ GetLocalizedValue((element.DisplayName !=\r\n                                                                                null &&\r\n                                                                                element.DisplayName != \"\") ?\r\n                                                                                element.DisplayName : element.FieldName) }}\r\n                                                                        </span>\r\n                                                                        <a href=\"#\"><em\r\n                                                                                class=\"fa fa-plus float-right mt-1 text-success pr-0\"\r\n                                                                                aria-hidden=\"true\"\r\n                                                                                @click=\"Addfields(element, $event, index)\"></em></a>\r\n                                                                    </span>\r\n                                                                </li>\r\n                                                            </template>\r\n                                                        </ul>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div v-if=\"SearchNoRecord\"\r\n                                    class=\"text-center text-danger d-flex align-items-center justify-content-center norecs pt-2\">\r\n                                    {{\r\n                                        $t(\"NoRecordfound\") }}</div>\r\n                            </div>\r\n                        </div>\r\n                    </div> -->\r\n                            <!-- <div class=\"col-12 mt-3\">\r\n                            <div class=\"row flex-row-reverse\">\r\n                                <div class=\"col-lg-6 text-right\">\r\n                                        <button class=\"btn btn-success mr-2 my-sm-0 disabled\" id=\"Submitbtn\"\r\n                                            v-on:click=\"SubmitExpression\">\r\n                                            <span class=\"fa fa-floppy-o pl-2 pr-2\"></span>{{ $t(\"Submit\") }}\r\n                                        </button>\r\n                                        <button class=\"btn btn-primary delete-btn mr-2 my-sm-0\" v-on:click=\"CancelExpressionUI\">\r\n                                        <span class=\"fa fa-times pl-2 pr-2\"></span>{{ $t(\"Cancel\") }}\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div> -->\r\n                    </template>\r\n                </dynamic-form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div></template>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./modalCalculatedFieldUI.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./modalCalculatedFieldUI.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./modalCalculatedFieldUI.vue?vue&type=template&id=1129ee99&\"\nimport script from \"./modalCalculatedFieldUI.vue?vue&type=script&lang=js&\"\nexport * from \"./modalCalculatedFieldUI.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<script>\r\nimport DataReportService from \"@/services/DataService\";\r\nimport draggable from \"vuedraggable\";\r\nimport ReportPreview from '../Add_Report/ReportPreview.vue';\r\nimport CalculatedUI from \"../../../components/Common/Modal/modalCalculatedFieldUI.vue\";\r\nimport moment from 'moment'\r\n\r\nexport default {\r\n    components: {\r\n        draggable, ReportPreview, CalculatedUI\r\n    },\r\n    data() {\r\n        return {\r\n            isLoading: false,\r\n            modulelisting: [],\r\n            modulelistingforfilter: [],\r\n            showModuleListForField: true,\r\n            showModuleListForFilter: false,\r\n            reqFrom: 'Reporting',\r\n            submodulecode: null,\r\n            modulename: null,\r\n            maindiv: \"col-6 pl-0 float-left\",\r\n            expandcollapsediv: \"bottom_filter_button\",\r\n            showdiv: \"mb-0 d-none\",\r\n            fielddata: [],\r\n            Grouplist: [],\r\n            Columnlist: [],\r\n            Filterlist: [],\r\n            viewId: null,\r\n            ReportName: null,\r\n            fieldpan: 'col-6 p-0 float-left',\r\n            modulelistingmodel: null,\r\n            customreportparameters: null,\r\n            tempreportid: null,\r\n            saveclass: \"card d-none\",\r\n            editclass: \"card\",\r\n            savereportname: '',\r\n            Showsettingsview: false,\r\n            showdiv1: false,\r\n            dateformate: [],\r\n            GetOperator: [],\r\n            customField: null,\r\n            dragcount: 1,\r\n            templates: ['Match Any Value', 'Match All Value'],\r\n            category: 'Match All Value',\r\n            ReportPreviewListing: [],\r\n            previewdata: [],\r\n            itemclass: 'd-none',\r\n            Groupsearchmodel: '',\r\n            ColumnSearchmodel: '',\r\n            MainSearchmodel: '',\r\n            //filtergroup: [],\r\n            submodulename: [],\r\n            submodulecodename: [],\r\n            test1: [],\r\n            PageNumber: 1,\r\n            PAGESIZE: 10,\r\n            selectvalue: '',\r\n            selecteddatatype: '',\r\n            texttypevalue1: false,\r\n            numbertypevalue1: false,\r\n            datetypevalue1: false,\r\n            datetypevalue2: false,\r\n            timetypevalue: false,\r\n            timetypevalue2: false,\r\n            multiselectvalue: false,\r\n            numbertypevalue2: false,\r\n            texttypevalue2: false,\r\n            savedOperatorName: null,\r\n            drag: false,\r\n            GetDateFromDB: [],\r\n            modeldisplayname: null,\r\n            modeldateformat: '',\r\n            modeldecimalplaces: null,\r\n            modeluseseparator: null,\r\n            modelusecurrency: null,\r\n            FilterCount: 1,\r\n            valueTypeText: '',\r\n            valueTypeNumber: '',\r\n            valueTypeNumber2: '',\r\n            valueTypeFirstdate: '',\r\n            valueTypeSeconddate: '',\r\n            Displaymultiplevalue: '',\r\n            displayvalue2: '',\r\n            ValueDisplaytext: '',\r\n            ValueDisplaytext2: '',\r\n            ValueDisplaynumber: '',\r\n            ValueDisplaynumber2: '',\r\n            ValueDisplaydate: '',\r\n            ValueDisplaydate2: '',\r\n            modeldaterange: '',\r\n            ValueDisplayTime: '',\r\n            ValueDisplayTime2: '',\r\n            selectedvalue: '',\r\n            RequestFilterJosn: [],\r\n            CurrentOperatorSelected: null,\r\n            filtertype: null,\r\n            operator_id: null,\r\n            mode: 'tags',\r\n            dropdwonvalues: [],\r\n            options: [],\r\n            searchable: true,\r\n            createOption: true,\r\n            SelectedoperatorMappedDatatype: '',\r\n            commaSepratedSelectedValues: '',\r\n            selectedOPValue: '',\r\n            GraphJson: [],\r\n            sortingArray: null,\r\n            graphData: null,\r\n            showReportPreview: false,\r\n            editjsondata: false,\r\n            valueKey: '',\r\n            valuekey2: '',\r\n            FirstOperand: '',\r\n            FirstOperandValue1: '',\r\n            SecondOperand: '',\r\n            SecondOperandValue1: '',\r\n            Datatype: '',\r\n            operator: '',\r\n            DisplayName: '',\r\n            showcalculatedUI: false,\r\n            CheckExpressionFeild: false,\r\n            ExpressionArray: [],\r\n            ExpressionFieldsArray: [],\r\n            saveJsonReport: [],\r\n            editexpressionvalue: false,\r\n            CalculatedUIEnabled: false,\r\n            searchColumnfilter: [],\r\n            LevelOfGrouping: null,\r\n            ExpFieldDataArray: [],\r\n            ExpDataArray: [],\r\n            setvalue: 0,\r\n            ChartGroupingArray: [],\r\n            GroupingArray: [],\r\n            PdfJsonReport: [],\r\n            FilterActiveForMandatory: false,\r\n            SearchNoRecord: false,\r\n            IsMandatoryforFilterAfterReset: false,\r\n            ArrayforFilterpopup: [],\r\n            modelFilterDDLValue: '',\r\n            DDLForFilter: false,\r\n            DDLForDateRange: false,\r\n            selctRuleForFilter: '',\r\n            IsForPreview: 1,\r\n            IsDDLValueInFilter: false,\r\n            GetSubModuleList: [],\r\n            showRowLevelFunction:false,\r\n            sortingresetvalue:false,\r\n            AlreadyExistExpression:{},\r\n            ColumnlistArray:[],\r\n            DateRangeData:[],\r\n            GetSelectedValue:'',\r\n            FormSchema:[\r\n                {\r\n                layoutType: \"single\",\r\n                Data: [ \r\n                        {\r\n                            astype: \"MultiSelectField\",\r\n                            label: '',\r\n                            name: \"Select\",\r\n                            value: \"\",\r\n                            mode:\"tag\",\r\n                            placeholder: \"Select\",\r\n                            config: {\r\n                                options: [],\r\n                                showAddIcon: false,\r\n                            },\r\n                            validationRules: \"\",\r\n                        },\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    },\r\n    created: async function () {\r\n        var vm = this;\r\n        $(\".fade\").addClass(\"show\");\r\n        if (this.$route.params.Modulename != undefined) {\r\n            vm.customreportparameters = this.$route.params;\r\n            vm.storeParameters();\r\n        } else { vm.GetStoredParameters(); }\r\n        await vm.GetList(vm.customreportparameters);\r\n        if (vm.customreportparameters.ReportID != null || vm.customreportparameters.ReportID != undefined) {\r\n            await vm.GetReportDetailsByReportId();\r\n            if (vm.IsDDLValueInFilter) {\r\n                setTimeout(function () {\r\n                    vm.showReportPreview = true;\r\n                }, 1000)\r\n            } else { vm.showReportPreview = true; }\r\n        }\r\n        vm.filterRulechange();\r\n    },\r\n    computed: {\r\n        filtergroup() {\r\n            var vm = this;\r\n            return vm.Columnlist.filter(item => {\r\n                var displayname = (item.DisplayName != null) ? item.DisplayName : item.FieldName;\r\n                return displayname.replace(/\\W/g, \"\").toLowerCase().includes(vm.Groupsearchmodel.replace(/\\W/g, \"\").toLowerCase());\r\n            })\r\n        },\r\n        filterColumngroup() {\r\n            var vm = this;\r\n            var searchColumn = [];\r\n            var searchfilter = [];\r\n            var GetSubModuleName = null;\r\n            vm.modulelisting.forEach((item, index) => {\r\n                vm.modulelisting[index].forEach((indexitem) => {\r\n                    searchfilter.push(indexitem);\r\n                    searchColumn = searchfilter.filter(searchitem => {\r\n                        var displaycolname = (searchitem.DisplayName != null) ? searchitem.DisplayName : searchitem.FieldName;\r\n                        return displaycolname.replace(/\\W/g, \"\").toLowerCase().includes(vm.ColumnSearchmodel.replace(/\\W/g, \"\").toLowerCase());\r\n                    })\r\n                    searchColumn.forEach(SearchItem => {\r\n                        GetSubModuleName = vm.modulelisting[index].find(x => x.CustomFieldId === SearchItem.CustomFieldId)\r\n                        if (GetSubModuleName != undefined) {\r\n                            GetSubModuleName.MainFieldname = vm.submodulename[index];\r\n                        }\r\n                    })\r\n                })\r\n            })\r\n            return searchColumn;\r\n        }\r\n    },\r\n    methods: {\r\n        storeParameters() {\r\n            var vm = this;\r\n            localStorage.setItem(\"SavedParameters\", JSON.stringify(vm.customreportparameters));\r\n        },\r\n        GetStoredParameters() {\r\n            var vm = this;\r\n            vm.customreportparameters = JSON.parse(localStorage.getItem(\"SavedParameters\"));\r\n        },\r\n        async GetFilterSelectDDL(CustomFieldId) {\r\n            var vm = this;\r\n            vm.options = [];\r\n            var Getddldata = [];\r\n            // vm.isLoading = false;\r\n            // if (vm.operator_id == 10 || vm.operator_id == 27) {\r\n            //     vm.isLoading = true;\r\n            // }\r\n            vm.isLoading = true;\r\n            await DataReportService.GetFilterDDLselectvalue(CustomFieldId).then(response => {\r\n                if (response.data.length > 0) {\r\n                    // vm.options = response.data.map(item => {\r\n                    //     return item.name != undefined ? item.name : item[FieldName]\r\n                    // });\r\n                    vm.FormSchema[0].Data[0].config.options = [];\r\n                    Getddldata = response.data;\r\n                    Getddldata.forEach(ddlitem => {\r\n                        vm.options.push({\r\n                            value: ddlitem.value,\r\n                            name: ddlitem.name\r\n                        })\r\n                    })\r\n                    vm.FormSchema[0].Data[0].config.options = vm.options;\r\n                    vm.isLoading = false;\r\n                } else { vm.isLoading = false; }\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n        },\r\n        async GetDateRangeFilterDDL(){\r\n            var vm = this;\r\n            await DataReportService.GetDateRangeFilterDDL().then(response=>{\r\n                vm.DateRangeData = JSON.parse(response.data[0].Value).Data;\r\n            })\r\n        },\r\n        async GetReportDetailsByReportId() {\r\n            var vm = this;\r\n            vm.isLoading = true;\r\n            var params = `ReportId=${vm.customreportparameters.ReportID}&IsPaged=1`;\r\n            await DataReportService.GetReportDetailsbyId(params).then(async response => {\r\n                var checkfields = [];\r\n                if (response.data != null && response.data != undefined && response.data != '') {\r\n                    checkfields = response.data.JSON_To_Create_ReportListing[0].Info.FIELDS;\r\n                }\r\n                if (response.data != null && response.data != undefined && response.data != '' && checkfields.length != 0) {\r\n                    vm.BindFeilds(response.data.JSON_To_Create_ReportListing[0].Info.FIELDS);\r\n                    await vm.BindFilters(response.data.JSON_To_Create_ReportListing[0].Info.FILTERS);\r\n                    vm.BindGROUP(response.data.JSON_To_Create_ReportListing[0].Info.GROUP);\r\n                    vm.sortingArray = response.data.JSON_To_Create_ReportListing[0].Info.SORTING\r\n                    vm.graphData = response.data.JSON_To_Create_ReportListing[0].Info.GRAPH;\r\n                    vm.ExpressionArray = response.data.JSON_To_Create_ReportListing[0].Info.EXPRESSION;\r\n                    vm.ExpressionFieldsArray = response.data.JSON_To_Create_ReportListing[0].Info.EXPRESSIONFIELDSARRAY;\r\n                    vm.editexpressionvalue = true;\r\n                    if (response.data.ReportListing == 1) {\r\n                        vm.editjsondata = true;\r\n                        vm.saveJsonReport = response.data.JSON_To_Create_ReportListing[0];\r\n                        vm.PdfJsonReport = response.data.JSON_To_Create_ReportListing[0];\r\n                    }\r\n                } else {\r\n                    if (checkfields.length == 0) {\r\n                        vm.CheckIsMandartoryForFilter();\r\n                    }\r\n                    vm.isLoading = false;\r\n                }\r\n            }).catch(err => {\r\n                console.log(err);\r\n            })\r\n        },\r\n        BindFeilds(FIELDS) {\r\n            var vm = this;\r\n            FIELDS.forEach((item) => {\r\n                vm.Columnlist.push(item);\r\n                vm.modulelisting.forEach((mitem, index) => {\r\n                    let indexFound = vm.modulelisting[index].findIndex(element => { return element.CustomFieldId === item.CustomFieldId })\r\n                    if (indexFound != -1) {\r\n                        vm.modulelisting[index].splice(indexFound, 1);\r\n                    }\r\n                })\r\n            })\r\n            if (vm.Columnlist.length > 0) {\r\n                vm.CalculatedUIEnabled = true;\r\n            }\r\n        },\r\n        bindpouupvaluefordatetime(item) {\r\n            var vm = this;\r\n            if (item.ColumnFieldDataCode == 'datetime' || item.ColumnFieldDataCode == 'date') {\r\n                if (item.operator_display_name == 'Between') {\r\n                    vm.valueKey = 'valueTypeFirstdate'\r\n                    vm.valuekey2 = 'valueTypeSeconddate'\r\n                }\r\n                else if(item.operator_display_name == 'Date Range'){\r\n                    vm.valueKey = 'DateRangeValue'\r\n                }\r\n                else {\r\n                    vm.valueKey = 'valueTypeFirstdate'\r\n                }\r\n            }\r\n            if (item.ColumnFieldDataCode == 'time') {\r\n                if (item.operator_display_name == 'Between') {\r\n                    vm.valueKey = 'ValueDisplayFirstTime'\r\n                    vm.valuekey2 = 'ValueDisplaySecondTime'\r\n                }\r\n                else {\r\n                    vm.valueKey = 'ValueDisplayFirstTime'\r\n                }\r\n            }\r\n        },\r\n        bindfilterdata(FILTERS) {\r\n            var vm = this;\r\n            vm.Filterlist = FILTERS.map((item, index) => {\r\n                var GetDDLValueinEdit = '';\r\n                var GetDDLTempVal = '';\r\n                if (item.ColumnFieldDataCode == 'select' && item.PickListOption == 'Lookup') {\r\n                    var GetDDLValueinEditArr = [];\r\n                    if (item.OperatorExpression.includes('IN') || item.OperatorExpression.includes('NOT IN')) {\r\n                        var GetDDLValueinEditMulti = [];\r\n                        GetDDLValueinEditArr = item.Value1.split(',');\r\n                        GetDDLValueinEditArr.forEach(DDLEditItem => {\r\n                            GetDDLValueinEdit = vm.options.find(i => i.value === DDLEditItem.replace(/\"|'/g, ''))\r\n                            GetDDLValueinEditMulti.push(GetDDLValueinEdit.name);\r\n                        })\r\n                        GetDDLTempVal = GetDDLValueinEditMulti?.join();\r\n                        vm.valueKey = 'Displaymultiplevalue';\r\n                    }\r\n                    else {\r\n                        GetDDLValueinEdit = vm.options.find(i => i.value === item.Value1);\r\n                        GetDDLTempVal = GetDDLValueinEdit?.name;\r\n                        vm.valueKey = 'DropDownValue';\r\n                    }\r\n                }\r\n                else if (item.ColumnFieldDataCode == 'decimal' || item.ColumnFieldDataCode == 'bigint' || item.ColumnFieldDataCode == 'int') {\r\n                    if (item.operator_display_name == 'Between') {\r\n                        vm.valueKey = 'valueTypeNumber';\r\n                        vm.valuekey2 = 'valueTypeNumber2';\r\n                    }\r\n                    else {\r\n                        vm.valueKey = 'valueTypeNumber';\r\n                    }\r\n                }\r\n                else if (item.ColumnFieldDataCode == 'string') {\r\n                    if (item.OperatorExpression.includes('IN') || item.OperatorExpression.includes('NOT IN')) {\r\n                        vm.valueKey = 'valueTypeText';\r\n                        vm.valuekey2 = 'valueTypeText2';\r\n                    } else { vm.valueKey = 'valueTypeText' };\r\n                }\r\n                vm.bindpouupvaluefordatetime(item);\r\n                let moduleIndex = vm.modulelistingforfilter.findIndex(moduleItem => {\r\n                    return moduleItem.find(field => {\r\n                        return field.CustomFieldId == item.CustomFieldId\r\n                    })\r\n                })\r\n                let indexFound = vm.modulelistingforfilter[moduleIndex].findIndex(field => { return field.CustomFieldId == item.CustomFieldId })\r\n                let returnObject = {}\r\n                if (indexFound != -1) {\r\n                    returnObject = {\r\n                        FieldName: vm.modulelistingforfilter[moduleIndex][indexFound].FieldName,\r\n                        CustomFieldId: item.CustomFieldId,\r\n                        ModuleIndex: moduleIndex,\r\n                        ActualDataType: item.ActualDataType,\r\n                        FilterCount: index + 1,\r\n                        FilterTypeAndorOr: vm.filtertype,\r\n                        OPERATOR_ID: item.OPERATOR_ID,\r\n                        OperatorDisplayName: item.operator_display_name,\r\n                        IsMandatoryforFilter: item.IsMandatoryforFilter,\r\n                        FieldIcons: item.FieldIcons,\r\n                        DisplayName: item.DisplayName,\r\n                        ColumnFieldDataCode: item.ColumnFieldDataCode,\r\n                        PickListOption: item.PickListOption,\r\n                        Calculated_Field: false\r\n                    }\r\n                    returnObject[vm.valuekey2] = item.Value2;\r\n                    returnObject[vm.valueKey] = GetDDLTempVal == '' ? item.Value1.replace(/\"|'/g, '') : GetDDLTempVal;\r\n                    vm.modulelistingforfilter[moduleIndex].splice(indexFound, 1);\r\n                }\r\n                return returnObject;\r\n            })\r\n        },\r\n        CheckforIncludeDataMatchesForFilter() {\r\n            var vm = this;\r\n            if (vm.filtertype == 'AND') {\r\n                vm.category = 'Match All Value';\r\n            } else {\r\n                vm.category = 'Match Any Value'\r\n            }\r\n        },\r\n        BindFilters: async function (FILTERS) {\r\n            var vm = this;\r\n            if (FILTERS.length > 0) {\r\n                FILTERS.map(async (item, index) => {\r\n                    if (item.ColumnFieldDataCode == 'select' && item.PickListOption == 'Lookup') {\r\n                        vm.IsDDLValueInFilter = true;\r\n                        await vm.GetFilterSelectDDL(item.CustomFieldId);\r\n                    }\r\n                    else if((item.ColumnFieldDataCode == 'datetime' || item.ColumnFieldDataCode == 'date') && item.operator_display_name == 'Date Range'){\r\n                        vm.IsDDLValueInFilter = true;\r\n                        await vm.GetDateRangeFilterDDL();\r\n                    }\r\n                })\r\n                if (vm.IsDDLValueInFilter) {\r\n                    setTimeout(function () {\r\n                        vm.filtertype = FILTERS[0].FilterTypeAndorOr;\r\n                        vm.CheckforIncludeDataMatchesForFilter();\r\n                        vm.bindfilterdata(FILTERS);\r\n                        vm.RequestFilterJosn = FILTERS.map((item, index) => {\r\n                            let indexFound = vm.Filterlist.findIndex(field => { return field.CustomFieldId == item.CustomFieldId })\r\n                            let returnObject = {}\r\n                            if (indexFound != -1) {\r\n                                returnObject = {\r\n                                    CustomFieldId: item.CustomFieldId,\r\n                                    FieldName: vm.Filterlist[indexFound].FieldName,\r\n                                    ActualDataType: item.ActualDataType,\r\n                                    FilterCount: index + 1,\r\n                                    OperatorExpression: item.OperatorExpression,\r\n                                    FilterTypeAndorOr: item.FilterTypeAndorOr,\r\n                                    OPERATOR_ID: item.OPERATOR_ID,\r\n                                    Value1: item.Value1,\r\n                                    Value2: item.Value2,\r\n                                    ColumnFieldDataCode: item.ColumnFieldDataCode,\r\n                                    FieldIcons: item.FieldIcons,\r\n                                    PickListOption: item.PickListOption\r\n                                }\r\n                            }\r\n                            return returnObject;\r\n                        })\r\n                    }, 1000)\r\n                }\r\n                else {\r\n                    vm.filtertype = FILTERS[0].FilterTypeAndorOr;\r\n                    vm.CheckforIncludeDataMatchesForFilter();\r\n                    vm.bindfilterdata(FILTERS);\r\n                    vm.RequestFilterJosn = FILTERS.map((item, index) => {\r\n                        let indexFound = vm.Filterlist.findIndex(field => { return field.CustomFieldId == item.CustomFieldId })\r\n                        let returnObject = {}\r\n                        if (indexFound != -1) {\r\n                            returnObject = {\r\n                                CustomFieldId: item.CustomFieldId,\r\n                                FieldName: vm.Filterlist[indexFound].FieldName,\r\n                                ActualDataType: item.ActualDataType,\r\n                                FilterCount: index + 1,\r\n                                OperatorExpression: item.OperatorExpression,\r\n                                FilterTypeAndorOr: item.FilterTypeAndorOr,\r\n                                OPERATOR_ID: item.OPERATOR_ID,\r\n                                Value1: item.Value1,\r\n                                Value2: item.Value2,\r\n                                ColumnFieldDataCode: item.ColumnFieldDataCode,\r\n                                FieldIcons: item.FieldIcons,\r\n                                PickListOption: item.PickListOption\r\n                            }\r\n                        }\r\n                        return returnObject;\r\n                    })\r\n                }\r\n            }\r\n        },\r\n        BindGROUP(GROUP) {\r\n            var vm = this;\r\n            vm.Grouplist = [];\r\n            GROUP.forEach((item) => {\r\n                var checkforvalue = vm.Columnlist.find(x=> x.CustomFieldId === item.CustomFieldId);\r\n                item.ColumnFieldDataCode = checkforvalue.ColumnFieldDataCode;\r\n                vm.Grouplist.push(item);\r\n            })\r\n        },\r\n        openSetting: function (element, event) {\r\n            var vm = this;\r\n            if (element.Calculated_Field) {\r\n                vm.showcalculatedUI = true;\r\n                vm.editexpressionvalue = true;\r\n                vm.AlreadyExistExpression = {};\r\n                if (vm.ExpressionFieldsArray.length > 0 || vm.ExpressionArray.length > 0) {\r\n                    let expIndex = -1;\r\n                    vm.ExpDataArray = [];\r\n                    vm.ExpFieldDataArray = [];\r\n                    for (var i = 0; i <= vm.ExpressionArray.length; i++) {\r\n                        if (vm.ExpressionArray[i].ColumnIndex === element.ModuleIndex) {\r\n                            vm.ExpDataArray.push(vm.ExpressionArray.find(x => x.ColumnIndex === element.ModuleIndex))\r\n                            break;\r\n                        }\r\n                    }\r\n                    vm.ExpressionFieldsArray.forEach(item => {\r\n                        var temparr = [];\r\n                        temparr.push(item);\r\n                        var checkexpfieldvalue = temparr.find(x => x.ColumnIndex === element.ModuleIndex);\r\n                        if (checkexpfieldvalue != undefined) {\r\n                            vm.ExpFieldDataArray.push(checkexpfieldvalue);\r\n                        }\r\n                    })\r\n                }\r\n                $(\"#showcalculatedfield\").modal(\"show\");\r\n                setTimeout(function () {\r\n                    $(\"#showcalculatedfield\").modal('show');\r\n                    setTimeout(function () {\r\n                        vm.SetBootstraptoolTip();\r\n                    }, 200);\r\n                }, 1000);\r\n                if (vm.editexpressionvalue) {\r\n                    vm.AlreadyExistExpression = element;\r\n                    vm.$refs.Calculated?.ExpresssionDataValue(vm.ExpDataArray, vm.ExpFieldDataArray);\r\n                }\r\n            } else {\r\n                vm.modeldisplayname = vm.GetLocalizedValue(element.DisplayName != null && element.DisplayName != '' ? element.DisplayName : element.FieldName);\r\n                vm.modeldateformat = element.DateFormat;\r\n                vm.modeldecimalplaces = element.DecimalPlace;\r\n                vm.modeluseseparator = element.IsUseSeprator;\r\n                vm.modelusecurrency = element.IsCurrencySymbol;\r\n                $(\".setting-div-box\").width('0px');\r\n                $(event.target).closest(\".parentdiv\").find(\".setting-div-box\").width('500px');\r\n                vm.GetDateFromDetail();\r\n            }\r\n         \r\n        },\r\n        CloseSetting: function (event) {\r\n            var vm = this;\r\n            vm.modeldisplayname = null;\r\n            vm.modeldateformat = '';\r\n            vm.modeldecimalplaces = null;\r\n            vm.modeluseseparator = null;\r\n            vm.modelusecurrency = null;\r\n            $(event.target).closest(\".setting-div-box\").width('0px');\r\n        },\r\n        ClosePopFilter: function () {\r\n            var vm = this;\r\n            $(\".filter-list-box\").width('0px').css(\"overflow\", \"hidden\");\r\n            vm.texttypevalue1 = false;\r\n            vm.numbertypevalue1 = false;\r\n            vm.datetypevalue1 = false;\r\n            vm.datetypevalue2 = false;\r\n            vm.multiselectvalue = false;\r\n            vm.numbertypevalue2 = false;\r\n            vm.texttypevalue2 = false;\r\n            vm.DDLForFilter = false;\r\n            vm.DDLForDateRange = false;\r\n            vm.timetypevalue = false;\r\n            vm.timetypevalue2 = false;\r\n            vm.ValueDisplaytext = '';\r\n            vm.ValueDisplaytext2 = '';\r\n            vm.ValueDisplaynumber = '';\r\n            vm.ValueDisplaynumber2 = '';\r\n            vm.ValueDisplaydate = '';\r\n            vm.ValueDisplaydate2 = '';\r\n            vm.modeldaterange = '';\r\n            vm.ValueDisplayTime = '';\r\n            vm.ValueDisplayTime2 = '';\r\n            vm.Displaymultiplevalue = '';\r\n            vm.dropdwonvalues = [];\r\n            vm.FormSchema[0].Data[0].value= [];\r\n            vm.modelFilterDDLValue = '';\r\n            vm.SecondOperand = '';\r\n            vm.SecondOperandValue1 = '';\r\n        },\r\n        CheckFeildOrFilter() {\r\n            var vm = this;\r\n            let isFieldsActive = vm.$refs.FIELDS.active\r\n            if (isFieldsActive) {\r\n                return 'FIELD'\r\n            }\r\n            else {\r\n                return 'Filters';\r\n            }\r\n        },\r\n        GetList: async function (customreportparameters) {\r\n            var vm = this;\r\n            if (customreportparameters.Modulename != undefined && customreportparameters.Submodulecode != undefined && customreportparameters.ReportName != null) {\r\n                var params = `moduleName=${customreportparameters.Modulename}&subModuleCode=${customreportparameters.Submodulecode}&viewId&reqFrom=${vm.reqFrom}`;\r\n                await DataReportService.GetListFields(params).then(response => {\r\n                    vm.submodulecodename = response.data.AVAILABLE_FIELDS[0];\r\n                    vm.submodulecodename.forEach((item) => {\r\n                        vm.submodulename.push(item.SubModule);\r\n                        vm.modulelisting.push([...item.CustomFields.sort((FirstValue, SecondValue) => FirstValue.DisplayName.localeCompare(SecondValue.DisplayName))]);\r\n                        vm.modulelistingforfilter.push([...item.CustomFields.sort((FirstValue, SecondValue) => FirstValue.DisplayName.localeCompare(SecondValue.DisplayName))]);\r\n                        vm.GetSubModuleList.push([...item.CustomFields]);\r\n                    })\r\n                    if (customreportparameters.NewReportInserted == \"Save\" && customreportparameters.ReportID != undefined || vm.IsMandatoryforFilterAfterReset) {\r\n                        vm.CheckIsMandartoryForFilter();\r\n                    }\r\n                    setTimeout(function () {\r\n                        vm.SetScrolbar('dark-thick', '', 'customScrollForLeftBar')\r\n                    }, 1000);\r\n                }).catch(err => { console.log(err); })\r\n                vm.submodulecode = customreportparameters.Submodulecode;\r\n                vm.ReportName = customreportparameters.ReportName;\r\n            }\r\n        },\r\n        CheckIsMandartoryForFilter: function () {\r\n            var vm = this;\r\n            vm.modulelisting.forEach((Fields, index) => {\r\n                vm.modulelisting[index].forEach(Fieldsitem => {\r\n                    if (Fieldsitem.IsMandatoryforFilter) {\r\n                        var CheckFields = vm.modulelisting[index].find(x => x.CustomFieldId === Fieldsitem.CustomFieldId)\r\n                        if (CheckFields.ActualDataType == \"datetime\") {\r\n                            vm.FilterActiveForMandatory = true;\r\n                            vm.SelectedoperatorMappedDatatype = CheckFields.dttype[0].DataTypeCode;\r\n                            vm.ValueDisplaydate = moment(moment().subtract(30, 'days')).format(\"YYYY-MM-DD\");\r\n                            // var date = new Date(); // Now\r\n                            // date.setDate(date.getDate() - 30); // Set now - 30 days as the new date\r\n                            // vm.ValueDisplaydate = date;\r\n                            vm.savedOperatorName = \"Greater Than\";\r\n                            vm.CurrentOperatorSelected = '>';\r\n                            vm.operator_id = 1;\r\n                            vm.AddFilter(CheckFields, index);\r\n                            vm.applySetting(CheckFields.CustomFieldId);\r\n                        }\r\n                    }\r\n                })\r\n            })\r\n        },\r\n        collapsedclick: function () {\r\n            var vm = this\r\n            vm.maindiv = \"col-6 pl-0 float-left d-none\";\r\n            vm.showdiv = \"mb-0\";\r\n            vm.fieldpan = 'col-6 p-0 float-left leftpancollapse col-11'\r\n        },\r\n        expandclick: function () {\r\n            var vm = this\r\n            vm.maindiv = \"col-6 pl-0 float-left \";\r\n            vm.showdiv = \"mb-0 d-none\";\r\n            vm.fieldpan = 'col-6 p-0 float-left';\r\n        },\r\n        editreport: function () {\r\n            var vm = this;\r\n            vm.editclass = \"card d-none\";\r\n            vm.saveclass = \"card\";\r\n            var params = `&Report_id=${vm.customreportparameters.ReportID}`;\r\n            DataReportService.Editdyanmicreport(params).then(response => {\r\n                vm.savereportname = response.data.ReportName;\r\n            }).catch(err => { console.log(err); })\r\n        },\r\n        savereport: function () {\r\n            var vm = this;\r\n            if(vm.savereportname.length > 100){\r\n                vm.ShowAlert(vm.$t(\"You can not enter more than 100 characters.\"), 'warning', true, vm.$t('Alert'));\r\n                return false;\r\n            }\r\n            vm.editclass = \"card\";\r\n            vm.saveclass = \"card d-none\";\r\n            var params = `ReportName=${vm.savereportname}&Report_Id=${vm.customreportparameters.ReportID}&Folder_Id=${vm.customreportparameters.Folder_Id}&Module_Id=${vm.customreportparameters.Module_Id}&Sub_Module_Id=${vm.customreportparameters.Sub_Module_Id}&Ref_Code=${vm.customreportparameters.Submodulecode}&Version=${vm.customreportparameters.Version}`;\r\n            DataReportService.AddDynamicreport(params).then(response => {\r\n                if (response.data[0].Status == 'Update') {\r\n                    vm.ShowAlert(vm.$t(\"UpdatedSuccess\", [vm.$t(\"ReportName\")]), 'success', true, vm.$t('Alert'));\r\n                    vm.ReportName = vm.savereportname;\r\n                } else if (response.data[0].Status == 'Exists') {\r\n                    vm.savereportname = '';\r\n                    vm.ShowAlert(vm.$t(\"AlreadyExists\", [vm.$t(\"ReportName\")]), 'failure', true, vm.$t('Alert'));\r\n                } else {\r\n                    vm.savereportname = '';\r\n                    vm.ShowAlert(vm.$t(\"SaveError\", [vm.$t(\"ReportName\")]), 'failure', true, vm.$t('Alert'));\r\n                }\r\n            }).catch(err => { console.log(err); })       \r\n        },\r\n        PreviewJson: async function (sortColummnarray, BindGraph, GraphDataValue) {\r\n            var vm = this;\r\n            let CheckSameNameExist = vm.MatchIfSameNameExist();\r\n            if(CheckSameNameExist){\r\n                vm.ShowAlert('Same Display Name ' + ' \"' + CheckSameNameExist + '\" ' + ' is Exist Mutiple Times Please Change', 'failure', true, vm.$t('Alert'));\r\n                return false;\r\n            }\r\n            vm.sortingArray = [];\r\n            vm.sortingresetvalue=true;\r\n            vm.isLoading = true;\r\n            let CheckValidSorting = vm.CheckForValidSorting(sortColummnarray);\r\n            if (CheckValidSorting == 0) {\r\n                for (var i in sortColummnarray) {\r\n                    if (sortColummnarray[i].sortcolummnId != undefined && sortColummnarray[i].sortcolummnId != \"\") {\r\n                        vm.sortingArray.push(\r\n                            { \"CustomFieldId\": sortColummnarray[i].sortcolummnId, \"SORTTYPE\": sortColummnarray[i].columnOrders, \"SortIndex\": parseInt(i), \"Calculated_Field\": \"\" }\r\n                        )\r\n                        vm.Columnlist.forEach(arritem => {\r\n                            var elem = vm.sortingArray.find(x => x.CustomFieldId === arritem.CustomFieldId || x.CustomFieldId === arritem.FieldName)\r\n                            if (elem != undefined) {\r\n                                elem.Calculated_Field = arritem.Calculated_Field;\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n                var temp;\r\n                if (BindGraph) {\r\n                    vm.ChartGroupingArray = [];\r\n                    vm.GroupingArray = [];\r\n                    if (GraphDataValue != undefined && GraphDataValue != '') {\r\n                        var findvaluefromcolumnlistxaxis = vm.Columnlist.find(x => x.CustomFieldId === GraphDataValue.XAxisField || x.FieldName === GraphDataValue.XAxisField);\r\n                        var findvaluefromcolumnlistyaxis = vm.Columnlist.find(x => x.CustomFieldId === GraphDataValue.YAxisField || x.FieldName === GraphDataValue.YAxisField);\r\n                        vm.ChartGroupingArray.push({\r\n                            XCustomFieldId: findvaluefromcolumnlistxaxis.CustomFieldId, XFieldName: findvaluefromcolumnlistxaxis.FieldName,\r\n                            YCustomFieldId: findvaluefromcolumnlistyaxis.CustomFieldId, YFieldName: findvaluefromcolumnlistyaxis.FieldName, AggregateFunctionType: GraphDataValue.AggregateFunctionType\r\n                        });\r\n                    }\r\n                    temp = {\r\n                        \"Info\": {\r\n                            \"REPORTID\": vm.customreportparameters.ReportID,\r\n                            \"REPORTNAME\": vm.ReportName,\r\n                            \"MODULENAME\": vm.customreportparameters.Modulename,\r\n                            \"SUBMODULECODE\": vm.customreportparameters.Submodulecode,\r\n                            \"SUBMODULEID\": vm.customreportparameters.submoduleid,\r\n                            \"PAGESIZE\": 10,\r\n                            \"PAGENUMBER\": 1,\r\n                            \"IS_PAGED\": 1,\r\n                            \"IsForPreview\": vm.IsForPreview,\r\n                            \"FIELDS\": vm.Columnlist,\r\n                            \"FILTERS\": vm.RequestFilterJosn,\r\n                            \"GROUP\": [],\r\n                            \"CHARTGROUPARRAY\": vm.ChartGroupingArray,\r\n                            \"SORTING\": vm.sortingArray,\r\n                            \"GRAPH\": [],\r\n                            \"EXPRESSION\": vm.ExpressionArray,\r\n                            \"EXPRESSIONFIELDSARRAY\": vm.ExpressionFieldsArray\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    temp = {\r\n                        \"Info\": {\r\n                            \"REPORTID\": vm.customreportparameters.ReportID,\r\n                            \"REPORTNAME\": vm.ReportName,\r\n                            \"MODULENAME\": vm.customreportparameters.Modulename,\r\n                            \"SUBMODULECODE\": vm.customreportparameters.Submodulecode,\r\n                            \"SUBMODULEID\": vm.customreportparameters.submoduleid,\r\n                            \"PAGESIZE\": 10,\r\n                            \"PAGENUMBER\": 1,\r\n                            \"IS_PAGED\": 1,\r\n                            \"IsForPreview\": vm.IsForPreview,\r\n                            \"FIELDS\": vm.Columnlist,\r\n                            \"FILTERS\": vm.RequestFilterJosn,\r\n                            \"GROUP\": vm.Grouplist,\r\n                            \"CHARTGROUPARRAY\": [],\r\n                            \"SORTING\": vm.sortingArray,\r\n                            \"GRAPH\": [],\r\n                            \"EXPRESSION\": vm.ExpressionArray,\r\n                            \"EXPRESSIONFIELDSARRAY\": vm.ExpressionFieldsArray\r\n                        }\r\n                    }\r\n                }\r\n                vm.showReportPreview = true;\r\n                vm.saveJsonReport = temp;\r\n                var jsondata = JSON.stringify(temp);\r\n                await DataReportService.PreviewReport(jsondata).then((response) => {\r\n                    var checkdata = [];\r\n                    checkdata = JSON.parse(response.data[0].Value).ListingData;\r\n                    if (checkdata != null && checkdata != undefined && checkdata.length > 0) {\r\n                        if (BindGraph) {\r\n                            vm.GraphJson = JSON.parse(response.data[0].Value);\r\n                            if (!BindGraph) {\r\n                                vm.previewdata = JSON.parse(response.data[0].Value).ListingData;\r\n                            }\r\n                        }\r\n                        else {\r\n                            vm.PdfJsonReport = temp;\r\n                            vm.previewdata = JSON.parse(response.data[0].Value).ListingData;\r\n                            vm.LevelOfGrouping = JSON.parse(response.data[0].Value).MetaData[0].LevelOfGrouping;\r\n                        }\r\n                        vm.isLoading = false;\r\n                    } else {\r\n                        vm.isLoading = false;\r\n                        vm.previewdata = [];\r\n                        if(BindGraph){\r\n                            vm.$refs.reportdata.ResetGraphData();\r\n                        }\r\n                        vm.ShowAlert(vm.$t(\"No_Record_Found\"), 'failure', true, vm.$t('Alert'));\r\n                    }\r\n                }).catch((err) => {\r\n                    console.log(\"Data not Found\");\r\n                    vm.previewdata = [];\r\n                    vm.ShowAlert(vm.$t(\"No_Record_Found\"), 'failure', true, vm.$t('Alert'));\r\n                    vm.isLoading = false;\r\n                })\r\n            } else {\r\n                vm.ShowAlert(vm.$t(\"InvalidSorting\"), 'failure', true, vm.$t('Alert'));\r\n                vm.isLoading = false;\r\n            }\r\n        },\r\n        Addfields: function (element, event, index, MainFieldname) {\r\n            var vm = this;\r\n            let isFieldActive = vm.$refs.FIELDS.active;\r\n            var ColumnDisplayOrder;\r\n            if (vm.Columnlist.length < 20) {\r\n                if (isFieldActive) {\r\n                    if (vm.Columnlist.length < 1) {\r\n                        ColumnDisplayOrder = vm.Columnlist.length\r\n                    }\r\n                    else {\r\n                        const getlastarrayvalue = vm.Columnlist[vm.Columnlist.length - 1];\r\n                        ColumnDisplayOrder = getlastarrayvalue.Display_Order + 1;\r\n                    }\r\n                    if (element.hasOwnProperty(\"dttype\")) {\r\n                        const checkAlredyExist = vm.Columnlist.findIndex(object => object.CustomFieldId === element.CustomFieldId);\r\n                        if (checkAlredyExist === -1) {\r\n                            vm.Columnlist.push({\r\n                                CustomFieldId: element.CustomFieldId, DisplayName: element.DisplayName, FieldName: element.FieldName, ModuleIndex: index, ColumnFieldDataCode: element.dttype[0].DataTypeCode, Display_Order: ColumnDisplayOrder, Calculated_Field: false, MainFieldname: MainFieldname\r\n                                , FieldIcons: element.dttype[0].icon\r\n                            });\r\n                            if (event.removed == undefined) {\r\n                                vm.modulelisting[index].splice(vm.modulelisting[index].indexOf(element), 1);\r\n                            }\r\n                        }\r\n                    } else {\r\n                        const checkAlredyExist = vm.Columnlist.findIndex(object => object.CustomFieldId == element.CustomFieldId);\r\n                        if (checkAlredyExist === -1) {\r\n                            vm.Columnlist.push({\r\n                                CustomFieldId: element.CustomFieldId, DisplayName: element.DisplayName, FieldName: element.FieldName, ModuleIndex: index, ColumnFieldDataCode: element.ColumnFieldDataCode, Display_Order: ColumnDisplayOrder, Calculated_Field: false, MainFieldname: MainFieldname\r\n                                , FieldIcons: element.FieldIcons\r\n                            });\r\n                            if (event.removed == undefined) {\r\n                                vm.modulelisting[index].splice(vm.modulelisting[index].indexOf(element), 1);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                vm.ShowAlert(vm.$t(\"AddCustomFields\"), 'failure', true, vm.$t('Alert'));\r\n            }\r\n            vm.CalculatedUIEnabled = true;\r\n            vm.searchColumnfilter = []\r\n            vm.MainSearchmodel = '';\r\n        },\r\n        ApplySaveSelectedData : function(element, event){\r\n           var vm = this;\r\n           if(vm.modeldisplayname != ''){\r\n            vm.SaveSelectedData(element, event);\r\n           }\r\n           else{\r\n            vm.ShowAlert(\"Display Name is required\", 'failure', true, vm.$t('Alert'));\r\n           }\r\n        },\r\n        SaveSelectedData: function (element, event) {\r\n            var vm = this;\r\n            var elem = vm.Columnlist.find(x => x.CustomFieldId == element.CustomFieldId);\r\n            elem.DisplayName = vm.modeldisplayname;\r\n            elem.DateFormat = vm.modeldateformat;\r\n            elem.DecimalPlace = vm.modeldecimalplaces;\r\n            elem.IsUseSeprator = vm.modeluseseparator;\r\n            elem.IsCurrencySymbol = vm.modelusecurrency;\r\n            let CheckSameNameExist = vm.MatchIfSameNameExist();\r\n            if (!CheckSameNameExist) {\r\n                if (vm.Grouplist.find(x => x.CustomFieldId === elem.CustomFieldId)) {\r\n                    vm.Grouplist = [];\r\n                    vm.Grouplist.push(elem);\r\n                }\r\n                vm.CloseSetting(event);\r\n            } else {\r\n                let GetChangedNameID = vm.MatchIfSameNameExist('GetChangedNameID');\r\n                vm.modulelisting.forEach((mitem, mindex) => {\r\n                    vm.GetSubModuleList[mindex].forEach(iitem => {\r\n                        if (iitem.CustomFieldId === GetChangedNameID) {\r\n                            var elem = vm.Columnlist.find(x => x.CustomFieldId == iitem.CustomFieldId);\r\n                            elem.DisplayName = iitem.DisplayName;\r\n                            elem.DateFormat = iitem.DateFormat;\r\n                            elem.DecimalPlace = iitem.DecimalPlace;\r\n                            elem.IsUseSeprator = iitem.IsUseSeprator;\r\n                            elem.IsCurrencySymbol = iitem.IsCurrencySymbol;\r\n                            if (vm.Grouplist.find(x => x.CustomFieldId === iitem.CustomFieldId)) {\r\n                                vm.Grouplist = [];\r\n                                vm.Grouplist.push(elem);\r\n                            }\r\n                        }\r\n                    })\r\n                })\r\n                vm.ShowAlert('Same Display Name ' + ' \"' + CheckSameNameExist + '\" ' + ' is Exist Mutiple Times Please Change', 'failure', true, vm.$t('Alert'));\r\n            }\r\n        },\r\n        DeleteColumnFields: function (element, event) {\r\n            var vm = this;\r\n            let IsGraphColumn = vm.$refs.reportdata.CheckColumnExistInGraph(element.CustomFieldId)\r\n            if (!IsGraphColumn) {\r\n                if (!element.Calculated_Field) {\r\n                    let tagIndex = vm.Columnlist.findIndex(x => x.CustomFieldId == element.CustomFieldId);\r\n                    if (tagIndex > -1) {\r\n                        vm.Columnlist.splice(tagIndex, 1);\r\n                        vm.searchColumnfilter = [];\r\n                        $(\".setting-div-box\").width('0px');\r\n                    }\r\n                }\r\n                let tagIndex1 = vm.Grouplist.findIndex(x => x.CustomFieldId == element.CustomFieldId);\r\n                if (tagIndex1 > -1) {\r\n                    vm.Grouplist.splice(tagIndex1, 1);\r\n                }\r\n                if (vm.Columnlist.length == 0) {\r\n                    vm.previewdata = [];\r\n                    vm.CalculatedUIEnabled = false;\r\n                }\r\n                if (!element.Calculated_Field) {\r\n                    vm.modulelisting[element.ModuleIndex].push({\r\n                        CustomFieldId: element.CustomFieldId, DisplayName: element.DisplayName, FieldName: element.FieldName, ColumnFieldDataCode: element.ColumnFieldDataCode, Display_Order: element.Display_Order, Calculated_Field: false, MainFieldname: element.MainFieldname\r\n                        , FieldIcons: element.FieldIcons\r\n                    });\r\n                }\r\n                vm.Groupsearchmodel = '';\r\n                if (element.Calculated_Field) {\r\n                    if (vm.ExpressionFieldsArray.length > 0 || vm.ExpressionArray.length > 0) {\r\n                        let expIndex = -1;\r\n                        let calctagIndex = vm.Columnlist.findIndex(x => x.ModuleIndex == element.ModuleIndex);\r\n                        if (calctagIndex > -1) {\r\n                            vm.Columnlist.splice(calctagIndex, 1);\r\n                            vm.searchColumnfilter = [];\r\n                        }\r\n                        for (var i = 0; i <= vm.ExpressionArray.length; i++) {\r\n                            if (vm.ExpressionArray[i].ColumnIndex === element.ModuleIndex) {\r\n                                vm.ExpressionArray.splice(i, 1);\r\n                                break;\r\n                            }\r\n                        }\r\n                        vm.ExpressionFieldsArray.forEach(item => {\r\n                            var checkindex = vm.ExpressionFieldsArray.findIndex(x => x.ColumnIndex === element.ModuleIndex)\r\n                            if (checkindex > -1) {\r\n                                vm.ExpressionFieldsArray.splice(checkindex, 1);\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n                if (vm.sortingArray != null && vm.sortingArray.length > 0) {\r\n                    let sortindex = vm.sortingArray.findIndex(x => x.CustomFieldId === element.CustomFieldId)\r\n                    let getsortvalue = vm.sortingArray.find(x => x.CustomFieldId === element.CustomFieldId);\r\n                    if (sortindex > -1 && getsortvalue != undefined) {\r\n                        vm.sortingArray.splice(sortindex, 1);\r\n                    }\r\n                    vm.$refs.reportdata?.RemoveSortingForm({sortcolummnId:element.CustomFieldId});\r\n                }\r\n            }else{\r\n                vm.ShowAlert(vm.$t(\"GraphFields\"), 'warning', true, vm.$t('Alert'));\r\n            }\r\n        },\r\n        DeleteGroupFields: function (element, event) {\r\n            var vm = this;\r\n            let tagIndex = vm.Grouplist.findIndex(x => x.CustomFieldId == element.CustomFieldId);\r\n            if (tagIndex > -1) {\r\n                vm.Grouplist.splice(tagIndex, 1);\r\n            }\r\n            vm.Groupsearchmodel = '';\r\n            if (vm.previewdata != null && vm.previewdata != undefined && vm.previewdata.length > 0) {\r\n                vm.$refs.reportdata?.RefreshReport();\r\n            }\r\n        },\r\n        AddFilter: function (element, index) {\r\n            var vm = this;\r\n            vm.filterRulechange();\r\n            let isFilterActive = vm.$refs.Filters.active != false ? vm.$refs.Filters.active : vm.FilterActiveForMandatory;\r\n            if (vm.Filterlist.length < 20) {\r\n                if (isFilterActive) {\r\n                    const checkAlredyExist = vm.Filterlist.findIndex(object => object.CustomFieldId === element.CustomFieldId);\r\n                    if (checkAlredyExist === -1) {\r\n                        if (vm.category == 'Match All Value') {\r\n                            vm.filtertype = 'AND'\r\n                        }\r\n                        else {\r\n                            vm.filtertype = 'OR'\r\n                        }\r\n                        vm.Filterlist.push({\r\n                            CustomFieldId: element.CustomFieldId,\r\n                            ModuleIndex: index,\r\n                            FieldName: element.FieldName,\r\n                            DisplayName: element.DisplayName,\r\n                            ActualDataType: element.ActualDataType,\r\n                            ColumnFieldDataCode: element.ColumnFieldDataCode != undefined ? element.ColumnFieldDataCode : element.dttype[0].DataTypeCode,\r\n                            PickListOption: element.PickListOption != undefined ? element.PickListOption : element.picklist_options,\r\n                            FilterCount: vm.getCountValue(),\r\n                            FilterTypeAndorOr: vm.filtertype,\r\n                            IsMandatoryforFilter: element.IsMandatoryforFilter,\r\n                            FieldIcons: element.FieldIcons != undefined ? element.FieldIcons : element.dttype[0].icon,\r\n                            // OPERATOR_ID: ((typeof (element.OPERATOR_ID) === 'undefined') ? null : element.OPERATOR_ID),\r\n                            // valueTypeText: ((typeof (element.result) === 'undefined') ? null : element.result),\r\n                            Calculated_Field: false\r\n                        });\r\n                    }\r\n                    if (event.removed == undefined) {\r\n                        vm.modulelistingforfilter[index].splice(vm.modulelistingforfilter[index].indexOf(element), 1);\r\n                    }\r\n                    vm.FilterActiveForMandatory = false;\r\n                }\r\n            }\r\n            else {\r\n                vm.ShowAlert(vm.$t(\"AddCustomFilter\"), 'failure', true, vm.$t('Alert'));\r\n            }\r\n            vm.searchColumnfilter = []\r\n            vm.MainSearchmodel = '';\r\n            // vm.ClosePopFilter();\r\n        },\r\n        DeleteFilterFields: function (element, event) {\r\n            var vm = this;\r\n            if (!element.IsMandatoryforFilter) {\r\n                let tagIndex = vm.Filterlist.findIndex(x => x.CustomFieldId == element.CustomFieldId);\r\n                if (tagIndex > -1) {\r\n                    vm.Filterlist.splice(tagIndex, 1);\r\n                }\r\n                let tagIndex1 = vm.Filterlist.findIndex(x => x.CustomFieldId == element.CustomFieldId);\r\n                if (tagIndex1 > -1) {\r\n                    vm.Filterlist.splice(tagIndex1, 1);\r\n                }\r\n                vm.dragcount = vm.dragcount - 1\r\n                vm.modulelistingforfilter[element.ModuleIndex].push({\r\n                    CustomFieldId: element.CustomFieldId, FieldName: element.FieldName, DisplayName: element.DisplayName, ActualDataType: element.ActualDataType,\r\n                    FieldIcons: element.FieldIcons, ColumnFieldDataCode: element.ColumnFieldDataCode, PickListOption: element.PickListOption, FilterType: element.filtertype\r\n                });\r\n                let tagIndex2 = vm.RequestFilterJosn.findIndex(item => item.CustomFieldId === element.CustomFieldId);\r\n                if (tagIndex2 != -1) {\r\n                    vm.RequestFilterJosn.splice(tagIndex, 1);\r\n                }\r\n                vm.ClosePopFilter();\r\n            }\r\n        },\r\n        openrulespop: function (element, event) {\r\n            var vm = this;\r\n            // if(element.selectedOPValue == undefined){\r\n            //     element.OPERATOR_ID = '';\r\n            // }\r\n            element.selectedOPValue = '';\r\n            $(\".filter-list-box\").width('0px').css(\"overflow\", \"hidden\");\r\n            $(event.target).closest(\".parentdiv\").find(\".filter-list-box\").width('500px').css(\"overflow\", \"visible\");\r\n            vm.GetOperatordata(element);\r\n            vm.texttypevalue1 = false;\r\n            vm.numbertypevalue1 = false;\r\n            vm.datetypevalue1 = false;\r\n            vm.datetypevalue2 = false;\r\n            vm.multiselectvalue = false;\r\n            vm.numbertypevalue2 = false;\r\n            vm.texttypevalue2 = false;\r\n            vm.DDLForFilter = false;\r\n            vm.DDLForDateRange = false;\r\n            vm.timetypevalue = false;\r\n            vm.timetypevalue2 = false;\r\n            vm.dropdwonvalues = [];\r\n            vm.FormSchema[0].Data[0].value= []\r\n            vm.ValueDisplaytext = '';\r\n            vm.ValueDisplaytext2 = '';\r\n            vm.ValueDisplaynumber = '';\r\n            vm.ValueDisplaynumber2 = '';\r\n            vm.ValueDisplaydate = '';\r\n            vm.modeldaterange = '';\r\n            vm.ValueDisplaydate2 = '';\r\n            vm.Displaymultiplevalue = '';\r\n            vm.modelFilterDDLValue = '';\r\n            vm.ValueDisplayTime = '';\r\n            vm.ValueDisplayTime2 = '';\r\n        },\r\n        getCountValue: function () {\r\n            return this.dragcount++;\r\n        },\r\n        dragover: function (event) {\r\n            let count = 1;\r\n            $(\".draggable-list .filter-div\").each(function (index) {\r\n                count = index + 1;\r\n                $(this).find(\".filter-count-div\").html(count);\r\n            });\r\n            this.dragcount = count;\r\n        },\r\n        GroupSearching: function () {\r\n            this.itemclass = '';\r\n        },\r\n        selectfiltervalue: function (data) {\r\n            var vm = this;\r\n            if (vm.Grouplist.length < 1) {\r\n                vm.Grouplist.push(data);\r\n                vm.itemclass = 'd-none';\r\n                vm.Groupsearchmodel = '';\r\n            }\r\n        },\r\n        selectfilterColumnvalue: function (data) {\r\n            var vm = this\r\n            const index = vm.Columnlist.findIndex(object => object.CustomFieldId === data.CustomFieldId);\r\n            if (index === -1) {\r\n                vm.modulelisting.forEach((mitem, mindex) => {\r\n                    vm.modulelisting[mindex].forEach(inneritem => {\r\n                        const validindex = vm.modulelisting[mindex].findIndex(x => x.CustomFieldId === data.CustomFieldId);\r\n                        if (validindex != -1) {\r\n                            vm.Addfields(data, '', mindex, vm.submodulename[mindex]);\r\n                            vm.itemclass = 'd-none';\r\n                        }\r\n                    })\r\n                })\r\n            }\r\n            vm.ColumnSearchmodel = '';\r\n        },\r\n        ResetPreview: function (customreportparameters) {\r\n            var vm = this;\r\n            vm.modulelisting.splice(0);\r\n            vm.Columnlist.splice(0);\r\n            vm.Columnlist = [];\r\n            vm.Grouplist.splice(0);\r\n            vm.Groupsearchmodel = '';\r\n            vm.previewdata.splice(0);\r\n            vm.RequestFilterJosn = [];\r\n            vm.Filterlist = [];\r\n            vm.ExpressionArray = [];\r\n            vm.ExpressionFieldsArray = [];\r\n            vm.saveJsonReport = [];\r\n            vm.setvalue = 0;\r\n            vm.modulelistingforfilter.splice(0);\r\n            vm.CalculatedUIEnabled = false;\r\n            vm.ChartGroupingArray = [];\r\n            vm.GroupingArray = [];\r\n            vm.MainSearchmodel = '';\r\n            vm.IsMandatoryforFilterAfterReset = true;\r\n            vm.SearchNoRecord = false;\r\n            vm.searchColumnfilter = [];\r\n            vm.GetList(customreportparameters);\r\n        },\r\n        GetDateFromDetail: function () {\r\n            var vm = this;\r\n            DataReportService.GetDateDetails().then((response) => {\r\n                vm.GetDateFromDB = response.data;\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            })\r\n        },\r\n        resetoldvalueinfilteroperator(element, IsBinding) {\r\n            var vm = this;\r\n            if (element.selectedOPValue != '' && IsBinding != '') {\r\n                vm.dropdwonvalues = [];\r\n                vm.FormSchema[0].Data[0].value= []\r\n                vm.ValueDisplaytext = '';\r\n                vm.ValueDisplaytext2 = '';\r\n                vm.ValueDisplaynumber = '';\r\n                vm.ValueDisplaynumber2 = '';\r\n                vm.ValueDisplaydate = '';\r\n                vm.modeldaterange = '';\r\n                vm.ValueDisplaydate2 = '';\r\n                vm.Displaymultiplevalue = '';\r\n                vm.ValueDisplayTime = '';\r\n                vm.ValueDisplayTime2 = '';\r\n                vm.modelFilterDDLValue = '';\r\n            }\r\n        },\r\n        checkvalue:async function (operatorname, element, OperatorExpression, operatorid, IsBinding) {\r\n            var vm = this;\r\n            if (element.ColumnFieldDataCode === 'select' && element.PickListOption === 'Lookup') {\r\n                vm.GetFilterSelectDDL(element.CustomFieldId, element.FieldName);\r\n            } else if (operatorname === 'Date Range') {\r\n                vm.GetDateRangeFilterDDL();\r\n            }\r\n            setTimeout(function () {\r\n                vm.savedOperatorName = \"\";\r\n                vm.SelectedoperatorMappedDatatype = element.ColumnFieldDataCode;\r\n                vm.CurrentOperatorSelected = OperatorExpression;\r\n                vm.savedOperatorName = operatorname;\r\n                vm.operator_id = operatorid;\r\n                if (element.ColumnFieldDataCode == 'string') {\r\n                    if (operatorname == 'Between') {\r\n                        vm.texttypevalue1 = true;\r\n                        vm.texttypevalue2 = true;\r\n                    } else if (operatorname == 'Is Empty' || operatorname == 'Is Not Empty') {\r\n                        vm.texttypevalue1 = false;\r\n                        vm.texttypevalue2 = false;\r\n                    }\r\n                    else {\r\n                        vm.texttypevalue1 = true;\r\n                        vm.texttypevalue2 = false;\r\n                    }\r\n                }\r\n                if (element.ColumnFieldDataCode == 'decimal' || element.ColumnFieldDataCode == 'int' || element.ColumnFieldDataCode == 'bigint') {\r\n                    if (operatorname == 'Between') {\r\n                        vm.numbertypevalue1 = true;\r\n                        vm.numbertypevalue2 = true;\r\n                    } else if (operatorname == 'Is Empty' || operatorname == 'Is Not Empty') {\r\n                        vm.numbertypevalue1 = false;\r\n                        vm.numbertypevalue2 = false;\r\n                    }\r\n                    else {\r\n                        vm.numbertypevalue1 = true;\r\n                        vm.numbertypevalue2 = false;\r\n                    }\r\n                }\r\n                if (element.ColumnFieldDataCode === 'select' && element.PickListOption === 'Lookup') {\r\n                    if (operatorname == 'Is Empty' || operatorname == 'Is Not Empty') {\r\n                        vm.DDLForFilter = false;\r\n                        vm.multiselectvalue = false;\r\n                        vm.texttypevalue1 = false;\r\n                        vm.texttypevalue2 = false;\r\n                    }\r\n                    else if (OperatorExpression == 'IN' || OperatorExpression == 'NOT IN') {\r\n                        vm.multiselectvalue = true;\r\n                        vm.DDLForFilter = false;\r\n                    } else {\r\n                        vm.DDLForFilter = true;\r\n                        vm.multiselectvalue = false;\r\n                        vm.texttypevalue1 = false;\r\n                        vm.texttypevalue2 = false;\r\n                    }\r\n                }\r\n                if (element.ColumnFieldDataCode === 'date') {\r\n                    if (operatorname == 'Between') {\r\n                        vm.datetypevalue1 = true;\r\n                        vm.datetypevalue2 = true;\r\n                        vm.DDLForDateRange = false;\r\n                    } else if (operatorname == 'Is Empty' || operatorname == 'Is Not Empty' || operatorname == 'Is Off Day' || operatorname == 'Is Week End') {\r\n                        vm.datetypevalue1 = false;\r\n                        vm.datetypevalue2 = false;\r\n                        vm.DDLForDateRange = false;\r\n                    }else if(operatorname == \"Date Range\"){\r\n                        vm.datetypevalue1 = false;\r\n                        vm.datetypevalue2 = false;\r\n                        vm.DDLForDateRange = true;\r\n                    }\r\n                    else {\r\n                        vm.datetypevalue1 = true;\r\n                        vm.datetypevalue2 = false;\r\n                        vm.DDLForDateRange = false;\r\n                    }\r\n                }\r\n\r\n                if (element.ColumnFieldDataCode === 'time') {\r\n                    if (operatorname == 'Between') {\r\n                        vm.timetypevalue = true;\r\n                        vm.timetypevalue2 = true;\r\n                    } else if (operatorname == 'Is Empty' || operatorname == 'Is Not Empty' || operatorname == 'Is Off Day' || operatorname == 'Is Week End') {\r\n                        vm.timetypevalue = false;\r\n                        vm.timetypevalue2 = false;\r\n                    }\r\n                    else {\r\n                        vm.timetypevalue = true;\r\n                        vm.timetypevalue2 = false;\r\n                    }\r\n                }\r\n\r\n                if (IsBinding != undefined) {\r\n                    if (operatorid != undefined && operatorname != undefined) {\r\n                        vm.dropdwonvalues = [];\r\n                        vm.FormSchema[0].Data[0].value= []\r\n                        vm.ValueDisplaytext = '';\r\n                        vm.ValueDisplaytext2 = '';\r\n                        vm.ValueDisplaynumber = '';\r\n                        vm.ValueDisplaynumber2 = '';\r\n                        vm.ValueDisplaydate = '';\r\n                        vm.modeldaterange = '';\r\n                        vm.ValueDisplaydate2 = '';\r\n                        vm.modelFilterDDLValue = '';\r\n                        vm.ValueDisplayTime = '';\r\n                        vm.ValueDisplayTime2 = '';\r\n                        if (element.OPERATOR_ID == operatorid) {\r\n                            vm.FillFiltervalue(operatorid, element);\r\n                        }\r\n                        element = [];\r\n                    }\r\n                }\r\n                else {\r\n                    var checksameoperator = vm.Filterlist.find(x => x.OPERATOR_ID === operatorid);\r\n                    if (checksameoperator != -1) {\r\n                        vm.resetoldvalueinfilteroperator(element, IsBinding)\r\n                    }\r\n                }\r\n            }, 1000);\r\n        },\r\n        GetOperatordata: function (element) {\r\n            var vm = this;\r\n            var CustomFieldId = element.CustomFieldId;\r\n            var params = `dataType=${element.ColumnFieldDataCode}&customField=${CustomFieldId}`;\r\n            DataReportService.GetDataOperator(params).then(response => {\r\n                vm.GetOperator = response.data.DATA;\r\n                vm.BindOperatorValues(CustomFieldId, element);\r\n                if (element.OPERATOR_ID > 0) {\r\n                    var checkIfExists = vm.GetOperator.filter((x) => {\r\n                        return x.OPERATOR_ID == element.OPERATOR_ID\r\n                    });\r\n                    if (checkIfExists.length > 0) {\r\n                        var IsBinding = true;\r\n                        vm.isBinding = IsBinding;\r\n                        vm.checkvalue(checkIfExists[0].OPERATOR_DISPLAY_NAME, element, checkIfExists[0].OPERATOR_EXPRESSION, element.OPERATOR_ID, checkIfExists[0].MP[0].OPERATION_DATA_TYPE, IsBinding)\r\n                    }\r\n                }\r\n            })\r\n        },\r\n        popupvaluebind(Index, data) {\r\n            var vm = this;\r\n            if (data.ColumnFieldDataCode == 'string') {\r\n                if (data.OperatorDisplayName == 'Equal to one of multiple possible values' || data.OperatorDisplayName == 'Not Equal to one of multiple possible values') {\r\n                    vm.texttypevalue1 = true;\r\n                    vm.ValueDisplaytext = this.Filterlist[Index].valueTypeText.split(',');\r\n                    //  vm.value5 = true;\r\n                    // vm.dropdwonvalues = this.Filterlist[Index].Displaymultiplevalue.split(',');\r\n                }\r\n                else {\r\n                    vm.texttypevalue1 = true;\r\n                    vm.ValueDisplaytext = this.Filterlist[Index].valueTypeText;\r\n                }\r\n            }\r\n            if (data.ColumnFieldDataCode == 'select') {\r\n                if (data.OperatorDisplayName == 'Equal to one of multiple possible values' || data.OperatorDisplayName == 'Not Equal to one of multiple possible values') {\r\n                    vm.multiselectvalue = true;\r\n                    vm.commaSepratedSelectedValues = this.Filterlist[Index].Displaymultiplevalue.split(',');\r\n                }\r\n                else {\r\n                    vm.DDLForFilter = true;\r\n                    var GetFilterddlvalue = vm.options.find(x => x.name === data.DropDownValue);\r\n                    vm.modelFilterDDLValue = GetFilterddlvalue?.value;\r\n                }\r\n            }\r\n            if (data.ColumnFieldDataCode == 'date') {\r\n                if (vm.DisplayName == 'Between') {\r\n                    vm.datetypevalue1 = true;\r\n                    vm.datetypevalue2 = true;\r\n                    vm.DDLForDateRange = false;\r\n                    vm.ValueDisplaydate = this.Filterlist[Index].valueTypeFirstdate;\r\n                    vm.ValueDisplaydate2 = this.Filterlist[Index].valueTypeSeconddate;\r\n                }\r\n                else if(vm.DisplayName == \"Date Range\"){\r\n                    vm.DDLForDateRange = true;\r\n                    vm.modeldaterange = this.Filterlist[Index].DateRangeValue;\r\n                }\r\n                else {\r\n                    vm.datetypevalue1 = true;\r\n                    vm.DDLForDateRange = false;\r\n                    vm.ValueDisplaydate = this.Filterlist[Index].valueTypeFirstdate;\r\n                }\r\n            }\r\n            if (data.ColumnFieldDataCode == 'time') {\r\n                if (vm.DisplayName == 'Between') {\r\n                    vm.timetypevalue = true;\r\n                    vm.timetypevalue2 = true;\r\n                    vm.ValueDisplayTime = this.Filterlist[Index].ValueDisplayFirstTime;\r\n                    vm.ValueDisplayTime2 = this.Filterlist[Index].ValueDisplaySecondTime;\r\n                }\r\n                else {\r\n                    vm.timetypevalue = true;\r\n                    vm.ValueDisplayTime = this.Filterlist[Index].ValueDisplayFirstTime;\r\n                }\r\n            }\r\n        },\r\n        BindOperatorValues(CustomFieldId, element) {\r\n            var vm = this;\r\n            vm.isBinding = false;\r\n            var Index = this.Filterlist.findIndex(element => element.CustomFieldId == CustomFieldId)\r\n            vm.DisplayName = this.Filterlist[Index].OperatorDisplayName;\r\n            if (vm.DisplayName != null && vm.DisplayName != undefined && vm.DisplayName != '') {\r\n                vm.operator = this.GetOperator.find(item => item.OPERATOR_DISPLAY_NAME == vm.DisplayName)\r\n                vm.Filterlist[Index]['selectedOPValue'] = vm.operator.OPERATOR_ID;\r\n                vm.Datatype = vm.operator.MP[0].OPERATION_DATA_TYPE;\r\n                vm.popupvaluebind(Index, element);\r\n                if (element.ColumnFieldDataCode == 'decimal' || element.ColumnFieldDataCode == 'int') {\r\n                    if (vm.DisplayName == 'Between') {\r\n                        vm.numbertypevalue1 = true;\r\n                        vm.numbertypevalue2 = true;\r\n                        vm.ValueDisplaynumber = this.Filterlist[Index].valueTypeNumber;\r\n                        vm.ValueDisplaynumber2 = this.Filterlist[Index].valueTypeNumber2;\r\n                    }\r\n                    else {\r\n                        vm.numbertypevalue1 = true;\r\n                        vm.ValueDisplaynumber = this.Filterlist[Index].valueTypeNumber;\r\n                    }\r\n                }\r\n            } else {\r\n                vm.selectedOPValue = '';\r\n            }\r\n        },\r\n        FilterJosnRquest(elem) {\r\n            var vm = this;\r\n            if ((elem.OperatorDisplayName == 'Not Match a character pattern' || elem.OperatorDisplayName == 'Match a character pattern') && vm.ValueDisplaytext == '') {\r\n                vm.ShowAlert(vm.$t(\"Please enter some value in the text field\"), 'warning', true, vm.$t('Alert'));\r\n                return false;\r\n            }\r\n            if (vm.SelectedoperatorMappedDatatype == 'string') {\r\n                if (vm.CurrentOperatorSelected == 'IN' || vm.CurrentOperatorSelected == 'NOT IN') {\r\n                    vm.FirstOperand = vm.ValueDisplaytext\r\n                    vm.FirstOperandValue1 = vm.ValueDisplaytext2;\r\n\r\n                    if (elem.OperatorDisplayName == 'Equal to one of multiple possible values' || elem.OperatorDisplayName == 'Not Equal to one of multiple possible values') {\r\n                        let Commaseprated = vm.ValueDisplaytext.split(',')\r\n\r\n\r\n                        vm.FirstOperandValue1 = Commaseprated;\r\n                    }\r\n                }\r\n                else {\r\n                    vm.FirstOperand = '\\'' + vm.ValueDisplaytext + '\\'';\r\n                    vm.FirstOperandValue1 = vm.ValueDisplaytext;\r\n                }\r\n            }\r\n\r\n            else if (vm.SelectedoperatorMappedDatatype == 'decimal' || vm.SelectedoperatorMappedDatatype == 'int' || vm.SelectedoperatorMappedDatatype == 'bigint') {\r\n                if (elem.OperatorDisplayName == 'Between') {\r\n                    vm.FirstOperand = '\\'' + elem.valueTypeNumber + '\\'';\r\n                    vm.FirstOperandValue1 = elem.valueTypeNumber;\r\n                    vm.SecondOperand = '\\'' + elem.valueTypeNumber2 + '\\'';\r\n                    vm.SecondOperandValue1 = elem.valueTypeNumber2;\r\n                }\r\n                else {\r\n                    vm.FirstOperand = '\\'' + elem.valueTypeNumber + '\\'';\r\n                    vm.FirstOperandValue1 = elem.valueTypeNumber;\r\n                }\r\n            }\r\n            let operatoerExpressionResult = vm.ConvertOperatorToExpression(vm.CurrentOperatorSelected, vm.FirstOperand, vm.SecondOperand);\r\n            const checkAlredyExist = vm.RequestFilterJosn.findIndex(item => item.CustomFieldId === elem.CustomFieldId);\r\n            if (checkAlredyExist == -1) {\r\n                vm.RequestFilterJosn.push({\r\n                    CustomFieldId: elem.CustomFieldId,\r\n                    FieldName: elem.FieldName,\r\n                    ActualDataType: vm.SelectedoperatorMappedDatatype,\r\n                    FilterCount: elem.FilterCount,\r\n                    OperatorExpression: operatoerExpressionResult,\r\n                    OPERATOR_ID: vm.operator_id,\r\n                    Value1: vm.FirstOperandValue1,\r\n                    Value2: vm.SecondOperandValue1,\r\n                    IsMandatoryforFilter: elem.IsMandatoryforFilter,\r\n                    FieldIcons: elem.FieldIcons,\r\n                    DisplayName: elem.DisplayName,\r\n                    FilterTypeAndorOr: elem.FilterTypeAndorOr,\r\n                    PickListOption: elem.PickListOption,\r\n                    ColumnFieldDataCode: elem.ColumnFieldDataCode,\r\n                })\r\n            }\r\n            else {\r\n                let element = vm.RequestFilterJosn.find(item => item.CustomFieldId === elem.CustomFieldId);\r\n                element.OperatorExpression = operatoerExpressionResult;\r\n                element.PickListOption = elem.PickListOption;\r\n                element.ColumnFieldDataCode = elem.ColumnFieldDataCode;\r\n                element.OPERATOR_ID = vm.operator_id;\r\n                element.Value1 = vm.FirstOperandValue1;\r\n                element.Value2 = vm.SecondOperandValue1;\r\n                element.IsMandatoryforFilter = elem.IsMandatoryforFilter;\r\n                element.FieldIcons = elem.FieldIcons;\r\n            }\r\n            vm.ClosePopFilter();\r\n        },\r\n        FillFiltervalue: function (id, element) {\r\n            var vm = this;\r\n            vm.ArrayforFilterpopup.push(element);\r\n            var checkIfExists = vm.ArrayforFilterpopup.findIndex((x) => {\r\n                return x.OPERATOR_ID == id\r\n            });\r\n            if (checkIfExists > -1) {\r\n                var filtervalueexist = vm.RequestFilterJosn.find(x => x.OPERATOR_ID == id && x.CustomFieldId === element.CustomFieldId)\r\n                if (element.ColumnFieldDataCode == 'string') {\r\n                    vm.ValueDisplaytext = filtervalueexist?.Value1;\r\n                    // vm.ValueDisplaytext = element.valueTypeText\r\n                    vm.ValueDisplaytext2 = filtervalueexist?.Value2;\r\n                }\r\n                else if (element.ColumnFieldDataCode == 'decimal' || element.ColumnFieldDataCode == 'int' || element.ColumnFieldDataCode == 'bigint') {\r\n                    vm.ValueDisplaynumber = filtervalueexist?.Value1;\r\n                    vm.ValueDisplaynumber2 = filtervalueexist?.Value2;\r\n                }\r\n                else if (element.ColumnFieldDataCode === 'date') {\r\n                    if(vm.CurrentOperatorSelected == 'DateRange'){\r\n                        vm.modeldaterange = filtervalueexist?.Value1;\r\n                    }else{\r\n                    vm.ValueDisplaydate = filtervalueexist?.Value1;\r\n                    // vm.ValueDisplaydate = element.valueTypeFirstdate;\r\n                    vm.ValueDisplaydate2 = filtervalueexist?.Value2;}\r\n                }\r\n                else if (element.ColumnFieldDataCode === 'time') {\r\n                    vm.ValueDisplayTime = filtervalueexist?.Value1;\r\n                    // vm.ValueDisplayTime = element.ValueDisplayFirstTime;\r\n                    vm.ValueDisplayTime2 = filtervalueexist?.Value2;\r\n                }\r\n                else if (element.ColumnFieldDataCode === 'select' && element.PickListOption === 'Lookup') {\r\n                    if (vm.CurrentOperatorSelected == 'IN' || vm.CurrentOperatorSelected == 'NOT IN') {\r\n                        var multiddl = filtervalueexist?.Value1.replace(/\"|'/g, '');\r\n                        vm.dropdwonvalues = multiddl?.split(',');\r\n                        var fillmultiselect = [];\r\n                        vm.dropdwonvalues.forEach(dditem=>{\r\n                            const ifexist = vm.options.find(j => j.value === dditem)\r\n                            if (ifexist != -1 && ifexist != undefined) {\r\n                                var fillvalues = {value: ifexist.value, label: ifexist.name}\r\n                                fillmultiselect.push(fillvalues);\r\n                            }\r\n                        })\r\n                        vm.FormSchema[0].Data[0].value = fillmultiselect;\r\n                        vm.dropdwonvalues = [];\r\n                    } else {\r\n                        vm.modelFilterDDLValue = filtervalueexist?.Value1;\r\n                    }\r\n                }\r\n            }\r\n            vm.filterRulechange()\r\n        },\r\n        applySetting: function (CustomFieldId) {\r\n            var vm = this;\r\n            var isBetweenTrue = false\r\n            if(vm.FormSchema[0].Data[0].value.length > 0){\r\n                vm.FormSchema[0].Data[0].value.forEach(multiitem=>{\r\n                    vm.dropdwonvalues.push(multiitem.value)\r\n                })\r\n            }\r\n            if (vm.savedOperatorName == 'Between') {\r\n                if (vm.ValueDisplaytext != '' && vm.ValueDisplaytext2 != '' || (vm.ValueDisplaynumber != '' || vm.ValueDisplaynumber == '0') && vm.ValueDisplaynumber2 != ''\r\n                    || vm.ValueDisplaydate != '' && vm.ValueDisplaydate2 != '' || vm.ValueDisplayTime != '' && vm.ValueDisplayTime2 != '') {\r\n                    isBetweenTrue = true;\r\n                }\r\n            } else if (vm.ValueDisplaytext != '' || vm.ValueDisplaytext2 != '' || vm.ValueDisplaynumber != '' || vm.ValueDisplaynumber == '0' ||\r\n                vm.ValueDisplaynumber2 != '' || vm.ValueDisplaydate != '' || vm.ValueDisplaydate2 != '' || vm.ValueDisplayTime != '' || vm.ValueDisplayTime2 != '' ||\r\n                vm.dropdwonvalues.length > 0 || vm.modelFilterDDLValue != '' || vm.savedOperatorName == 'Is Empty' || vm.savedOperatorName == 'Is Not Empty'\r\n                || vm.savedOperatorName == 'Is Off Day' || vm.savedOperatorName == 'Is Week End' || vm.modeldaterange != '') {\r\n                isBetweenTrue = true\r\n            }\r\n            setTimeout(function () {\r\n                if (isBetweenTrue) {\r\n                    var Multiddlvalue = [];\r\n                    // if(vm.ValueDisplaytext==\"\" && vm.ValueDisplaytext2==\"\"){\r\n                    //     vm.ShowAlert(\"Please fill this value.\", \"warning\")\r\n                    //     return false;\r\n                    // }\r\n                    vm.dropdwonvalues.forEach(ddlvalues => {\r\n                        const isddlvalueexist = vm.options.find(j => j.value === ddlvalues)\r\n                        if (isddlvalueexist != -1 && isddlvalueexist != undefined) {\r\n                            Multiddlvalue.push(isddlvalueexist.name);\r\n                        }\r\n                    })\r\n                    if (vm.dropdwonvalues != '') {\r\n                        vm.commaSepratedSelectedValues = vm.dropdwonvalues?.join();\r\n                        vm.modelFilterDDLValue = '';\r\n                    }\r\n                    var GetDDLValue = '';\r\n                    if (vm.modelFilterDDLValue != '') {\r\n                        GetDDLValue = vm.options.find(i => i.value === vm.modelFilterDDLValue)\r\n                    }\r\n                    var elem = vm.Filterlist.find(x => x.CustomFieldId == CustomFieldId);\r\n                    elem.OperatorDisplayName = vm.savedOperatorName;\r\n                    elem.valueTypeText = vm.ValueDisplaytext;\r\n                    elem.valueTypeText2 = vm.ValueDisplaytext2;\r\n                    elem.valueTypeNumber = vm.ValueDisplaynumber;\r\n                    elem.valueTypeNumber2 = vm.ValueDisplaynumber2;\r\n                    elem.valueTypeFirstdate = vm.ValueDisplaydate;\r\n                    elem.valueTypeSeconddate = vm.ValueDisplaydate2;\r\n                    elem.ValueDisplayFirstTime = vm.ValueDisplayTime;\r\n                    elem.ValueDisplaySecondTime = vm.ValueDisplayTime2;\r\n                    elem.Displaymultiplevalue = Multiddlvalue?.join();\r\n                    elem.DropDownValue = GetDDLValue?.name;\r\n                    elem.DateRangeValue = vm.modeldaterange;\r\n                    // elem.DropDownValue = GetDDLValue;\r\n                    elem.OPERATOR_ID = vm.operator_id;\r\n                    if (vm.SelectedoperatorMappedDatatype == 'select') {\r\n                        if (vm.CurrentOperatorSelected == 'IN' || vm.CurrentOperatorSelected == 'NOT IN') {\r\n                            //multi select  IN(\"'1','2','3'\") in Filter Case\r\n                            let valArray = vm.commaSepratedSelectedValues.split(\".\");\r\n                            let commsplitedVal = valArray.join(\",\")\r\n                            vm.FirstOperand = '\\'' + commsplitedVal.split(',').join('\\',\\'') + '\\'';\r\n                            let CommaSepratedStringValues = vm.FirstOperand;\r\n                            vm.FirstOperandValue1 = CommaSepratedStringValues;\r\n                        }\r\n                        else {\r\n                            vm.FirstOperand = '\\'' + vm.modelFilterDDLValue + '\\'';\r\n                            vm.FirstOperandValue1 = vm.modelFilterDDLValue;\r\n                        }\r\n                    }\r\n                    else if (vm.SelectedoperatorMappedDatatype == 'date') {\r\n                        if (elem.OperatorDisplayName == 'Between') {\r\n                            vm.FirstOperand = '\\'' + elem.valueTypeFirstdate + '\\'';\r\n                            vm.FirstOperandValue1 = elem.valueTypeFirstdate;\r\n                            vm.SecondOperand = '\\'' + elem.valueTypeSeconddate + '\\'';\r\n                            vm.SecondOperandValue1 = elem.valueTypeSeconddate;\r\n                        } else if(elem.OperatorDisplayName == 'Date Range'){\r\n                            vm.FirstOperand = '\\'' + elem.DateRangeValue + '\\'';\r\n                            vm.FirstOperandValue1 = elem.DateRangeValue;\r\n                        }\r\n                        else {\r\n                            vm.FirstOperand = '\\'' + elem.valueTypeFirstdate + '\\'';\r\n                            vm.FirstOperandValue1 = elem.valueTypeFirstdate;\r\n                        }\r\n                    } else if (vm.SelectedoperatorMappedDatatype == 'time') {\r\n                        if (elem.OperatorDisplayName == 'Between') {\r\n                            vm.FirstOperand = '\\'' + elem.ValueDisplayFirstTime + '\\'';\r\n                            vm.FirstOperandValue1 = elem.ValueDisplayFirstTime;\r\n                            vm.SecondOperand = '\\'' + elem.ValueDisplaySecondTime + '\\'';\r\n                            vm.SecondOperandValue1 = elem.ValueDisplaySecondTime;\r\n                        } else {\r\n                            vm.FirstOperand = '\\'' + elem.ValueDisplayFirstTime + '\\'';\r\n                            vm.FirstOperandValue1 = elem.ValueDisplayFirstTime;\r\n                        }\r\n                    }\r\n                    vm.FilterJosnRquest(elem);\r\n                } else {\r\n                    vm.ShowAlert(\"Cannot Add Empty Filter\", \"failure\");\r\n                }\r\n            }, 500)\r\n            //vm.ClosePopFilter();\r\n        },\r\n        FilterTabClicked() {\r\n            var vm = this;\r\n            vm.showModuleListForFilter = true;\r\n            vm.showModuleListForField = false;\r\n            vm.MainSearchmodel = '';\r\n            vm.searchColumnfilter = [];\r\n\r\n        },\r\n        FieldTabClicked() {\r\n            var vm = this;\r\n            vm.showModuleListForFilter = false;\r\n            vm.showModuleListForField = true;\r\n            vm.MainSearchmodel = '';\r\n            vm.searchColumnfilter = [];\r\n        },\r\n        openActionIcon: function (e) {\r\n            var vm = this;\r\n            vm.showRowLevelFunction=true;\r\n            // e.target.nextSibling.removeAttribute('style');\r\n            // e.target.nextSibling.setAttribute('style', 'width:240px;');\r\n            // e.target.nextSibling.style.display = 'block';\r\n        },\r\n        closeActionIcon: function (e) {\r\n            var vm = this;\r\n            vm.showRowLevelFunction=false;\r\n        },\r\n        OpenCalculatedUI: function () {\r\n            var vm = this;\r\n            vm.showcalculatedUI = true;\r\n            vm.editexpressionvalue = false;\r\n            vm.showRowLevelFunction=false;\r\n            vm.AlreadyExistExpression = {};\r\n            $(\"#showcalculatedfield\").modal(\"show\");\r\n            setTimeout(function () {\r\n                $(\"#showcalculatedfield\").modal('show');\r\n                setTimeout(function () {\r\n                    vm.SetBootstraptoolTip();\r\n                }, 200);\r\n            }, 1000);\r\n        },\r\n        VerifiedExpressionColumnValue({ ExpressionID, FieldValue, VerifiedExpression, ExpressionFieldArray, ExpressionDisplay, Functionkey ,IsEdit,IsExpExist}) {\r\n            var vm = this;\r\n            const checkAlredyExist = vm.Columnlist.findIndex(object => object.CustomFieldId === ExpressionID);\r\n            const checkFieldVlaueExist = vm.Columnlist.findIndex(object => object.FieldName === FieldValue);\r\n            var ExpressionDisplayOrder;\r\n            if ((checkAlredyExist === -1 || checkFieldVlaueExist === -1) && !IsEdit) {\r\n                var checkExpExist = '';\r\n                var indexvalue = '';\r\n                var count = 0;\r\n                vm.Columnlist.forEach(CheckItem => {\r\n                    if (CheckItem.Calculated_Field || count != 0) {\r\n                        vm.setvalue = 1;\r\n                        count++;\r\n                    } else { vm.setvalue = 0; }\r\n                })\r\n                if (vm.setvalue == 1) {\r\n                    vm.Columnlist.forEach(item => {\r\n                        if (item.Calculated_Field) {\r\n                            var tempdata = [];\r\n                            tempdata.push(item);\r\n                            var checkExpvalue = tempdata.find(x => x.ModuleIndex);\r\n                            checkExpExist = checkExpvalue.ModuleIndex;\r\n                        }\r\n                    })\r\n                    indexvalue = parseInt(checkExpExist) + 1;\r\n                }\r\n                else {\r\n                    const getlastarrayvalue = vm.Columnlist[vm.Columnlist.length - 1];\r\n                    indexvalue = getlastarrayvalue.ModuleIndex + 2;\r\n                    vm.setvalue = 1;\r\n                }\r\n                if (vm.Columnlist.length < 1) {\r\n                    ExpressionDisplayOrder = vm.Columnlist.length\r\n                }\r\n                else {\r\n                    const getlastarrayvalue = vm.Columnlist[vm.Columnlist.length - 1];\r\n                    ExpressionDisplayOrder = getlastarrayvalue.Display_Order + 1;\r\n                }\r\n                vm.Columnlist.push({\r\n                    CustomFieldId: '', FieldName: FieldValue, DisplayName: FieldValue, DateFormat: null,\r\n                    DateFormatId: null,\r\n                    DecimalPlace: null,\r\n                    IsUseSeprator: null,\r\n                    IsCurrencySymbol: null,\r\n                    ColumnFieldDataCode: \"string\",\r\n                    Display_Order: ExpressionDisplayOrder,\r\n                    ModuleIndex: indexvalue,\r\n                    Calculated_Field: true,\r\n                    ExpressionDisplay: ExpressionDisplay\r\n                });\r\n                if (VerifiedExpression != \"\") {\r\n                    vm.ExpressionArray.push(\r\n                        {\r\n                            \"ExpressionID\": ExpressionID, \"Expression\": VerifiedExpression, \"ExpressionName\": FieldValue, \"ExpressionDisplay\": ExpressionDisplay, \"ColumnIndex\": indexvalue,\r\n                            \"REPORTID\": vm.customreportparameters.ReportID,\r\n                            \"FunctionKeys\": Functionkey\r\n                        }\r\n                    )\r\n                    var dataele = vm.Columnlist.find(x => x.FieldName === FieldValue);\r\n                    dataele.ModuleIndex = indexvalue;\r\n                    if (vm.ExpressionFieldsArray == undefined) {\r\n                        vm.ExpressionFieldsArray = [];\r\n                    }\r\n                    ExpressionFieldArray.forEach(Arrayitem => {\r\n                        vm.ExpressionFieldsArray.push({ CustomFieldId: Arrayitem.CustomFieldId, FieldName: Arrayitem.FieldName, ColumnIndex: indexvalue });\r\n                    })\r\n                }\r\n            }\r\n            else {\r\n                var colelem = vm.Columnlist.find(x=>x.ModuleIndex === IsExpExist.ModuleIndex)\r\n                colelem.CustomFieldId = ExpressionID;\r\n                colelem.FieldName = FieldValue;\r\n                colelem.DisplayName = FieldValue;\r\n                colelem.DateFormat = null;\r\n                colelem.DateFormatId = null;\r\n                colelem.DecimalPlace = null;\r\n                colelem.IsUseSeprator = null;\r\n                colelem.IsCurrencySymbol = null;\r\n                colelem.ColumnFieldDataCode = \"string\";\r\n                colelem.Display_Order = IsExpExist.Display_Order;\r\n                colelem.ModuleIndex = IsExpExist.ModuleIndex\r\n                colelem.Calculated_Field = true,\r\n                colelem.ExpressionDisplay = ExpressionDisplay;\r\n\r\n                var verifyelem = vm.ExpressionArray.find(vobject => vobject.ColumnIndex === IsExpExist.ModuleIndex)\r\n                verifyelem.ExpressionID = ExpressionID;\r\n                verifyelem.Expression = VerifiedExpression;\r\n                verifyelem.ExpressionName = FieldValue;\r\n                verifyelem.ExpressionDisplay = ExpressionDisplay;\r\n                verifyelem.ColumnIndex = IsExpExist.ModuleIndex;\r\n                verifyelem.REPORTID = vm.customreportparameters.ReportID;\r\n                verifyelem.FunctionKeys = Functionkey;\r\n\r\n                ExpressionFieldArray.forEach(Arrayitem => {\r\n                    var fieldexp = vm.ExpressionFieldsArray.find(fobject => fobject.ColumnIndex === IsExpExist.ModuleIndex)\r\n                    fieldexp.CustomFieldId = Arrayitem.CustomFieldId;\r\n                    fieldexp.FieldName = Arrayitem.FieldName;\r\n                    fieldexp.ColumnIndex = IsExpExist.ModuleIndex;\r\n                })\r\n            }\r\n            vm.$refs.Calculated?.close();\r\n        },\r\n        SelectAllSearch(){\r\n            var vm = this;\r\n            vm.GetSelectedValue = window.getSelection().toString()\r\n        },\r\n        ListFiltering: function () {\r\n            var vm = this;\r\n            let isFieldActive = vm.$refs.FIELDS.active;\r\n            \r\n            var input = document.getElementById('searchinput');\r\n\r\n            var filterinput = input.value;\r\n            if(vm.GetSelectedValue != ''){\r\n                filterinput = filterinput.replaceAll(vm.GetSelectedValue,'')\r\n                vm.GetSelectedValue = '';\r\n            }\r\n            if (filterinput != null && filterinput != \"\") {\r\n                $(\".multi-collapse\").addClass(\"show\");\r\n            }\r\n            else {\r\n                $(\".multi-collapse\").removeClass(\"show\");\r\n            }\r\n            var searchcol = [];\r\n            var searchfilter = [];\r\n            if (isFieldActive) {\r\n                vm.modulelisting.forEach((item, index) => {\r\n                    vm.modulelisting[index].forEach((indexitem) => {\r\n                        searchfilter.push(indexitem);\r\n                        searchcol = searchfilter.filter(searchitem => {\r\n                            var displayMainColname = (vm.$t(searchitem.DisplayName != null)) ? vm.$t(searchitem.DisplayName) : vm.$t(searchitem.FieldName);\r\n                            return displayMainColname.replace(/\\W/g, \"\").toLowerCase().includes(filterinput.replace(/\\W/g, \"\").toLowerCase());\r\n                        })\r\n                    })\r\n                    vm.searchColumnfilter[index] = searchcol;\r\n                    searchfilter = [];\r\n                    searchcol = [];\r\n                })\r\n                let count = 0;\r\n                for (let filteritem in vm.searchColumnfilter) {\r\n                    if (vm.searchColumnfilter[filteritem].length > 0) {\r\n                        count++;\r\n                    }\r\n                }\r\n                if (count > 0) {\r\n                    vm.SearchNoRecord = false\r\n                } else { vm.SearchNoRecord = true; }\r\n                return vm.searchColumnfilter;\r\n            }\r\n            else {\r\n                vm.modulelistingforfilter.forEach((item, index) => {\r\n                    vm.modulelistingforfilter[index].forEach((indexitem) => {\r\n                        searchfilter.push(indexitem);\r\n                        searchcol = searchfilter.filter(searchitem => {\r\n                            var displayMainColname = (vm.$t(searchitem.DisplayName != null)) ? vm.$t(searchitem.DisplayName) : vm.$t(searchitem.FieldName);\r\n                            return displayMainColname.replace(/\\W/g, \"\").toLowerCase().includes(filterinput.replace(/\\W/g, \"\").toLowerCase());\r\n                        })\r\n                    })\r\n                    vm.searchColumnfilter[index] = searchcol;\r\n                    searchfilter = [];\r\n                    searchcol = [];\r\n                })\r\n                let count = 0;\r\n                for (let filteritem in vm.searchColumnfilter) {\r\n                    if (vm.searchColumnfilter[filteritem].length > 0) {\r\n                        count++;\r\n                    }\r\n                }\r\n                if (count > 0) {\r\n                    vm.SearchNoRecord = false\r\n                } else { vm.SearchNoRecord = true; }\r\n                return vm.searchColumnfilter;\r\n            }\r\n        },\r\n        checkMove(e) {\r\n            var vm = this;\r\n            var getindex = 0;\r\n            if (e.related.id == 'TargetDivID') {\r\n                if(!vm.showModuleListForFilter){\r\n                    if(vm.Columnlist.length < 20 || e.dragged.id === e.related.id){\r\n                        return true;}\r\n                    else{\r\n                        vm.ShowAlert(vm.$t(\"AddCustomFields\"), 'failure', true, vm.$t('Alert'));\r\n                        return false;\r\n                    }\r\n                }\r\n                else{\r\n                    if(vm.Filterlist.length < 20){\r\n                        return true;}\r\n                    else{\r\n                        vm.ShowAlert(vm.$t(\"AddCustomFilter\"), 'failure', true, vm.$t('Alert'));\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n            else if (!e.draggedContext.element.Calculated_Field && e.draggedContext.element.Calculated_Field != undefined) {\r\n                vm.modulelisting.forEach((i, index) => {\r\n                    vm.GetSubModuleList[index].forEach(j => {\r\n                        if (e.relatedContext.list.length == 0) {\r\n                            if (j.CustomFieldId === e.draggedContext.element.CustomFieldId) {\r\n                                getindex = index;\r\n                            }\r\n                        }\r\n                        else if (j.CustomFieldId === e.relatedContext.element.CustomFieldId) {\r\n                            getindex = index;\r\n                        }\r\n                    })\r\n                })\r\n                if (getindex === e.draggedContext.element.ModuleIndex) {\r\n                    return true;\r\n                } else {\r\n                    return false;\r\n                }\r\n            }\r\n            else {\r\n                return false;\r\n            } \r\n        },\r\n        onDragEnd: function (e, x) {\r\n            if (e.item.id == 'StopDragfield') {\r\n                return true;\r\n            }\r\n            else {\r\n                e.preventDefault();\r\n                return false;\r\n            }\r\n        },\r\n        ColumnListDisplayOrder: function (e) {\r\n            var vm = this;\r\n            if(!vm.showModuleListForFilter){\r\n                $(\".setting-div-box\").width('0px');\r\n                vm.Columnlist.forEach((Colitem, Colindex) => {\r\n                    Colitem.Display_Order = Colindex + 1;\r\n                })\r\n            }else{\r\n                vm.dragover();\r\n                vm.ClosePopFilter();\r\n            }\r\n        },\r\n        GetDraggedItem(event, index, MainFieldname) {\r\n            var vm = this;\r\n            if (event.removed != undefined) {\r\n                if (MainFieldname != undefined) {\r\n                    let GetAddedFieldFromDrag = vm.Columnlist.findIndex(AddedField => AddedField.CustomFieldId === event.removed.element.CustomFieldId);\r\n                    let GetAddedFieldFromModuleListing = vm.modulelisting[index].findIndex(ModuleListField => ModuleListField.CustomFieldId === event.removed.element.CustomFieldId);\r\n                    if (GetAddedFieldFromModuleListing != -1) {\r\n                        vm.modulelisting[index].splice(vm.modulelisting[index].indexOf(event.removed.element), 1);\r\n                    }\r\n                    if (GetAddedFieldFromDrag != -1) {\r\n                        vm.Columnlist.splice(GetAddedFieldFromDrag, 1);\r\n                        vm.Addfields(event.removed.element, event, index, MainFieldname);\r\n                    }\r\n                } else {\r\n                    let GetAddedFieldFromDrag = vm.Filterlist.findIndex(AddedField => AddedField.CustomFieldId === event.removed.element.CustomFieldId);\r\n                    let GetAddedFieldFromModuleListing = vm.modulelistingforfilter[index].findIndex(ModuleListField => ModuleListField.CustomFieldId === event.removed.element.CustomFieldId);\r\n                    if (GetAddedFieldFromModuleListing != -1) {\r\n                        vm.modulelistingforfilter[index].splice(vm.modulelistingforfilter[index].indexOf(event.removed.element), 1);\r\n                    }\r\n                    if (GetAddedFieldFromDrag != -1) {\r\n                        vm.Filterlist.splice(GetAddedFieldFromDrag, 1);\r\n                        vm.AddFilter(event.removed.element, index);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        MatchIfSameNameExist(GetChangedNameID) {\r\n            var vm = this;\r\n            for (let i = 0; i < vm.Columnlist.length; i++) {\r\n                for (let j = 0; j < i; j++) {\r\n                    if (vm.Columnlist[i].CustomFieldId != vm.Columnlist[j].CustomFieldId && (vm.$t(vm.Columnlist[i].DisplayName) == vm.$t(vm.Columnlist[j].DisplayName)\r\n                    || vm.$t(vm.Columnlist[i].DisplayName).toLowerCase() == vm.$t(vm.Columnlist[j].DisplayName).toLowerCase())) {\r\n                        return GetChangedNameID == undefined ? vm.$t(vm.Columnlist[i].DisplayName) : vm.$t(vm.Columnlist[i].CustomFieldId);\r\n                    }\r\n                }\r\n            }\r\n            return false;\r\n        },\r\n        filterRulechange() {\r\n            var vm = this;\r\n            vm.filtertype = '';\r\n            if (vm.category == 'Match All Value') {\r\n                vm.Filterlist.forEach(Fitem => {\r\n                    Fitem.FilterTypeAndorOr = 'AND'\r\n                })\r\n                if (vm.RequestFilterJosn.length > 0) {\r\n                    vm.RequestFilterJosn.forEach(RFitem => {\r\n                        RFitem.FilterTypeAndorOr = 'AND'\r\n                    })\r\n                }\r\n                vm.filtertype = 'AND'\r\n            }\r\n            else {\r\n                vm.Filterlist.forEach(Fitem => {\r\n                    Fitem.FilterTypeAndorOr = 'OR'\r\n                })\r\n                if (vm.RequestFilterJosn.length > 0) {\r\n                    vm.RequestFilterJosn.forEach(RFitem => {\r\n                        RFitem.FilterTypeAndorOr = 'OR'\r\n                    })\r\n                }\r\n                vm.filtertype = 'OR'\r\n            }\r\n        },\r\n        CheckForValidSorting(sortColummnarray) {\r\n            var vm = this;\r\n            var count = 0;\r\n            sortColummnarray.forEach(sortitem => {\r\n                if (sortitem.sortcolummnId != '' && sortitem.columnOrders == '' || sortitem.sortcolummnId == '' && sortitem.columnOrders != '' || sortitem.sortcolummnId == undefined || sortitem.columnOrders == undefined) {\r\n                    count = 1;\r\n                }\r\n            })\r\n            return count;\r\n        },\r\n        PreventValues(event) {\r\n            var vm = this;\r\n            var ekey = event.keyCode;\r\n            if (ekey == 69 || ekey == 107 || ekey == 109) { event.preventDefault(); }\r\n        },\r\n        PreventDecimal(event) {\r\n            var ekey = event.keyCode;\r\n            if (ekey == 110 || ekey == 190) { event.preventDefault(); }\r\n        },\r\n        TruncateStr: function (str, len) {\r\n            var convertstring = '' + str;\r\n            if (convertstring != null)\r\n                if (convertstring.length <= len) return str;\r\n                else return convertstring.substring(0, len) + \"...\";\r\n        }\r\n    }\r\n}\r\n\r\n\r\n</script>\r\n<template>\r\n    <section class=\"page-action\">\r\n        <div class=\"left-menu-tab datareport\">\r\n            <div :class=\"maindiv\">\r\n                <loader :isVisible=\"isLoading\"></loader>\r\n                <div class=\"accordion md-accordion left-filter\" id=\"accordionEx\" role=\"tablist\" aria-multiselectable=\"true\">\r\n                    <div :class=\"editclass\">\r\n                        <div class=\"card-header filter-head p-0\" role=\"tab\" id=\"headingOne1\">\r\n                            <h5 class=\"mb-0 px-2\">{{ ReportName }}\r\n                                <span class=\"expand_all_filters\">\r\n                                    <span id=\"SearchData\"><a :title=\"$t('EditReportName')\" v-on:click=\"editreport()\"\r\n                                            data-toggle-tooltip=\"tooltip\" class=\"collapsed\"> <em aria-hidden=\"true\"\r\n                                                class=\"fa fa-pencil\" style=\"font-size:20px;\"></em></a></span>\r\n                                    <span>\r\n                                        <a title=\"Collapse\" v-on:click=\"collapsedclick()\" data-toggle-tooltip=\"tooltip\"\r\n                                            class=\"collapsed\"><em aria-hidden=\"true\"\r\n                                                class=\"fa fa-angle-double-left mt-1\"></em>\r\n                                        </a>\r\n                                    </span>\r\n                                </span>\r\n                            </h5>\r\n                        </div>\r\n                    </div>\r\n                    <div :class=\"saveclass\">\r\n                        <div class=\"card-header filter-head p-0\" role=\"tab\" id=\"headingOne1\">\r\n                            <h5 class=\"mb-0 pl-2 mt-1\"><input type=\"text\" style=\"width:83%\"  v-model=\"savereportname\"\r\n                                :class=\"{'form-control p-1':true,'is-invalid': savereportname.length >100}\"/>\r\n                                <span class=\"expand_all_filters\">\r\n                                    <span id=\"SearchData\">\r\n                                        <a :title=\"$t('Save')\" v-on:click=\"savereport()\" data-toggle-tooltip=\"tooltip\"\r\n                                            class=\"collapsed\"><em aria-hidden=\"true\" class=\"fa fa-floppy-o mt-1\"></em>\r\n                                        </a>\r\n                                    </span>\r\n                                </span>\r\n                            </h5>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"card-panel\">\r\n                        <div class=\"mb-0 d-lg-block p-2 border\">\r\n                            <div class=\"input-group customsearchbox\">\r\n                                <input type=\"text\" maxlength=\"50\" v-on:keydown=\"ListFiltering\" v-on:keyup=\"ListFiltering\" v-on:mouseup=\"SelectAllSearch\" v-on:mouseleave=\"SelectAllSearch\" id=\"searchinput\"\r\n                                    v-model=\"MainSearchmodel\" placeholder=\"Search by Name\"\r\n                                    class=\"form-control searchcustomfilter border-right-0\" autocomplete=\"off\">\r\n                                <div class=\"input-group-append\">\r\n                                    <span class=\"input-group-text bg-transparent bg-white border-left-0\">\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"card\" style=\"border-bottom:1px solid #929292;\"\r\n                            v-for=\"(name, index) in submodulecodename\" :key=\"index\">\r\n                            <div class=\"card-header pl-0\" role=\"tab\" :id=\"'headingOnee' + index\">\r\n                                <h5 class=\"mb-0\"><a data-toggle=\"collapse\" data-parent=\"#accordionEx\"\r\n                                        href=\"javascript:;\" :aria-expanded=\"index == 0 ? true : false\" :data-target=\"'#collapseOne' + index\"\r\n                                        :aria-controls=\"'collapseOne' + index\" :class=\"index == 0 ? '' : 'collapsed'\"><em\r\n                                            class=\"fa fa fa-file-text-o\" aria-hidden=\"true\"></em><span\r\n                                            class=\"font-weight-bold\">\r\n                                            {{ GetLocalizedValue(name.SubModule) }}</span><em class=\"fa fa-angle-down rotate-icon\"\r\n                                            aria-hidden=\"true\"></em></a><a class=\"tab-Search-btn\"><em class=\"fa fa-search\"\r\n                                            aria-hidden=\"true\"></em></a>\r\n                                </h5>\r\n                            </div>\r\n                            <div\r\n                            :class=\"modulelisting.length == 0 ? 'd-none' : modulelisting[index].length == 0 && !showModuleListForFilter ||\r\n                            modulelistingforfilter[index].length == 0 && showModuleListForFilter ? 'text-center text-danger d-flex align-items-center justify-content-center norecs pt-2' : 'd-none'\"> {{\r\n                                $t(\"NoFieldAvailable\") }}</div>\r\n                            <div :id=\"'collapseOne' + index\" :class=\"index == 0 ? 'collapse multi-collapse show':'collapse multi-collapse'\" role=\"tabpanel\"\r\n                                :aria-labelledby=\"'headingOnee' + index\" data-parent=\"#accordionEx\">\r\n                                <PerfectScrollbar>\r\n                                    <div class=\"card-body p-0 customScrollForLeftBar llt\" style=\"max-height:300px;\">\r\n                                        <div class=\"form-group\">\r\n                                            <ul class=\"nav nav-pills flex-column left-tab responivecustomtab lefttabiconfix\">\r\n                                                <draggable v-model=\"modulelistingmodel\" class=\"draggable-list\"\r\n                                                    v-if=\"showModuleListForField\"\r\n                                                    :list=\"searchColumnfilter.length == 0 ? modulelisting[index] : searchColumnfilter[index]\"\r\n                                                    group=\"my-groupForFields\" @start=\"drag = true\" @end=\"onDragEnd\"\r\n                                                    @change=\"GetDraggedItem($event, index, name.SubModule)\" :move=\"checkMove\"\r\n                                                    item-key=\"CustomFieldId\">\r\n                                                    <li class=\"nav-item parent-element\"  id=\"StopDragfield\" v-for=\"(element,elementIndex) in (searchColumnfilter.length == 0 ? modulelisting[index] : searchColumnfilter[index])\" :key=\"elementIndex\">\r\n                                                        <span class=\"nav-link left-menu px-3 \">\r\n                                                            <em :class=\"element.FieldIcons != undefined ? element.FieldIcons + ' ' + 'float-left' : \r\n                                                            element.dttype[0].icon != null ? element.dttype[0].icon + ' ' + 'float-left' : 'float-left'\"\r\n                                                                aria-hidden=\"true\"></em>\r\n                                                            <span class=\"text-truncate float-left\" style=\"width: 55%;\"\r\n                                                                :data-toggle-tooltip=\"GetLocalizedValue(element.FieldName,\r\n                                                                    element.DisplayName)\"\r\n                                                                :title=\"GetLocalizedValue(element.FieldName, element.DisplayName)\">\r\n                                                                {{ GetLocalizedValue(element.FieldName, element.DisplayName)\r\n                                                                }}\r\n                                                            </span>\r\n                                                            <a href=\"javascript:;\">\r\n                                                                <em class=\"fa fa-plus float-right mt-1 text-success pr-0\"\r\n                                                                    aria-hidden=\"true\"\r\n                                                                    v-on:click=\"Addfields(element, $event, index, name.SubModule)\">\r\n                                                                </em>\r\n                                                            </a>\r\n                                                        </span>\r\n                                                    </li>\r\n                                                    <!-- <template #item=\"{ element }\">\r\n                                                        <li class=\"nav-item parent-element\" id=\"StopDragfield\">\r\n                                                            <span class=\"nav-link left-menu px-3 \">\r\n                                                                <em :class=\"element.FieldIcons != undefined ? element.FieldIcons + ' ' + 'float-left' : element.dttype[0].icon + ' ' + 'float-left'\"\r\n                                                                    aria-hidden=\"true\"></em>\r\n                                                                <span class=\"text-truncate float-left\" style=\"width: 55%;\"\r\n                                                                    :data-toggle-tooltip=\"GetLocalizedValue(element.FieldName,\r\n                                                                        element.DisplayName)\"\r\n                                                                    :title=\"GetLocalizedValue(element.FieldName, element.DisplayName)\">\r\n                                                                    {{ GetLocalizedValue(element.FieldName, element.DisplayName)\r\n                                                                    }}\r\n                                                                </span>\r\n                                                                <a href=\"#\">\r\n                                                                    <em class=\"fa fa-plus float-right mt-1 text-success pr-0\"\r\n                                                                        aria-hidden=\"true\"\r\n                                                                        v-on:click=\"Addfields(element, $event, index, name.SubModule)\">\r\n                                                                    </em>\r\n                                                                </a>\r\n                                                            </span>\r\n                                                        </li>\r\n                                                    </template> -->\r\n                                                </draggable>\r\n\r\n                                                <!-- Module List for Filter -->\r\n                                                <draggable v-model=\"modulelistingmodel\" class=\"draggable-list\"\r\n                                                    v-if=\"showModuleListForFilter\"\r\n                                                    :list=\"searchColumnfilter.length == 0 ? modulelistingforfilter[index] : searchColumnfilter[index]\"\r\n                                                    group=\"my-groupForFilter\" @start=\"drag = true\" @end=\"onDragEnd\"\r\n                                                    :move=\"checkMove\" item-key=\"CustomFieldId\"\r\n                                                    @change=\"GetDraggedItem($event, index)\">\r\n                                                    <!-- <template #item=\"{ element }\"> -->\r\n                                                        <li class=\"nav-item parent-element\" id=\"StopDragfield\" v-for=\"(element,elemIndex) in searchColumnfilter.length == 0 ? modulelistingforfilter[index] : searchColumnfilter[index]\" :key=\"elemIndex\">\r\n                                                            <span class=\"nav-link left-menu px-3 \">\r\n                                                                <em :class=\"element.FieldIcons != undefined ? element.FieldIcons + ' ' + 'float-left' : \r\n                                                                element.dttype[0].icon != null ? element.dttype[0].icon + ' ' + 'float-left' : 'float-left'\"\r\n                                                                    aria-hidden=\"true\">\r\n                                                                </em>\r\n                                                                <span class=\"text-truncate float-left\" style=\"width: 55%;\"\r\n                                                                    :data-toggle-tooltip=\"element.FieldName\"\r\n                                                                    :title=\"GetLocalizedValue(element.FieldName, element.DisplayName)\">\r\n                                                                    {{\r\n                                                                        GetLocalizedValue(element.FieldName,\r\n                                                                            element.DisplayName)\r\n                                                                    }}\r\n                                                                </span>\r\n                                                                <a href=\"javascript:;\">\r\n                                                                    <em class=\"fa fa-sliders float-right mt-1 text-primary pr-0\"\r\n                                                                        aria-hidden=\"true\" v-on:click=\"AddFilter(element, index)\">\r\n                                                                    </em>\r\n                                                                </a>\r\n                                                            </span>\r\n                                                        </li>\r\n                                                    <!-- </template> -->\r\n                                                </draggable>\r\n                                            </ul>\r\n                                        </div>\r\n                                    </div>\r\n                                </PerfectScrollbar>\r\n                            </div>\r\n                        </div>\r\n                        <div v-if=\"SearchNoRecord\"\r\n                            class=\"text-center text-danger d-flex align-items-center justify-content-center norecs pt-2\"> {{\r\n                                $t(\"NoRecordfound\") }}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div :class=\"showdiv\" v-on:click=\"expandclick()\" style=\"float: left;width: 50px;\">\r\n                <span class=\"expand_all_filters\" style=\"position:absolute;left:0;\">\r\n                    <span>\r\n                        <a title=\"Expand\" data-toggle-tooltip=\"tooltip\" class=\"collapsed\">\r\n                            <em aria-hidden=\"true\" class=\"fa fa-angle-double-right mt-1\">\r\n                            </em>\r\n                        </a>\r\n                    </span>\r\n                </span>\r\n            </div>\r\n            <div :class=\"fieldpan\">\r\n                <div class=\"tab-style w-100\">\r\n                    <div class=\"tab_container\" role=\"tabpanel\">\r\n                        <div class=\"tab-content\">\r\n                            <b-tabs pills>\r\n                                <b-tab title=\"FIELDS\" class=\"fields\" :active=\"showModuleListForField\" ref=\"FIELDS\"\r\n                                    v-on:click=\"FieldTabClicked\">\r\n                                    <div class=\"col-12 p-0 float-left\">\r\n                                        <h6 class=\"mb-1\">{{ $t('Groups') }}</h6>\r\n                                        <input placeholder=\"Add Group\"\r\n                                        :class=\"Grouplist.length == 0 ? 'form-control' : 'form-control disabled'\" v-on:keypress=\"GroupSearching\"\r\n                                            v-model=\"Groupsearchmodel\" />\r\n                                        <div v-if=\"Groupsearchmodel != ''\" v-bind:class=\"itemclass\" class=\"autosuggestion\">\r\n                                            <div v-for=\"(item, i) in filtergroup\" :key=\"i\">\r\n                                                <div>\r\n                                                    <div v-on:click=\"selectfiltervalue(item)\" >\r\n                                                        {{ GetLocalizedValue(item.FieldName, item.DisplayName) }} : {{\r\n                                                            item.MainFieldname }}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div v-if=\"filtergroup.length == 0\"\r\n                                                class=\"text-center text-danger d-flex align-items-center justify-content-center norecs pt-2\">\r\n                                                {{ $t(\"NoRecordfound\") }}\r\n                                            </div>\r\n                                        </div>\r\n                                        <br />\r\n                                        <draggable v-model=\"Grouplist\" class=\"draggable-list \" :list=\"Grouplist\"\r\n                                             group=\"my-groupGrouplist\" @start=\"drag = true\"\r\n                                             @end=\"drag = false\" item-key=\"CustomFieldId\">\r\n                                            <!-- <template #item=\"{ element }\" > -->\r\n                                                <div class=\"list-item\" v-for=\"(element,index) in Grouplist\" :key=\"index\">\r\n                                                    <span class=\"text-truncate float-left\"\r\n                                                        :data-toggle-tooltip=\"element.FieldName\" :title=\"element.FieldName\"\r\n                                                        style=\"width:200px;\">\r\n                                                        {{ GetLocalizedValue(element.FieldName, element.DisplayName) }}\r\n                                                    </span>\r\n                                                    <a><em class=\"fa fa-trash-o text-danger\" aria-hidden=\"true\"\r\n                                                            v-on:click=\"DeleteGroupFields(element, $event, index)\">\r\n                                                        </em>\r\n                                                    </a>\r\n                                                </div>\r\n                                            <!-- </template> -->\r\n                                        </draggable>\r\n                                    </div>\r\n                                    <hr />\r\n                                    <div class=\"col-12 p-0 float-left\">\r\n                                        <h6 class=\"mb-1\">{{ $t('COLUMNS') }}</h6>\r\n                                        <div class=\"verticle-action\" style=\"top:-3px;\">\r\n                                            <em id=\"btnpopup\"\r\n                                                :class=\"CalculatedUIEnabled == true ? 'fa fa-ellipsis-v action_icon' : 'fa fa-ellipsis-v action_icon disabled'\"\r\n                                                v-on:click=\"openActionIcon($event)\" aria-hidden=\"true\"></em>\r\n                                            <span class=\"action-list-box\" style=\"width: 240px; display:block;\" v-if=\"showRowLevelFunction\">\r\n                                                <span class=\"list-actions fsm-list\" id=\"action-list\" style=\"padding-left:0\">\r\n                                                    <a class=\"update actions-onclick\" v-on:click=\"OpenCalculatedUI\"><span\r\n                                                            class=\"text\">{{\r\n                                                                $t('CalcultedUIName') }}</span></a>\r\n                                                    <em class=\"fa fa-times close close-action\"\r\n                                                        v-on:click=\"closeActionIcon($event)\" aria-hidden=\"true\"></em>\r\n                                                </span>\r\n                                            </span>\r\n                                        </div>\r\n                                        <input placeholder=\"Add Column\" class=\"form-control\" v-on:keypress=\"GroupSearching\"\r\n                                            v-model=\"ColumnSearchmodel\" />\r\n                                        <div v-if=\"ColumnSearchmodel != ''\" v-bind:class=\"itemclass\" class=\"autosuggestion\"\r\n                                            style=\"z-index: 9999;\">\r\n                                            <div v-for=\"(item,indx) in filterColumngroup\" :key=\"indx\">\r\n                                                <div>\r\n                                                    <div v-on:click=\"selectfilterColumnvalue(item)\">\r\n                                                        {{ GetLocalizedValue(item.FieldName, item.DisplayName) }} : {{\r\n                                                            item.MainFieldname }}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div v-if=\"filterColumngroup.length == 0\"\r\n                                                class=\"text-center text-danger d-flex align-items-center justify-content-center norecs pt-2\">\r\n                                                {{ $t(\"NoRecordfound\") }}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"dashed_bod_drag text-center mt-2\">\r\n                                            <h6 class=\"p-2 m-0\">Drag Fields Here </h6>\r\n                                            <draggable v-model=\"Columnlist\" class=\"draggable-list\" :list=\"Columnlist\"\r\n                                                group=\"my-groupForFields\" @start=\"drag = true\" @end=\"ColumnListDisplayOrder\"\r\n                                                id=\"TargetDivID\" :move=\"checkMove\" item-key=\"CustomFieldId\">\r\n                                                    <div class=\"list-item parent-element\" id=\"TargetDivID\" v-for=\"(element,indx) in Columnlist\" :key=\"indx\">\r\n                                                        <span v-if=\"element.Calculated_Field == true\"\r\n                                                            style=\"font-size: 22px;float:left; margin-right: 10px;\">f<sub\r\n                                                                style=\"font-size: 12px;\">x</sub></span><span\r\n                                                            class=\"text-truncate float-left\"\r\n                                                            :data-toggle-tooltip=\"element.FieldName\"\r\n                                                            :title=\"GetLocalizedValue(element.FieldName, element.DisplayName)\"\r\n                                                            style=\"width:200px;\">\r\n                                                            {{ GetLocalizedValue(element.FieldName, element.DisplayName)\r\n                                                            }} {{ element.ExpresssionFieldName }}\r\n                                                        </span>\r\n                                                        \r\n                                                        <div class=\"parentdiv datarepfix filters\">\r\n                                                            <a aria-hidden=\"true\"\r\n                                                            v-on:click=\"DeleteColumnFields(element, $event)\"><em\r\n                                                                class=\"fa fa-trash-o text-danger\"></em></a>\r\n                                                            <a aria-hidden=\"true\" v-on:click=\"openSetting(element, $event)\"><em\r\n                                                                    class=\"fa fa-cog action_icon_cv\"></em></a>\r\n                                                            <div>\r\n                                                                <div class=\"verticle-action rt25 rt502\">\r\n                                                                    <span class=\"action-list-box small setting-div-box\">\r\n                                                                        <span id=\"action-list\"\r\n                                                                            class=\"list-actions text-left p-0 datarep ml-3\"\r\n                                                                            style=\"width:480px;\">\r\n                                                                            <div class=\"float-left col-12 p-0\">\r\n                                                                                <div class=\"container-fluid p-0 mb-3\">\r\n                                                                                    <div class=\"row\">\r\n                                                                                        <div class=\"col-md-12\">\r\n                                                                                            <div\r\n                                                                                                class=\"theme-primary partition-full\">\r\n                                                                                                <span\r\n                                                                                                    class=\"p-name text-white mt-2\">\r\n                                                                                                    {{ $t('Setting') }}\r\n                                                                                                </span>\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                                <div class=\"col-12 float-left\">\r\n                                                                                    <div class=\"col-12 p-0 float-left\">\r\n                                                                                        <div class=\"form-group\">\r\n                                                                                            <label>{{\r\n                                                                                                $t('DisplayName')\r\n                                                                                            }}</label>\r\n                                                                                            <input class=\"form-control\"\r\n                                                                                                v-model=\"modeldisplayname\"\r\n                                                                                                maxlength=\"20\" @paste.prevent\r\n                                                                                                v-on:keydown=\"PreventDecimal($event)\"/>\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                    <div class=\"col-12 p-0 float-left\">\r\n                                                                                        <div\r\n                                                                                            :class=\"element.ColumnFieldDataCode == 'date' ? '' : 'form-group d-none'\">\r\n                                                                                            <label>{{\r\n                                                                                                $t('DateFormat')\r\n                                                                                            }}:</label>\r\n                                                                                            <select\r\n                                                                                                class=\"form-control textnormal\"\r\n                                                                                                v-model=\"modeldateformat\">\r\n                                                                                                <option value=\"\" disabled>\r\n                                                                                                    Select\r\n                                                                                                </option>\r\n                                                                                                <option v-for=\"(dateformat,dateIndex) in GetDateFromDB\" :key=\"dateIndex\">\r\n                                                                                                    {{GetLocalizedValue(dateformat.dateFormat) }}\r\n                                                                                                </option>\r\n                                                                                            </select>\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                    <div class=\"col-12 p-0 float-left\">\r\n                                                                                        <div\r\n                                                                                            :class=\"element.ColumnFieldDataCode == 'decimal' ? '' : 'form-group d-none'\">\r\n                                                                                            <label>{{\r\n                                                                                                $t('DecimalPlaces')\r\n                                                                                            }}</label>\r\n                                                                                            <input type=\"number\"\r\n                                                                                                class=\"form-control\"\r\n                                                                                                v-model=\"modeldecimalplaces\" />\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                    <div class=\"col-12 p-0 float-left\"\r\n                                                                                        style=\"margin-top: 10px;\">\r\n                                                                                        <div\r\n                                                                                            :class=\"element.ColumnFieldDataCode == 'decimal' ? '' : 'form-group d-none'\">\r\n                                                                                            <input type=\"checkbox\"\r\n                                                                                                v-model=\"modeluseseparator\"\r\n                                                                                                id=\"useseparator\" />&nbsp;\r\n                                                                                            <label for=\"User\">{{\r\n                                                                                                $t('UseSeparator')\r\n                                                                                            }}</label><br>\r\n                                                                                            <input type=\"checkbox\"\r\n                                                                                                v-model=\"modelusecurrency\" />\r\n                                                                                            <label style=\"padding: 6px;\"\r\n                                                                                                for=\"Role\">{{\r\n                                                                                                    $t('UseCurrency')\r\n                                                                                                }}</label>\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                    <div class=\"col-12 p-0 float-left mb-3\">\r\n                                                                                        <div class=\"row flex-row-reverse\">\r\n                                                                                            <div\r\n                                                                                                class=\"col-lg-6 text-right\">\r\n                                                                                                <a class=\"btn btn-success ancsaveuserticket text-white\"\r\n                                                                                                    id=\"btnSaveTicket\"\r\n                                                                                                    title=\"\"\r\n                                                                                                    data-toggle-tooltip=\"tooltip\"\r\n                                                                                                    data-original-title=\"Click here to submit ticket\"\r\n                                                                                                    v-on:click=\"ApplySaveSelectedData(element, $event)\">\r\n                                                                                                    <span\r\n                                                                                                        class=\"fa fa-floppy-o\"></span>\r\n                                                                                                    {{ $t('Save') }}\r\n                                                                                                </a>\r\n                                                                                            </div>\r\n\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                            <em aria-hidden=\"true\"\r\n                                                                                class=\"fa fa-times close close-action_cv\"\r\n                                                                                v-on:click=\"CloseSetting($event)\"></em>\r\n                                                                            <div class=\"va_rt25\"><em\r\n                                                                                    class=\"icon-solid arrow-solid-left text-dark\"\r\n                                                                                    style=\"font-size: 20pt;\"></em>\r\n                                                                            </div>\r\n                                                                        </span>\r\n                                                                    </span>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div class=\"float-left text-left w-100 font-12\">{{\r\n                                                            element.MainFieldname }}</div>\r\n                                                    </div>\r\n                                                \r\n                                            </draggable>\r\n                                        </div>\r\n                                    </div>\r\n                                </b-tab>\r\n                                <b-tab title=\"Filters\" :active=\"showModuleListForFilter\" ref=\"Filters\"\r\n                                    v-on:click=\"FilterTabClicked\">\r\n                                    <div class=\"col-12 p-0 float-left\">\r\n                                        <h6>include data if it matches</h6>\r\n                                        <select class=\"form-control\" name=\"template\" v-model=\"category\"\r\n                                            v-on:change=\"filterRulechange\">\r\n                                            <option v-for=\"(template,tempIndex) in templates\" :key=\"tempIndex\"\r\n                                                :selected=\"template == category ? 'selected' : ''\" :value=\"template\">\r\n                                                {{ template }}\r\n                                            </option>\r\n                                        </select>\r\n                                        <h6 class=\"mt-3\">Filter rules</h6>\r\n                                        <div class=\"form-control\">\r\n                                            <span ml-1 v-if=\"category == 'Match All Value'\" v-for=\"(item,itmIndex) in Filterlist\" :key=\"itmIndex\">\r\n                                                {{ (Filterlist.indexOf(item) + 1) }}\r\n                                                <span v-if=\"Filterlist.length > (Filterlist.indexOf(item) + 1)\"\r\n                                                    style=\"margin-right:3px;\"> {{ filtertype }}</span>\r\n                                            </span>\r\n                                            <span v-if=\"category != 'Match All Value'\" v-for=\"(item,itemIndex) in Filterlist\" :key=\"itemIndex\">\r\n                                                {{ (Filterlist.indexOf(item) + 1) }}\r\n                                                <span v-if=\"Filterlist.length > (Filterlist.indexOf(item) + 1)\"\r\n                                                    style=\"margin-right:3px;\">{{ filtertype }}</span>\r\n                                            </span>\r\n                                        </div>\r\n                                        <draggable v-model=\"Filterlist\" class=\"draggable-list\" :list=\"Filterlist\"\r\n                                            group=\"my-groupForFilter\" @start=\"drag = true\"  @end=\"ColumnListDisplayOrder\"\r\n                                            @dragenter=\"dragover($event)\" @dragleave=\"dragover($event)\"\r\n                                            @drop=\"dragover($event)\" :move=\"checkMove\" item-key=\"CustomFieldId\" id=\"TargetDivID\">\r\n                                            <!-- <template #item=\"{ element }\"> -->\r\n                                                <div class=\"list-item row filter-div\" @dragover=\"dragover($event)\"\r\n                                                    id=\"TargetDivID\" v-for=\"(element,eleIndex) in Filterlist\" :key=\"eleIndex\">\r\n                                                    <div class=\"counter_num px-1 py-2 filter-count-div\">\r\n                                                        {{ (Filterlist.indexOf(element) + 1) }}\r\n                                                    </div>\r\n                                                    <div style=\"width:77%;\">\r\n                                                        <div class=\"px-1 py-0 width120 text-truncate float-left font-14\">\r\n                                                            <span v-if=\"element.Calculated_Field == true\"\r\n                                                                style=\"font-size: 22px;float:left; margin-right: 10px;\">f<sub\r\n                                                                    style=\"font-size: 12px;\">x</sub></span><span\r\n                                                                class=\"text-truncate float-left\"\r\n                                                                :data-toggle-tooltip=\"element.FieldName\"\r\n                                                                :title=\"GetLocalizedValue(element.FieldName, element.DisplayName)\"\r\n                                                                style=\"width:110px;\">\r\n                                                                {{ GetLocalizedValue(element.FieldName, element.DisplayName)\r\n                                                                }}{{ element.ExpresssionFieldName }}\r\n                                                            </span>\r\n                                                        </div>\r\n                                                        <div\r\n                                                            class=\"px-1 py-0 text-primary width80 text-truncate float-left font-14\">\r\n                                                            {{ element.OperatorDisplayName }}\r\n                                                        </div>\r\n                                                        <div class=\"px-1 py-0 hh text-truncate float-left font-12 w-100\">\r\n                                                            {{ element.valueTypeText }}\r\n                                                            {{ element.valueTypeNumber }} \r\n                                                            {{ element.valueTypeNumber2 }}\r\n                                                            {{ $options.filters.formatDate(element.valueTypeFirstdate) }} \r\n                                                            {{ $options.filters.formatDate(element.valueTypeSeconddate) }}\r\n                                                            {{ element.ValueDisplayFirstTime }} \r\n                                                            {{ element.ValueDisplaySecondTime }}\r\n                                                            {{ element.Displaymultiplevalue }}\r\n                                                            {{ element.DropDownValue }}\r\n                                                            {{ $t(element.DateRangeValue) }}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"parentdiv datarepfix filters\">\r\n                                                        <a aria-hidden=\"true\"\r\n                                                            v-on:click=\"DeleteFilterFields(element, $event)\"><em\r\n                                                                :class=\"!element.IsMandatoryforFilter ? 'fa fa-trash-o text-danger' : 'fa fa-trash-o text-danger d-none'\"></em></a>\r\n                                                        <a aria-hidden=\"true\" v-on:click=\"openrulespop(element, $event)\"><em\r\n                                                                class=\"fa fa-cog action_icon_cv\"></em></a>\r\n                                                        <div>\r\n                                                            <div class=\"verticle-action rt25 rt502\">\r\n                                                                <span class=\"action-list-box small filter-list-box\">\r\n                                                                    <span id=\"action-list\"\r\n                                                                        class=\"list-actions text-left p-0 datarep ml-3\"\r\n                                                                        style=\"width:480px;\">\r\n                                                                        <div class=\"float-left col-12 p-0\">\r\n                                                                            <div class=\"container-fluid p-0 mb-3\">\r\n                                                                                <div class=\"row\">\r\n                                                                                    <div class=\"col-md-12\">\r\n                                                                                        <div\r\n                                                                                            class=\"theme-primary partition-full\">\r\n                                                                                            <span\r\n                                                                                                class=\"p-name text-white mt-2\">\r\n                                                                                                {{ $t('Setting') }}\r\n                                                                                            </span>\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                            <div class=\"col-12 float-left\">\r\n                                                                                <div class=\"col-12 p-0 float-left\">\r\n                                                                                    <div class=\"form-group\"\r\n                                                                                        v-for=\"(item,itmInx) in GetOperator\" :key=\"itmInx\">\r\n                                                                                        <input type=\"radio\" class=\"radio\"\r\n                                                                                            v-model=\"element.selectedOPValue\"\r\n                                                                                            :name=\"'radiobtn' + (Filterlist.indexOf(element) + 1)\"\r\n                                                                                            :value=\"item.OPERATOR_ID\"\r\n                                                                                            v-on:click=\"checkvalue(item.OPERATOR_DISPLAY_NAME, element, item.OPERATOR_EXPRESSION, item.OPERATOR_ID, item.MP[0].OPERATION_DATA_TYPE)\">\r\n                                                                                        <label class=\"ml-2\">\r\n                                                                                            {{\r\n                                                                                                item.OPERATOR_DISPLAY_NAME\r\n                                                                                            }}\r\n                                                                                        </label>\r\n                                                                                        <br />\r\n                                                                                    </div>\r\n                                                                                    <input type=\"text\" id=\"inpttxt\"\r\n                                                                                        class=\"form-control\"\r\n                                                                                        v-model=\"ValueDisplaytext\"\r\n                                                                                        v-if=\"texttypevalue1\" />\r\n                                                                                    <input type=\"text\" id=\"inpttxt2\"\r\n                                                                                        class=\"form-control\"\r\n                                                                                        v-model=\"ValueDisplaytext2\"\r\n                                                                                        v-if=\"texttypevalue2\" />\r\n                                                                                    <input type=\"number\" id=\"inpttxtbtw\"\r\n                                                                                        :class=\"{'form-control':true,'is-invalid':\r\n                                                                                        element.ColumnFieldDataCode == 'int' ? ValueDisplaynumber.length > 9 : ValueDisplaynumber.length > 15}\"\r\n                                                                                        v-if=\"numbertypevalue1\"\r\n                                                                                        v-model=\"ValueDisplaynumber\"\r\n                                                                                        :onKeyPress=\"element.ColumnFieldDataCode == 'int' ? 'if(this.value.length > 9) return false;' :'if(this.value.length > 15) return false;'\"\r\n                                                                                        v-on:keydown=\"PreventValues($event)\" />\r\n                                                                                    <br> \r\n                                                                                    <input type=\"number\" id=\"inpttxtbtw\"\r\n                                                                                        :class=\"{ 'form-control': true, 'is-invalid': element.ColumnFieldDataCode == 'int' ? ((parseFloat(ValueDisplaynumber2) < parseFloat(ValueDisplaynumber) || \r\n                                                                                        parseFloat(ValueDisplaynumber2) == parseFloat(ValueDisplaynumber) || ValueDisplaynumber2.length > 9) && (ValueDisplaynumber2 != '' || ValueDisplaynumber2 == '0')) :\r\n                                                                                        ((parseFloat(ValueDisplaynumber2) < parseFloat(ValueDisplaynumber) || parseFloat(ValueDisplaynumber2) == parseFloat(ValueDisplaynumber) || \r\n                                                                                        ValueDisplaynumber2.length > 15) && (ValueDisplaynumber2 != '' || ValueDisplaynumber2 == '0')) }\"\r\n                                                                                        v-if=\"numbertypevalue2\"\r\n                                                                                        v-model=\"ValueDisplaynumber2\"\r\n                                                                                        :onKeyPress=\"element.ColumnFieldDataCode == 'int' ? 'if(this.value.length > 9) return false;' :'if(this.value.length > 15) return false;'\"\r\n                                                                                        v-on:keydown=\"PreventValues($event)\" />\r\n                                                                                    <span\r\n                                                                                        v-if=\"((parseFloat(ValueDisplaynumber2) < parseFloat(ValueDisplaynumber) || parseFloat(ValueDisplaynumber2) == parseFloat(ValueDisplaynumber)) && \r\n                                                                                        (ValueDisplaynumber2 != '' || ValueDisplaynumber2 == '0'))\"\r\n                                                                                        class=\"invalid-feedback\">Second\r\n                                                                                        value should be greater than first\r\n                                                                                        value.</span>\r\n                                                                                    <span v-if=\"element.ColumnFieldDataCode != 'int'\" :class=\"ValueDisplaynumber.length > 15 || ValueDisplaynumber2.length > 15 ? 'invalid-feedback':'d-none'\">Can not add more than 15 digits</span>\r\n                                                                                    <span v-if=\"element.ColumnFieldDataCode == 'int'\" :class=\"ValueDisplaynumber.length > 9 || ValueDisplaynumber2.length > 9 ? 'invalid-feedback':'d-none'\">Can not add more than 09 digits</span>\r\n                                                                                    <input type=\"date\" id=\"inpttxtdate1\"\r\n                                                                                        class=\"form-control\"\r\n                                                                                        v-if=\"datetypevalue1\"\r\n                                                                                        v-model=\"ValueDisplaydate\"\r\n                                                                                        max=\"9999-12-31\" />\r\n                                                                                    <input type=\"date\" id=\"inpttxtdate2\"\r\n                                                                                        :class=\"{ 'form-control': true, 'disabled': ValueDisplaydate == '','is-invalid': ((Date.parse(ValueDisplaydate2) < Date.parse(ValueDisplaydate) \r\n                                                                                        || Date.parse(ValueDisplaydate2) == Date.parse(ValueDisplaydate)) && ValueDisplaydate2 != '') }\"\r\n                                                                                        v-if=\"datetypevalue2\"\r\n                                                                                        v-model=\"ValueDisplaydate2\"\r\n                                                                                        :min=\"ValueDisplaydate\"\r\n                                                                                        max=\"9999-12-31\" />\r\n                                                                                    <span v-if=\"((Date.parse(ValueDisplaydate2) < Date.parse(ValueDisplaydate) \r\n                                                                                        || Date.parse(ValueDisplaydate2) == Date.parse(ValueDisplaydate)) && ValueDisplaydate2 != '')\" class=\"invalid-feedback\">Second\r\n                                                                                        value should be greater than first\r\n                                                                                        value.</span>\r\n                                                                                    \r\n                                                                                     <select class=\"form-control\"\r\n                                                                                        v-model=\"modeldaterange\"\r\n                                                                                        v-if=\"DDLForDateRange\">\r\n                                                                                        <option disabled>Select </option>\r\n                                                                                        <option v-for=\"DDLitem in DateRangeData\"\r\n                                                                                            :key=\"DDLitem.date_range_name\"\r\n                                                                                            :value=\"DDLitem.date_range_name\"\r\n                                                                                            :title=\"DDLitem.date_range_value\">\r\n                                                                                            {{ TruncateStr(DDLitem.date_range_value,\r\n                                                                                                50) \r\n                                                                                            }}</option>\r\n                                                                                    </select>\r\n                                                                                    <input type=\"time\" id=\"inpttxttime1\" \r\n                                                                                        class=\"form-control\" \r\n                                                                                        v-if=\"timetypevalue\"  v-bind:Title=\"ValueDisplayTime\"\r\n                                                                                        v-model=\"ValueDisplayTime\"  step=\"2\"/>\r\n                                                                                    <input type=\"time\" id=\"inpttxttime2\"\r\n                                                                                        :class=\"{ 'form-control': true, 'disabled': ValueDisplayTime == '' }\"\r\n                                                                                        v-if=\"timetypevalue2\"\r\n                                                                                        :min=\"ValueDisplayTime\" v-bind:Title=\"ValueDisplayTime2\" \r\n                                                                                        v-model=\"ValueDisplayTime2\" step=\"2\"\r\n                                                                                       />\r\n\r\n                                                                                    <select class=\"form-control\"\r\n                                                                                        v-model=\"modelFilterDDLValue\"\r\n                                                                                        v-if=\"DDLForFilter\">\r\n                                                                                        <option disabled>Select </option>\r\n                                                                                        <option v-for=\"DDLitem in options\"\r\n                                                                                            :key=\"DDLitem.value\"\r\n                                                                                            :value=\"DDLitem.value\"\r\n                                                                                            :title=\"DDLitem.name\">\r\n                                                                                            {{ TruncateStr(DDLitem.name,\r\n                                                                                                50)\r\n                                                                                            }}</option>\r\n                                                                                    </select>\r\n                                                                                    <div v-if=\"multiselectvalue\">\r\n                                                                                        <dynamic-form lang=\"en\" :buttons=\"false\" :schema=\"FormSchema\" ></dynamic-form>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                                <div\r\n                                                                                    class=\"col-12 p-0 float-left mb-3 mt-3\">\r\n                                                                                    <div class=\"row flex-row-reverse\">\r\n                                                                                        <div class=\"col-lg-6 text-right\">\r\n                                                                                            <a :class=\"{ 'btn btn-primary ancsaveuserticket text-white': true, 'disabled': (element.ColumnFieldDataCode == 'int' \r\n                                                                                                ? (parseFloat(ValueDisplaynumber2) < parseFloat(ValueDisplaynumber) || parseFloat(ValueDisplaynumber2) == parseFloat(ValueDisplaynumber) \r\n                                                                                                || ValueDisplaynumber.length > 9 || ValueDisplaynumber2.length > 9 && numbertypevalue2)\r\n                                                                                                : (parseFloat(ValueDisplaynumber2) < parseFloat(ValueDisplaynumber) || parseFloat(ValueDisplaynumber2) == parseFloat(ValueDisplaynumber) \r\n                                                                                                || ValueDisplaynumber.length > 15 || ValueDisplaynumber2.length > 15 && numbertypevalue2))\r\n                                                                                                || (Date.parse(ValueDisplaydate2) < Date.parse(ValueDisplaydate) || Date.parse(ValueDisplaydate2) == Date.parse(ValueDisplaydate) && datetypevalue2) }\"\r\n                                                                                                id=\"btnSaveTicket\" title=\"\"\r\n                                                                                                data-toggle-tooltip=\"tooltip\"\r\n                                                                                                v-on:click=\"applySetting(element.CustomFieldId)\"\r\n                                                                                                data-original-title=\"Click here to submit ticket\"><em\r\n                                                                                                    :class=\"{ 'fa fa-save text-white': true, 'disabled': (element.ColumnFieldDataCode == 'int' \r\n                                                                                                    ? (parseFloat(ValueDisplaynumber2) < parseFloat(ValueDisplaynumber) || parseFloat(ValueDisplaynumber2) == parseFloat(ValueDisplaynumber) \r\n                                                                                                    || ValueDisplaynumber.length > 9 || ValueDisplaynumber2.length > 9 && numbertypevalue2)\r\n                                                                                                    : (parseFloat(ValueDisplaynumber2) < parseFloat(ValueDisplaynumber) || parseFloat(ValueDisplaynumber2) == parseFloat(ValueDisplaynumber) \r\n                                                                                                    || ValueDisplaynumber.length > 15 || ValueDisplaynumber2.length > 15 && numbertypevalue2))\r\n                                                                                                    || (Date.parse(ValueDisplaydate2) < Date.parse(ValueDisplaydate) || Date.parse(ValueDisplaydate2) == Date.parse(ValueDisplaydate) && datetypevalue2)}\"></em>Apply</a>\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                        <em aria-hidden=\"true\"\r\n                                                                            class=\"fa fa-times close close-action_cv\"\r\n                                                                            v-on:click=\"ClosePopFilter()\"></em>\r\n                                                                        <div class=\"va_rt25\"><em\r\n                                                                                class=\"icon-solid arrow-solid-left text-dark\"\r\n                                                                                style=\"font-size: 20pt;\"></em></div>\r\n                                                                    </span>\r\n                                                                </span>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            <!-- </template> -->\r\n                                        </draggable>\r\n                                    </div>\r\n                                    <hr />\r\n                                </b-tab>\r\n                            </b-tabs>\r\n                            <div role=\"tabpanel\" id=\"tab-em-groups\" class=\"tab-pane\">\r\n                                <div class=\"col-sm-12 col-md-12 col-lg-12 col-xl-12 p-0\">\r\n                                    <div class=\"listing\">\r\n                                        <div class=\"table-responsive\"></div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <ReportPreview v-if=\"showReportPreview\" :previewdata=\"previewdata\" :customreportparameters=\"customreportparameters\"\r\n            :Columnlist=\"Columnlist\" :Grouplist=\"Grouplist\" ref=\"reportdata\" :saveJsonReport=\"saveJsonReport\"\r\n            :PdfJsonReport=\"PdfJsonReport\" :editjsondata=\"editjsondata\" :ReportName=\"ReportName\" :GraphData=\"graphData\"\r\n            :SortingData=\"sortingArray\" :GraphJson=\"GraphJson\" :LevelOfGrouping=\"LevelOfGrouping\" >\r\n        </ReportPreview>\r\n        <CalculatedUI :customreportparameters=\"customreportparameters\" v-if=\"showcalculatedUI\" :Columnlist=\"Columnlist\"\r\n            :ExpFieldDataArray=\"ExpFieldDataArray\" :editexpressionvalue=\"editexpressionvalue\" :ExpDataArray=\"ExpDataArray\"\r\n            v-on:close=\"showcalculatedUI = false\" @VerifiedExpressionData=\"VerifiedExpressionColumnValue\" ref=\"Calculated\"\r\n            :AlreadyExistExpression=\"AlreadyExistExpression\">\r\n        </CalculatedUI>\r\n    </section>\r\n</template>\r\n<style scoped>\r\n.mCSB_inside>.mCSB_container {\r\n    margin-right: 30px;\r\n}\r\n\r\n.width80 {\r\n    width: 80px;\r\n}\r\n\r\n.width120 {\r\n    width: 110px;\r\n}\r\n\r\n.invalid-feedback {\r\n    white-space: normal;\r\n    font-size: 110%;\r\n}\r\n</style>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Datareport.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Datareport.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Datareport.vue?vue&type=template&id=3f331cb8&scoped=true&\"\nimport script from \"./Datareport.vue?vue&type=script&lang=js&\"\nexport * from \"./Datareport.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Datareport.vue?vue&type=style&index=0&id=3f331cb8&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"3f331cb8\",\n  null\n  \n)\n\nexport default component.exports","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"\", \"\"]);\n// Exports\nmodule.exports = exports;\n"],"sourceRoot":""}